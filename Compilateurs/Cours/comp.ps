%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: comp.dvi
%%CreationDate: Mon Aug  6 13:16:03 2018
%%Pages: 154
%%PageOrder: Ascend
%%BoundingBox: 0 0 363 273
%%DocumentFonts: SFSS1440 SFSS1095 SFSS0600 CMSY10 SFSS1000 SFSI1095
%%+ SFSX1095 SFSX1000 SFTT1000 SFSI1000 SFTT1095 SFSO1000 SFSS0700
%%+ CMSSI10 MSAM10 SFSS0800 CMMI10 CMSSI8 CMSS10 MSBM10 CMSY8 SFRM1095
%%+ SFSX0800 CMSY9 SFSS0900 SFSX0900 SFTT0900 CMSS9 SFSI1440 CMEX10
%%+ CMSS8 CMMI7 SFSS1728 SFSS1200 CMR10 CMTT10 CMR7 CMSY7 CMMI8 SFRM1440
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t landscape -o comp.ps comp.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.08.06:1516
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 698 2017-12-30 19:08:50Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.28, 2017/12/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: cmr10.pfb 0 0
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
 /FullName (CMR10) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8569672CF
86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E72907924A5AC880DDED58334DD
5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A2255C050CB39A389106B0C672A1912AF
A86A49EFD02E61E6509E50EE35E679448FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575A
D61BCDF42E2E421AA93E3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92
FD60AD26D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24D36E
FE7F5C4E5B5C610DA63A48E26BE9FC0C5FF9236372483C265681DD26303B962BF46BD2DDD7E5
AB42C609D12E83D21A55046C3E50E41C605EF2AFF78F91B20F9F17D90DEE6171AA799ACCFF77
E3E4D9793D1D8B51FC0E8979B8E2752C9E72A51720C018DCEE02736480DAAE55F5F1910727DE
3B9FA8D0BED2EFF3BC887AAD72838B7A894541D923D3D253139CDD747B185238B79E569F2448
3C423BA5EA55860289C4CA80924224A52B8E68CD15D47487340C7FC925100F08A0DB63EC18A3
2843C299201B3FFFF69059B10CED881ACB7D0115D735791ED587758150742B0A23AF8FDDE157
C4571039D537E52E2B4B069E0AAF299D4AA3A36EA316D2B55479B72886C76C1A876D7558FC2F
B0659E156CBB253B8466DA34ADE7B1506F8DC66EFE35DCAC71451F8A426056E129A9CF21C41D
7DEB5EA6DF7A72ACAD4BBCA3E4081320BD7B37609A4DB67B5DF63E25F490B8DE0666D17DFDD9
3AD510ED7B41BE8B0F4C4B2C1348E047C61623CDA21EF0E64B393ECA207B812A7D6F49CC29D7
0529F6829881A092F98C934D70CE3C5BD2E48C3C57AECF77B55DB937230737C3AB65C9BAB8C1
BE847A4C61D1C0BDCDC192C225F1FE28B68B279CF3633287286CC18FC886E8C711E558D4961E
D9B901920006C48F8795E1947EB63B4B6A63BDFDD1DFCA3E9A354C37AA33A24990FB70FD2D36
9D1FC5C89A6BF0851CAAEF43215B2201EC5E09432D1DF364F2EB570F8C001011A4FAB268E40F
B630082F53AA19FB8C3410E049F1F8DE85082ABDB8ECB5FCA536F824AAA39F968D3585E469CB
5872794236771BA5320DD8CCF58E545B9850865AA31607B8C7F0EFCE4A0B2BAC4F48EFD4B599
FC52C4B9FA6AD36E0FCCD3155B874D4FAC8A02AFD4CF6546842E31928A8806EA44C7CC03E03F
DC1AB9E47F4D455F69EAF32D6FE4A3070A728B225687761E0F2D48138DFA3B2735BEE1E654C8
A6AB0E136D4DABF9B695F5EA9BDDE81619A7875591A7F39B6493FFEDC7C4812E18C36C85EE59
7B7FFA207AC57ED8187F13B9997DF098620557843F7F9994FC561D70554B8509C137FBF881A7
7F86460F53CE7BFBBC9C94167FB3D408BBF95E7672E3DB32F8CC2BAA731D6CAF1675DDF0F055
62773D9F37E0A473FCB74CD67483B66EC7B42CF841625B26A32201C05AF07B1E0E3687F260A0
4F2296ABDF3E5DF972AC56470AF0B4538C0B4ACFFC2C1B5309BD8A2510D228D9F41E01783E63
AE1CD0CC827F15EE2783E818972E418C75B03C1EFB4D564A6D26FF8C8B0FF6DC625647FC5A8D
9D9EBC2B36EAE9C8DD412D6639278F6432C3D9AD4C6C478EEEA0D4A9F111908A8F37ADC0C4E2
8BBAA0E5556A8ED46850A673851DE8991338E59B906EE8506203110B315D40EF4A59133A6CD8
5F0FF35123176FB801A6464FF3F77BC8828B782C9B8A18416B6CCFE557DBF14856A0A3162A68
723D538F95BCAAF9BE7B369226A72C401612FEF48D59C927FD8265DF9D29026F732491709CA5
0B9FEADE55F701A62076ADDC0BD478EEC530F9119D2564C87F445E9B8C529AB3A207986F75DD
CCACF3DB48878853A1C3B27D8590E81CE20F1271DF019E9C2CE34847B2B69AE9061CEA57BF2D
3CE3DC261D5955E6B3BF8B933A345B3BCC7A302F7614BCD0C2B6E1F3078271A85F232A5B3B9D
E2E7F048CD36DDFC316467A01866276CFA8D0218ABCFB0C543752EEF59635F48F92EF7CAF035
C7363BE7436F564D1B4FC37D47A2096C886CFD6EA73DFEAC3762873E9BAC2FAADCDAC6D83D56
E4EEC7DED6B1B99D6DDA7CE8C35C6FCA645940DE0150CEAD4B6463EEF7EDAA509B463D0DBEC4
3E7C43F9FF16B6A8688723855B9937FAF16EF89688373C84DCF5A57CC309E14B7F72528B1209
E7F276306FCFEF4DF98C72F7A276840EE2280B88E8F20374B964199B6CF1B47E8D9125A85815
32FCF9F45E9E3491A9D5357D37B1C23A2E5AD04E02D74AA80E35E77847821B987E7C4FC3F037
C9E95CA50067EC8F16A8BDDB8412E7954BBD115147EC48539EA6BEBD1F3885A4D12BA3233833
7728A2C3A8F496B5CAE086585EE6ED1B20EA3FABD269D4B786C3EE0C3D9BEE58001D4D174AF4
E87A7FDBBE4C3D270E2689840E4C4B6113BDAB8878126DD066DA8E0251A6AF2EA6458214B249
809ED92F4EA6966D40D4596D86D6F05921C7814884501DB8A7941ADBA5702BF2B0B9A852B7BC
8710087974F2FED4A8D7B89E643A0950B0258A41A74AE4F84C004F9536CE1E3DE91E8E050C97
C32B0AD953D0B8F4935235F55CEB7727F9EE6E45931CD281D31F5E2A52772C4053687F7A2D14
B2F7815F8B316EFBE767FAE0636F44BDB1BC9B27AAE79FDDC0038A30C02B86D0E98B16CE7A7E
E8BE6A3DB03296C5B05A51FF470991B74CF893343BDD4A2CAB4B7E28AE4778B42EF31E789CB1
AE28A8F0B112E399D73A388D3FC41CF8C2EDD7E3E6EE21BF01A833214F2D2E278B8F701B9A90
68A34A78C34FAA85E60242233CCCC5899AE65F026DE91A4F184F0E626721C4CD3AFEB6E9A1B4
AB410B816A49A5E38B4137E36B95E2FF0EB3A3BD4337137096E4062BD7D13C5137194CE85A14
15C9F73095EEBAEABF2929BE8F203295A2AB6792D1031CDF4F96A58DEF44B848B687EEDD4239
A6FB1944CE6527523FA3641693B1C128A675F98C67C2DD8A3F1161A1EE2A7BF7598D3A9EB560
A94B4E8D58D1C38BA3D58DDE6D54A5F49AF3E03B9F7FB23617001E0CB03B7938BCF7681F7BD0
721FE1720B723A7DA0694B9A7637935655C5F147BD7FA15D1377500F7F192337A9466A74A591
7FD51163EAD5F26BC9867F2709EF15459F35710EB47B86CA032AECE26ABA9F79674E30E0A8D1
AB25099101BED7FEA68EBAA28641F5EDE00D0C15C4FDD500DB5C9BACDF18B320B14F7B836A06
3BB1BA30D382B2A8F3583CFBFDB1777AECB306948ECD8D8C9D3ED36FA733C15E4059215B3838
54846BF6F7596006D9DD1CABD8E331248AADF6B8C206534BB545F44FC7E4BC9F3761E9849CE2
8C0E9E5D99325FE771F931288D989C43138A805663A9E63F4738929B5B03123B6BDF0A135C08
CA3AC695B72E92B5667F6F0FC8A7079EEBD572CEBA5C21720961611021E775AD8DD8E6E7C4C8
5969282A49464913B85C47F7D3A875548FA3139CB5DBD78FAFC6B7074E59665A568B1AC49456
4515A3D8B64AD0B6A4CC6A186F35513289519403E937BE3FC969A10ED68694E705376B718056
047C006B73FC88C87B3D84BFBB15E7F874CFF12CC2E8E4A8B70F158DE0C15B4C5E933F0011F1
F654D33104AE72543A11F588F56D3ACDB8C83A5543C2D5B8B2561E56F53FA9749CC80D846783
80F55175C853698614FEB73B29EB8556EC0453A03AE894A752DDD14AD72776AB32D13D3175B8
44F643D04AD36A6B97149D9DCBD8B7F1F50554ACDDEB0C9AEA463A65AA6972C2C384CEC24344
C89DE7BD914549A9A3CF9139E94FC75AA93DC591977FC3519391677A3086B7F23351AD6B1FED
39E7129629880870D0BCB035C9F9BBAFBB1EB9A822F583439BA0A907B5494007FC9874B51CD2
7802332C3B411BCE6A544153E51D0458E56880367EF4FE6AA8A0970445FAE112A40F4C48B943
46F937F35AFBE27C244220406F7E2DBEC532C1FD99B713580ED318951F90D0E88314639ED7E8
B886191D6DD3FF0DB44BFA5A7BAC6102783EE01911E05DE270D41AFA7944FD6B420AD5BAFD3D
02C95FF77D231DFC977823262827BE5B601F4F3702A528BC5BD4D87A789F6C976DF65C4103A3
5E20352801825BF2AF07300F359A673FF845E87F391C058D8729F7109B379D8AE27506CB3DFD
16F6298EFC66ECB27A9D5F59749E6264180B0BCBBD4BE0B13D8D4C3344AF3D6BF4B73C29D63D
C19208C751F5F319888D7D4049A29126CD28E985FCA986CC33F2667F752A0B2F175A99F90D31
906AE108E82F5641386BA7F9B360BB3BD5D5952BF2167CE10AAE9D41FDB63F4E69873D633997
2A2B5F6007ADEA075C8EEC10C090C74647098439BE7D9F48A9F79C2104252009B8E6C44D7508
192D58DE42B0962DD1B7CB6255F4B67325A456C069CB52B905EB491835D92452D0781CB7E656
72DD43D6D3762E0FFEF0F1C8D63163631A71A2963D9617F96A0C984B7FDDB933456055829138
6CFD35E9736A942C7AFEA53E1E4937A5AD56E66E88E9A8AD46C70349173AB81DE285A54855B4
16DF01D8CAF03615014386AAA4C94903D6005DBABEF8F9BF283894FA8C71284293E436605856
D3C4C7859978286B021F0F696F43A1EE8F810E15C7882EDAF03C5B574BA492AC5633BEEEA3F6
5B521F12FD11CA4ED32D0B666253CA496DAA243108947445C55CEE5252335E6C43FC5FAE3524
4E811F81009F514442DA21DA2B4E9608BE8D594520B1062A8AE3ED07D00F031D443D14126998
92DA2B252299EEB4D9EA8FF3B9D785B4E490DD6EEFD55A77BD924AD6C289734DE20F59885194
050BA0A60182952CB292C18BBD65B784C913C0DD1E131A31AAF2C4892C664EC5BF16E712D342
25079AB4361F4C7AFA56E499CB6CCD1FBDAD41B89F66A8A82AD7963EBBF5B19F8352241C0B5D
F1E13343A4955B47E88DED9E0757651AD5D059EA86CE7DB05F95BFA92DB1D1F511AB1018AAFE
3BDC4CD6379D797B1E7654E5B772BB6C910C7C405D0264CB1275D49937C3005744092E5BB3C8
B40CB98F3BEB519AC3D3AB76202AF6E08D0D43DC379E2583342D33C3323A5B696759DBBF1B85
F638403A43113787B0A5E4F988123EC6EB768F4A745FDB4FA0DA70D2F610E6AE1CCE290C5FFB
6C4FCBE5520B43C36E5F966F4355E7D67662B4DDEA480E0FEF650C65A0F0660B608A61C623DE
59F75FCD9E5F47BDB5800E2A49446F0B142677694F3E8BA4257378FD9FA8C8A572C6A8EAFED7
9325804D4993FC0A513CA992F8D4A8305C2394D026DEF0262D173D150B2C662B9B9C6BA7CB2D
04CA83B136F9162C42EF686AD2A31F40066937D6A04ECBF632F1DDEE29F414DAF945E0FADF1A
231752FE7500E57FB0E22622FDF22E756DE999948162DF7B9BCB4587499613B6331E03B79723
09490642DE2EC4F72A1895DECE59BC117ECC2717AAE37EB52F1167965FAF5101AF2BC1C31CD3
DD17596937BF73D697F59A11000FC8FF94912DAB48134B39567817D9419FD0D3B231297D1723
331EF3C334582CC012A78CFF55FB19132D91A74353632270986AE645B8F5C0584564EB8C71A6
E5FAA52AB96FBB210571BF6C1A2EA223EBC7AED8FDE47AF489A429BCEF68407F3399A882A567
E70B4FC69AB47D6C05097DEB3D912CF1591C6B82CB6FEB1F72C135A4CEDA64C4AFC62DC84C2A
ED0B31D0EF7F8962DFE28D7E3A91314BDEFD9FA692422529A6679F184537FA92BE3E429C289E
9A1834F07117A0E7F1F4FE6862870165A43BB9E430ED07FAEBBEE0469EC79F9F539CE25DF296
5963D2268A0ACD1FD54BEEE6AB200D52EE7CA4D49A747530252164D6EF5430E4E0242EDDE595
5C5FE7E3837CAC40ED2A6FA8F9801F9986471EB57E1F38CB3A82A382741B4ED3A575C4967186
E99D2C3C121B4C91C8D50B26CB97BE9AB4BB224BDCB7135145914B06C9DE48DC53A69CB4308A
5491627279AB90AB26F6E14DBF51AB0E4A9BEA64F916F1643A10BD91FD365F8B774E79A8383E
3D5D5595A92A79120EEB341213BBE6EE21957F6D46E654B9FF6CF65EE8DCFB710E326DCD9A48
812096D3602D5C2037033B284F266A229CB1641405594DE3ED1FB6DDB1496EA0598E131D2C58
60474F78CF937F03C5D1CC29170D33A7F68B8BD1A601423002DD3106620E6D8C423F7AC7682F
C2F4D97189EBC2B19E7DB5ADCBA62D17A0D4A7A1D4B3E727687EB9638498547058815EE958DD
81DD937AD19B1492D773090B1324F18741EED75C8CEA47A75119435FE806E82F214852505081
F02B43ED1BC67FC4D1F5A6686665035B3612CC4E166A646A786A7B0BBC54030252338E496929
B6A54AD47CA90CC54AE1AC275E523982ECEF5FBB741D00B65981667FE2453FE3750EBDE33B30
E9540172CA5D94982EE1E99379D6CE06F82B65C423AA95CE42CB0730C80AEEA34CCC827AE92F
AD3D38D19B5966A48184F1182A47397C12475058E3CD011D0F0CE4DC30ECCA87406A1F1D6998
93163D8D8E604D0B987F8586F4B746C38D4BBAC2257D0D6844B31D532F66F380438844D45AE8
31226DF075EE6CD391A2DAF954BCD4E03E9981F829B0965AD78EBE8D41CFF2ACEE386DFC8037
958959BA8B872A7DCA0964DEC6A7459D4206DAE3ED201031DB2EA02819D3C12DE56CEC8F9A85
8BA6B0FEFF091F827AD6FC5F117904B0DCA0AA3173FA49C62BA5A5CADB35F6487801660CFF3F
D476819B149294EA953DAE6A4D55F9D3AAEDBEF13159794E128AB0B557CE775D0429E4D4B7ED
D061CA689AE0745A19658E04C2CD5DAB627F801B16A4BABF2F8BF2EA218916F82F288104717A
F149BBBAB11637311236B540A9FD344852C8384B87FECF7D233F8E7D0B88AB11EE92991FBBDD
ECDE4765C999D2C4EF8913C1BA706FD995B05199361E754E486963BC9CD80DB42EB766C43EA8
EFE81CCD0BD8B5523CBE7CE1A709AFA648817ACD9AF2985E285DD9DEE2A4E0C77B13BB59F689
9BBAF1038D5A0660B358015381B30731415AA81E601F8462C7F80D1171D0F9FDECA392AEFE4A
828DCDDFA642174AD8C48CD6F3ED28A25DDB0F768C5ED07364011A5DABA61BA49AA10A71A260
AAA7D5DDAA898831B388B738A836529A8F7A123C89D9E36B65DDC7723843DF8F6EF79D8C7CFC
3DEF3B8AD39B3E4EE0F127100EFA9AD45829598DF39441855FBBF98D82008A7B64AF0A919051
B5F4002D7B3E4778ED61B9B4A0BB41A1E212E94D9244154C459D9FEA7D250F6A789D944B0741
35F16C063ECE58708EBB2A2B286A71824017C08139CF73320F32127B2633140570A13420256D
BA85988640CDE5AA4A2448CDBF277D74115B22A1380C54D02FB55DC394F720B75E4D7BF4799F
06D7A9742B09E13A1D9F9CE503B5666A480E6781DD2AC4273925E4733FD17B219B1AF8049B7A
F1D37327A28311208158CF2EFCFFC0F10D731E60C19D08AC9C16F39FB896F5B432D5463F7F42
75F6ECE30944D74888511C34BAC3ACAB64C7116AD6112ECA722456734A2D016A3F2B41D60A4A
97818C16224A70ECD13CD6CE5AF85C2FD5460C3ADEA16A3D222752729BAFAE276072CB3A3A0E
653458ECB394763865162146F58B4259676F8B661E90CAFE3ED0836D626266D173FBB4B4B4DC
6E2A0C02381114A761189F3C2B6436F6E437590BF7075AFAF72A5E1DDA9F6C669965C39D3134
6CC638D2C3C32B415E13BAD72C3EC9E458FFD5916E902DF3C0772DBD300126E3366CD16105E6
9C676DA925A2B9219284D91DA3BD49A7EE70E9035F12399AE9693AB539E16AFD38956234C19F
733625FC6FE892E4C2476717C6A77397FB210D86C97EBAC165F81B1E9130A49529F728E31C96
5BF2615123BDD600E8C775366F1A60C239FD3649D435E03538FC0CD4D5855E3FDE83BC432632
AB3CCE1DA14B6133155383EF6400CDE665C7DF79FBCC7A4425EDDA2704AF53CFBEA2046A6004
C94DE7AD2DBAB0B421E63B4A5F8157CA9AB9528E8464E6B8A2FA8B5BDD20FFCD0FC6A5714706
9194E00376740082F1317E62C5E23A4D6862F0EEA28BA7D1476F609C27A9147FA8C3468A4947
C8802818BAAF5D4F33C9E918A89FC415A0BA6147E6650E09640E1A5D2EC97518BF39E8864C49
65ED91E251C9B90166977C9390ABCF5429F216CCC8688BC3CCABD5C3EE7287DF9D4F0170546E
37FD69981864FDB30C5A3EFA3BF27EA7857D8237FE07171056BCD399B2CB1BE4EE0E1809D304
2B7CC8E67D9464402EF4A7BA2612F343F5EB6FD5F7DCD112AA701B8DE9E2F17118842C898580
1FE8179FA6618A09D9A01862A2AD4D40E8251B828B5BCA97C812F95A342E23C186DEA3A96154
096BDADC299C1DACE3EB09ACA94CB2B7F3EB519B7C209007D9B80347E971D8C02C24E2162E8B
EA9275E4F1DB6DA1915D4634FFFAC353D691D7781A15EEC3D66BBCB322FC0E5E2C57F8D74699
1808645E015E0632F38ED8605BABA3AC007CADF7984F8A0763A9D322E2ADE5F56A56294C4ADF
C4F456C93D7FA41CE8496C3CD1266992C9E60B128C7AA2C5C67C49B2D16F3CA00B86C57DEF55
F8D06628A0DBBD11D9ECAF2A50FFE89869F929FF5CA0B91186D308E107EB2BEAB7480E40C62C
01E1BDBEAF62F00E36C57355479178F345B1EB3B7E87807B32F8AA06F288848338E43DB2E6D2
EC92513659D3D113CA288DC767537CFC71092878E139B28407B56E33EB79B1D46C9F1196EF10
AADCFFE5D16393E3A6C5869C39C925650D8A62496EAB5C67EA1FFA3C85932525DED921D6AB2E
B62CE8DAA2F4381657E2F0F053DDCB0DA23B418FF169EE4D6392B3EEF70A777E892F5B7B20AB
83F907C8014CE6EE9C2FA010D4F11307135A11CD8C2E0F6EA93DD9F0EF162FA24EB17C99F375
C65348E415F460780114F9B8AE5DC1DC1215163B15A17F811E308916514EE8A0596D3C962339
6E5689F57D0AAA9E205C7C32C2724172E4F8F04F60FB89D5A9EEAC9E36EC07C05050A3E0FC13
5DC4C6B5CD8170E91DF79604744B30A2CD3DEB4B3A98274659361D233CED47B79BE91245C85D
E0838FB8478B1B678A8B20552F93E3FFFC77BC547B588C74F9C22D546203219903AAB916EADE
4D598287D5145728C12387DDC05CBB7F4138AEE81EDFD8C7A0CD6BF9BEFE017F4148FB0A1218
F2750AC532E975687D8908F985795BEB142DF493FF926171B0E25FC71A7437940A7A2192F9A8
F216FF2692C23A0807EC188D449C867D7B28D6D9FF15957194ECD03E78CBB9963A0E6CA8AEDC
E35163AE9A0805A1D9494A5D71F7F951F199375ED5B4BEFD88CA1A2FE45A37211C866ADA6842
53B00B122A6F0613609A399DCB43E5A857C0E850A953303447EC30AC83DF6D4E53F9912D53ED
ED956660DD356A02B9E177CC9360EA48F10601E067D8283DD1AF6ED132A2873ACDC2B3039B29
8C9D8BE918437C74889741A2D0A398F1BDB9AC7526DA3686A7C2425A36CF9DAE0FED314A80C4
D80AD24605A8892F1E20B401F3A783BF474B6BB3FC9B0D3049E24B9333867CEF9C81060EB6E4
442F00A41A4FE88655F94A940B34183F088ED7A1FC7CC863D116D3B956AA065922DC674CDD36
AB998F1B0C313619AA4520C8614D4FB1125CB75850283A44B1EB69C07BCB9DCA47E2A97CC920
F95A82E581DF07C3AAC37DFCFD05135054717CCAAF6D21D0E35BFED91C2D4250D3FA4115947A
C4164A80A4DAECE90B15EEE9289568800EC50781674DE8F7C00C0F17D72C03B8F77919CD5827
33B90F83FA43F8CEF4513A5FFE86C500FEC4C4F9E32DAB05B4FFB0432DF191F731A9D3463C43
12EA23A04F6D5B1A61944494AAA1B82268A3E87FEF0AAC3368C061A2D99F8C01DF71FBE3AFE0
E3AF28807251F21C60C2D90B32CA25B859365D6B2B5CF07A9CA496B034396FA9A62D337FCD12
8CF0D17CBEBC1508FBCE413C07CC76DDB6065CE54C6780B73D1C80C1C39BD569C07458F8BA54
D931B5A817AEBB5776E9526B66BC38B0CC969919E9F91AACB192B5ED4AFA254FF6C5B74331B0
27B86937D0CBF2548A4234FC70CC583D93547D80CEBA78482305BB4B41E36C675B171F8128AC
F24B5653E17486BDD41AC562AEDAABEF4AF432E653D414E66D4D6D96E18411BE5683EC4FF273
07585A40EBE145D69CFDF430F8365C103728D370FBB4808D45C0391B68AEBE055C6C66BEBD1F
6A6B725818FE8B59E24FE4A96A8CFA6D30120231799FD9C1D86BA34911BC3B14855A0B2A724D
F5D392965EEFEB5B0FD7EC8A333BD4B6D33D71003681B4A816B5DB8475241B9A4B4971ADB498
37FDE6E78E5413D9584C93C10FD7BE8D70FACEF356BDDD8BAB3A21534319E195268F9BAF756C
FC17BBEF95108334977EFF3BFC9E46172907F861ADDA6641747F70CA9DF38E72247B1B1FAE69
BBBB8DCF7D8EA7CFD6D7751BC88C67B14D53270F16B082A028299D3D1BAFB1C8042754FA8DA6
1C034EDDA896D6075C40EF8D4C06ADFD140853F2198AFB70CAC3EB9982CEB1FEB0CDEE2AB494
EB9595B5C918F0139932876FF0F13AE6977B58FB6FA47D6F8501CEBD4666ED5BA410F144846F
BBBD1DA827F84025A2AE5F9CB69101F8EFAA980AFDE0B49CAA9C5F0090BF47DE6BF40C68A293
E45BC33ED9222E7494D4D5CEF267CDDA36431BC8BD41341AEB9AB78F25AC668D4D9D531EECCC
7031C60418D244656DBCABD7D2EA53509E0DB01679962FEF31D014A75072611DD2F9BC3E27E7
87C1F791F74904C7106B6F889A79DE4E770540F478500F9AB17D6D7D312A06023ED8805EA5F7
4A9F4CEF09345077C2D444D224D25273FEE4DA617FBEB1868539CE185F8250A9AC16CC84825B
30917F04AB981658CA931F566369408B6673D4456000FC3AF3DDB0E876D4AD06B836D86A0F83
CD92467E3644DFA6D249F9A5AC91CF2523BFA3EE0BB5FF59A426B4E67FD46E6CC60C10267BE0
C0A73FB423A2A9CD97D086040B22F37E8FEBD4985C5DA5E0CBAE7B47599AC2B8E6C85C8F1042
D40A26EB05160829F25210BEED9B500C95D136DB49459A36D8F643413CAA66AFA724C97B42F6
4F1622F080E8B157F86990D94315B8BB9BE14305543BAF5C0E25FBC45CE084579B7B8B5BE131
A497EAA3C0D3C520C592414DE7150CDE2E86DCE859F1F48AC0C435151157A495AD42B58BF385
D344244F2D3FFBC6069C745055BE798D7F27093E1BBFCA3FB5185A44629DE29DFCAC798130C0
3D212332EBAC7D4168B416C54A57DC04B208AADFF22C3D0529A466C6A310A8EDA384F92528EB
B5E1D86F96101A3FB9F6E2B1BDFC7000C04BC915C63F74E0B0530491D6653A75931986234E88
77B6E206A4816DE5C947140AC48BA980CAE0C2175CAD88700F28B27A49A1735FF5CD8B8B2828
23639083B082EEED8AB079C134236C306ECA151A7994261CD73A8484BEDF8191BAD858B491B0
E9943D9E04323C65C3D953D33B634B025456F1B85F57673C6CE0154E162771496130ECF3D679
37717F6D3C7CA05538016F8BA6AD48DE3BA2B153BCC4EE3500EC9AF99CC01891CBB50FCD4FC6
91C48725310436E69D55F6A49B243AC3804A95D9212D9EA02F6C2264246F311A334984011081
7EE2E669380251066EC237CE4E2E123AC89F962D2204FBB9856CC55D2B72AC67ED0A08BB6271
67D4E375EC8EF90B570921B314C8B2A035BFA7760365EA0439E437091723377A30F5859DBD60
261D1B1A75AE2FD8888B217EE4D5CEE7ECD6DEE6E3D1420E4B71561F7DD01B0793031FC95853
667F27D8855EEABBA4CF4AE67666C578ABD872D4747775D5CDEB55A02C8DCF38067456BEEE0F
10AFD66B521A81B0712EB987DD429C77A1557B6107790BE7B3C7F55A79074CCB8F38923B7507
D06CE99A2CBEBFE9D7C5C32796145E4AEF1E3AE83A5CA481531D552BFF0C456200949A01730A
586032C8CB48DA6611E0ED9DE04AC36F1660F59683973385C00C78CF675D5C5962381487EE82
799CF60EF340B2A3275BFD4D5D2122AF19FBE59DAD06E735E446D77747101A53E329A14EAD28
B99B7630E7188B1F967A0B57292667580D6E121EA1D925C931FD4B42C3ABBFFECE5096ABE807
EC5B9C43CCC10B724110B2616D472063288C0E250E569220035EEEA8043A05044A6B0D010D9B
3294282F81CDC0EFFC4F500C6D063E85E7BE4B10FD2C50D3DC8AC54BF0EA6865520401E683CB
3270762C94158FAC11D76E7D12FC78BB19BE08FB8C4BD04036408E337BF3FDBFF6AD0E57D845
92ECAC5FBDD22ADDC8B4AAE9F22395300F618A5A5725E20047A0DE229C58BFF5C6870BE44580
2A30AF4A6CA65BA502F6F1BC4B458DE1B7088A802E49EDA9528B7D0FEB561DF949C0A25E71B4
15D56572FAEC8EAFF09F46B07A44978A47F7B7687F1681D10357522D034415E16EBDA5DECB57
489581725E961D50F182C685EE3FB037B16C389B678E80BF9C6B27CC903C31ACD77120454427
70ADA3FE7C6785ECE0C669C0324AA872B4C25CCF3AF3E0E78AB29C3C642DDC44F579E5ED4FF6
AAB873B8AC7D73710EADDC2F494175254B7AC925BB0C4EE70CAB7CADBF1D2497AA6F290B64EC
7551DC7CAECFC0B5312BFD58FCD53D79F1BAAC6AE3D5E4B896D55B67838F1E5848E0D9321ECA
275A78A6F00A223D81DFA4D891DD3CA40653DA235D8FC48C9A9E4F56B7C1F6C10B3AFF870DAD
B47855776E4F08DCC7F5875B7E8EDCB96295B106F4E0AF2AF7C74DB79AAB01C44E39621C8992
7735A9246458336C5E9F60656D2F757B0D2DE6322DE7913C696053D24D324EC40C52F28AA677
A758602DCA751548BE122F6184FEAABF7AFFCDE3DC72DFFBE3A69D52F7A89709DB8D05DF6DA2
031F43AB54200A68082FF8F4887E6072993BF21DA939357274C9D7D30071F88C65F64B55DCDC
0C208AD152E12301DE3D182B3C59F62327FEA224A8DDB1867944ABCAD0CECDBC529D68C600B0
AB0281C7CD4FB6C236C2D1561EBCBF76153BDF424079B9A63449D4A4531B4A5BDFBDD70EF02E
74535DE3A881F2584C994060D3830079EFF3FCA2597119A8BD560E2A0F766F7A34A7A38E581D
451502B960833117458ACCC70E6BBC2729AECC6EF2A381A23AF14507B9DC46A3E01092F58CA9
1A32DA58C8F8353805CB193A579FF281B1F80CD4AB9DDFA8917DAF3B7394C095E9455FFE82B7
E0A62AA476754554AA899ECE4676D8FFF0C052697AFC316CA7D759A04AB1D16532042FF511C1
3B5375020E585573843100B9B393D1EF2FE83E5612BFCDE5DBF02B1C6E2E3603C6699C945FD9
36A308F9CB848EE27AF90816C74A04EB3F5AF5E709FE39375EA168DBD9D6D373C2F07FF1B23B
6B229E946DD3F3357C59BB36E3DA08CB393A774D51CD1EA98C6A8E3FEFCD91E73A8C29E13266
015022CD238B8803FFFE86F2385804482D69A32FE00826B91F8AE433C390470E429A1E519A89
249092C034880FCC9B7842A4773565D5E85622B48BEC7A7969E876A734F2E4721E7B00F12B54
240271CB90ECCC4A8FCD3ACC281060B631FC664D5712E7D033481A596FE40B34CB9E4779A061
895D589C15E8EFFBA3F8F8EFA4DFDC4FFA503309B3B6DE0C9375D34A0D935F6B0843C2396991
DB0BD48AD40D86347AB46F22A5757C018B22460487D750D41CCF2ADFF0F69FF58053C4DB6C6C
05CD54B4B48A9E303143A08BD94320ACE9747BDAF8A7AC4497140FC17164E765412D6B283701
96094CE86EAC79D2CDC86867B0DC3013276FF8C5818E06D8B68DD43DB1BC2E1EBC7901DE2D4A
92B34FFB6273EF4F2F555B7C7B4CD43E39B585AF30DF0562BABC058C24D5D392F549B008BDF3
0CBDA7FFD3E6B907D66CDBC8EE920594F59DA6E559623743B18B3AC6A767639E6310CBBC224F
848C9A8EB0E5E7ADDE1D278201E41535A2D3BC2451CBE90388D0E850B1508355BF09E4AF235F
3E6AB79D37E3F45266A140F8CE86010703B12C83C96764C49035A598526902EC3B78F9A27342
A228E03D6DF9EA75377B2236A8161C8CEA3F4BA5CF2AB9CA2F752217456ADD3744A150812B1A
2945D4D0844E99555AF8C2ECCCB520E860D804606B3EB39D7B94585763AEF1605D4EC74FA824
FCE3E8E6A260B9E2497F309950D176CFAA1DB29FF2B07D41C3BF950163D7CAB48193F8409ACD
EA18CD34F29587844E51DFDFA9E7A2685A2D50A6687B6002D0CAECFA3C630E680231D1DD4E8E
388B4525C059BA9E56A8C015E69943541462502E495A63054BDF88B4442935A25C8F20888ADB
6E60D95C8552B012BAF65631F2611B71E03182C7D4D4C82918B4AF222BE87C410781C0E2F751
C66C698C6A322C7FB4E132E9A3ABB876956178A040AA9479A6521CD82869C95C5FC36B0CA384
92564DE4458D8791042B08C8F8F334A6922F729CC0DD65FDB6F839AE8FA148BCB1A60F334986
7BAF910777E8471764F853DD43333BD19389E53EBD82BE564B78FC26D156A143A4F0E10031A8
D1516E187F1A58D1DB48A995FE6B5F5B219107044E251F1E0E6296FA1320FC75C05996D7A7E5
388F817F4CFDEDBF821D3BCBA03F21E20D34876026730D9194157CC362403213CC16C285E68C
DF86B0F61A2D47BE23CF733115F380212B175BE5C8B473F37EB03C19852FD358A09E9B1E9E31
10AA29AD9C0C233DFE8180D5913A5636E05A6BB92B4474F0D2C4B2F7FACB2C2EEEFFB4B6326D
36D2A8F75F6BCDBA56B07ACC44B3E95721AFD3D448CE5EA5314DD35649C39BD215418F8F3868
A522C2BD867927BDBA4377CF1237B791474B44A682A6169507C03C0FEFB4C25AFADDCBC6184D
456A2E44D5A4CD6503ADE51BD029AD1014F6D047A28D7BDC0E14F9E71069B401D15263E4AE45
58AB237CB7FF91E96E16E63352BCD74B81BCD1A50C0447AE76544806B5126F0AE6E904775DCE
803F7BBEC29D5A2A1B98CA8901ACBAF3D08A16822E96281CB22A04A78E4DD1257A52E172F2AA
6CAB70622ACD3355DA68DACF11DB4D16C378486622F33D08CF1F35533A5243FDE12EA8910C5D
B3BE274329503A6962BE53CF60DED6A7CDACAAC5BFBF9920774E92CCEC6F5289687960E42277
7A6ED1E14919D6DDB11E73D13BAD176C7E80A34A39478DF5C2A07626C39E8BB4F54ED455719B
720CEA814A038F46896C6025FF5E744C2E6E830A1966F882BB06CB7EB370173C99C6ABEE8F8F
8540491CBEC243F5AF827FF789A9DC26E7F160BE9B8F6FA6AFC33023E698F29238519256587D
CE09831AABFABFDA761053D0332AD0394666C36352EF250EF21EF1F1FA18B2918E5DCF2CB7DE
1502C590DFD694588CA76BE8F1C00711C5F0656BB83E5867EB79945E61C3A8D6B88EFB1AA33A
6E6A23A1B539D715172915FE3D8277F8865F177CF9B3503E812D919B3AA7A238F4D182F68418
61B26E4DDB5396D956024A95F655560FA34336898FC07D021FE9EF11DD5EC50E6E1BCF82ADA4
85B3851C393969C1E00248657BEC3F077A91027E9AD95E195A0D61A2E5CFC7A511E07FD56E82
8D526EB3FBD6261D04EA21ED82FCC7CA4570B6ACF2E3AFC96D9732EA9F3DC417662BD0031AF0
9697D281DD4B0802BAAA46988C643AF7E5ECABED3AF561947F21422FAEDABAFB506E033A5F0F
A4C51DB720DA032A1214F29316D3134B39DC8ED2AC63E15A99FD690BDB5AEAB767938D6C4B8B
429CFB306887E546C6E433A5C571143C28BF051A1FB84D77F45500DD1B23B0B71C1533B55697
03FF2492ECD353AAA40F9D0477DE9DF7038E57EDC64CDFFB4FE6637C7CEEC38D46AA53308F5F
0E7EEC36924BF5EA6D550CEFD20CF0DD443AC3F8B990E3219C0884622820514D8A82560BF8BA
514578A9B66E762B272692698437EB55AD3DD894AE6492AC964FFB5EE4003BDCB461DCCD1DF7
BB48FDD4C21CAA97000EA5ABFA32956D534140DC7CBC3E9D1FD0B09D2AA16CCE736190FB6837
E0FD1F0E233489AB2686C833AAA8AC9CA8A2A341D635E088D03FBCA5338E355BE751CADC6AEA
AE63DC304598AB6EC8280A0A1329A5147181278C9B95276570D9E1F4D34E65F9AA64DD5FA42D
7D68C9786C353F7A8BC8C52CC83E0EC142596760AE19806583AEAC53E092714E5B993D63F468
5AE1C96EAD46551A491E88873EBAC17F08B20FD491BDBDB2618F005DB0B1D2EAA08892EB1737
BC41A07883A039477FB8E964CF7FDBAC19E337AFE196B39FEEB6251D192423F59B5D746C9907
75AC9C99E9357146B471316E6BAA0EC6F0433604D296D80D26BC238D9FCBA1D3197E5D173519
A57A443B38D021AFBC7C54A6BA7C269453AFFDE6E5FD8C4CB0BE97DE72696C5633902EEB5215
303663C12997AF415D102A214B85D77EA7DDA3CBE5BDF0A12CB331939518FA04D3DFCB7288C5
E340FD74E00419DD0FF5267556DC5DAFCD6C641903C722D23D500A2D598C2FBBFAE3D6264192
3B2777D8EB0D81D4BC53537BC3A84C4FC3FFDFA9194C81EE91DD7A7419DF0E5DA49DA910C5E8
3E35AFA61BED02F3CB646B0999841CAF55A17956449CB25BED26054FA9500A357AF042061CB5
F32414F1C9EA556441CC085A1D6AE3A6540391369FA51DB16DF2C61F0FD1558D5FD4052A63D4
EAF330147B0E9C774B4894607B40A760273B1B89353ADC110B54067F8867A1903F87BD270F06
5E322B027F60D855ABC6EB40F17D222115B7FE10C2E140F2B477D3A3D0A11391698E3C35BF1A
469C9068A0A63073F8A94654DA2B1019A61B3949CA2984A12EB434BA43583840058B774506D3
666BE8CDDAF08B5F99CD7C64AFFF75C164CEC467C70CECF1595D4D01470ADE2E034B37062D4E
72EAF6BAE7C63A03D6D85A16A34CA5C3E1C34257DEBCE2D8F55D746258CE208BD67BABD08E40
ECB20C59BD4E050A0A9D849B2EB2F1C874A512E70B7E179E0CB46FE1ACB5825762666A783AF5
669FEA5B02415A7901CB0BDED57E552FC1D470F59679B21A56F82E333B7756EABBAFBA4A4D0C
042E97EF46C3F71B75B305B468CEE59FBB2BA20B49FFCE08D0C28C920433BA739B98DCD09CE7
CD7FB24D832444B9B6821F31DB2754D497F63B7D6BC7C75DA9328CCB88E4DA7CB28B4B213D5B
8FCA4AE99A5DCD28068DA3795FF110150E01AEB5E252CA2C0B5AAE2490AB711440623568507B
4DF99A6D44C572C5871572CB8FF8154CC3B9AE7592597DDFE684AB44AB069FB8D8680057E70D
A41753E94E0FCC13496DC82F3A6B9272CDC133C01BA998FDF43D266DFFA3E06141C6836D6DF5
ADA89EFB59DEF1A68FAB510DA56BD1C0B23A8C20B340AA0278B98179A46212E4564011A879F9
DDC6DBA0343B89517DB07F7125A0FF6D37D6380F7DC8E0FC2D6C535D6A9ED0D4214E79FE2ABA
30F38D041AB79FEC0786B844444EA81C4E7BA8475AA181EEE935766E8FD444FABB0A3238D14A
D899E01B2C14C4EFC724A236EBB6EE7E53C61992DC103654601334CAEF87C8AAE864BAEDA97E
6820FE907B4640D51D0DEB0C7D98EB67CE311F5A4F25A4FA066C7D13664BE53D1DD66AD2F832
9F8BCA5B22C213E6D20EF2A73625651047878FE7077851DA70CFA24D4FFEF3A8009E7D6E08D3
CA2112801EDBFEAF0B94DDA65C2130903991EFBA7E9F1692A2FC63C1885E52B4B31C0AEA192E
8608A4289DA6DCA485DEE2FBEFCF4F0336DE035B9F65775F3BFF4C2C49E3055BCCF0A4F3FD17
60524B0754D89CABB15D9E57AFB93D3FA164426713911981D0D2979F0EFB0569459F701A0742
67D43656386F7D1A95A9BCF9F4682761839B600846C81DBD197C83838AB9EBBA8323463865BC
30EC1B99F4FE299ECD4453509A5C814E6C996676E025DE9FAFFD0B6C3C0914ABFEC436B65092
6F48672FD2D21EB2F8EEC64DB45B8D8C6AA3AA4E9C41777797D7497190E2B7144D4E9FCAC863
9ED74C7B302383DBA2FA646782103B9ABABF85F80F8EE057F9F21A002115B3E21A3B56D10DBF
67F1EF041D9E96F952E4E65281C3D102273FF3D201E7767B34E4FD4CF5E1402C608ABB8D11B0
7178ACDCD8DE9A2128DBEBF9E2BEC587E0D7BA1A686231A8CD5D99947F4E461E7C091714161B
3906C92A6D5EE5B70783552731AB9CA61E2634BB8E2BA1BC8B49D244FF89F5C2E9286C3467E4
DD3B35BF9989372416245ADA7378E245C1B10BF57BA8A48DF37FA7E5F60B06561C86CA309CAA
2A8B21F88D1E671C54E429863ADBDEA4D5F26FFD164000B571452DA04877E2900EDDE59A7E78
2F2DC54686FD124A711C44B6D3DA7CADAF4530B7EF0AF2A14D5ADF316099906847696848DFA4
CA3D1F8CE2A6BC82630B4B4617170558099C8F46994A8029B417CECBFE5513734425B165AC7C
4DD15155D83FEA6287D3629F535CB0E1A828A195341E314B808604C6587DA28FE318ED8F2658
BE9D9E2BDDEA3D54628AE2BF64717EF64FB6E1DE3D05BF69DB88275060973DA7570EACAB1345
862E2921A90EAEC32B92B99E50EC2807F02A135C5E5B643458C53EEFBA587FC951BC477403E6
8850316845AF4565284B8E902DE262A113234B494977D087C12734874ECC93406E804BDD3655
8E44D2890A8C6A3F8F5DB0A0D7C14CF8B137B335C5A003424CF45CF4DC0C64B8F71929F99C89
CE9CF245ED1FB628A989AB04F0A32D0DF7045080F87A9B6049E0E52612375042C579509A0681
DD6869C904CA95F8B1DE9ED886CCC43A935ABFE8B888745DD6F7AE3F6FBACC0B1230AC9411B9
0CA884D556543A196C817072E0F089F6D7EE3157BFB82A772F8A675315E12813BDDB5186F415
B9BF758F2B213B33981E1795DB41AD949032617C15A52927DC7A348B81288BEB59F2186D3629
A10ECBB8D29581475AF3430C90787ACE611E66D0BD9B41107A5E2BBCB324D893BB606CB48EC1
E206019D1E96DA890DFD94BE3F663F609F07503C5456571608459B26372DD570DAF13ADF2F4B
DFD0DD9649C545D82458793834AF2DD71E8755F4E58856C5EBE91695252BBA2F12DC5FB7130D
1792ECF6AAA07A7A7B005E668BA7D27F3FD0214AE291DC615221F13413C6EFD2E0421ECB37BD
95ADD58A9D51D086A4D0CA2CC1C7A6FA853F61B8C1ADF6738F9B30CE564F21E9D45A5A55D6FE
FEE27F7C538D375B79EF4311A81B014E31DA276D07E114759EDCD610F82C53F1338949FE483E
94679EDCDC4A6381770C75B71ADEF1CA131F5338E071266D679AB6343E961DD3D71D1AEFB662
BBCB0F34766BEFA058E02A7C3FFA833DF83BD4C8E0D89CCEACD5E1262B80C93A84675B71AF69
72357E3C93A7A910AC4508F6C1E260EA1CF03902D3B815DE35E3F30374C476271260E3657194
F9D63DC984E84C82E550A548967791BCD90E660A978A9DF434B3FE404496481345D9733B8CAD
00C306F0CAF67167EA9C70C5C124124AA10DA6B0FB6B69F1EB328B9753B6CA187905D677C5AB
0FE167EC1BB6A168C1F5D6F9136D24A3E27A49CE8CE96F754644A49643E5481F054CD9E5C645
C3E7F670DCFFE00C78F15BC705CEF2C8E1A713BEC20E687EBAA5CB7262E8BFC23F26C1BF902B
8206B25AD830B5B8D87CA79F1F6404FFB313386632528ED7B452C11C22EBFAD64306408A0653
6582ABDB2B2FAD788B4C60AACEC0F0862CBB2FAE618CD8DDA566670FD0B7FA64CE0B7A057025
57BDA95531B9B500B8C97DE2B2AC3DCC6E0DDD204AD937635F2EAC85347E2ECF35BC951C2066
A5331FE8B087A8E83B50B08F07A5578BA7BE6D9CA251DFEA9F9597B71E7C078A489BC718E2AE
13E9D8C4310427AE85B9B919912CFA54C91C1D898C066A8961A904A6661105F189646965CBAC
79F00CA699AA58BDE0C424A347FF1C3259C745D3C8B886196F44EFF6455E86F04D17BE7FF0A4
7F34980F19AAFFDF685AB944733FCD54C50A8A220245E13EDC3C3DFA54B418BAA2153C11CC0D
0C32ECE788C17CA10B149EAD12729C121AC4B7562515D1D721730B10DC9F48193B5C6D6ED5A1
771AA7F6EE5115BFD4E935A6C2DD7C2320DC3728DE360F99E7AE5F6A8B776E66C15D82C0839E
337F2B490C0C26EAF1EF8968898D31D8C581626CD43322952B450524741148084D9F77557304
9F5FC47C5AF4678238B0D70EFE8111E1DF0A90B46216ABA8E39B98ADAAD59527888EBCD817E3
F5E7C71634F94230A6D96261A1496303921F6E8ECD200028A8A0D90A87F957819414A0F3E3E3
9B08CF32473E9CF53D19D2012791AB857312932F70CBCFAC8CBAE1C883EBD8F90F94D415FB1B
20046A733FAA413D47409F87ECBE4BB0AC162627D6094B58989DDE0A12BBE07A99B5CC61C9EB
26AAF4F6AC89D40F36DEFB38DC9119796305545C4060A12D6773F32903FC20334CDFAC659F35
95FEF09D2AC80189040D4B3B81257AD821AD3CB784C49BB0F5672C6EF540DE202CC3B45BC7FC
BA494464E81CBF7439D440F6766DC94893231913A82F6378136DC07A0C4B82EF4910846E28BE
EE53E01B9A110AAAB81C3CE3955428A9F4D033E6D362FF75E50067B1F4CF5EC60DA98B318F7D
E2C7AD5EA8C30A9BBA83213FE3A1FD39C29CF224A25798EE6821DD5ACB3AC9171FBF108B2016
4F2B7D15E26FEB7359F27015787BA53F304D72661B68BFF77B5F91FA541AB4F11232347303D6
95A2A75C09259B35BED0FF9580B9B5988CB5AC0ED11E118A0080D87109CCAF46218E7E440A3F
320C97496F0C4D8A9F63318753B3067F4022EBB5057CD40A327F29F227D45D0EAE5A15E32926
A24EF46D9ECAF21983F09EC0185C8FFE0B790A6DD8727BFE8359D472C493781E40EF71BC747C
F60A673DC4CBA688CFE41CCA69C37AA18197CD4F96EB4F049EACDB88F80734E75C65CF1F3BBF
8E2FC4DECA78DBCD7C677F1F39C590D6F7C102346BA945DD8DDDACEE0240E441D68BDE187773
C66FC65F4ADA28F7C42C11B3E9BC78BE1B42D4D59F0DC73A0471AA8CB4791F0A881D82C7DB8E
C32B2CACC33F3FDB77E0A5B7DD3799CEE2053E9CE624649CE47799752F2BC4A23F0435F72E57
191774554506DB153EB2D3FCA44B6A435DA6D61FB8E8AAC78C891DED8866A96038D99586DCF5
0ED62051FB538D23C612B12D07AA6C1024DD73768952FBC7FEC6EEEB21CDCEC1C1913C468B8D
0350AD3E98669D50B1C71D4F28849044AA8B2FA0255D9323C7BBBF6BD48DCFFCC05DCD74CA9C
2F29FEF5B1447C07591CA82CC79F7AE2C57D897216A8DD6FCC2657BF131796BFB358CEB354FC
7374559DE7B4C879CEBACE1FF5C6E821D0BF596F80475AC6AEF1E6080B480E74A6A81CC7B200
CC9D1BADE2A20FB3B5F9122EFCC99890C5B369BDF64A0645FD36663843D73F126EBFA2B2F87F
6B6D1A481B8CACEEC4F7CC0AF89706E4D944E1A6AC9EF36018BB128197E740D6DEEDFAF1498C
4D2E47FC27E48B0316E856FE21BEB953B2F01C9472517471A5020097CB4494357AB34CCB3A36
6D89B5E598CEFE58CF293CA963D09009CD1BD479126200C3D342172CFC2451997624AC151B9D
8E137865B557F1C595B34E5D5274D8A05DADAADD33836C3C03BCC3FF9B4FB585FF613DBB94D8
44A9D7B2D3A913EDDE51E5F4DAF4D43934325EAFB0AF2DE524BA3E5FDD967F8F5287D209B681
1F9B56B619F0EA0A438976EF6B87C8D3DFF5B228DA82E4D95FE2348ED144C35F28002B7618A6
AFDE5E871ABCA8F41B4FC3BC1EC0A093BEBA007F9055727AB78E6053777C422E078E60D7CBED
83374D98F8EA106C40293905A264AC2BDC2B676FBD6306BB1D78B4ED63ADBF59061E25862825
3CD127874EB3A5D3C9B3B3AA506EFAF9456A9C071F08AA753BB312FC4E29054E0DC277D2CACF
2A7321C4D3CF5556DD0F310CF7C13C0E5359EE8C21507D2E8FCA40147D8484E0C002EDDCF81F
5B8ABF4ED9951D550A30B7BA608CC0F86C2B0A0162B6F1881E479009356D51D01E36B464511C
14C1CDBE1A6F78020192AB358E8167879717C15F22E8D7870149E5CB0BE8C73B17C1609BEDCC
70E6DB1EDAA4369BE30AC45F25557EA0D8D31120959DD29B2A224DC173C9937A29C189217365
B407D07EB62A523B1FB62F0EC8604C03929A7E77B02FBDCFB37018D885F544FBFEB1C1A60DC0
133BA920B1A70C9A46CD6BB7BE5CB0BDD4D0CEE65EB5DFF23C7BA54F8BA5CD904BEF3F4E17F5
B430206B2B4C58181BF23A50382B92FC5516A8C154E99201F87E0F4C5C5FCABD48B8F7AF0F68
68E2A4649454CBD2596C004106EC5C029E3F7233FF4AE296010529F7A4BB37E68307A8F4B239
987099B95C1EDC550C4A70C55092A7CDEC2F1739FF6513D0F17AF86ED78492C31CE44FBC4C8D
0C58622B50575E7DA87CB4C97C32A0829B669AD037C860D2E20F158CC0E6F4F95DEE851C42B4
988F48BEE046378408BB16D9FC4AB3AAEF1BB65642A207631C2D8C70DDCC9887C7B2A2C1CA37
D77E6E5FDD2B138A0E25CA88AD767F4D977F1BEA3EF2EB683C76C9AE55A30F3AA359348F1028
B96753007CB939A922B4534CAE7B4C618865040E3B1B167F40D66614C92E4A5468C1FE638B40
B8A431A5F7877852B82D1C1180226FE067DD8BEC98F522695A673D4A42707AB5A49503290B28
4CB4A541FA6BD8D6675822395C986B23BE34CFF57CB0C0A6037F15EB4904D1C4835D3482AD57
1EC475FB6DC4FB25A7642CCB0A5EB0B68A0CBA5A470BCCF30571F40066824C330A7B0917B460
0207B77DD22A4C004E99517814462A49ADABBAE60C11692458D1034D72FC4026AFE313EA24EB
18E62B7645454438BF6E99B67F25298016EF2A822347F72A812984A65BF92AEBCF694C768003
EFF3E382C7AF5165ABCE4CC66F4A6E182E00EFD65764E3CBA189BB856DE35B5C33F20F02F968
F360A461087C068B5DDCB0EBE6894649BC305214D9C82B979167FB07143CAD069D6022494F82
634BDCCAB6BD0C47019CE049A2949A073C6422F1440626A8D8F27ED269B9866C05DEBB5876FC
980B73F237CAFC69BE3A4B466485855233D20CFAA567FFE8CDF580602D82AE4CE3DA53846277
D067BC2D77937D9AFDD95DEF8B2D573E341F260951F43575ACEFE75F923660CCE5D7CF4AD84F
6CCA09EBA153F174BE91783D2EF3A48B320D8BCDCA178003F2DF97BBF69008A755C962D32273
92EC701B67C1E5106193AE52DF0A0F984C28A779D437214D5BC82A7DBB94AE07CE9B6C799F97
B03873263DE76BFDDA368D2178C817B29DD8CA5C5132F822B6DB89CF3ABCC986B8811C4DC60D
8B52A064C212CAB2D04F83B8C06DB1EC7B45426080466A641B32DEA683F50024446B6F410F85
39D6C79961B38D10BDC3E90B6D86BE999A8BDF2F93D9ABBB0EB3714F567485235589191E4E19
D61584D9DA998FF784BC5EEB74E54D9BA1B4E1297B17395864F60B047956F3D3B72833A6F8B1
E09532A3B11F76AB9B7EC3245F9039C1D68F618616BE48BBCCD8CED3249C08CDA7AAF73714F0
308B0C6FE388275AE6D0108B3B701F45A811D06518026C02CEF5A21875DFB988FDD55D26A837
951F8B4AD63561C1305CF12998848FFDC39C4337C014D43817786829F81DA6687146599EF058
61F108C2A8AED806B65CD25E24A9799458AE0258AE80FF931A09A6B3FC9E6A5B4A31E253B8E4
0DB6D4625BCB5A6176F4F999D8F88A65E96FA6CEFB1D52BB73442B46D4BC0C238AF8FC4C7E8F
287A9E43AE5F04116C5FDAE1277DE359219A68F037293D2C41B7D7908E046F3D06048D2F25DA
2243FFD911C2B56D72EF3E867EA0C2F5E725BA7CF76730B8DF9E3CE8AB9AE3E5A9D013F9049D
C9681359D0752456C02E5D158507071C26D754A2BA8EE96A1F13AC439B6B7B94949E07B10454
0071A1C0724B3019D672EB283BA5741295CF9EB0691EF944E1D93657DD8E16F134447942FF91
53FACE782CAC0005E7DA84B3274E22F37AC3FE2A0C84C8D8C058F9AABC44276BD3C1F063DA46
0D5689DF8597773FB16C5AB0A35D46A0E767182596D9915959AD9F7699F0B5073F56B522BD35
61B225B97A4237E93FDA1E8ACC3588B7766F812E47FAF3C8F2FA8A93D5948AE4631AE1A28A28
765435F7244737A2758DBB37F240929B2E9D3E983D8A3D46A9DA4B0679909F1E077E0431D8F9
A8DE54FC1738B3B5B6B4DDD8F339FCF50B59A4B6CD3E4931F8BF1AE8601E8B337DDA6424E95E
E366D620B7B7B93714E6446BDBA673873A169C3F7D58F62CB64109E985ABCCEB9EAB1D37D85D
93D90E826B4B5C57DC7E5F8C8A13F707260F199C58EF11E61F60C49358E7B079A2FCDA284490
36E843488B847999445FCD8379291F50FC6E176F676E24602C9B90BFE4B0358997D1F2A9652F
6290221808617B6D81A6342853EA43C8B83EF275F265745EAFBE7A7D4A5D6CED648E8C0A6BCF
6415CD7DCB9BBAE84A92FCE237A009FD7536DC8BE3E114E5BB29A5B9BDE2534B4752BC6D1A83
C7BBDCC6578EED4CA804EE9D59FF018B97902109939C9AAB744F42C6FA0D7E47B66C94F9029F
D0F224E0F9E9C10A5908E7DC90BB2138F476958A0CD2A3587733AC5EBCFB1727903FD4EA849A
A305EEB4E061C06C8D963A0527093DD7D9AB232546F9F88B850C5024E940E9A5DE9E9A6E787F
0FC5C1A15B46FAA5E4756A2D4B952ACAD64966DA1B0BA75D166E4479EB0B4E1A964EA0666BE8
7A8FD9E1D8E3C857B926F1C2D0E82AFC9FBCF7ECDFEF6F199223172A7261FD3AFCF54B49A697
81FEDFC6C501C4EE50CA5E8F199C3884247E21B7CD40250692362A84A63014B339835ACD79C6
8C97278F48D68533438C59864F89B2CE0C93CC549F4F4E16849C6D83C272AF1CDEBFD65975B2
1B129E0450330567DD51E08968FE04423D4FFB7D1D4F902ABA21F4C01F23B9811C42B4988F48
BEE06426CF7C8E184D03677ECB1A276DF9ACD94C31E95BCF3D8347A24FDC7E564FB9D11FBBD8
2DD3B819913B0E3A3B050ED0FCB57EE7005CC7DF7B9B5823F530554103ACFE356159AA9B85F9
5C95BEAC324D0097382DAF2F4F160D4471DA9A8D581F5BA89C4E826E905667D4F2BB89AFB9AA
62C6829046F1FD661720BD67056508D7F1618EB58CE32E378C23EC879C4481926A2F3575C7F0
2C3264E854969E248E00139D87013DF831366A11B7E78E8904C9BF6122548B956AFEE0CB4A3F
2F0EE383F21772FE361B2EBAC612C9EECB33B9714AC09EF85764F70030C0BA32BF26767CC2DB
77DF1961D44C613C07F3B3195E8FC5D235370BB495BD1DFD57F59F0CC88148FF4CE3FF711498
A985049E9BBF64F7C19CFF81CB25CA68497B17D31A9343E46C61FF85B8E5AE0E308D40397719
1B38742A6AA3B5C84787A5341F319727A146D32B76154D1D24AFEB30F120F7880306D17F52E4
6786A0B61CB4E16E956DEF4556C15633BFDE4A158DE1878B599E466B85AD875A89AEBDB4B4B2
4DADBA3FA1A28DA0874079A9D5F2280CB9257FB3E675CC2A6C25685EB99C4B8792E524012A6E
A10D9C8D74ADE2AB88AA865BE44F38B5A528BE89B2FA4A89EAB331BE1E050D3D388382915662
DA0EE3BF5848C284C06509D6AC0E4808C8B5FDFCFA9C6CB469A70F5598AD7F924F654ACA0F44
3FA7AF6632E487FF2D0CDA5AD6C9D0DAF55E535AFCF28B95411221BB0415216724DBF215A33F
AD325667A0B7D58FB1DC0650591D563C50F2C50186EF2F7E4D217C525298FB7AA3F643C77AA5
26ADF53B533E4AC9B41B36027CC364E74F309C1832CA97763CA2A07F4383D0733CAE974D6DA9
1D97334780E43BEC2A539C22B5C227042BBCFF3DC2093CA38458412F92004A00554F8AE5412B
DE6F63445465988A6E205AAEDEF0E0EE2062CA0AA29306B0784E1760EC91DC0B2B9B20AAD0B0
7DE969C1F4D0BD5D94F6E03CEB8B821C1340C866E697AF01893493F176846EBF16C1EF717975
D0DDFF1D4158540133AACEEE3A21182F43265DDC9BEB01103A5551731DD91AFDFF19C1D881E7
BCAAD2059632506E851A05388112FC6E1296CE350444D283C4298556098C7EB7DF219D593E65
3C81ADE6D92049BE0B0DBDB4548574EC069078D99419D46A72C53D33D02AF25DBCE794F56DFD
08B10C9229BB3A443893ADCD100000BC5C4A69C986BEEDCF4C9B02DEFE1886705E6779DE47DC
5359965414572BC17072EA6C9F52E49EF6FB11FC8E80C7DD3AE53D1AA08600D7DB145DD779C7
FCA8FDD12FFDD933393B3B22E1378D546B31ED161A040FF04AA0DB05BC90A4200A3D88D5D333
99ADEB7B41EA4C93301B088CAA35E14496AF4F2D8E73FEA5F5AC3B3281978360002EC89761DA
8EEC4FEC0AC6DF373D3650040E493FA18186DEA210C4D251044431D868E7FC22078827F23C27
AF481135BD82F730E746E9878B4975983406F47AC8BEE735B4E53959132C95934919F24BCCBC
DDA5A4CB302510C29D5599CF21682DD1B4ABBE34548BA12DF219D79F13B0BC62A7C97FE42F26
234ACCAE6F9DAF5F9AF2BD2D2752692CB76BA99740A0AACB316265786A7917B057F34E1D2DD8
77E1266449BF1A790001DC04D874EF033AE87B066168EB75730B090876A8E1B7FF22D180E105
95A04E9F57140E8866E1F2F8DCA67530B90940F45020BD86FA7B6EA85542625AB435D0E5531E
4EDE355B3E81197AE3C0CC3068C9857D5B149DD8C48348A51568A117DFDEDFF28087F4E387C7
0D499B6FEBE95B1C7E7D465D8008558DA7C1FCF51EFD19B9EB1F4687C6A6C0F12B25772E0785
4C1481BAFE194F66842BE0BDEB9034EFD17C2A12110959F4871B9FB9D58F13544BFA4AA15019
8C6638CCB7564C14820B78794542A2EEE17A9014D13613F1354924D3642413C2B5D3FF46AE54
E811D53408BE85CEAAC9D19AC0E6062E25A581FADB594F623F00C1DBB7C73E21DDAD74D504F7
0DE2FF188D2A3825371AA9C628F9BEC52B400827C20523DDA19A4B664181C7B6DAC74EDF2A1B
3AE905BDADB2ACCAD15ECF67A2E34FD28938D975EB8637A13A6A18B8CF851876D118140C0761
C3F93AE3E6AC61E8ABACC36FB9597F4E67820B49B4EDA3ACC2B23AA1BD79F2856E8047A57195
CF4278F23B70259F0E5A22E163130929C6122ADB2648EDD6DF15BABA76231F6CA85B35EBC308
945044BDFC4C1B6448674547D9E8AD9EB209EAD3F2D36E08DE2AFA766EF38C5280177BCD5068
221E90436AFFBB3162F6F24F135E542DCCFB56AD5EEFE42048EDBA31600E03ED85EF5AE91AF4
F5EA4388A9626C934321ED15D267D2AF759C5FE93254A60856778CB5279C62DE1D8DF5FB4D77
BCC79B8561756DBEF748A0FF90D1F76E5220165A76312749506F57676B58909B2095EF00A525
15F34A1EA19F0B7113FD5061E356D6AE3E4113134E170D831368DF2DCD327AD43175A1AA65FB
6E923B2627BF32A59D24B54E71818888AA6043F860D5D548B18C80D07E398A8F5ABFCC4A89E7
1FC79F316DD65BB820BD239FE4632E693071DB8753515682F9D19998AD07CCC1FCA7EAFF2744
841466C0128C7577067EAC8C2E85C271BCD8C858038EC445FBAF1BDD954B06CEDC4CF209E4FB
15FCB2C2A56E499F719764BA6B12CDBCB4885B833A6EBE24E9C1FCA5898F8C14441D2A4CD0F3
08B5C11E8429F0F49EF015089DDAA0BFEE653F64E66C26FC7396984D4CF7A4363B826EA82285
1532AD525190CA681D2DD8354E2374AA2F1C43F6DDA81D9AEC9093FB14816AE71C2FAC6F0ABE
4C595481EE8E9B4BD9DED896130BA4888F8DD7571FD8B9712A3A89D43801C3ABAB161596EC41
4C5F869E00BCDE4D275F951305ACC2A2D61D3D7BA4D978369A96AED979FA28FB845E4ACF0505
458255D067F9951349B9EFD8C1B0327411B8B5FF0343BDC37F9729E777392011755EC88D1531
811DAEE13D0EF2C62EEFDDCB4DAC085DB8673AC7B3B8F0CD2F1D70A35C821B7D6105A3BDB831
680CD3F18193C162784F47B13F1A593DFD5820DE22F606ABF1419EB89D5272C475C4C10A4E30
05ECF3D1DD711FF88A4B57DC39AF18F70A2CCAD011D65037BF9182B23A6F8C55F3CF4D3646CD
B7C0B01839832A85248CECC00781273351B1E11E119A92BF6FA432C719C35E2A4AD6704AC7A5
D1DCFB05C8DF61901F89A4311520F57BE22F0CFC82E709647FD6E3B79204CE90D98EDCC54E53
B873B38C0B954615B3FB950A451657ACE6B352A0B859AAEBDD13EF72FA6CE8A6DF6037F420E3
A6062C3054373619A93136D4E6EA7CB8A6AC43E5A25A6DFE6B95D1519CA6EB7704BACE614753
257EF888D043C081C795510F5E3C3B3727B7174FBED75E7E21B0687C2D0D1AA2CECF5D426FCE
B8768946E9BEAAC7FCDFD223892A107CC76DAF8E30D8F95DF55A39E1D6A01595FA187523305C
11E261D1C8F9C716AD8B36FA8F91F865749988C576633871F9BC0D403284D04BA5587D11F3C6
4F462F549199BC5A5E36F27656B422EA951D117CD6221742DFFB8B9C9F6B16562411F7AC2D62
1A2FB6FDF0D1539D1FCF8903DE802782B1A0D6BDB13FCD020D6E0787EB8338409DFA0BD29BBA
2E8B6B22E0D40ED248BF6D7855B88494317A9E4DA281062F6A96E23CE6EDE27FD1DF74642463
F8FEB2E62B9F3AF0AAA3BF9A47D294EB49356137CD29AF73DE1461DAEA33A555B50FEC58DC84
56071F25C6D67F5E70DDA897FE3835AB625ACB7AFE3B82D2B0C5E98471565607F2BE0C973DFC
E3D6736B0C5D43D886BAE7701512E0DD7C4EA50913E6B8F09E3DF658D3A7F7072C94A6A8F757
53E9E1E929381A9135F995252A00EFDD18E778631D0224C0E0A4EED14C4717948C37B0D9ABCA
8AB2CA8D3902B4684205A941B624AC12A958CE16C7FABC280F87A42153D59EFE757B3D2E03E2
9F02B64851BF641FE8BBECBD8F27C11D6EFF56C50F4171BD94D2DB7ED4E07C30A09F1E50BB0C
77B951028CEDE232D53CFCE8204A6ED895320F52F871BFF3503F780416880217FB9F93F8EBFA
D77892FF043565922DA1CC2A25785D35E93F9FABE382396B06446689FF7865118CEC657E3D71
10BDEAAC621003A47551C1F6473704560DC4C767199DFF05C7617E560A714DBC2C1BEA50529A
568F66A77325DC720CAE61ACE1A37698220B27AFFBFE37550B2B506E6DFB9A58BF18255F7F4A
B21B3F60D696346EA83F9282F804AE6AAFDB036C583A7968E39818BF7AFD38162672D78F7875
1D032A6A2ED084247A0B71B44ECBD5AE01D6BE4D8512CBCD1F33AEC01FB08F7D958DFC5D0BEB
F3F3EE53DB00E93C71C58FFB28ADF1CEFE942CAED1299B2B1B5620DF7A300E7DBA63D532557B
7A014E493303916813947A9E2B67728F4DA6FB29A0C775FC6F49181352F993352A140E236D02
ECD228C92B6E62A72D9362441C0CEF1714F9F4D989379DF5BB0324D64E065D54A70FFE8E30AF
379A7199C3A287E2BACC0370C17C724C2E43813AA329364319B1855BEC581E071E16E08AF409
790C5022613655D8D8F257466803DFF2ACF85F3DA08E1AF359308C6547B3031F88BFE99E2AFB
87611CABF9600D202BD90E614D9D782B6A93332FA17BC19839366C2721B834FA2E76D2539F0F
EA9E8C690AF8A1D9390AFB97DEF309CE0A3C302B8D5D28FBE65CB3436005A8D9F8056AF1F23F
C348CAA146ACC37B874A4663D549A401E98BFC01D56205DCE7532B10890ED4CB20933FA67A15
51E10361B069CE5593207C521F3B2BB797C9D2822DD04E21BD3BC252FB30E92E77F4E85BAABB
742DB8F062E17EE61A5236DD260E14F33062C4897144033B3413A5066684622CE8AF9460FD6D
AAA5BFF4370E6EFC77CE81F4B619298C772391EE3D1F23253E536F122137822270AC3CC63211
9B31E932783A9310AED12414143D5BE189BBCC3812D5D0E630AC359BB10302BFE8B99CF93B3B
1FCE84BFCECA996717FFFA8146477F8DB1798D9E8D5528484C85CDC2DC2E76D6E4580021F858
06169215259CE932B9D13E3A9FD729693613D69F1995F1D63089A879C0380FAF749B016BACCA
401F4CDB542E2611F5C060C050F73657FD9348ADF43B2A34ED90E784F41CBF364DEECD123A26
BB1D0107B4C89425CFC2DCEAAF010ABF3C15BB7254DC13EA44EFA101BC45254D7610BE5A2A08
2C64A9DFD4204555BD4C45590CD77C270B2451EA7977FCE9C167E691C492560D897883C87077
CEC321DBEB6B60C8E3602D5031204CF1328C9C4227CAD7009F857CC655AE6CD4A935FF6600A7
6B82693147BFEEACBE2D711F4EB2E9D1EDE6CEE54FA16103971DB2892407CB302D239CBC83BC
83BA938888EAB9275E8319302058BBF8DF5AB3705B9F35A4C08B0D6668B1D8E8B5CC4BB0FC41
3CC26AAA9A46C6D4C5B185BDEE74CFA284E24ECB7AA16094FEBE1B41980F1B04EF4F8F210E15
B1168B757B06DD1D481454A826348A4AD2B5CE5D2382D7FBA0D30CD97832321825A27EAB3E42
C611F31DE946144D5A0B466F81D28882C0122B8190B927C9618F886EAA7CDACAE95032D56E6D
C108B0DCDB867D5AA476934173E4E78F031C98267B984D4FF153CB666FFF0A7133CCDED47F9D
F18EDAD5B7036163640C3366222D847E04F0C3F48C317BAC8AF1A2B82B68464297748E60CB53
26A1BB6B9A00EDA4E0B16747E36D925C2CAD2FFC54942631B0F4917BE242D78C8E10A2100D3A
DF037B4918D763697283478486E627CBDC03DB15CC79D529CF49A29030D2803CF1C568D8CA5F
1AB9EEDB1B873C527B02AE7F478967712F6EB18A0E77D42D65D7BE5E015773FA932D21F70EDC
20A905C5F728BCB96E77025BB93648D671467BE7911C2C3503F9042CEA5A4627F81FEAAC67A8
179B198B61827E01FCD75BE8C29223913CBD5CA0540E56BC54FA5B4A84C6E39EF6C201814E01
6C617ADB5908B36489BABA19FCC06AD4C1F5C1F812C269A8C8AC7E5A1406E30B42BB57BE3B2D
E60BD88410F55B41EA62706D29873C78CF85F8FD5250E3D1B454A3260F041E5A2DFCC3700295
A980C1251A21552C8CAE493EB5AAA8A61D179592D1FED156B9FDFDB979E971B5DC85EBA32B44
8B3B431306E425ED58138DEED7533E295EE14DD6E234A5703337D54F7390AC40B30A3E6859D5
0B1E0D3C175F764715EF5EF1C662426A823A7D3B4FA4A79ECFF1E139541B1F676D4CDD23BC25
3CCCADBDB47C8086D7657DC8284488144C6C2A616C249E1355E83BF0A67287F723E6583C1B48
9CD612DE80B8089AB6335EA9B13FE508961307F9D4562222C36EB862D3CEDECFD5B3AB365698
F2712E96886AD3194118BE196DCB9A1FF45415201EC6CC499BC77D7D81CCE095F763BD5C485F
D26B098D5FC4D746D6BA5268E0646473C2473962163102B3CC634AA7F7396C8BCF0B389B095B
E7FC2BF97EFD661BA953E05DBCD629BB4D8F04681EC34514D6241CA78E129EB976C3EFE92A44
B2CEEFFD483085CB8F837AEBA4CA8A1F7439566BA57A38C335ECDB5F9D359B9D280F57AF90B5
1E293501C4E770C212836B472E61D984F2E38DA01DAD1D0DA4D22D56909164D8794836C3ED15
EB3D9725A7D143C1B91EA3E814FD16385442A3109EEA2FC0C7F3BB6A0AD0F0A670717A31068F
6A5C589C6272A00555CE9CFDF69B946C6FEB3229EDCD650F7CD50B8D87A605D39A2A54989EB7
CE1FEC9D3141AC46FEA35B2523700D1B2DE93129AEEEE8B128E7F4BD4C84CD17362F3E3D6926
359D3037119095D728861BA164FFFB4300BBE12F3E96C5A9BAAB69293EBCD14BE56BF3B14927
E1BBD5341874FE5CA4ED6912022ED7A505307DEEA144E0A302FC58E58CED0826CAE2F50EF586
FE01558CA12B909B85549AC1168921D68EE90627313A946D6E77D356C81C7B04436F50763934
2EECB62FFC50305E89D2D5440788F9DB1EA31AC6BCEDDD431D9E30E5D1B65137A0DFDAED04A8
DE067CCEC8184779A22F637FE30E6DDC5B53AB5DFB4C10AFB47E04267A4C24E3D4B014CB2FB2
6B079C0011E3E6523A05C6501947BF194A13097D7C20F841874F87CF2BBA0732BC60DA4805F7
9B5A3DF518686B8AEB02718597CDA7C92BADFB0DC7341B127DE9FBDEE8E8CC04F19776565C12
2EAD1E8AAB1F6763CE1F9AEE40E860F7007C92903DFCA3AC93DD39FE1388E450E74F2610133F
EC58D5921B326121F4EA2EF940220BD221A8FB4E0A508F82C0F585E2F833318E0FF0586FD6E2
0FFA8229BDA3A6B84CC7683B7056EE108FF5B6EC293F943000B5766068F53814FDF2ACB20D2B
232455012AFB9C130A5260E05125CAFDA5C4F5B9B06B6C429484F5A5721F0E8C44D9819CCE5F
13B3C6A8C7BDD2C0756A0AC9F3BF98B0D7F29ADC4B04113DEA1C20263FB8D8F0D4EDD8993963
6BCE5B7933ECC23BC0784068A53085D2031F1944628EB742C73A478323FF0642B3FF86F596F3
9458EBEA4DF37D40FEE5DE5685B025310B622F7771DA09AE94C3F9CA763C106D24B1C6890ADB
919BAA169718EF7644FBC904C53B5E6916BFF6B2417DEFBBFE46A1AD8E113A83A675DDC656AA
BF32BA1C003A4D5A6099CFD99B5989CD779946F196ED976AB39A666911A310442CD7E65CED84
F1072CD70666150E4249078596716DF12B86A66453BDE2727AFFD46F7072F8C905E5FEFA8C37
03347C1452F36D9349174E5D0BF4C688AA62F617D0C213261494EF3B479D15EF9F3167839F73
F05EEA73FF73CF0510733BC4E2C358CF53E619CDD8194417D091365326C4E8E7460C19DD6784
7D66FBAD913752774A8CBBB702A4875FD35F154E08CC3322C484FEF7D623185BB09289ACFC92
7B885E1FE8AA9CC676C237444EB2BD8919DCC2B4511F4A9573503A536D0477ABEF0C05D0283D
6852E45D3792ED5763ED5959C92CF3CCB81DA37324A083259F623646D8005A77E3A35B7EE5FC
52FC36F7E799AB5EE36B5DFACDB1CBA0CB96D5FA4C438A0EF1219BC0D3FA3B03882821B99490
A5738D3A5230232C23F6D2EFA9ADABA14F1F61F4BDF3C29F20FAD3520CCF1F23C653459E4899
65F53305C563A75FDCBB9088903D7AF6E9A79949E9FC0DCCB4C0147C17C4B8F3AD26524DACF9
A6A1F76D7EDF4B8109DA748A7579C57A13B5FD513FB76936E4393F85F1DE216814A866273208
349EC5128FCEABC53D93DE84645D7501AED73D109164F016ABB45C90E6D1C7E7EC13C3AB22FB
3F3EF6E119ABAFC82AE5E1D371E28F941A9298F4C7F679BCCBC36993B8EED1F55CDD939B8464
FC982E84D7B8AA4BAD4768970360E9C99093F9C9F5F2236AAF5104F04339BCFBD129EE748885
5E9EEDFC10C891BE29E742535DCAF05DBE1618D36EDB5D8F40FB5A547EDC45FF3F4436595051
7A90197E8F842F99ACF3E8B345070C55E919FABB38EC8CDABB88F027F5F3D8774FA6DC149A82
E2239BDC1B20C06A301A272094DF3DBF9B227A9A4DD2BE83EF224617620FE776C5D9DC6F5404
7F2FAE5A3E15EAC83DE6A2D89A4D5E59A4D503F061D3230FD6BED27AB109BE4EFA0EEE9A0F28
9D131BBA1CEDC02E319A3723EEE98FB84BDADC23B095E487210A85CE4895379B8A7D59708A1D
D94DE02A4AFE3E5BE0166FAE6C0F5706817B1CB2DDD7E68A4799BEE124C8AFE8DDC7D7AFF7D3
94BFB74B9394F554875E6F83E9914B4D8816D16E62AA0C593D0107798CBA1CC095B463EC888E
530F5D253F94526457087CF9EC76900D9F11637E4A43CFFDF3073E148F6DD82A0AD5A4962EB2
376D74B43ED747752B9FE62F9FE20AD62A2EE61897D5651D6D61D3A64DCE59D84B3F36829A1E
08FE27C986B64984D472008DF125846277D7854F4DAF1EF7B066D049828F668E671C77402B54
3C349C4744677E31A24FD761F96B3EA4721F57D980C442F90DC92B981273127D061D413E37FA
8D08D0F473080005BB9007199990343EC253DE8340CB8241400BF43EBE83FC2F7D039FBDF98C
3AE5AF967A79CE311D1EA5B11D01C7D57F1ACE6D26185D47666C13429DA58B48537125719B3F
B91FC3F7297A5BD924C34C87FE0D007E31C06871D5FC0D1CEB088C4C1F5C721975597B106C82
18AF965069C536CE44A458C5F5EF16A5C32C039E91269DDCD6172656DF94F9E3A088D25FD071
6D3A105021076517BB350AA163E3C5C8EF5AA0F3506F4C6BFE34C363182D687F1689A3A8A15C
5A989F8373AF8079027FB7E8A703B38F0C163F89FE695E5753FD9FD572A62318A76D55CFA811
2CC3D7D5C0842643A4D5E322758E66ED28F0404B1CA2AC3168613B6643C2052364207431C0D4
9A0E6B9A248C7D4BE9E3DBFC08C4FFD3FC569EC96350174ABF893DA2A0E9D40A8D64792C31E0
F54E95188025B6333EAFF3DDA8C2999422C9CB849752D8692D10E1910AB2D0645E92A9B210F9
1118D1BD0A87283D69B232E5F9B76927824B667D5F4F42179FCDC67A1F77D0336E3BE2E86731
E7DD2E22A4858E7E644B02ADAFF107906A298E4315CD0D53AD4267F477F99B127B76A1574AF1
6F8622CF9D3E3039556D4A0650B48964E3FD1312D6359A68F8DECC0E9E50FAD4AD4E251E2E94
37F2144DD6194BA31C2354D64406E5C81432B084A60F03372D111341C87820769734D4575C12
AF6A37A97731F66B9C6621F75D36759571A0D112C61E0377DB49EE70417D896ED95AD72EB0C3
7EFE669E8A2D463E69702266FBCF92D6ECB6067474E644A4EF3AB31FBDFF2CD67EDCA97F03A8
FB8030A909C8C880299BD440BB9A83186A9A3710511A9144E98DE8940B4CD74241C519F61A65
895AD1798221ADC87108F46C4B0053F52392A252B5626018BD73665832CD0811FFD4C2B4DCC9
5C5120D4FA3C0EFFE00E142C26912591EE6B2EDA58A791CAE13CBF9163B1F51C0B9DAC2EB611
CCD11AD06C95EDCAE3671575BBDA696D80A767056B82E732155650E4FEE9E15C84B4FE2084ED
8A51B748AE344587EB125EA0EE9501CAF82021913D6C9DEE9FF6F8AD96A6E87E5FA5B9FB3034
5B710E5A1C24D247D30F31A6F701F5A722C92BAF496CBA6DBEB0FA393A87B36944394115B215
16AFC18078E1FCC7EFB63EF236E08CBB6E745B20205A30B82CA5F6F0FEFCEA72324D5CD9468C
86371AC76426CB9C935552066F94B31AE4EDE823DA03C6482F4AC709E3AD83651BE836E811E5
809E52AC7EE26C8182DEA91B3226FFB31238A55AF9EBBAC6066185D569D1F0CF8B38C4F8FFAA
8E60FAF2E56258326D945671A99C13120C58A3AFD96E306ABB1C6E92104D1ECC0EA9792AA503
8530CDD043191D17E970C3C166620A506AC8F146B86EC3865D8BAE3F608C6E1462A8FE2A89A1
0D975A11F6E77765290EFAFB1C83E0FC5BD8504A952E6962ACB49A8E53E65655D335105EB88C
81C0EF2CD6C89B7BEA85B1D891B40305BCD43E1C40A0B416BF91AB94418A02035286559B2DAD
03A7D6394EBC11C6C4FB21F2B1613B54875E25F0E0DC5AA60159C6D471EFE0630E5BEE4294D3
AB38C937337D828AC97BE700A9886724A988DF8D9408F944BF7DF2BF8A8F1993F4825E7DEAE3
071EF279870BC8A16CAFE55864C155C3D27FC05BE2D8EA1E5B7457185CE355CF8E7AF5B2873A
A9756D52909A8AD959699ED1FF56AFBF596B8AFCF8C400387FF5E2385342F4A0C6AC4E4E8877
E3953D5E76A51384DDA5DBF3E30D4277ACB753BE3F7D82F1558DFA45DF3043D33C37D05C6C71
ECA2D3FC5076F4AD5AF92DA5DABC856BE998C11E77D0D8ACCFE608F27BD3A547672C94DB17BA
CEA39E52307DDA77FF977E37412F1BD6D448E9E1B52AA45793EC8801C61A502DA869211D7D04
23BA13C969A16041412EF9F9315ADCAD998CEB7FB7B0BBB9B9C73A0A1727468D3BD89F56C075
9A71BFA25A86D90C645588376B8577BC84B96689A9C37AEC6C816224404C2445B41D4DC93324
6FD8E5F749C6DB1BEDE2D2859ECB2810E6A11731B529DCFE3A5BF4DC9212E8AD9EE6E7B76B00
2994F6DA7A9E1B6C07B6C50BEC227740C59C5C55D96C5223D143A8D4D74D8F2E5B555EBAF135
810E747E31F31930B69714AF224B91640A1ED8D605342B69B1B38DFEAAD14FF54BA9B97632D0
571618617D4A7E73A7EACAEF6FCE03ACBE9CCF07033044C027303C388CC0124EB79F98FABC15
6765C4AA062BC3A744FBDF561F1F184486029A0CD32F77EB4B4503A411808099E54CE3F758E2
C8842A5F9D9DA428B300F768A9060A5918879B0812D677A173B1F99062ECC2FCDD0399B62720
9E6294D5A1C77FEC78850580D57554B78A12197D5D792787132E7BF195905404688959D50B3E
7B83B932251B34ACE56518B7F98D8C87EA5EF9DF3D63EFAEAF99156720977D4F96074C85C0DF
B2B43B0DE75EB9D31835BC47E587B80682633BA582717D72221B9157433820AD6CE34035FE3E
3581187892392CAC6380FBF604BA8EB0A32637E44C8F1D946D5E1909ACBFEB34D72584183945
B33D82F4BA2B915EBAFAA67618F99BCBAEFD8F8BDA9B86D6709379F397B5A72F6AA4E6F11840
CD7B753D89B911988EB549D95F5042833C9F74186C527DCFC7D77CF316B77F73EF90007A2BD9
1F33F83C214B0E18050346222D0D51BCEAE15CEB82451B37C52DFD5BB9B8FCDA1CDD77A4EB00
A21641F2B4CCCA221C3AAA7FE31A11293528DD679908AC59A744ECF6E08A08FBA606CFF149F6
43EC607E698776F158923B226D3D0C4B913D0A1B94B6ADB1B84D66A8B16546A0BBF8E0DB9B6A
17D50A2CA6E67E0A8534CE4EB669A9F367365926635BA98630C2232C560DCFC81B306A70AF9B
CF7557BCBF89FAD07A97A14D3A2F8411ABE09AB4493184A80DD311E94EF8B41BB7159FF42F6D
073B965391990C2702D5D4E33A4E744E5621EC18A35D2448E50049B247A7892933A55EACCB19
9E3A332B8BA2D78556DC444463BA3065066563083DE0CAA2C8E6B873E6B92DFDF21705057935
28B9D731441FF20867D67FB7D97FDA8954A294B7BBD57F25ACAD226D08A5C1443B1B0274FDD4
E32FA1FB80E1E93C841CBE010C48D9F1A337D12487E07C4B2508E16FA684620536EE08634A9B
547481D3E40D179EE09E4A14B240371CBB577C24E41A916C134EB24564C60B8F9E4DFF250AF4
65299AB5784D33FB3BA56BA4346C5E193B11BAF18374DEE98D64E97D5372CA4D838B5F874745
956156A046D2A8A2116CCDE050450087F1DB4227C6913359B3B092E6CF1EB7D2656AD944BC31
809F3DD22F6B8000B655E1D05F1AA005AF71DFF453E1D29BDE191CE51D37CD05B5081E63C783
A5343DE829FD3128A8D0DFB72457C4FAA82C1BE3B662F204E656F659C6948CBEC38D85BDA3DD
3B95EAB3B041BC3F52E265CED0A9F9B9E5F26886FFFD004A851CE67154C45E547598D331ABD0
E44A48260C501333EB57650F3813859A0418B5FA806E6C4C8014051F34DB0FEC7CED33A8E785
9ECBEC875808C53D21FBA64F3736D7CA13F8FC4D14987E8E439510C6D46FFC0FAA618331DD01
6014D5EE1A51180C65BB67E4CA008F4AD21DB6BC6663AFD4C61DFE5761615D5CAB6156695702
5642C16CE5606E44D0A7F52C0140011575698ECD06573F9258C43A247D74152BA326EB1C578D
25D7EC4625540E69E5EFC439386FC381EE8DB04CF121C5F84FD9EAF0FDA90FE31353CFEEE553
13363A382E410C69EC7041F3D303949D4F4ACDED4BF1A1BAB640BE0D11B44012446D6F58AE79
405374E0CD5F05BF624B185CFB399478B6054D1624DEE473E9C52C2A58F10F72679E10087BDE
F832E8C8541F04B4678907C099B4C861B389EA2D702CEA96480C536EF545594F697053C9561F
FC9CD56352BFB5CDCC1831E0C8D0847BAAE46F16F50F712ED62351CD0FF01563FBECCD992D9C
F08F693D843DDA71EAAC2424A69F108C516A01823773BA6EF9E979419578BB95DDF07CE70AD1
B0218F1C50436D0B12007F3C02213963C6FA4DCA8E6176D5CB36C154E5521DB36F0BF4B4D75D
026F4B5FF1EA334DA971C530B79D5D9B606899874DF7E10539E0D69AA8241AAD05D703B2C731
3CA21E4F0F318F25279EE1F48B5DB71E95CC43609315D5C3AEF6EDDA5086080E5F31F9264E3F
28E8D5FA719DF9698BAE87F39250CC470AC10636A1A072F001030C97EFB481C21C171EBB2E7B
3DBA17D4992E40F01C4CE682B7BDC2DD56350DE2A918EE186B902440BF4A23D548AAD431DB6C
E594C32C4F8AFA96BCA7CBDCA3AB620D1083633A7D3DF6D655CE07AFA91BEF5C6336DB3C4E03
9099F0C424285612196144DFDB4813519247F53DB9977737EEC47C19D0E66CC522D89E0F8617
96F1453426838E75DC4BD85213A75B366A122A59B603F99F5E597CC52FB5BE96CEE3D24CF6D8
53921A81A869CD14A168D0B31EF2D54CD9B1ACF25C1EF0C42330ECC879A7A173D17522B421C7
730F5DE3B14A6998C9C3A0D1CE5326C0116677997DB1FF6112FC8237B2EFFA72A9DC8A82F706
03EB2147D0CCB152349307F6DD5EAF99563D8614CF7DFE8BB2C34133B1A27B21D5B903978CCA
368C23ACEF2D4E630460626A270A12898C8C212917D2348435AC7E834218721399E57792C8B5
4AAC664D75CFE9EA15EC9CEE6D2086179EA72EC62B6DED17AA3E909BA70A69E66F8645DB6269
D56F6579693CB6F781D81E79F3FE0871BF686390D86181E9990B7CBAAAFA2599E57618CDFABD
E3E21C43F378DFD416EA203EAF5D27818360A3AF5EF34C15E337E74DD46A577852C663318406
54CBE3901DA16518B6AF1E202DCC687AFFF5E458FA887ECF5605FF93A95A46C44A9BF48760DA
288808001107E6BADD29F9952DBC83ADD2A58CBB7500D9E2DE82BDDF32C75C56B5F4D17948AB
24610FCAF83EF121F2C2C8CC1FDA43A0FB3C320AF44102AF2C54F41AD7CA1441B0190B1A8CAB
AE86B1A1F8FD7A6C399BAFD3270E115DC8A348E4B87D9BA2762D95E4CEE98880EDBCBA7D6EE1
25D3C882B62C7141A9C38053C87345138059980D13390D0E5754FFA531F45A825F54CEDBFE48
D661839D141A2593AECE3AA3F5B280CC9219C1424773F927A1044BBCCDB55CA2AB9D9BF53E17
9CF36C33BBA11A7952B4924A01B74066478FE663C7E3C0D28DE8A8335EBB2D98360AD24B338F
3A78F3204E63B12E4666025387C041DBA2343FC0906885F3BD8CDA1E477415180C8AC27F1430
119AC825F072CD2B1932DA6280A24F2D17065EF8426FB9E8A0CEDBF8B53660D6EA05771E3184
DEC4AFB3DBB8F3CA65F7385A21CF096EB0E2AF36601CF5687FC1320ECC03AD922DD7026C44D3
DE96A5C7C49CF83F3BA471135D1DAD0D95B0D959578B32CD6D1B5DE8D968AC8AE143A6201904
06403ECA146BD3F49F5A801D553C922291DD45CECB168320E3689CE3D8E765E79A1C79A1199C
ACFED8554E870D3A5C925A06C611A73A94B2DA9E151EEB36F9BF0672EBEDB9091BDC50F72E3B
7C55E073FA8F419543A47B3A856C09FA4AF7ACB5487469C498AA97992349133E53BD0B9B9F28
1DEA1D8CA2533001CEE5751023C5BDB2098F3C0F3965187364D373A55B451ECBF1C4CF854F3F
EA7E86AD28683B9413BD9E7CD3E9BA8EFF17D3DE056781DFC163D6303A1E0A0615CC57E05DF1
9EEABB8A2D8243A11963FA523184A9C24BA3B1AAADA5A828AD34F93F36049B77A01E9B18DB4F
5DEDA9688FED943B6742038557FA67844296A8E622029D256536F0B7897568D977B951714F2C
92920AE1D9C1522166BEC7B7E4409021B0FE55D8FB9A71AA3A1506BB977615AB8E35D14CADAA
CA791B8BAF23A186B249B3DC395A5E5D4C7211CFCB6F5C2E62B849DC72536D9EA68720EBFBA9
D98BB5803E8056E65C47B12F92CE84FAF73F2A08F145DB269577AD50EE51A292BE6466C64FF3
A54848180D62C8247FA6032834F3201D9706DD1190729F9B27C76E7DA276514A309F7EA3DDC7
A9C84FE049F8093CBD5EBD43AE5E062CB28F33113664FDBBDE4A6A71B5B520D3365C57EDAC15
D5CE4BCA872623509F2CA371C13493B002A32E68CFD6165D2DDA9F3C6651EFF6B650E5998A9E
D30112AAEF280A13710194405D1A8E1144397010DC81C42ABF9A3CCF8FF86B2AE7777EE66B96
B14851F9B3D04E0D4CAC4E28EF33F6182F0B44DBFE0F93318195F107EF1213F95FD217D79FE4
6C5DED68C32DC9E7BDD876221BA76F9DC125DBBB279C493B2660321412141D7052737D069640
912C2DD41B2BFBF25D4C08B5F1412E0D5D03D9C4587AC495570D5577311CE9F5735BDF4B1AFD
3B1409533005F0C3D469DB0CC3A42DF1B4E14C24F8FD872DEE3E5C96FAA2A39257984DAD5801
5E88DF4797981EF81AC7574FBDDC96F23D149B86D91C546B073DA258C37AAAB56C304D423FF0
4F79A7D95E3849BAB07D28BDA946B0B54B37C24628EECE3A530E81C4BD1ABF42C2C4FB4334DD
9AAA2A54C4762C3512552C273211F94BA1BA92BE0F00CD53F6D3827417CC25884095416D06E4
D1F7C93E95C5286A7A2A1D4FF7B78927504FFFF0BE8E23DC3A306027E0E2637B75C992783F58
CD99E20462E1E73BF837A004D8AA81485504A885E367768B96FA3489CB0887BC0393BE41F70F
35047912824D93F38423FC214D93900BB3A0114C5EA3348B8F27796BE2A2170C214773AFA729
915A217CC634EFE5B84D29571C3D9C81386A104B1C190121B1738272E0978B9395B82C012E02
EB33D08CF4DC7B652AB5B1F49C5DEF297608936F668E8F07E066488B978185F87C8DBDF48495
C350138EECD08CCBA71F4169D1E031D40563A9CE29A5D61B94ACD7F9A1D5005CC48D6EF63D05
00D93F642A3501F4086724FF2359ECB661BC0DD6A7D2D86CD5CD461D5F9595B258BA5306A1B1
97862B022AB3CC712CEF618BE82738804CC732B962DE126F90136E4001C96DA77A195AE5015D
DECFD99FEAAB8D5B455E7D6779A70BFA4187D93CF82184272FAAEFD9B0EA0D1059AFD26E4950
B5DBF9FD7B2F18762F7C3094CCD04693EDA58141966638B0D9CEE738D718F24DE72E3B436DFF
A817C63972DAB175BAA8B037150E02A57279954BB8154E9CF0A63A74DE7CB941F6D0AE015DEF
A785291508DF4735242CDA96915F3A67D4711701EBC0CECAA19B46FA8395A608E45247E609EC
B6BD0EBD42EA2D0F3246CE18217C9A1BC700F110A58C7BC2D5BF12FDB444A9833295BEAE75FA
CDC855DE541BEB35232EB7062CDB0B1FF9924CB413643712A4AD15AAB604A7B6381F801E3B17
BE9153D193765BDC81199FEFEFBD75E0C33F398E59C178F586398545DBB7FEECD0F930475734
68987A1ACD82BFB22FB85270B33C8D493EC75D354B73BF89C85511F9D86BEAC776A51823A536
F1A3FCC7865ABCDF852D6D099892569D097A3D3BB353C897B082E31991B738D888299F6201B6
578DF5214DC47D57754E556E461D0031F10158F79A45FE590C93782C1C31C7D1E99D5054721B
2C37A30A4DB4C5F489F9AA8EFCBD2E9D3C79E8ED42BE490BEB93A24AA7DF83235E87AE14AD93
BDA7EABF5324A269DE9E28DDE8CE1BC4840C87B6F148F535303EA8A7AE066126FAC50619CA95
CD8F97EA1093E5FB76AB8640D1DB0F8FBBEAA855CCA4B8A1092D7549EC9299EA3226F8CAAAA5
9FB5AE22EE5DC2557165B35E5FF93C8CFC23891A75E4CA5BA914C5DF3B7792554E2F5DAA2524
D758C2723FC3B0DB13E8084DA3A02D377B5EDF21DA882A8DB1E73ADAC2640790C7BF46ABA616
9CA1476E7DA7E5A26F3957A660BF60A840DD5AC5A22D08DC20B171249C991BA075C6BEC67E2C
B95469AA10E5119B7AE4DD3C7EAD3EF9955CF8310939545F7102CEBC4952A951FF5022094632
FAA2E079CA29D8BFFA5C982B317D8BA90F3FD28E7CFD8EEA6D5E12B98C736BE819090E4FF30C
3D5AA1839E6EAF6EB6F9E6F9405DC5F23B8DFB37971F93D81DEF46A067E49AAC0A7E1631415F
77C16FE3BBED715E4882E710E2DC35E8D2CE01ACFCBB3B231CC2FE79556577668F8701F4033F
351606BF3088518D183EE31115135E02CC9C679ACE8CAC5F5C5C10F065F4B69F1F23C1BBB505
1C3A2D795A579CA2382935DA4F42D481226740EB6DA7000568AC566F633998915749A3CA5BB0
64A48083FBEDED9FB0FEE4B39824A1DC8999DB87C446A068F36D05291FC5FC2FEC5B8AC90AE5
A4F0D76FAC415CE9F3749444D0987E22B64AE6E47D7ECB6E57A092119B4724475095D5D1C9B3
7806D604C12FA1925F919658B79FECD3C37EB933847EA4B966F860CE3B0231054054D33AD524
63C9EED6959EC202CDB57FD462172A702A6F91DBB624AAFD91CE2A15653EAD69995059DF7053
0E93192C2DCEB9ECAB2D25590065C7596AFCD775843CAE76345F410409CEE5EAFFD5227DFF99
ED83FDED9301644632513106EE0D629DB1A70FDFF66421FFA8FB9742F3F7CF0C318455320778
62BE6C5CAC4385A947267EF01BA4DB40427C251B04A79B15CDBAD1C401DF4C94F29AFB8C8DAE
2FFE7055E6BE57E06E5A445645C889810EBB631A22052815045340B42DA17741DCCA003699E1
5F02135F576892F0D178142B1B0E4EF8B3CBCFB7BAA70B2D26D68994730832F84326E171A55D
AC7FB927AB86176F9D031693573BCDF24CAE1121E4D01918A938D01AD4F2DBD7EF824678C39C
B1E1048165589B92E5C7E8039604783E0843A302CF9A7A2A130B40DE91DE437EA9A15C3EE9E8
0BB1EC96081AB295D6BE4889BDFF20C8075EC3869F6EA17077BC0FD340CDAE0C22AC452FEF8A
0716B13DD52153184AC24D45677096CCFFD9F4EF5BB3FECA87C70F49824E01119E8EF4ACE680
9929C4BCE4E4D903EB3BA3556D3D50C301877D81B7C5CA451E46A3A3C03FD6E9260EFC2F4C99
FE45A406F85519383AEE330B3949E092F8BE6D889B1516C6ED1BEAF620262CCB3944DBB27012
587E50A23276A975C301EB4D7F053C9882761A061FF5BC59651DFB3BB6DE720EAE2FF2F2504F
674A5C21C04B01A78AD2EBA868B9EADEB35AAC457C141791CA94D9D8B88FEB5EC5747714641C
C0003851DE075FC0FEC996ACDC4E67A5490FE657490DF994497E1ED3454F6FD990DD8879B238
81219FA6C3D60C81392874E5C42CC174C970629EDEC059B2BF1F53AD21C32584A3E1251A2DE4
94F1D893B80E81D55F611B6B9D7D275AD513125C6267BE40FD49C0A039142535514013B1C722
C61430649F1455FCF3ACB2603C9C668702D64277BDE9199FA6F30E7D2EE9D74F22054CFE0F53
A2F93571D7B98EDA0991F789C1F77C4BF4DF2FA1AC98F5C666A8415AA517BCD14F2BC5B7C572
A9E7EE55822809596C43E43CE174612D06D0D71DBC50B207B9EFD53545E262ED0310A06A2C7A
E9EB63076703B29D0DFCE003C3177A20D40BDEB2C50EB37682CC9586CA3760426615E192BF79
865FEFD6BEF57358A1B5CAB36FD8119EB65E328BC84527AC6FF068048D7C9CA8E91C94F3A4AA
B0F98E8CE4071C54BDA52AE518839708AE69FE8BC5435057FA740130BED913EC885C8E1C9388
867DA6A8D04D3D4B7340404972D86848C152BE9B006E5C85BCF005B59B6FC06A6CD0BF3AF58D
F54FC285C0BBAB9564BC1AE8B072D1BF9CDA93DC4FBDB62AF566E3F18208D9D0721FDAC36A0D
85BDE800DE7051E8703A8EF1A1A46A901ABE065899ABF99467E328CC743E4732716B1814FEAD
78DC62B464D1E2EAAC1D0950C24CBDD2208AEF714A17BA022E68B739705BA7FA4078C46673B0
8309BACF993D71E0D75A75FD98E4FE574FC3B657F137D69284D94956A1404882668B21BF5C5B
0DE5B778B095611E54749886EFA8E1CB81221F5C1A94ECDBAFBDD10952AA19BFC789674B28FE
242DEAF9AD08C7556F67FC5CB75C3BA8E5BB27566FEB06850C7603F13782B8B5123822897A39
3A173FD1A30C7492A0EFFA096A182D6C0EE3B9AEF3C4C3E150208998F9EF4EB466233CF0BD26
4A87D1551A080000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: cmss10.pfb 0 0
%!PS-AdobeFont-1.0: CMSS10 003.002
%%Title: CMSS10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMSS10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMSS10 known{/CMSS10 findfont dup/UniqueID known{dup
/UniqueID get 5000803 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS10 def
/FontBBox {-61 -250 999 759 }readonly def
/UniqueID 5000803 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS10.) readonly def
 /FullName (CMSS10) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A07B684C079A47
D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81DE96489F740045C5E342F02D
A1C9F9F3C167651E646F1A67CF379789E311EF91511D0F605B045B279357D6FC8537C233E7AE
E6A4FDBE73E75A39EB206D20A6F61021961B748D419EBEEB028B592124E174CA595C108E1272
5B9875544955CFFD028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36
AD861319147A4A219ECB92D0D9F6228B51A97C295470093CA270C4488BB4EB864B4863941B97
39638D2E6F3CC778582B46AEB4E466D89D1C211225274356A4BC90F3274C6AA56E200249B7D0
949A3FD4185DCB3E5286910EFD7CA72D5D8E8052C96F388D12094B87D3705CE64459558CF024
667C0FE96CBB32B0BC9E51037D7BD62BE4B05FF99384E71D78441A79B0B1DBA1CAE02434A9FA
E46596FB86B873B1670DAE0BAF516445A0DDC127F8FF3ADA0B10EC30A9CC1F7E9248828B5E8A
B46C3FE4154B80A54128A08777F5F9B8C519C7E3B632B3476F007FA156E9F39FBE57638B4214
CD2BA79BA9DDA0F4C073AED814ABCCC2F7906C57A872C00E67FF03AC120029DAB92376422FA2
1C67CA98BCEB8C431CA2D3EDDC16BDA59363F49614070AA6859105192CCC6E4911B0B5D0FBDE
04872D8C8D84FE6B68702FBFC4682186E03F2141CF8FC8E232542FF446E00D34A7B9B9271B07
DEEED93C336653ED0F51DBA0DE34235097373CA4583095151642EEE76B6BA6714F37031F5AD2
ECA4875FD02F65D47541F5245588F0CB5933A759342FC460ABF99E014A85CE3BFF948BC38F3D
29FAFBD205400093EBD129A9C3AF161E7365DEB2905074660FEC703B6D4733A66EC1E78A1FF3
FA90863072C108109D4DFF62166EA04DD1E05225CD1B9A6808413402E9E1E81512B71BFD7811
32923BA7B5DB7032E7AF65CAD135E8D3C0DDEFE960DECAC693166D83DB2A6D819E40024B40A1
14818D7E943849FD90359B4BCC4FB0E2E0373A6200C13F194D735815ACC2E09BF4ABC693DE6E
975F0C27BAD1DCFE8D0A3977B48104EA6F85072BC0F5FD3E8FD8D53DBB088061BDB89249A4C3
E6BDB4A5A0F469D9B53E9B35A4A03F558DC93B8870FD28A829735E1F25F455CEA1CC8DFB4088
88DDBCECC050A84B6EBF39E42B4278F92E44C7A41FAA83CE07255B8CAA9F3EB43368900EEDEA
ADD836AEB6637EFF72351D649500FF3544DAB77FE191A5907B8E7C2AA4A9B18D857C63B2F412
79FE6E241EB946D9A67B3908CF7146DE0D971192BF7908B3319E6C0B33995F4E54BACDA90406
93EA19F24266FF8A46B93D6091337C2BBAACE6ED443A6A83EA4296E41E309192D66122FCF7A3
7578C45859854CADF75A8299727CDC5868F365497886C518C001A3CD4C0A5ED589C3FE9C1426
9A9DBE9A10FBD6B4B0BB6292975EF7210A6E4959DE1F3063A98393C63ED63D2EA31353ADC92A
C1B924678E81B509CD4470DBD22694E2EF36266270A78A350581C6AF9747D92BA0ED2019FFFB
DEAA908B373CA6A848512CD5A5607A8EF8771533539AE3D2F448FE1092CC640F699D73C6CB42
1B56C630574A11B5F48DF7DDF4942C82FD5DCC9A5BF9585CB7715053059CF73503C1FBEF7F8F
45546039AE0F3BDDE1ADA78C2DB36040C20848ADB4144E71B38A447FFC4F7683664160273449
12C9134FB30AD513BFB40008884FA98F1D25714121082696C877790A06A60BFFB6CFAEACF554
53878DF4D972841D7D18E510D5E842416F023BA13A40696FA534DB3B0601F45B77FB1CECAD24
0B8594CC95DF65BD45C1A73D2489D6AA84FD46414D992CDA7D307640017951656A3C736C73B1
16EA9F0A3304EAFA312E46A5152E902D840108C2A1858A95B958055A8080B97D612BE59E2D24
A5362EF77A83CD8656F8FB6519BDFB3CC43E068C8203BAE620255274AA281972A1EE85C37881
8532B42368AAA93A0C984D7380AD57F1B8FFAAFECAD5EAC17A07DA742E272D3C809B157D2669
AB88DA9EBB91B9E060DE7F275ADFE2FFEA18127969214795E7CD9C27CF902AD3EAD6C6AE0A4B
CDDAD88B6F37932BC7B07D9B43742A08A257DFB3FBB532077039C9CE90386F6C80BDED9CA008
A7783B6F702DD00D9ECFE3AD9DB0704BBFF4CCBE0B3C75401337CFC1A37E008A09C95C4CE6CF
8AF556487D6B320F3B3A9D36623E85FF4119D9EAF24099C2E1D9860DD2187E8CDDF80C4F0B16
4EC85E0B21901D017E0A20FBE2090DB90EEE5C9BD2EAD87725F7FF37FD8F43031494817603B8
A7E69FEE78D14AC7A66F16800B4B7943B7AED95E9044282017A0FED40F053EBFCA7E292B6C4E
0C8DB47B054C91C9A1DE4A2741E5E7970AE431494BACF4AA487BCA0080D9A6A3FA3D0E77373F
2D40B300D8936C71D83B3332EE113D087B38E1852312C21ED29C688FFD05D07629D2A48AE9B7
B6363AAFFC6CC5ABC96A996E478C37D745E5B6C90A006349A971C554C27F1D4F7AD1CFED3943
15EE5C7E681D491213E010A328BF49C988D7E490BDEA5A86B0F2A8C845A01D84751E1C4BFDDD
19045AFDC1283279D7AA6A1FBFD539D3A0BEC325597E025A4DE112CBFDB439FE719E690F8DCB
EDA826D6546EDF93EDCB67F5AA78FD308CC94EB375BA5FD443083665C0E361462AE4EC541ECD
1891B6A7B41715FEBAAAB658FF924A171F4504E503CBC27912393C0F85DF4B276DB39A174CF9
4B2D6FAC5E3E4F886B2C0D67DF8C502E1E513D934938831AAD911F3270A67FA434FD5E3D02E9
655661BFC2BB9FE7460E6AE8CFACF6BF545C41C730AC58DBBCF9AC8532C9E85D9ECAC11D0F7C
55288962DB1EFD351B56BF6F2051C62377B95FF0C93A09966EE9C6B792126A6C7E9995F2D68E
20308347FAB463F5F2DB2E8675882CEF049EF0A6406E1647137D9A46734D6E909754E6670455
2A41B3698B50417F2F3D4F883E3D3E6A75743820E689AE4818C297572E292B5761396825B38C
2E6D96ED290856AC6154C51FD90C3EE498E46295832503D76A22CDAC68B6B7ACB36BA3496422
936F48E1569777229320718C45F71C0F857EE699FDD1526E4A23418681D41940E7E0FA2C551F
B8B79495719F34C3774B229DF858F51AA2E26094FC181BCAE64EE209EE131B9472D6A7EF6A13
1EFB221E0F2CCC829A0D9672CEDACF44453400D15DDD34C4126F003A0E57455B25785E1CC9AB
4D4EE1A3BCCBEE149CDCC7EDE7B1F09DA1174F48048B568094F280F22590903F3B2C6A1A796E
851F71D34972F00FF13EB51F8136490C2BA6909B130CF3170820C652A1733BC4B69297BF1F5C
F816BCB75A0AC3520AC1DE911B72DEE5AD0033228B9F75961ED1280C6808ED0FD548411696C1
CC747AEF91A41EF05215DB5720AADE50BC598749C67770515BFF6DBC5A940C07AB462AA29662
1D7722C5A47AB3FA6305C55216216540098F86A1EE217C77EDC0BC3F6DFEC4AFA266019C20CA
AAEB381145B3588FAD0AAB944AD9F120DFF24168844BF92C279D1DF5923C9ACF10393655F33C
B9E7EB09A74BD898D07A31A107326EA219163FD6CA3E5A0985F74421F895F020D3D482444C50
B428B364487B0FEF8717ABD8D2232B4D35EB256A3AE5C1B0D2AE331A1E1D4D5DBC7BACF361E5
2719DA50620E5137E085481F632B861EFFF31AF04624D486130FB361F799FF5219E405C80DBF
B653CCB3C2E10934C95417A7E91DBE161727C5861A219A59470E6AF895C93AD43FAD820BB4C5
8C13678AE33D18C3EF8DB36A7270CDB3BA2BDDAC02B0C93D29829DC2B9087F070FFB297464CB
F426545A65B869B2661F5B7B6575119DA27D715F0A42DF446901F0F2A632AF5614C9EC1FD2A6
C79E676D80DACB9F2B89FC51333B4CA7CD98D8CE8B62959C86949E2CC2F530333C9A80879850
481167A7DC78A8A76DDE664449367B44F711D88EC7028E92AA59EBBBF050573B52DC80B0FA65
3E2EC9E5161C27DFCC86365648249518E72D8954BCBC439742A80ED68A7DAF601400AAB2899D
4851040C80A64C1E9D4C500F23ACEDC18C120C2E3D0001C37895247338EFA633428297ECE177
1E26219BC93237DDF71A9CF08D47B323D03E904243D1E98DC596BD7E7677B7D91C06474CEEC2
3C4DAF1B29029342D16121B3390C87DB04C65447C2515B12B9BCC3AB98B9EABD96361EDCEB53
655A24E4845604C560D1120F90ED4456BC543E5916BD60C986482FB77BBE9060121FE1798C34
A17A6AB350D85904106032A0A107649EEAD9B8F59E4CF5256B025440BB3713C2FA5638D6CEFB
788A39A5A5C51842A13AE24684EC59A6FAE55A64148FE73DFB3234F3912D21D68769C9470E3F
2DCEB860872E0556A5C72FB6FF7F7015D09B116FDFEC79EBF0544A0A989269B34475BF5E18B5
A3111496FB39BD1B25468B6E5B2EDD1624C1AFD3401A8F2086CF3C9D366834BFF85115EDEAFC
A61D1343367A1F5441246000D9A585EDBE50D5B5CAB2455D58B855DA66180F8E1EAF8A2D1948
DF1DA913C8F86F2C58365A77F4B867309629DC8A9237EF9EF4CA0515B2D1B7B7ED64589CD8D1
96FC057EB96B392EDCC860C15FA2622A484D32D4E2AFEBAD06946CDDD7B7AACA6C0AA5A41B3B
CC91D459AB502137DC8C5032C3DC8E5D96D210F702FFA73794B639D0F9E7AE0D2134546FA903
60B851782BACEE3C28CF7871D3F812CAF86221212D1D321A07B39A14CAE62F41DC83E7714F3E
315A7C63E2DCDCFB7F87DDA2BBC6CC6073839FC2F05C03077D8A0C9E7373849927450DF6DAF9
4B27277349A60073C6979312CC0D5C81A89A058584982D449F1E993AE1EEF449F1AC7840BBA7
AAFD999F622D0D1DD573326683C09082ED3564A9B28D29955F89ED47DD0EBC2ABE45B585D10E
85CECBE52F919EFDDD9630CF8F90CBF2F156EA791E0DBD178AFBB1AE3E72E08CB83F89606712
1B671F63869EA022BA7D11BD63381E33860317F70941E782FDADC1224AD556467935E93C6379
4E07F5AD57FDD0F6D859C82B562E80758E8A5C1EDD8FD2E37E34FA42E49098561E8E9696DF5A
62F1A27D6B1D0FBC9911A979C25E5A81181BAA04415306D755B890B60523E4A211D00CA64AA9
0625CBF5ABE06EE227128114B07536D79841004AA4A1FA1612A78DCF0F03B121B2870FD3ECCF
2C034578F9A3F008DCDE1D8354625DE2A97D78E6F85782F829F79B3E286480B457680BE7758F
C50CDFC17E5EE5FB3276BEA977E933AB1BEEB1B27B2F3D164ED5B9AF1280C482ECC5952F608E
0AD0D1F6363637CFAAEF4F0FC7CAEDA1EFE35BB80C07E0E701633CCA557BD478B70652C4874F
4AF391481A982AE0AE8F0764EADD9316048CA985B570DDEFEDE6A64EA15A80BE9AA4709E4FA6
DA9CC49B546955BFEF78320D67D14F120F47BF0C8568D337D6339CAC2FA9C51AF3EAB6AE46A4
584A89BD235ADB26332DB72F5EA2EE4DFCFEF41726C92C2CE299D54EF8A582E766A2C20F429C
A48858A0D61716B9CDF7D67FFE5D7D6E72ACF982456C52D0986762485E2E111038EA4C67E118
3A40249BBECEEF800CFF6CFABCB532465C496571541110DCEA197B20E1915F9CDB842444BF7C
C4A559262C89B487A99B92B7EF0087E6893DDBB5895C047D88FCEC1B29029368C65744591AC6
83FE613D8582066B600035FA0EF7AD4236BF1A4632A7B9DCDAB2F9B8F6FA6C8E3248841AB3CE
22D3741DC40F29A61E2676DF55882F5F41DE8BDA16B6753D8D9EFC41D5C6AEEEE771F712188F
4C92641B7C891EDB3484DE68D56F58E5EF015B98490C17FE3020479384E19AF8AECD888F7180
55B81A78B8B39FDAC88BDCCC0C1CD447A18F0F04BE83D2C6FC44B376E74752EA4ACF043812E4
BF1313703F8A9898D8C175CF434C97CBBA18197EC3C5A7928844060723A18F19EC2B26AE7CF1
C95E4D2FAD1A4F7F9DB3E4143B69B9E0DF94D313F41F045B19D8B71376A44E05A5B41F3DB38E
E63C24483DDE9F67A0102597DFC316A853C489B61A3CC7F1A1908E3C63FDFD4D20754A27D27E
5B17AFA895787DE85EB9F560EFDFE4EE3ACE1CD5222553A1A6B929665EF740E4B8724327B5A6
FBA8C1142CA1FDDDE6DC085764FD4C519FA8742BEC0795773D0107E832A84B2A4AFF55102C14
3B67CA605527E129975852C1F99B765E26371D7A47F328DE406D8710C0C7242D624DAE937EA7
D01056999ECC3A938AA560090C43EE5087B0A0C66CD9186E9C711A2916B6266FD68FCF8F6378
241A614E8D7A144F3D9B807850F98C4401049B469FAF5C3BECC8741D47CCD38332D2C399B40D
270B8B68FFACCD9405F619A897C865D3FA84DCE0F1FA9C54B9F8B9B574C9BA981A8F4D5F4FBD
A945D4DAA725DA6E1E24DA5E9803FD2769809AC972338812B14972D3DC6511903712CBFAF316
1D557B671DFE13AA19A942FE564B1EBF441B06D7B7C739DBFD9C96FDABC13A2B7397CCF37EAD
E23ABD4521F69FDBC483411452285234F655AFCA9BAA73BD43E081ED281383B57BA48F6BB92F
810E2031A6E96810116432D402B6EBD9B7208CAAE4D7E40AE1D275E49DBD4867A1DB946A2F7E
6753035073F2AD5FB626921DA8E6A2C70502CBFF72067E45A1A5223FDEB1F4790BC4D1FCDE1A
FBA9F190765298D70C89645D8F39A9ACA1563B870950BF90C8976690A5CA41DB6CB5A6A9CDAF
969876ADE9D8249235A41B32BB1A0564C55A46351366D61C6CF716ADE7EBD8CDFA6B217F180D
3AB24D7CFF8B49992D3E2A37BAFF83F757E365397602FCD60D70C65F537DF26778F0A1E7C2BA
A3C2273FF88151EB2A6DC5C9AF099C7A728E95FBC50D889B416A864471EAB31050AF8C6C27A8
EF177B3A686EDA6354FE931EB69ED9B39C7FB5ECBAF29F54CF5A09B36EB52D088226F1ECF75F
EC87BB35E00F89A9D6595584C9EDF98D2CD7735E9545EEFBAFC14F9474453BE920D964FE48BC
5D730D919105F890A84699149E36FEC03230E3643472DBBE1ED54BB4DBE53353A8AAAB4882F4
EE901A2CD474FB1A5AE8E3DA026B721260093742D27A4823BEA13FA939B3D28F3D8F5BD8A229
8007C0FC3B5A831F0E1294A9A8D7F224F188960994D967CF182F8FF283468CCAA2EFAF24F053
FA68BD9B16EE0597DD573844EF2FC8BA518B7EBEF00FA4A5D282F27E133F2A976C29B8FABBE9
5AFA8E82DE895CED761B0EC7E03DFE08BEF1F042BA8110E6218D065672D5B8EA61D140333D49
804A1B41EB9600075B4BE636483FF2179A06DEA1427DAD8F2871DF3468108E12980D03EA5F12
2A64CCB649DD800417F698DD1F38C55340CD07473B5D493BC6C68FDCF84E6FB9CA9AAD42FE80
10193C391AD3CD97C3DF8BEB06A1B5EEDAB48C92BBABFBD7DA041F2C587EC96D555457B5A2D6
FB52486E122B46B0F934B4D3AF86A1F537B108589C0798CD4B11573C1C25214C7118703D6A04
3902C980ED303B63FF038D0FFCE3C73AF6441404C013501D8621C14CA3C2480E6C3ED0C64CAB
288817639F43BC26AED457100D0B2D4117911B9A34D9DF00D636A28CE4351BA69B04B108464F
0BEE3A3791F0EF03E3FCA00533A4C0749B922BB56525D632B4D56864566E29588907BE31659D
43EAD3269FBF0BDF7EAC69D636023144BAF8A49410FE55D995C926F90A2FCC6B2C5D13228390
F92CC0CD581E9374C84B10BF5FF66FFA0459D9091374EEEE0645C7E93225359893C1E1020659
26E0D6485E15E8D6F488950C4DE682A76F8DD650811E220D2ED6CCADCF65D46FA81247C52DA1
5A39CC85C4B8B05937D9F3CB303F6CE7E0FAA58973474CF41ECC17BFC9DB2A957B1456491927
803C274177A41AF5C04147E58B44ACEC2AC0BA966DA50A6318931ECB40B97152A6CD86F720C6
366A7B8BA15AC4F03B0BF167AE6561779063F2C35A8AF47CB4C3AB05EEFC76F18BE8B54C5135
396DE53F0025FDAE047DBE2CAD2CFFC87FB822EEB92CDFD745EDE31D47925D8D360916491CDA
2C40EF9561E94FA09BD0F0F01A5C69B961B2DCA57BDAE1EF3CB223E5BE042533CD81A31BC92A
46D84014B8887FD7388B0404214B6C5205D7B59E02D03AB22710938B33114DD5DD3C5FCEE281
74F4A81959C7F2F52DC619649FAF3BC7D3F0867D1B8D78B9A9DE9DB68DFC774FBD896843C02A
91FD8CF44F18A407ABDF150C4220A12DCB47B390D11BC6D7C87ADA05274DFAFF33321965754E
BFF75B419BECF34BFCF41D02C7ED542D7EF045B32289A2AE66476610A3640FBD31ACEE4C5B9C
882916A12F81D6145E3354F4BE90491692973EB657B7833FE7845B0B200090B2530FC82FFBC9
B873C27718E8597D6707D0F521A52BAB856F73DE4B0C345E902DC44DA6BC40E08883BE79FE20
5F1C6C6DE2A230F1F4AFA78B27ED20C2D7A30F72987D86B494FECBAF1224F32B0E4E3CD18D72
C35CCEDEF16C8D4D8DBBA8FD526B451498EAE762E2E5F3F0D68C40E221EFE2C211F55A5D1F1C
058602F2D9E7247FDB345E8350B8F483C8FE939C71CBF9C33E90BD7054741AF374367BECFF96
94AE2F06973F46E8D6BE94D5DF4DF3FC4C46742AB152EABF469497D65B66C08056F90A5E1216
83C1B0F91C00318EAB91191B962D67647228929A92FBEB7B5DD5CB67ECF5494A318728BCE386
6CDC497A69D1151E8693DA446E98664776EBDB07D78CE919C5A36AF67BA04601C649AC46EA96
8596096263885765CBA3CCE6D84260936E204F735DA45C84832C4AFD284ECF25B6240F0288C3
4D806011E9B97ABF0B1CB5FDA87A272064690D7AD7AC2E23291325A17D6A9356A2968072C47C
3B4A24046F2F1B395AB3BEE6103523BE590AF5861B20E26105D9A975DC5053D8E9AFDFEA1BA7
45EC2962E4B8337B554A7045868A257173ED0D30E8DF74B5E73280E403235E6835D4AF87FE74
D7BA59343CB6D3F245E386377A9D0CE026F26BB682FE26B37A5666AA205307B31CA2AE48F1F1
1B222928B021F5E0FE4C96ABA558CCB318EBD50CFFC961266A03AF844A34C0A2E0CEDF26EBFE
F866C5D27151547A672A1F8A69DFEA2DAE2EAF5159FB193A582CD1E5BDE153D3884B1EB62710
0C804755418C41DF71AAE242171F23A70EB8F355C471B41BDCE5E967D5C2EB34998144B3E787
41CCAF62014D43B256A0640A7D434A1EBAE35F302958E255B9429EEE4E599284AF035C5C9DB4
466567F73192563402CF11B0D0BAB917DE7940EAC35B5303D2951157EC51245AA2E95770480B
F524F3AADADAF7AE3013B37AE98779EC353999A6C4839825CEFF16CEF91069BFE53E0DE044DF
67E8F40268A1C589B7F0F0227DF14904FA2D4D919A9B37D9DCA3A11A9ADA61E2CB6380FCED9D
10A6796D54ED5CF6A47CD0EF261495466898E7751029480B67F7B0156D8CF24237B66035D5AE
68183A212FC0B9E656F19E0FE3C575BD7813186AFDD68F3FC0C84702E27DCAE11081C5166FF1
0A98B3E4C78572EB54277CD14E5EE6B6EAEA5A4E26175C5D0645FF66168961B77AC2747B5EBF
41BCCEB1026ED83CFB76E9D3E098D907476F514C50CE3A31777F553D01B24B9A3C3D99E77770
7427537A22381847ADFCB0FF1C59EF46802901492DF48BB4AA39B3A303A729F4A1ADBB5120E8
9BCA283B112E8B1860B4B841A40B239BCB123A14D09013E76EB13C6EDA2CB0E30C7B704D8A70
F9D64953F996CBD6C68FF6215C8AD3445D85BBAFAF7E2025E74AF41A78FC043D48BB12BE7EFC
01DADF8DA245CADA98DF1D333C89FFBEE7C2DC49535405B8B909ABF623EAC6BBB03B0E523F1A
049A5F79F0DA053CA260B1ED4DD9F5EED6E5FD3DEA5E78F0F4756F591FF79BC444A5F77E1619
9D32CBB78541804A16E58B13F6562F86B2E79436E133FE84A17D911E09EBDF9DFE9D191A36B8
A08E06ABC5A95640671EC5ACCD584CB2E531A7A5962DAA95C9789F912771258C4F790D6B6ABC
02B7FB07FD785518D65D416D24853F38C4F4501A9ED97AAF85D78D53187948492349658C59BF
A558CFB1908B6FC193A77510403D8D45EA63FAA6155045AA5E3F719F77A9866FA7EFC0A611E8
94162604DDEBBD76BFD42BFF5BE7B5E28AF6405DE1F57117D2D4C8EE81909DA5EA38E5D24B09
C6AE688D1BC2694F117DFE6186254D2A8FD0B28E5DC478082FAE2A1FF621F085A08A5302C7E4
4B1E3DCEF7A38961E795F2280ADC711683ABEE808C069615DF51374895ACCA9817AA6C1019E3
E191852BB57BADD8734B5416E20508D39AAD1BE75B9F180CCB89C57B1EBA59714C75F73E2985
3D3BA66953C4F171D853CF63EDF9C2346B2B6659593CFB247A6B065C8FCAB5BA2CF0CCA2CD9D
27C2EF7A03F98E12A95FD9CD70A98327BD12919E5C8E9D7826B2CDBAD1FADA59F217A7107EBD
8BB00DF92FFC36855B983DA2873C01156CAB9E30A6121A98DD70EBB003F7248D4E28F6B16C38
2D044856947B57A35591B3701A4F44303826329C3AEB150A34C4E8CEE6245844A7206B455464
0906A46BBE4885C8E3B4DF2159186399C1E7C94AD6E11EC7289FD8E6D290DC1B4182322FF01B
1040F4D93AAD363F1073D0E1400DBFEF980723C65CFAC454BFED2452CCB9CE3D962A77C2F570
633A61188D97EADEF27D9EAE7E58EC34CAB3B0899B93BF6974E08D42383A79CDD58D1818CD0B
01239AAC8A9CD55666FB6BE037AA928F84C09129B1EABA3C4ED639F5155AEAA6800D614D8CA4
F8AD732FF887A761D1C91E98FE8D29284D750077DA61E06170637035F1E26CB9CD6FF453720D
A913609451DD3EDBC343FC1873D2BAE003CEB1B37CD6FF6410CF4D7C8FB4DB71BC923193F846
C699543D4E4152766591911CD216218B0BF355287C1B6D1FCADE5C133C3306603A56EE9E006B
4DF27FCA55040B6D5C51A1B4090FC045F2E433CF9879B1DAB4D6AA70CD70F666EA12C317911F
110F42C8DB7EA8C5D013B46AB1DEF6235560D41118509938A50CC2847C83AA6D27A8CD724054
B0BEB27364E749344C5FC333935EC67F8F97850422F1981BDBD4F18D0ED03A73E8067283CC8B
EE76B614D09D4560BA836175F8873881EF2DF228391E4FD996D64E77B0B6D4797B84A43303EC
00B15DEDB6E2E6D6B65342F9D4C1CDDD3E2128DEE5D806B7A301AB2C1E7785E9915D316D488F
4801596D22E02B5AACFF3FC6C4F691E5565C05A98AE33BC18E5D28C9778080A0849F14EB0E7D
20338B22BA4CAF98FD2C5053B811571C7EA0B05AAB75BF148FD850A5598EA71FCE8A415FE0AB
80F44D275FD42DDF49A77D162ECB9E2DB082B893E063FC115718B3AEC7FF002767105757EA14
2ED5F127EA899E0EA3F99B03DF6C58EC0E0F7809C81774BF8864CC28D7AA7555D4CDD68F6EFD
8CD8F226DF0766E805ACBB8E75023BB3B72F8682D4E1CE0CC7509690885D9E8175D37C410064
A4562D9C4DCFF13FD6CE8A2AC512D6A4A516F946560CFA5DD380A276F97932A510126CD0B8DD
9C632FA24B200E44EDA18160793082C220C2DBD313A48CA5AD74C16495EF015E11F3F15BB870
D112DD3F55E7E622223A3D2B21D2555B29B7EC845C52E8B99DA5483D11E611F9A6F0CBE21D0D
1769446A7AD493EA6563BB7A3CABA70BF5CBC0777831D330A16BF802AA8BBCAEA8A0F09CEF99
D6CC32EB44176767571ECBB58617C8D3C81A74655A6D19B68D965BD8D746CB0A27656D60DF1C
E96C3776AF04B8FE399D5BC7098C0BAF707D534E20BDD862E013FE006EF4140E2744364871DE
0CBF5009CFEFAC8517177A43CC7ECA89A9076A44AC31F1608E6B3E6E43A9DE92DC7C284B878C
01B68BF2C4F840A9F2BF03B2FB3CE7072BFC65B4197A1E5D71DE54C8504793522591E0057B03
2CC651DC68AE3A39E0416122A7543D7AD444C5470366B00637734A42F497C3BC22BE131E8ED9
F0B8100D8ED25F409B5A642CE63F61E2695D945BA919A1E472DFEA411C29A298735FB491F162
C54782E21A30A778162ABCA27A58D3939F04749E100B6036E7F654E1FCDEC53401A26F57849F
9F86A0DB812186DC3A513F2773DD3C0E4A1E75108A9F5FC9491788EAD5805ED094BA8C65CC59
619DD70991A6C0CCF45F046D818FBA90295184219F13BDB389BA544583AB4F07CF3D03CBA7BC
67F3914ADF6106085AEE88DED29685BF4A295FD7CB7D86D5BA89D8A9821340E10287354AE3B7
19169E4D647FE86312D99D589DF0244CD985EDF7EA59D36AF3211FDC73EC1DF781A8D09EBD2F
603978BD8DBF5B08AF002E5D2991698890987AD6A9292428B9368284115D7AB640136EDFD8F0
DADC4B943F65D84E8BB5E34DDCE1DF39B36E9A02EEE6DBFDCF94E2344CBF760B771842142920
D8D7F6DEBE6A4B3B4C92FC9BA86F9F4F16FA0F6D8304177BD9FBAF2AA598EDD8F7E8ACC928F0
BDB6540E7EB3B2ED049CB82C44DD97E48A3B77E53051AFA6F47AB4C44F8B96EDBF5F694A84E7
913514A268699A3026D7472BC3D9BA5078CC31F0E3F04B960FD7C1D962553EBC7BA67447CE94
54FB7293D59DF32D963C726B7F9D8E39C7A583ACEFAC2D97B5786841C1F9A60C7CC25281EAB9
AE14EDF3EFEFDB3FCC11762006BA4603ACEBDD4CD016754DED32C33F9470411FE2823B329C0D
13E1DCE7A86572CF8D8605B0CD2BDB4AED45585D556BC5386F8DEFADD760577DAB8EE0526578
8B73705274647473135729E80F838781DCC07BEF8135129EA37786123FA9616ED95F37164A83
5B78EFD5F86B94366226CC8AB09D698C011E0312E1DA79277F1B61F1D419E854E23E5257D9D4
7FA1ED75E3331236858032285E664323FBA61AE8ABB1FF7317177A7D760D995B3B90007498A0
C36F0AADFC8D56DF52AFE8FE9C5E01CA1928CCE393270723464DB6DBB78DB6DB61D3F278D9C6
5F45BF18F4DE6D5319D02FC196B58D0F6DC42C8D36CF5E73F908E1639F4D946FBD5717403B45
344DB9AD9449125E001B17A8D8E76AD103AAD9BCF45F88A6F08D531D1359333979FE987D3409
582347305CCF310FEFD9E099139D834D8F9B55CBBB767A17B4AE22043C9535B4027A33035A71
CDBA3C3F9AEBD0078777D06EABB05D966C62E980BC037618ADABDABA4F7E24A322446E2EBE34
A61EC4DE0D544DCDD2E5628526E1260743BCAF0141E9776237C8AFE2EFE78ADE8C1E53712A35
BC1EB86CF2E87998DE940AA73B485675ABE312EEC242A7727CDF69986D79485AEC7B63B1A633
A7F71D7E64B86606704564AF1285DA04514C4021A9E17BB256289C5902C155BFA0396039FD32
2890431EA06A4C4DFABC3346CA320D944639F86EC181FBD94A4A14E910EF87D347AB862CFCBE
62695EA4F0D61210E0021D63C0FB4EFFC287278C679AD81F289FFD7B773129CCD21893D562A0
EBCDD0227BD8870608A7B46064F9FF1873F31FF0A99CC2FDD5A7FFE53BA20010C9AC80CC609F
8DD539A2D05633BAEFF230EAEDD5DBA21733D85B19B785D937A31BD62D65AF429816B355FBCF
BC088E3465E2702EACCC5EF7AB85FB9A5E6B658723D136211E22CF5895C380EA200E219F587E
C1E380F35BE4A26DB6B0465785588AE21F7426F17A3FBB3BE7D53989B7C5EC4D06643F64BC9D
EC9C696733A978CC2E7326F39F1167BD2932A5244CFEE158CB142B4B39C0D4427FFB1CCE73F2
960691246D33ECF6A73A7B200A9EB14DE1ED8BBC7A16F9FA82E1380144B4526731EB57144CA7
EB79DBFAA3F07453A8D14E38B5369CB54F07E92495B5B45948035CA7A0C149E1F9154A0A08A8
948098B336BF7BE626C7E5A4B6E844892AD3375BF4BA1E8BAC0530B9F8F47D60BB312D808C22
FC3277BED85B781153D1D9EA3DDE5ED8F75BDDE696E64ABC6735A77DBB82AA6AA09BF534D048
34ED3E7D5793878F0CB4EACE362B27CD54B5E5B61A60104698E9BC23BD85CED4365A3C9DCA01
422CA61306E0CD24472346D9682B8AB71E63998B276F3E411FE94C0A0343CD58A8DC947C8AA6
2BDA2F31C19C32F2EDF81FA41FE6F96A1A61446BB2C3C4935947E19CF12F46D6CA9913832F24
ABE1246DA8976DD15EC80598F0DB346BBD1C71B2E1895B940123E01D7DE68E410BA561FE4063
221DFF0662587950A8D77FABF72891517E689C6DCFB175B8086E99AF8FE012A2E98623B6B2A0
3C51176DACEFE1966C41E28D9E337106A38388811709A45EB20ED35AE81A907E3751452C506E
53521DC536A0449F0D0D02B95B517DDDD4217D09749A46AA4A74BE19F45CD49A67EAFF78E634
9B9460C9B0312643CEC1D2D9D3384DD97B5AFB8A59C977811C31E90631D8A3CD05D4DF47C1FD
D36CC3B7B44EBDE8A59FEBA3D03A96CBF24A4B9DA9BBE01D0385CC0D5A26CB3776437E4DEB4B
794BD87001DCA80FCA385053A5FA36C79D9DDA61711CB49F6E4830B8D26B52E9619F91B76450
F23C626D113EC79899621EDF3768B2727910B5CA8BA389FABEBC3889971A33EA90BE8C774E5F
53A752866E5FEF4132950679B73F3DC66517C84CD48950E95F0B13DFAED5B90240EB7A365744
D3C0B1BFA466C0826FEC4F3B5784A773FC96CF0CD1FA9C742876CE8CC02A64F11178A9750F6C
95CD0DAC92DFF410ACEB642D2591D32F7B8CA0927AFFF9C4102ECC32646CE2EC6BE93930688E
A3C6A7529DF32A9C533ABD2723F0E285C59BBB5B10E223B03C5FBE70D16D5AEA91EAE342263C
D859A78CE283958619B8F3576CD7258B5B00518A8AE14F053B53E38477DABDA28AC578D96017
59A6F0B5BF03ED02E8D0BCC55FEA842AC24F1A7576A40B3A7F3D2F136977A51D2D2838EDB5B0
E7EC2CED4C94299EE4EBE9CEC792BB9D397BF4405D8FE12CBCC53D336A1A44F8BCA85FAEB20D
6C7AC1F3F77A3E23557ECA5DB8DB03BFCDD32E59074ABC3CE1E7707BF74D8A780E3AAD5476B6
5A67568A6C5F4275322F55F9CC444C27AF4AE577C104F9FA8E7F7026824744364BE119E3369F
45AFD618F97703151652D9E6E65EF68D4E29E72FBF0268B764F6C9F9A7AF482402964AB72AD1
D6A2EFFFCE4B08FCDF974542E263B3608A04EAD1565FD6031B3C825C4DF14D6A3474A3775F9C
AEE8E836D850CC3AEC0D368820CC2DC145C62EAFFC8A727BC75FE49A4DF62E25DAA64DEFB21C
E54F63448EE2F68A95A421FE46A7866355E112809175A64C89E4B9A6F0CE3BFDB923AF924012
85BB18A0A3503550E0420021984E287ACBDDD36F3193D89CB11ADC9EC6B0FB1290CFD2E43AAF
A730E8E2000E493F9085D674E221838FD61F189A94E3ED97D5FE5A1CE75DF593E32F92EC11C6
A6FF5E6287E8B6E764ABDDD2F389B4A3C8B8863A9AD93CCB2327F5C6A0160441E988AB871C05
22AFC9959573FFC64EC4A4CFD99E7666B0BA59A831B433DC168AB127204C721F6F21A2987BA8
BB2B1C0D3FFED78BCEA187201807F76F03F8F49A45453A1081F759630B5E4CE61B483F0CEDE7
D399847D33DB3C62267F04147DD4FCD3BB59D01CD4D6748D4F95B0AC1B1DDC760400EF68CC45
AF63B35B9A077D8C6024BB61249DFDDC8821C35ABC6DD9CE6FCD11641BC4FC6E8E6481A2EC39
E5E67A80E1536C75139FD26AD231CBEA2B5AF87FE9CC2E38625EE58E39BA272EA2FC426DFB4D
DEA2BB3131089BCCCD9E6F2CCA00C24B85236136D63F3AD1E7746A56B483FF33A97D54E9EB5D
2927290BF68A99A038ED2E06EB91571606FB6DB8AA849FC4A56941E6526D7B0FC7DAEF85F008
DB36CF5819B0404633216FEE831E5EEF1884547FB8E7CF1B9AA1EAAD3D8F7519C23A41A9363A
A58E55FB50ED21D88B1D3565141AF722252B98AAC5E8194110F5C51022671AFD94FBC1044540
FCDFBE74CACF37271542E119940EA52F3D110D2AA0BAD64F015550D27FBE011BFA00214D1756
3509FD8CF664A90E930A3DCCFCD5AB6C23247CE91C6683E5C398466A1EA8C494DC05C48F3CA0
E05800059B936A4F3E9E694D6D56493598D30B9CA870B03A3E8CE72B6421AD14F7CA7B2D8E5B
06E25399C83820249868586960A68A58192B5A92F2BF24BB352B9EA935DF830AD59EAC872468
AD73736164BFF2336B9E26655F8E0C60307E30C8A81539604063B6AA28FE29E015286BAB9FFE
332A98B3CECF0D87828D4C67608BE3205A1DA03795B7DFEF36B6CE0D7C9DF211838E64332341
0FC9D5BA83FA9A4659F2F565FEF47269A480726F83BB41FAA40E2094216E1568E16021D80AB5
D07DC7BA243975A51420EBBC9B116710F4B18312D742E73FB9897EDC3D0DFE74FF8A92F23F33
DC2F0A5A80A9560648079CF9334164333E91613EA15EC782120DB5934533D62AA6EFC2DE5F2E
14D69F732A6C9D2C55F03A3708DBBEA5A1C0BD42B2177139FBAEE1662204F515122349C2D902
70FBF8F0BED7784FB8B347918C4920C7F3E31D514B5C69E796DDF90F44A260EFCE887F3E9CB2
9885BD4E41AFD71E2C7318F6E7FF54D1784AB51467E13CE9642C145E4DFF31729E25E25A0C30
CD26AA4511F5D66A71AD6A8912F2E3CC6CC3EF5033877313FF55728CA16CCA6B27975BE65E5C
DBDFB2060E5E50FFCB82D2486DFF9576222C490331D9411E890CE5EF1EED2962AB99935471F1
D50508F0A5D777DF78A55503FAC53EE26F6BCC473919FA5C9924056F33EC16D30F3E9D80B93D
BA531E21063A2C7A94A5F35ADD907AA57E6FFE0141C26538521C59F40B6C93606790BF673A2B
323D5F42D880A1F0B628B6554BB3D7A4A0203D1C0CDEFD30D97739DAF2F6B1C50EDE48B32004
072B5DC8895CC70219DCBD137C3511A31612382A58AEDDE833B9208781B366329E2AA5CC0651
B3ACEEE7CE16B87BD783C2C06998DF71D6A8A945227F7790C4AC24D91628DB5FE3ADA9006D1A
06FB6500A0131F74585FD1A274DB449B0E28D762CB66BDD8A82B35683D5969A0561F6D2B2056
C78016CC0940048177EF464E4F2346C24078CD1643E80C4DB76BEE8D16B99CD99189C3889C53
0644D7803FC0FCBE6548410923EA43913D12A2245AEEE3B1740E451D6EAD8C558F08D9B23880
41BE6F6CA55F6B51B5C2C86C35CADE0A2D4A2A8A22512ACE44C54F35071CA9AE5D9D40DF61ED
23E5630E58B76D2E3CC19BF2C5D0A0310AC9DEE6F72DA37DA59D3AC2959FC02FB081A5D369D9
53657CDE864561F6A6EC5A2F465EF5609E6A0090A1D7F2C971EA519ABDFF1FD359A60AE11955
72463B8667DD5D7D7883D472644BAA3A60C7EDC2EB7D3F638847E5B025DB1B8D6D0A99FDAF96
5D448314789191CDFDE21259DDC338F1222C9943B3721DFA91E1206F42728A6EBF0BF10D0129
9C451C585D16B6C6E4459F9232DEAC5BFA3EE03AB06C525066FA4E18BB7FAF9DD3188E3A8456
128720A714EEB7EA8BB8B9C0D5D6A1557D41D730C8C3453C794C85579DEF3820E17538F05183
5199773711512FBA3B569951E3C228B9B67DD03EBC5DF7B92DB2EFC3A8AD53E121AD0C01245F
A27FC0192D500D41ACFF736B18A7FDA1164552AE036D3093F5E2B64285AC767D66102DDBBAD4
A54538B681BFF91B308ADD36F957D180929A85BF655BEC856EDCA932E2178DAAE61D152E2B89
A9DB99A2F809D7C7A99915E013EE392D5A129556040345A034A4A539E7EE2F92925546D047F2
BB2767BEA86AE9D820DE480B19A402408B14DDB89A19A66536215DE97F4706CAA24E468EE951
4CCF4BEA6689630E8FD9985AC1FEC5AEAEBDE842DEE007E0F69B3E094F1133FEE3CD76FD6D2F
530C7214BDBEA7580CAFC42D4B6C44CF601C23C89E9B2008893148BA91D9E3B4BDFC3086D1A7
4CB4E7A7CDB7F0B17AB856AE8D563F79686F3E9C4418D105F68044A3B009EEAC5A7A35C6D149
ECA6AD46C08D9F046F2D42E51509AAC12A997AD2C930D4D754B78DEE6976FE32B507F4CABEC5
FA862105B60FF8C8B7E0352D22FF02781A695DBD7EAF18197926E17CD64014AF3AE457687A60
5E3F89419F0A1398E3B7FEEE48833D4F41CFE8C4507A6758C117EC9634E7FD2DD86FAE562BBE
E894475CAD4A0DADC31F1E8CEA55F475B87059684FE70A0DD9C1EF31B8EA155D62C21E986811
6802E59641FBE66A2EBC6B222229FA0A2181BAE46632BD98A71061EE9E553A326AD49F99CAEC
1A1BC3B69894FA2008D47A4BF5FBFA57021785B5750AFEB5EBE2D73FA6ACF8B440AECC02BA90
231281739F1AC2EFCF711A9775B05477EE64F6DD0CB32ACD6D910CBA798BAC8F0CC238DDC0D7
ED38C963C47AC4ED8514928ABB812FB2BA4575EF6A6CBFCD0E49EA36B3B613639DF49CE11C35
5064314ED11E61FBD7C464656E810C1F79DA152E09F1121F8874E32BBA2A3A1273B8D9622A3D
E1A7E9E0B7DEC5798399716213E68C7371B89CD16F21BAF946795C131C15723B7B8923ECC808
02DD4D7E3CB8275B632E0D4B1645126C6512AE71C29B677E9ABD97DB87B443724FBAE9B3941A
BCF24C2BE82648F96F67691618D0F57A8B83B210563C3D08DCF157622F4975AD71710B43A924
2DAB592EEF2EC40DE98F78B8FA5767A4786C9020D6B309C90B90D340EC1EEE360B10EA328907
7345863BAD9D57DE493A4C404641CD0AB77440B877C9A4AA8A71DAF68E2F83882114A263F8E3
F856A44965744053108CA967DE7EC7A347EA99D2C67B261B348EB14688B293DA4EF834689866
747ADAC3AFA6E45D6E9AE1E66128D29927FEB431CE480B3B8111851047BC261372EC3F745E86
CE41E4E18F94A7F303A504F938D7A48ECED8B19E63855AB3D6A866FE6DDB566EF5A4757F7DE6
C479C3F78AA41E5E9CDFBB6BD1A792C55955E1D06531592800CB7AE6DE273E007184F61F7489
553A4B8E70D393AA2669269340DDF00319A7F815BFE5D31AF121ABCA626588B8B30D98963120
C35A0EADFF175C1ED1EAAD24C5BCCCC0777C1054DE03C0CAF3859AC251D14776EA1FF38CAD40
B80A5F7A5781B26BF9219EF450558E8F812997CB905D5CE6EC8A2B6B118100397235A0B37D22
9CD31D5E142AAA1DB5A655B399A3991B57F01379A04FC46F864DD9F461947B9B37D21481BB42
DF57DF8369C6EB129E69C827124CFD253B65E0708986C21884FE96E5E9F82615945972164EA3
85A96AFB21C08FDC5972621B6069BD012B2463C921FC91C83137157DBC032A507C7A3868A921
3E3BC2936F9E3DAC2E4065A6B215BC0EB3205B4DD72AC548073849DC4411A90DBC78E742C3ED
A59153C4D7C426F01B988B81BAD88EC25CC04BABE939C8C48541A90C09B3289C3B6C545283CC
2A1F65DA210CA2E3BCEE7255EC71664D83A81B6FA6EFE6AABE7F58F5190031350140EAA48E4D
2C9F09A4D4907892C79408CE801E08E085A05E101935B41B7FC5C3B644CE4BE12942BDB46230
20C4B975154D084F1A99321FB6498F58A3C87AC15ED9D1A4F7C86C5643D32FE5126D8CF1B9B9
A6C220B6FBB268ED3F71494D4B498407B23EB057B627F7DD790DCB7E5E28B9734F82EA1D6F6C
9FFDA609F45A35774645B62CC94D237B505B56801FEE39A92DE3F30940B90C15BB537AAE9584
9A250AB04FD3C13614782FBD7D61A7D00DF1F29859E9E9AEAC9A780F4822516D16712EFDB3CC
2706E706C1665CDA16C8FF778C8399FD35E0FE10AC360EE290BCD8A13B66A3284EB718886E4F
F6A954482DAFBC8B85F75FEA9F99A3E011E734E77708C1DC5904F0CBD1C9A64C17ABAED68148
722070BA45AA98B0F7DDE929D140A2F1BBD3D1A3946F225390AA88EE6CF66B4C7651356CDDC3
A0F1534F53CDFB5E0D5BC58F462220026A57015ED6CB025FF010E7B1133BB98D74B1D292B0BD
060B3491EC667BD7A41ECC73B42CD734030486E7FB15D51D4F391320CBA0E81C17A09247C050
46C1AECFFC52B1AB48F0183BFB8C68C38CC16FC248E35F2C7717B6AF7C973CFBA95C51EB255D
55B10715AA96874D0E9C56132600823A6293062289BF630090AFD344BB22997EEFF22BC174E5
38B5ED04A2BD3DE4C103FC54ABD92968B4760E25CE0A4879E045FCDD68841DAEFD9633FF7F16
8D109610211A37ECBF8618F0DA8E5236A344606CC5FD72E9A92ED572ABA88FF3D16EDEA353CB
EB7667BFE029A7EB3D0042E3D8ED6F50AE60AFDE1A6E6F654564FB38C6CC51703D26C7491AF6
5AA482FD47C1AB36EE9BA762FA9E79437A1A7AEF10CCDADE701B36600FB86D3CAC143A966CA9
BAA9A28B9A2982A0965E202E034E6137F88ACBDE091A255512B238ACD19E72E0213228DE2914
D81419DBF54772D12224B45A08E073F1714BFEAA527B541770AAA59C495BDA2E8E157399860D
C97B67511F8312BE143791B87DDFEC528EF1F1A07FC214E0DF12F8192474AB4B910BD2B61080
1B9F9EBE54F09F53B087A3E528A9943284AAE0C2FB9EE0F951E304FC78EF85C0B5C6E07C4496
3D99A768C7EB57A1D87266708AF9A6AB5A4748F91763CEE8ED10226051D066B49EA4F465BBD8
13C3E86A4465628898FAE6DAF369032A0BDC08509C45719CE08C0E8110062F1F55446E32F1D4
4D9C2713B4752222214537C7033E987CEC7D9F8802217DA63458640B386DE4E3583C45B98125
45C5F1F6B16DABFA818208292949008797AB1C64AC5E79BB1187140F0F834910237A70E411C2
E5E0FE7E952F9BD8F88393051EADD46FF165FE342BBC5D82B5FB5A5A454BEFF9AF80484FAB25
DE886DE205C2BE579CB058308114A707F87ACA69D0EC7FFB59DD97638AB55E152ED530D715CE
B9D41E97DC36677990F3A9FB6C8B4CE4CE5A22C8DEC983AC2EBEC8F846A56D5C85FC4E4E40F3
2D105A25BB4CE66477A19D2651E617BC8D00534DC7F2F69873047602C5CF994D83082FD994CD
BFA19165D22C223447C0E05B8F5F13859DAB3278CE800CB3A2B11C3FB99617C927697EB1A90F
9FED22A08F8D47F10800B8E7D463567F532CEE2D8976F78591E08FCD17FCEB209A25A6806C00
E4F510F60C3475A4185DFCB22DDD3A9544406FF614AA09139DF7B015C42DBD29CDAAB8AF5E50
0708EB052AD66833DBDAE1A6B9FD91036080C9C93BCC12EC8D858D8D0E2C05CEA002648DC557
31AC9AE4E0F68BFFC1CA2A70CB364894721428AB61075005AE410A5EC8E817BF4FDC2FD998E4
05A987C4C442F63AEA1B1E13C608AA764BDB513F6EBF7F6F6077679F16575C91CD3A35A184E6
F40CDA9D43DC663D9F8F9EF76C85C2F33647CF6277C3809B4C82B0C52892D67F6A48D340CDBD
313181C1452E3D996651A3C71B68D049978C6049BF409E50047B7F387234FDEB104D2A60B76B
5DCE3A3B05BECF2589CF836530F60D57253B8789043F4E90944844997BABF0B2D1888560ECF3
07C127B8CBCE6DE435C3F555B02A146BAB58DC09399BC05C5E2D84F774E545A78FC30C740343
2CC1044B91A09DDB93BB1E8D714087D03F2CB45B38DA357F0E30D9AB91D13F6552695F80945C
270D5A31A81B24AD8FC8A6F63BE77AD772F948F4FCF4B434ADC47C6CD3E44E0B7C36609B48AE
D9550F5030BBD886A60FB27920221159B358672456C334757C313A69AB307BDE7E43D55ACA0E
2E4FDB09D9DBEA28B97E77C91CA8E63E1876D55616638A533930D4FF67A04277EE7EEE0B67F7
0C93CDF1B51A1B895B614726DD46E1622DCF65586ED82C69552165B861FBD32895112358C976
68E07373141981B3288B9DD246A58968AF8AF84B24D370135E63BD991E098DE1D9DD5C1C521A
9588CADBAAC0E1F36ED2F1EACB243D13DF64244FEB2E3CABC925D9CB087849E36ED7E76CF0CC
71F895DD4F2684E3ED31B46B57CC1CF025AD31B4616FCFE577CC0A7A5C97F2B6527E60D1D78B
512A44496ECBE2DC0409E960BF1D99693DEE15E31B6AF118F88C7533889766F1EDD02C1FDF0C
1884CA7C228CFF507867AFDC741B6381ED2DD74B05C8F9C0ADDC376E224E02317CEDEEC91478
D4D8330D96CD8F687E69A77BC7C55224D02A31E1F5B4F32CFFA9F9DAE2A0EEAE4FEC0B1196BA
A339EF921DC176876B6C816CC90A8B1403D636DF1F6BA0D2E7ED763EED28EE06240AD2345AE2
C1DB6A5C8B3877E9246FE8415281B9EC359737AFAEC4F017DC915DD3DC3FD474D3948549355B
2CDAF685DC38099972E4F56FF10201E749E429AD25E6EEFB5D2439B834D0B1F0C77B57DA17D0
7908B5FF583155970F0FC40094233ABB3AA521C7DE481E5DA31E7C32040EAFC5D782EFB9781A
6817A6C48CCC8464BB926F44E05EF3CC24EE33BC63E5CE347A8AEE2E21923FE86965A3EF71ED
B22B3478948CA691713411ADFD2D86B10866B9DD64A02FEAAFCC9E08937F5B8356184088CB97
75FBBEF1DD97FC0E8550492074F65D0EBB40A622CE26419F7BD5EAAF3491354C242CCB71650D
89A5269BFDBDE85757887423269A4466DA6688D1773854E8F75EAF51B61447B4D4AD31E7B1B9
DEAF0D5C52BB3386F2696ABCD3766A40780CBE0D6E820C9304F6C6DBFB9195529B0A57CE5C3C
3470761ED9D4B49B6D1F8C306B9F85E48377BAFEE44A147309654D4707969968A53637409CF6
5587419C70AA921934F061D6950213A12128E9C5C6F4F635B11396175B745732A719CE6E91D0
1DE8671C305CE87D0DB08008F303A507B08B9E9C8ECECB4FF5089DD0B3977BEE4F07CD581D98
5C07C45C5ADDF0821009F5687455997388BAB58529ED9177173F413FBAADB5AF88AD94B5557D
10378BC1680F897EC94BE9843D1725C636C4152744B17F81E745750FD8F158D501F0E7422F29
7ACA3D3C9C7B7585D82F82336AA8D2049C73635681A25CDBA63C82D1049B30137EA1D86421A3
3DB1D92D21C5C094F389AEEA60E4098D5CF3172E4CE35DCFA497EF92C1ABC25B8FAF124F457F
81156C9203D83D6DC396E29EA5CB2B46008B0B86F52513D004DE07CC92B6B0CBB0EBFCCC2552
D8B836655B74719E9B98EEBC933C63E2C3397F8DACEDA8EB3B15AF370A488E0DB5AA7D03B116
F79D89C48FA9E462936639A9A0722DE0587194EFED7531110493932676CFEFADB3C4D38C691C
E5C379D73581AB8A72B01CDC79819697A6035C641B07F5FE18ABDB45CB88BF820B805BFA9C59
F77F9872FFEF1A8BAA2AC637D08FE5B480D35C173B3976ACCD83C6A4F94D75C75FBB72B91673
10A6117C09045D7C956EA72882D47166D738695D84C24F5EA7A433614EB8F82340443009FFF1
796FA6453D26C6272F6033D08AA6D498038D0ED98EF867649441BBED4375417D3307BB5F212E
9C7A231093091FD678459924C5F685D19D63300B1BAD0F9F464EB1686C441827C393CF4FBD33
CB8D14305B7A9AAC321B53C8510C429F700B52B8758C74B54DC9590DA695E6A66B008B855D07
3A4BB357FE068DDB3BDC6C9EEE9F2C1A557C7F8262F1AD59265C984D3935603FAE8008AFEB27
20F4E7BB995DA14C5D191FB731D10D53072C712AB989CE4DDF9F233533693D9426CF6C314C06
E28157450D357FC7029E8E5EC28E816573C8EC481CF6BC41F06633E619C8064BEF24F88ACA10
00977F966B943952B165D917BC222F85A2072417D43F1C318DA67DA8C44596972FE3C3534764
6446478989CC22D2B06EB88D86A8ACD5910F0675F666E9AB75C317C249AA69D15697CCE69A4E
CED3D1A806D80B17471E6F5CFF975D8A946C2F5B45FF242DA493CCB19D9863D02EE918815EEE
C3121D9E9B21C6E60B6A3CE8D779A421C8D611883368A40C23317C6A6F914A08B93DA364C525
FC71909958F17A46FD226316DCD2C653A20964DAE9DA9D9A3E57A9262F8A453C0D0518BA864C
3AF18F37776B4C93843278304E61158767D9CB2B71494FB0CC2CD574E4122CC2A4842FD659EF
B9C73CDEE7C75CD0E99BA88C0D6418BF713B0B003E37FACFA85AB443C6ED222E5107B15BF29E
0010080C12CC74EB5A5C8ABF5B7D0ECCD71D707B38F55E07C68A123FE39ABD079460CE4B4EDC
29C3C1250BC36BD920DE6A00935AF0159F23AEE322286D6C6F0CB1B7ED1C8AD35913F1FC61F5
B0C654AFCE18A62A120A162DDB79C9197E4D2ED24D6964727CAE9BB5BF72AA94EFDE0CF2F3CD
E7FFC1C95BFF217C6F17BF87BCF5302E28B776F31A77BD3131DA6A2CD38B2B8B842767E5F13E
6A103839BFAAE0D7BE2DB886E1AB2FF58D3A64CF936A95779574939979468A906F8650B5A719
F1CF6366D1A0ECC7A00988D94335DDC69329B3C52A85E3A06971077C0B862CD845F4C5B8B071
53FABF9859F2A016AC91C8F1A29902B2F7F74E54AC71A4728996ED79E6D6AB86773E2DD828AB
8DEC0DF7FB595B409C51E04C8886D0D779CEAF56959D40910B270FAB5D44D88C95B1D5AA9B86
49605C193DDF07CD14CDF426D95E8F76182ED6FCFA0CD0FB92307C9095DFF4DE3B404A9B15C1
093D94852BC7106D68981E4FAAB0C1B76FE86F8B41181024C63FE625D431D5BD9FC9A2DEBBA4
7C89EA4B9BC9F284BFD6F33A4F5C33A309B9D48C976695A2437D7D01224FD898A2C8210D5C2D
A39507081AFAB26F055B06981E26A08E6233B48C108F1E67FD9B6FB3948163350EAEE0DF8DEE
BA1F06A2EC3D9BC2CA8191BE64C1ACFC81C3E05C977F761E571160A2B6865C9DF69555C9B712
6C19AA4DEAA62FD4DD25577C169544F31DF305B3A8F2FF99320A1E0AA8B35CAA9813B6E81123
BB802212AB1264B454D35252D7197B35324A2D053E54F08A1335BD4574C98496A074780969B3
5C8201D68A01EEFB767F8C6A8AC70148E621331D6E2EA79F28AB22FE63B465F91237A269BFD9
DFDF13579DE476E36B65E820A6875D5F023DF6009B6987288CA2B6B661B9E2AAE6B5D08A870E
C1957F504BE8ED7E696226E5D1930C3989FDFD40920C8F23788FB60EDE6FED45CC4EAF1106DD
F33802C3CF40F99AB25A2DC01DCFB004F4E3637161208FB6D5447BE0C2D6DE59B16A1A201F00
8B8E2AE10E9A8E393EDCCF72935D41049320A259FCA2E615FE777115B757A647E04C7CA66481
7B781DF9FDB0B1EB4FAFD772A6CD82125AFE3ABE1ADEEAF226853FDF62D4A2AB558670E2A67F
50406D05055DC3E52AFC1C84E5B9F4092E166740FA852C9BEABE33B849FF94D3E5342D6B6FF9
1E09FB2D1112630657631E8FCBF5BC6EEE98DED84CAE9211741BC5939D1FB75F20185AB55CB0
57850FFA9498AB03D9C87DE20B8786661A9E0B634B8B14B99B0964992349BB1639CA3A0335A4
BCD7604752B814D8BD2A1C555955442A6B40EF8129335C470729E5D2D532724C7EF0C110AABC
B28AA99A8C718A6E233C2BF4F6795160CD5964C67DF66292D8DC44C9640225E7FBDE6DFE43FF
CFFE29515E02D17DEDE94AB4A51C150212AB6E3838E941265DECA7396E683FD4CED72CBA0368
6372569EE0F69C5DC598060237B291302D9CF74B61D696B71417EADC4C8EAA264FA1A3EB2D44
8FD375B88A2C4F84210507C347B057100BAF86E70B622EB5350602E453B93657A9F3DC002B08
1D10072A13A83DD40B6A2F329C9F9A9D81525BDBC7EE935298F82782E526731398885E80CA4D
7F568C71BA194501B0BE07923E43BB61AE2CF46DA6CC1D18670AE00EE6CEC746DC204AE5872B
558D2F354D914B2D726E3F20894A70D327E226B5110B8C8C904F8C06180E8C583BEFA1B31C38
7CEDC3A02C5968675DA7FA93AC36ABA94950552E0FD212801358123442F40312A3CAC1D60D09
5FEC12EDD19308DC2A75FA98F331EE444680A3B8D8059167063A112D98C6AF7356F8C5B56012
504779B53DB23271590A11C413CCF1F9A0033B96BE1719496297A57AC3203D291DDC86B7CE6A
E9DCD1263D582A10D4697F4BAF61516F52BC70B7283EA82C1F858ACF3FBF566B4A0871BBBC36
6BA424E779FEB1683F4CAEA9E87498BDBC4E2769F7237F257A65F9956626E9002F432317FDCF
FE3087824198434173ED69703F03E227A01522E941B8FA5108C987618A8480E984DB88C70F45
57ABEB67109110312406CCCCFAFE44700EC4BF98A692D988D8D1D63513AF4515CA90858D98FC
A75364AB88395D9BF1DB938999EBDCD115D4FD2F8EDA88D40A3FD0AFBF77CC25EA19C5087604
8B42454762E6DFDC790ECB6C52868607DA423BBDFC7BF07DB67B64DD67390D154ACE5A058C41
3F84C448C903B8ED2AEA26D74BCEB89735647EE15995FE47B8E7345C4FE3461E01349101C3AB
13427CA7772E7C6E5D11A02EDF2678E07CA21B63B38FF2A34B0AB2680ADF67701B0D1D2DB41D
7B1B1505B3F1266F14E8AEBFEEA43B113539EBE8966CD812E705D8AEF11A58B8797473328EBB
B61F63C8E60B6835152AE0362E5052385A454398E433BCA2D62A8F7E52B238B102FDA34DD55F
895BB4B692200759101410F31EFA3D5DE37966C268E9BF4447C8AE253C240AC0ABC1949947B3
E6EDE887A66EAB5131465EE73C908963D4AC4FDFB71E1E1FC4F51EB7363B0BE8BC5C34FCBD8F
76C51A99CC9420668D114E64E3B0C277E344FAC010C93557D3EC0BD4F7F43EE4C49F3C8869F6
02BA6F76800F956F309EF38667B3C49428AF8092713FE1019D9581D7EDEC2DA87EBF9FBA83BC
4E1FCC2C0AF3215DF945F862436B823B1A2FD9140A24762506085C7F93E7B6BF595AFBDC444A
8B493BD0F4803B033D94DD3BD7BF934C0E0DC06AAC3DB2EE21A11A79FD3940FDC9ED876A5C63
8DDA4F7F934DD38EE01FEA488651683A687B0C5409E2CCADA703887A06A5D1D513D1E7C045E2
A1BFCF3F4BBBB793AA92089C3FECFC67A4D594D62720F8DAE9A38D99D925E6C9657491AE0E5E
37C527858552206F96B3D558983DBED1D0BA909EC99E655A913A394E45064886E243C1F1493E
4D6069E29DC0B91BC6B13815638CDBB54EE2B97F31DA9E1CCD8D24316F6908A927847B4F3663
C5AEDA4D7BBBCF5537A1BCEA6B13992FF46903C5FD1BD849DD54C097C06C92D084DFFD006A27
9D67018B3B9E06A284A5FD4DCACD7BBE0BF545B760B9E433E1EE2C986B9736786993D5563410
61CA3F2B685197CE75FF37D5A50C32EECB734A311F01C2AA340557ED18BAE98DB3BF5C2C33DC
7D7B602C5594A100A397958B81E04D297E6A62EFBFA050C8854F9220AC1CC6C9286F9ACB9CE3
9F732D98BEDEBD2737E9EFABAE6F18F4B87DE17618D511598AAF4F289FF859AF6787CAD1978C
3D57AA75FF2D787464BE750C751701BF11129CC5F75C711C53463610B7D0C831E8AB40DCEDD4
E56F158BFE526EC776EB4E9AD4EBD1F7B7A648E28B17A14A307237D6F2E6B1C603F6B4CA4588
D543A1815D850390572D9367D9FF3F5691712DB09BAECC4EBD23CB86A104BB6BE01A284B8B97
EB1F61D5EC484150B2846CEDD4147C35E8A1EAD473B79592AD2BBA95D9D3AB7CB3E3F3CFA1FF
D7730FA2936E27AEB8BD7964F341CC9B959C8C91A304B12B986459753EA0643DC0D1BC0F54CD
9C726DD2C3F039F8BA14BECC6E475AA35C5E30A79F2EF4EADACF680E7DF8F3AAB4F42512A03B
4BDCA39C03FEC6B9FFF6074C0FBF9EA056CFC76EE046FE08F2678ED59B1D7F93BE909C4403FE
32A406B641CFBA4D7E2E24848C7B741243A699B287835635DB0D4246D5E0B4C30EC8E4D116CC
9E888C9DCA656994F0CA0C15D79116B4E8CBED2FB8A42E11F0568F7D350AD8C7EAD705F47976
E583BEA7B6836AA7DD67C1CA0BA074FF3EA8CC2571E9FFEEAB2E9931E1C2B7326A5737B45692
E01646018F9AAD322EEEE45F7D9EFB822989374F1FA3141B6FD4ECBFAF6AD18A4939956B813E
3BE2A9303CABDC659F46F5B9DA3A3135FF326ED7E4B41DF0BC60B83B415C16DE476EA0DA8285
A688D2FC5475339289FD1287A4DC3C39C0657570B7B4C90D62D48901F6982FA6841133300EBE
5FFB17D30914319DD8BC6DF7BD8213BB58F886AFB61DC7D0B4601306E2B141F20F1A131CD9D8
405FDE26E53EE97FF27A1724FFD902227C7C9A3E4C4A89B82C4A26544ABDB53A1730A19EFD19
FC56FDE858E9D309376B9B33B731247436B81EA9C497D54609A3DE480000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: cmtt10.pfb 0 0
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/UniqueID 5000832 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
 /FullName (CMTT10) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch true def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /arrowup put
dup 12 /arrowdown put
dup 13 /quotesingle put
dup 14 /exclamdown put
dup 15 /questiondown put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /visiblespace put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /dieresis put
dup 128 /visiblespace put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /arrowup put
dup 175 /arrowdown put
dup 176 /quotesingle put
dup 177 /exclamdown put
dup 178 /questiondown put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /visiblespace put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B37A69521B
0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE02606C15950CCF6E188A0CDF
841EB68E5A2F88253E382140F87C87E55C9EA93B8C8914A36CDF630D6BE7CD36DBDCE22B2177
8E8648B97B7EC6742EB5114BDF0454B00EA7B1FE236C84C0E5308C871F67B973892890557AA1
2E00B2C20C71F516C3973F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C80
49AB5CF4BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D5EC7B79D46A5B8
BB60F8911D63226722BDD700952208D89050001DD83DFE5577183767DCD2F8CCDCD1964D1AD8
29A49B6C94C30E335290BB35CF706C04E76813E9AE2F9158D447C0447C62851FE9E91E0340A6
1D157ECBEC3C69BAEE6490833DDF98E6EB0ED5FEA40AC515F2C9AD9239DD20DF8A7B63814A07
46A8343C1A286BD9FA24266E48ACC9C212EB2126B906A2F03087138088D29D069336FD006AAF
0A63ED6F92635829C2703BBFDA6931BA767C41F0000B2C24E0E5E0B045365D24850271929151
BA8DB92FA0E7950299A5B0A2DAFF25A85167E40B3758E9E5A60AAB8DF9A17604A13AA7D24FA5
BC23002BEED67123D50634A98DB0313849B034C205CD6A3026048F3637B464949BE73A0AB976
3B602C6D16ABF7B5536CB482C296BD4BB0A792B8DBB1E8D922D0679894FA8F5CC8874E0502D4
28FCCAAA4FC4CE3EEFCF12B553D8FC59729842BE1509D2CEC808E5D7F7B89ACFF729F62B9166
86B342A7D99CC720B7FB0CBBEEE6126DB12FC6532A2F93AECA0990683539E48529D1EB06AC18
3D35D9F75911332AAE28F7D1CF225C4DDBD78A5DA5B6C3FAF0D79D33CD8E72514310F65A80E4
FF102BCC920A48044AA336AE01BEAF9706851A3739D6D11083FE66A96362C32360901FF6291C
5C8540AD7D6675EE919899A88E194F5246174D2ADBCC0DC2E784207BA17C46F31BF772AF0A9B
511D2C8A7C7F347FF6AC2F86BD4E76429BDD7FA6830E41498DE9EE9BC3C62BD6BB34C5E405D8
F3AA471C30100F04711C7F168625FB25F59CCF307F6FD59019760B17184F6EB2DE54A1361E3E
9A770C488B6B7724F639E369675BF694DB4D86E88BAF4E53129543D5ABB3CC1307E76A5CCA6E
A9F4B1EC07FF299C449CF083252A57D6F60757D343CAD6F86FB65DE906F5667ECD3D57C12270
8A70DB2625F3000C810F3B7D4986448A0E7C54408DD7CDBCD0480F4F1FA13E1E12DB9FCE1716
D8DF3CF85103CC7BD41BDDF35142817BF28F213F48E693DF865C4B70500178000C44178FE38F
CFE718AAA99F16DEB4AFFE0CC1BF09056BF09C676207B4FFF9A103262F966ACF4F9F7BBB9C3E
2ADC9020D099DFAA510A41DE73258EC712E144585A007352430E5ED914C8D878BBD1D13702A7
072FF95A742226E60B13C13CB8AE8EFE96F62D3B69D84048AC08DDCBA0DD50BA39EC2508B0B9
8A367E619274E99566891331401722122EE9D091D7B3427CFB95B1DFCED213ECAC1615AF2C40
B4EE447882D8BF6C03E61DC1DBB530ACF13B321841713006D2AB9FB29535C7EC4A3E33BB6F93
402059994D3419BA6CF0B40D1942C400E931FB46C32D6477A46EAE7BC3A72292D161E548F985
398F0ECD907C92DA29B1070C26AEA7F16228DDA7387BFD4C04B256DF8E98ED64A2F4C3D7389B
FCFF502523A6C3A8785CC183F3346C39768643E2A8130312CFB78B6276109252755E6764C952
C23FB9AA007434FA7A659EDDCA8EABB8365BF2CF1F29DC9223C5F9BE9D7FE9135BA0DA166253
CE5A597A82B003FFEF1AE493C57385002B6BACB5647AB9FC4657405725D1D348AF8600F1AC1A
FE846DB24424ED5A8E1575AEDEB33BC71D262F62DA2D9AFFDB32CBAA573041168D9869957079
347B5FB49543A8427BE4A4FE14B3BDB59478EBFFBE0E118B0B09C1BA3164A2E442AC5BDA28B3
A964E75DF2D8E15463F5570EF21747839B3B86345B19D7126BAE9F533E6F1670FE0F01949D03
587FF84BE2F9D167A223388A7D3F23FD8102855C9DCDE8A255374225456D220ED6470D07A185
EDD269567CC8851E0ABFF1DBC41DD0D65353EAC9126104666299F6ADE510F39702E7DD36B9C8
29494F47D3462EABCF5682FEA1C0D46672187A95DDB98E819898A90B259C49DFC9027EFEED01
79A6DCB2C3C78C8CD323AEDA15163E3A786595C95D1177395F233CA2F05C9DBF8E35B849CEF2
ADC38A16D568CD00546482EAEBEE313F92538C98B462DA031AEC699E215366183EA1FD1B6864
94BB497EE5161EBA7321D3B314FA37E513E72C84971DA7DC7C49765E0C5EA5E64C925354B80A
4C08CCCEBEF3CE9C22A8C54A10AFC2AD555D676301E9D3486B35E1B31F7CCB5C42CAEF15BDD6
1D84B43215A953CFEE5E6B57ACD4FD1D32AD3A596C569D9167CD759D9FF4FEA37F39C5EF1DF6
9CEA6581E60B5B2863EAD4B84F26CF3689EB5785DE0CAC28FFE8D3B824EA76D2BE8883AF600F
EAAB61A69DFA217E592E5CBD3F816A7568A0F389C6820F85A4E2C5A5BDC9CA1E038300B34A99
34368E490B55CD18FB79A1B720E46BC1F2686F963134B24A46EA5616E788AB2E05313CFDC45E
B4D715A1AF4477C1E5935C71B812A6ECC0A8D9B1C27BFD077D7D683ABCEBFF0F03F36EB2B2EC
A8F1CC63215CCF77985B0720B49096DBA6FC5A4653BB1355B84595694A13010BB8C4268D346F
523482BDA3A016B6FD5C08720275620DEFDCC70CB61DAF454C080D479A74F29CFA225C463963
C2DC9E10C8BF004E4AF522C7E6A74E5C0B872B8462E456067FE4F48AFED1287E7DDEA0C425EE
717CC401F477643CE488698CA92E7A22D97558ED2C483603587B5F427E72689EF96ABFB2363B
108CAB9C61A27CD1478F0F167BA5DC6572894E2E411B48B7A26BEAEF10D763971454B6A9F23D
1B04F1AF950DC60D472FA30C853F3BF63C76DFF6FF7430A262B09B9E7AF709BE7752B9E41374
924607DBF1870C05FB50CA08B691DF5F65B30F586F76C34DF28FD6883B95CC376121B70E2372
314E45DDF298FD7C7C89276781D0490F9197B2744ED95582B22145C0B441B80A2F71895400E3
43B1AF5B50A0CAEC17CF4582AD5F00533E1CDFFE68C584120DFD3502D184BE9B097955BA8EF7
BD62D1A999FCBFF0A4824A1E0FD79EA0A87E3AB15403B01C3F71FC76099B2C37C1C242E1970F
CC1D560A792F21C28862B1E1189FD7ECFBCFFD913AC07D0DDA71B6EC9025BE52BA4270E5164B
58540FC5321E26D78D54D145A0AD61B2B34B5303546537AEACD3AC11C56BE668CC9A19B8AE27
05015C391C059BCE6DFBEE22A48200AA80593998880507E8AAD1A35095197C1A5A06C56785FB
C780A0AC1ABC4791B51412F5850EAC15790C14A643C94FCDE40E1014A95347C53E2107963C91
A9C92B32A06E92D54A0CB55243B327DBAB3AF7593406BA9B0D5EA78C94B0049CEEB1863CAC79
C2E87AE71A5C53E2DBD95E8030520429314DBD80E917C260907A06702DE59B8051B5FC5D51CA
AEE3B3BCE387BDCBD816F2E9B71A3FDC5DB61BEC2085EE304DF1AE1B5EAB1BFF7B116682B605
199379CF75A25CF96C53AAA53D49D2375777AAD0BAB6D72C3626239C114CEC78DBABD8BA4B72
5645BD7061EE40A682C0F72923E215821DC54365EDAA11AE88AAD4EC14526C0F809E9580F325
F9F990A4F65F50C2ED1C0BBE147C48DB19B78C68A76B986BE74A1D04BA2FA37441C7AEB74ED2
5B45DD924D048CA985B570DDEC523C1ED80C2B5F85538A94EF1923F2869D5EDA9CBB98F05C85
487742DA45992CB461774560AF88792B0202E9A203FFD7BB75595D113FFB920C3AE54A772496
FC54C2943F097EEFC9D21E23EC7CFD71F156C591ED4748229D42A287624CE2D560057C7EF790
D86F9BA0C80682D8ECE3BA911DCC5A89CFF09ADE79EFC8FBD5A41741A527D7088C218B42C38E
9D6F8BB780B21C0D26D9E139244A803573C6DAFEBDF71898D635BF0E3D27F035D9127C2C9DEF
F7472D367DC27D0FBC578357EDF66B7C3B8D48F7BD080783E389E0D4DABF6335C726894EAFFA
EDA38152046483D1D08F6C1917A2FA2FBB2541354C7486C099C1A4D626263BC2605406D36748
7B48EFB5CF5589DBA74DA37F373030CEBC463376B2420AA704C47982B33D87F354822455C216
78FCBF84BF36257662996CD3371DABBB679ACD67A12101E42287AD089A9DC2B585E4A8237113
E05D2B50738D49E62317293087A5C0E510468C2A5171EA62EF8A18BAA2DBE8C45844CDF7A0C8
8B13A9A74C1A37FA349372CFDF524B91888D2FBF499581EB484A5586670E7B9DEA2806389377
4D0B49C91222D006AD6AFA95839A6A288E7C9DF02F528ACB57048387987715188C8ED37249CF
8004DDFA58B8366BC874A0C0EBDFCBAD37CC7173D0988D4F3E1035352E5B37A701D1B5E929E0
50FF1CDCE9FF1CBF53B6959CD9F3CE0860A3233906537149390C77C262972B51F218F64ACFED
82EB44F9342260248F55081A58AF902B9B752AC4DC742CBDCA341299DC191767BE4510E9FAA2
6029B8EF75BAA4A654318DCCBA145A5864ABDACC8D94507E58819EAD9E546A5F59A9BB966C97
1AAC5146243686157DF1781D6CEAE79A575C5AC8F162E9DC141CFB6C6DB52CE641A07A757013
2B7BA784F7897ED2FC265C8298ABE7044570A32E318BD452FBB1E654AF71B354CA6756BDF3B7
E7FC4CD33018F2651FD8EE0BB40ED22818D9A7C1589999D12DC9B7EE720F53C3AC12008A4164
6FC3FDDE34E8A5A4899EDA421963F8850BCD6AB5741318A9D74E3B2D71FFFA804618005010DE
3B7F8D13B93765C35BA3B4ACA42978A436BA8FD2EF8E6E0EB03243E9194899B0278580B6EB85
19573B7EC8E40F01D559C402376688EEA755528CD1540D297C2D1A23FE54F6817EE7E02ED339
0018E8930CA114C3A8D4B26557ABECF8B2ABBC58345F0B2663DDC12AFE76A5DE327CA3DC388F
A3189B5A5C625661D70DD98CD0C842BD4CB9D2AC1CDE9DA51696367D0EE60B56DAD869359288
BBB354A143FF22B44961002F4C04F808E084F42A9551D41E6BEFA371A5E2E69A343FDD8D5766
4F02A1CC0D2E8125BF369A425A3260D83F94CCA6ECAC63EDED28275A0C645524FC6C30B58767
FB1435988DC6BBDACF2396B451E6D83A19C15095CAB8E2D869BE91C270B020CD0A99B18D82B8
21460055EE49D48A925431F12572FB6ADC39AEE445F2E8F73DD179F459F357844B69B88B27B3
C8EDEE37562EE9A1674AED73408510EA15B55D91A72875B1FAB3F21E284EF625FE7AA2D59EF6
FB15A16D5370B870AAE04A638962CAB1773393C8096FC6C5595B1F2A55C9A88361E288C317B7
1C3A61EBE4209B9758B8FC0623110CE8F790462A9F06ACD42425E2F47B03D2369D3CFF3CA281
9CBB86F86ACF87E13F6BC3373D1A8FCD8AB815BEFF016C4B2BE8CDEDF12D74D1B1A8D0EE9678
5562E534339C175D7915578394D4DB0D92B6BF955DD3775C40FDBE141E0D8043AE212EE4352B
088B7223D288F7CB77C23A5D63AED303709EDDEC885002D843C0276CEF70A982CDA67D1A387A
E3BF227333820C4D0862EBA116D2A9BFD67B4D76B0E71BBD9115E78932B045B7CC7F43318191
E030E17B7770D0636AF3C88690767706687BDFDA35E7039865E6836E1F67A066E26850ED09EA
1FB1FDFD463D94D7853EC46A651059185B2F4EE1BD5B0DE5BD43A50E83985B4488E401489B32
96593054B4FCB0EC30866BA47D40BE90B4E0916E3D82B0273B497B99CF5E114123502F3148B3
817E7EE7441FD6D0E2B1EA16BF55CC8B1D839DE6692730A1A868C1B3EC874F5159ABDCED8A8B
93F3C594A90A23E64DC8DB55391764095BEE4A49ADA5CC18802D2B6723F465A62590DC5835B9
529E34D7489AB0CBB9A3F128E122B9853DCA6125B0E46CF1C65A890EFC14D1B8CA8AA23996E1
4EA8A8FC576860C0B1F3CC1F77CD445E9B8618AD0E92B37A008B527575131922A9E85503B489
DB75801DEAC3BCDA5E0339BB45C3B78052E7A551684FCFBFCBEE3A1AA28CC1A1DBB9C5F8FDFF
06A67D8A879946595276189BE3AF34D54BBE197A4874DCF542404C75B7CE2EC58496F76D2E14
CBB60F93EA4547216E1BB02A0413122BFC27DC99EFC47070322D96EECD433A50EC660E654862
2400EFC40A4A79A49D8FD8F6D48B09575447EE8D69742E02C2770BFCF0619CE6C820F194B519
2D50F87ACF2ADF9C20AA977DFBC7F208984B0B56E8C35729543D72061AB0B98FCAE8E76F6C7B
2C58A0CD5CAE0A8B6100ADCD326A29860A5B54311B7C9454E5EFA060D66F2FFFFAA254C43001
B114DDDD7F399716764935632CC759C6933AEA5ECD6CECE1E7120BB12EE2F732ECF726FDEEED
36519323F69C96656F19893B940CB3BE775CB58D1108CB35188100C232E13FC998E0C2C45EED
D962A4B4F38ADEDF19653DC547F754F95F5B6E5D5A5EEA2A88B3035C4A7AFA888E6CC8AC48BA
19647D548B1B516947A199D508698502BAEC0833651B3CB15B6174F65ADD3EF0E858E180B036
02AA6D4C2AAC82DF20C306270F71502BCC483EB20DE8538EBED6E469CC5E987B77B87D71E9F1
FF64C7C45D129762EB0F4A2C2F102C70BEACD1CD6ABA43C9C953CCE3C1C39ADF139AEED18FDC
9F08A07A46BA57B09FFFA0F9E04C990971BBA67B6D0B964EB24E3CF54A8A2AD59EFE42F3D3BE
F9DB41FD239717CAF609519521BCB2E65828FD954A5DB4BB69D664E4F5B7D69398D317FF498C
2A16A8F44E22E445BEE075E9EBBCC3CAE9FB751B549C6755DC652D38E45E388EC865F4D27EDA
2208EFFE419FE0564C3E7CAA1107C93DD568BB3104C0AB44AB4B6476905F7D64AC1F7367C018
7703FF348B2DD853E4D48BDF99CD9FC920CABDFE736B3F4CDFAA59CC4782B3B2E5DFCF767182
A168B1B040045B6E5A6639A4CF874B512DA036EAB90FB0656DE3931D7C874C70F1A79C91127F
DF95256E24FB85E6A0A4D718E58CC022A8A81492E13C06542A91044E3EFE9F8101351C65523E
2B2398ED3830030C01445F622CEB0E992EE2C487B6E1A272682C2F68B6B73299A3DDD31E20C7
827B9132D839753C5C17197F2E1A504621F8DC921D54B0D7D6848FD1AECD416B12F1841F46E2
27E1CDD7FA4874BC0E229FB6572DACCF08DD3A92F4FF53C4FFDDF3D84E7896A99C81662F5B08
86BB31B9958F377C2DB302E2E13C41C72D26AB6DDFADD8330D67A327D7F0AC6D18BA62AB5FB0
2A7C917D9AFB40CCB05389FE2B7A3A4A6DC362B7C1151A3FDB0F0A40DEEA27909ECCC1C1BF22
28A363E28F4CF1D0FA87AFE10AD9D493BBF68D37D8E09FD7A80914472230A79E6171BD037AD9
E60D3C92CDFFD2B7A472232D0A0ABF020D578CCDA44DB613B4CC4BC68788DD1865DCEAF79816
5A49E13544267A7C6C1EDC1E14698C7C4BDB1328EF66A9E79DBD5080F504B42A7DEAA26E0202
33C61006B317DD9C83B7F80272E04D2EB97A15EABB2AF74C903E9D8550202AB6AAC3F18B2DD6
8800D7734EAD58AA29DA6D7E604FD365EEDA714D20B66701F24692737613AC8306FCA98E3056
F3406D928EE4C86BA13C7428743A57B542990B7154FC33723CAC55F4D5236628F648736108E1
B08371D51BCBA8EAA63129ACF3AA6140CA784A02F5FC193E3320348303CC2FE254863CB2898B
28271C8CAD6C49AA65BD665B7680E3DB0F2D11A1630CEF8F0919365662F6447C26EBEF90C3C5
C5827A77DB5E65E64044F93ADF8FE08B4C0C2021698816F41632F88633A933830B44365C093A
EFBC3C263A0DE6F828505AC55B4A44086F5A161CA1DF8B2E88F72598A0F3E069F5A96C3FD32E
B2007BC5DE61A20205E725588FCC24982138F05B4A3FEC6C64AC4248DBFFDFDB5930DB5CBBA6
E762672F7D25073BF52A79FEDCED28965FA1560AB3A54A815A2E1A2F6D769761CE9889D69D19
2707B1BA6A26F9751454D663389C4B5A881FBB44BCF5ACDB8604B38222ED5292DF22218EEF1F
EE8B117733976840A4D7A79FD5D8E2BB997196CD7EE8F6286FE53E1EBAE50A440A78B1B5021D
6D87D323000518EC65CE4A345F755D51334B093FA2D16A5420B7A869AE8B560A3209585D8058
93B954DC7D9B97EBCA7FFC951AC9C8A243A6890CE850AB66620F9F9702E3D942063E8A851DE7
8D6F438C0E24DD0575A6D9EAC8A7A6E03736FEAAE82CB8C80F2CAFEFDCBD00F3FC219DEDCBA5
959665E40FE323A5799F17BDC3CA3394E018172DC7351A2C0DA260F4E942BB7C877F6DABE0BF
D016F19EAFFBC011564119E18341C0A3D100A5C11056DB3A9AACB110F79D2BB6D5018FB178C9
E9F9AD07E2D44391785BDA33CA1A90173E83584512C0E1CD063C1BBF41C316E14C9E3FA3E3FA
429A1BB370FBE057065F8C43762E81FBAD4383CE602B7502A7F715F108E9595C703763FB2392
ABBB78BDC3778E45BCF31D29B6F2F656CB67676221A53AB4D0A8C325C39CD88E4B55988C5127
567C80281E3B8177E337B7E127FD533A480C15BFE869FEEFE3E1244A8448A07FABF756C615D4
76E4B98740E1E5D2187136E1E889E23ACF840594030B26907E5EBC07D5B454784501C6C020CD
AF2456FD9C78760CFAA56EDC36300057302416CD57155D9A3FABF08480D657F3021F6F3BAA57
FE96F05EE5C3107FC4C399BA1346DAEDF11D9CE89682307719C216B78AFEAB9B495F912CBA1C
84227A908F116E435AE0EE55D64343D82382596660BC7FB4739C267B8C54B3A6D4F736AE54FD
0C91A958445E1E108816E0BF902E8E61AE31DFB198DAD37251CD06184AE9C9453448A9EAAC55
7C76964BCDA7C5ED97E39FA0B04C524CA6901007CE5264A909E9B99F359E15F1087A3B1551E1
7BEF6BC7453597A1F20D5644020C0C7F63306A8FB4F2AB7C26B422033A02D1C724FBC760A5E3
2C937B0364CF5611637ABD5A6967E68BC11631F51D16DD2006D65DE33FB7BA03E85CF27E5F9F
48502EFAB5813E8C5A3ED5534F4EA2D4B57ED13A01ED53A88D5DFF7AA7C65BC1C3B41BAE709C
27786255A4DC7DD81BC8EFEF1FF68D774693C4537361996078BF0DC32B3B0CB10B3B6493382B
EE819C7498CBD67ABDE015CCD07385E0C313EAB94A45DE823EE14CB9624A5943191500799DC4
852E779DB2A1E54618236476FE27BF8CA93D518B1D3E9FFC55710D8B50AA5AE3E5871CC0391F
EEB495829E0150C037D6B41BD233860C5D3235F2AC44FA5358837F7C4D7F2B33A68601F6713B
D7D3D300D8DF866B40B519C2658DC69C4AFAEE29C2672374EC339DDFEF018A42293E9E428937
D7EDB65BBCA68CFCD8AD13B9AE3082F13883F9D79BABC375595D93E408092B5DD52F89326D27
B6E87F326A025DF5073DA99784009281799053F2A8949118058BE8DB1EFD7ECB6A6D0766205C
0DFF497FD02F5522F107A5C7FC742FFBA113F9A624BDE52B0B0CF5F36B3DA0FF93A45ECD6D5B
B3956D7C2F1D6EC60B11B7F8D7F52774916D796052070F4C578076AA0493D7F4308068FA72E4
7EE1AFEFDF9EBBFB064A7187F5D35708A4763F20D741FD762A5F63FB0E1A9BACE4A515379938
49FCE0FCFF27F94EF1C4D739808037FBF63FC3164EB7200CEB625A2E24765E93949C052C711F
FDF5910ECCCDE6FC08B21D06AD153594BC6F43981D77C13BD2342C13A6806FABEFB19B70964B
3A8AB43FA1302FD4865716CBA688FEE514D36E077D14E900EDA3CF364A28DE4283D9697FF94E
4DD391CA3722D2E39507026C3ED546B19BE4D6EAC3B7E7F57EB4A2E1A94D4A5C737A855C906D
2220332B3D69401869877EC2E790D0E64934A9F8E4787A2DE740D0183F035C7E448CB91E9229
2F700C73551F9B07B445BD906B97B48B8568FD9FD11E5739EB8D02412BF7C7A66650CDC48280
BDABB83AF881EF4A466962C44C451D361200882E42E16E1E63B6E133CE31A31635B4C0934700
2CBBA783614C6127C4A26EAC47F9EBA241EAF84089E6E0A57A6A5E537B03BA9E8BF5CA259E74
6C71033452FC17F10A319F416DBCD6144BA1864B92011DF197B7926FCFE5FDDF5BDB8FFFDA45
F9DA83636D02760F0E736BB7657CF2A5A8A7BFCB51D02FA1999CB88E26D71A8C2FD432ABFE45
CDDF65AA9A2C199C162E0217DE72D65B0B046F6E3CBFA0705095755901A3A9206C6E31A584AD
86F94F0466E2C8D33A40123F04F396CE83F0549DF61C2E65423FDD88FDFCE784022DD2CEFE15
535E4533CD2373C4C9BC92D7B5A79740384D09CD8FC8D9C82D9AC0DE5B6E8F976AE8978E4D79
D0DE39EF33062914B4D092815851C246C84B3CF54BAAB62FCAD5F8692A639E1FD66B020CAC2A
D61C61CA9E58AC33DDB1A1668A613BBC8C3B2F41285EAB4720FA1C293A5A48E8A3CE743729E6
49B6BB75C60F8EF5B5ECC6F0AEC820FB7B8C6AB0C17A3D6C6E37FEB51C1F1FC70DF4DEEF6335
403E6AD611813F7CA4CFBFBEA3DA313939B94DAC96C371690BA23DBEA9091D99EEEAC4309241
57C4BCD68BF1664BE26112775ADDB7540666F83D3B69BB7FD8A48EA45B011100A3CBDD24CDDB
CBD4AA4CCEA042816BAB8F935864E37748CE08A600644BD4651F4827C217D4B7C59FE0B70180
725237AAF487936406060710DA6D268B4C57CC51D48D02931FCE5783DB1D2AE2070D69F72B6C
1591107758A825013F7593C39BBFD9378D8E8982852DAFFC1A7A2029CECFB302CE0434EEE2AC
26C6AE86E40B3070A8741C9A7C0CCE5E2D35E33B794FD8BCCFA7DD369FB22F6298FB8EFBBB3B
4DF32D937F2FAF5C06C8C0B6C5837F1A3933176B6D2F9FA0DB44F67F5549D66FF212EC9E4DE8
AA65CE597396E60BBFAC7297F836A155DE7F0441EB7A91FC9AEF3E32B249054E9A60EAA446B4
F065BB63326355A7B2263538A4010AF11C8C28BD3BDCACE2D5A33A3D508D81682199FC034C52
5DD99484343056C8FE000CF961EF5444FDA9A2D92ECBCC17E1D2FDAFD34051195656C2F5A539
4208284A8F508D04F41762F5E2D3602126C40D56F39B82447C8BB9EE620EEE85FFF0E0E57B34
FB97F55411DACF54388977A3454E2E303ABF65475DBDF2D5D5CC68BB42699C00778479FFD24F
2FD9B14378A5BBD1F4DA65541E56DE1FE7A4A42DE5A4D7E552D0E4CD0CE2706767C61A207D0E
EA56301CD359EDCBB53CD4F3B15E6486730AEDAC1E76732C425ACE9DA9F24C57DFCAB6942E91
82117754493B909CD1083C96EDAAAA5EAC76ED7C42F48F4F2C0C6DB727EB895E47AC60392912
FFECDE469085BCC3A5EA0B28C9742D4AC7AB941BB93946D8AEE56341AC8BACADAA7CB553C789
1741E0A123FBBA5D30B017A9169EB8426EDEFF35C6B752A5F5930EC1051AD7F39177BC6FE2F8
D20EDED8629F89801CBF2B29C5B7222F9118C1220C8CE53A3F89DABAE7AFD0B2837F1F4E20F5
E34DC29E98078B50AFE3009F4B5B5B671DF348255B032FA6073B3F0E25DDECC35F0FD59D0CE8
85E2EA8F1B06DCA548D41AC574421D5EB37377155CB81D3FE5793A99FC095BE7FE493B06A020
2066725B6E33CB6D616C62D1502019BC271EEAC306DB1C26957A9755695E899725E1721AE8F8
7FF4AFAA4FF2AB9E904038173DA5F2C9BF9CC14107556586654038EC562F19BF48D84B18B82E
6ED5EEE82601E7136CD4DB7393909DCE654F90468DBB240AC548EB64D2333BBC7FC8B13DA555
79424A2F184296950D25A9940FCC74C45984515C369B1B853385B5877A813AF5E6DCAEF9C6D8
963D723ED403C3D96A76291494B5694C6061684DB06F4ED608CCF25AF13815C85CF6164EDF5D
44E4A2F2E88C782B2C938063A214C8D1588FDD5E43094255E70659694850EF7E4789E68361D9
8521F0E3909DE8C5040FE630642E6BB39757382CF0E7EDECC723745E5662D018E94052F93B8B
C067D66880F028BA14135382469123169B93019D5E6577753611F28C96B34019A4CCDF79D948
DC678A4556A4C996BB4C3E95F8811C000C87FFA05C0EA432E4A45F2E4551FE75CB3AE344D966
B834218C9A19E6856FA56113808CE42A9BD349384721FE653D2954DC61AB4606A0A17D3E38D1
A5E18A0FB4CAF8A186099BF4A0E2C4C84B3054A623F973471DE50E2254753A99E8DFCAC4984A
175A31BF269CC8B8944136D5A350E69C0039784A89473D09025C50B09F8C8409CD1231C10A64
2172FCEE2D033D885C0DDEAFA3F1256BCD233322C4D7893B22D7879806EC77BBC949D8C5A254
45EE5D23C384C663209C9D85D54AD51A2804D618853C58034B6B3E34E94CF44C13F6925F9F9D
73E2E746593F8431441EE0F40525F23FDDAF588E634FEF9B9317D2E1E6CDDBA5161B65204AFE
A75C882E676DC5A19C842621B2E9F474F9A0E90528797F3BE63BF3B04C5428C1C7BE520DA85B
0694181BE5FF0E9836C58D6336D791770C86AB44D795F4C92A01FC1E954CBBA1656477312EA9
E0B8F402D9200EC42F26044CFB74ADB33AD9BD911E501E5CA08473F41DDF5455248CE44233E4
E54C8C029D20DCC09B1C1BC3D9CB6E5DE34EAB8603E6394B2478E21367747F64E0BD2DCBFC8E
2C945BD67D6DC09975C84AFBC03A8CC5FC4A7F185BA4573441B23896760BF832D4D7DCD8DC93
AAD2F5FE46B229F4FEF8BCA5CFA5B32F917F4CB6B22E324F2EAD035198D9DBA032D026C40EDA
FB467587155CF8EB93B6DD2478F049F7E7AEB555483D0E83993E56DC140B1C09DD7BD5CFE5DA
80F6015C253BA093FB03D87F5762C20FDAE871B3EEAD5EA64FB8B2DEADDD475CAFDA649BA143
6D50D8CB897E3817A783D6B0E13AC3C1F4F7A5BA3277ED53F5CD752AB7A78F1F55830D5CC48F
F6E23BD4671D1F0D75B5F3EEBD792928559D06DD9D0C2426B8D554F3C0534221445208093E93
3CF8564505C6A12EA83E72871ED53CD4D881C0C17AD10648AC0420A9D3FC3114BE6C39A89201
7E070550B4EEF2506710398F577234A79D93E2CCC44EE23C8A3D0AD1B198BCA89A917E294102
7789AAFCDF5329412B18B41F1ADFF594844210084D11E72712CF77F6CDB953655F67BB17CA9B
B84943946C5BC028AF8D9FFDA91FDF024617E72CA7DEEAD076C66ABD7E3B8053960D0AEF9BB5
B530F78BA3DC154FE39382B5C3A6F18D7070F12047C57BCE194A0615C29B9E1D655C0ECFFE0B
CCA6117C1E3D50CA27231DBBFCFDE54F3699A96C559A8E6D680B267F9F1E5AA51A459F34F6DE
CCD2B8D915F4CF184C35804E0E5F0CC172DC3C15180AD344D9627C898521697339B3B68243E1
B9939B4ACC8FA271B9738D94DB1995FB29F5A177EDFA2BA466BDDAF3E6FEAF56290A4832D605
864F36BE1C7F8EBA90765BAF0199BEAB111D19E8090FCD3637A7FEA52A277408374AE8AA55DD
C5A07CCEC703BEB716ED1CB483CD28B9E24681C204A37AC6A6B0DFBB9510795C73BC8D310EF9
15D131A19F447B8E2FFF8452177AAF8A96DDD8F2F081AD831F9B91D700DCF152C8190FBCF1FE
2931E859C99F5FEF903530F7CA97D3BC529C14C432CFEFD05A37549078D5122D1F28A55B62F1
D84B06EEC6D73B8605CEE62C959CB5E34A580AD5546670C81C883A10AF2722AE64D6D5869030
DF0F4F66681C58235C803902D1C76F80D2BEE2DC992348B74BB321203363B215313B74F4E5DF
1866CC9CDEFF1461E5A922A28D13763EFDF23DD465674A1632955A180A979515DE90CFBDAD03
B22AD874A729EB169D544518086ED719E4E614046B5DEE524B3C6CA3FD865EE1AC595E3DCDE2
2AEE1918C71ACEC41913B5746445962CE2062BDDFD942BE52E19AAC8BEF22DBAAE2A2F96A8B5
1F7665C50C23EC9F743D98FB995C8A2566A65C60999F0FEC9E2C16A3472CE2059E67EDF8ACA3
BF995C373A3F47C7BDC5AC1D2BCE2D226B6A77CF5A089C9C864E92730F3BE335A9E5B361B0CE
6A0A41C7C50B4628E2BFA87F5E8F62F611722F928E8007C06B1EB36CA310516CDBDA66630550
D9796145DA1579FB36CCADCBD6B595131032B2F7EE0AE59D5A7F8EB7730F298AB0538E952323
B75BABC0D90EA756033A7458B54A091623905EA4CBB39FE7C4DE018B26F0386CE8C47539F975
41517875D65E31D14F022D36C27FF3F7E7C828BE6B2F202276A7F98579CDC1BC8F5D16DB86BB
015B01692EDD39538CCDC510460EF130498F1CA568F24DC3FB78CAD9D6B084AF04D007FFA6F5
67535EB0CC1B8749BF7B0BA18715E6E352F9DB9DB653CEB4E4A6B8F40EFFF49C4249AA84CE19
CDE606651075080E2AD02CB780428F8CD9031FBFF0E902F1E6708705397EE7D03435E27CAC8D
146AAD75D5B95BFA77681272B06F8FC171E0EC4264C6B5B6CFBD69B81F926D1DF62E52281418
103CDE760EFB4B60091511079DB125EAC8AFE246991C7E3E63C58424F496C600CC5B6E478027
A505643C7DD13B868DCF5C52045AA005500175B520207B58C8E19E51B9AFA2FEF1628B580F7A
E6D45AC7C2E5486A090FAA2F67CCC7DEFFF92A243D731BCBC89E951758AC56A687DDFE0F18BE
23288DF62FC88685B07E78E9DDB1B6B9EFD92C7648B7170C6588780F0F593F5ACF1258AEC27E
95FF005BE064474C0111E075228F9E0B308CBCAC73226C9FAE8269D1924BD4B7FF837B1C68CA
7A430670D17F8FED5CC904DFACB174A720990C47C11A1FEA3F70B669768CC7ABA360D9A8A7BA
3B0D1C73E94A2433A67D392984CE5C7D3FB70D941FAA0E2F152D322641FFC882E5A50DD9EA7C
7BFBE4B913388C9288611C4EED09FD824B2877684C045D95E4A1273D320713D2AE3C23A4C426
2711F9DDE8045B19CA62C6385C98764D079E23977D06CBB80E04670AD1ED105AF874D557AC50
684B83EF25493DB95F657B14F7DE5F4EEECC61E970D04039D418FB4A3EF03BDAE5877FFCF304
081FCE4495431CAC013FEAA8D96A89CC559DBEC177AFD978E5C8B884B3D25CAA397F424C40FA
C30CC427022C2F1081F290196D8F0EF5E29856506634ADB2EAB1B0F0B100B620EBB19691ACFF
427950B7DC1A0D04254F0B87BD868680A43F5B959ACEF50C236C6047496DFB3BF74CBD2F30FA
6FAF6B3D78A9FEB571AB9EB59EB4108265BB63350FBF08E2B6B2728C69F5A9499112791457E4
654CB119485641D74924FBAB7DEA0AC56EA0FB49EFC08842C6AB92BD3F909E9179E972E5EC57
65CB2251591A7CE7E6D1311A52D218912A48D44973209214D3DC17A4FBCB6901E3FCD7AAD699
145239DA489EF2A081759A0D6B90888EA1D646871C9F6660C22F20716211430AD7CB3E0761A7
8AC860C00BD93EA1202350B9661CDFF05A9462897D73A4205A0BC34355965A65D4C2E3CCD123
678A5D1F545EF800BFBAFC2AED9ED19728200CA27BB30CDC829FA5764978D3254E9C00351C97
CBF9C710B7C7377C2354EF1A00A23D5E825E9619E3A021325FFCE2BEEAEBB407F1C494FA22CD
6A7E497939E2C13F0AD7265E3310580EC8862EBB716968C01036C0C4C5A5C59C26EBDFF1A5EA
E6735DE2C4F5608DFB0FA2B80218BDD43FEA23D8CB573EA0782D73BD8779DE5DC679DF892F8B
462684BDB9434B562D8778CAD47E9A8C4D676B17F3DBA3F3512567E3EBBEF0F981CC1C6365E1
C1FB561D335789CB74B1CDDC4475440A41F552B9187C731E917E00E7A387DA0E39A2D2B2E9AE
1D0E212674BE28E4FA4E3358AB180960C708FEFE3F8950E614A897355B6A0814915170DD743A
803369A6BDFB48E1700BBEEEF23887A1825EE367BEFE70C9B5080172FB96FBB2030C4C9A3C71
E90053EE330F654E5D536DC5AA88C7E65ECB97EC771DF473C5405FC09A76526522EA94D79FED
9001282D3EA211DDECAA9065BFAFC0C2D676A818009CD55ABA5679213380DB5A316FE3972951
ADB395FF679669BF7137D916EC169E0A6B38C6F8FC1B478FC6FBCF5F80EA6BFA49E5DA2E56A7
5ED20D1C8B2D50F89A46054CEB2B6D8C6B59A7577BDBA0EE5848537B14F98C232AB3A2DB3C15
33B42FD671B54D5D1E9B61C87DB700D3959BC085C07EF337DA8B99390216D2EB63B46772D463
7AE2FFBC47DE27869AC2AE409AF4646DCA7B831A531B3FF932830ADCDA918698A24AF67CE0EE
FA61E359AEF096EC131FC77B5D1BECC4A0CB4CE556F4E27DFA5CD088D8C7C41094FBF617365F
27A1B6FE81B2AC09C515B3167691A2BD202A060CC67FA2CEB4483AE3C6458AA1BDB242EA4CA8
1FBB2077BD63A786B6BF64BBF92E51DD88B3AA5AD22AEAD13289E13C8EC58A664D4ADEDF7B74
1DFC8C125FC6C3A3668662F30032BD3E67BFC599615FB35E6A51757329C528E5FCDD4F0DB623
1859FCDC1345F256ED711F633CBDA8FF1007F4CA288F9A7D1EF2D3BDA4CD7292FFE352A0B7ED
DB202DA2785EAA5D9A7D6130D6CEB0514F29528814486B1C02C4793508EF819B53CA52CBE525
3A32BA7A5868AD26475B7373EAA20209BE4854DD397D680B5A40730B2BFC240FEE57CE60D024
974B4D09A963BFD7002D8A7DAC75E7842DBAC6C3E634879FCA3EE9A92F5F9C8D42ADCFF0671F
CF89B8B76CCF92BDA5812EE0DDB10986F2180BF5CC5BC9F8E46A7CD2CA6EBA532629600C858F
059F1B5946F9D769EAE6D5668A6BD7910793E1E2E0B8D59701AB081B38359127E7CA301C664D
EC91CA82F1EBCD88CE15E2ACF3626AF80459D05DD4E92354A2775F82B2FAC2AF3E34A4B21FDA
F66E0BA692BE8FF034CF33E8E9975547D2D4E68ECDF6E6230D38CADA4C9F33BD5AE9833EA50C
34BAD1ACD987999F83C54A5497D758F65BF772A0C44725A51131CB2F8F509FEB7A13225B0C66
71777E5B146A99666D5EC05DCC6DAB2370842925F458430AD173CF8A9569BB2F2DCBB11412B6
D9A2B07EBD5E928E90BA133269CFD148007CA1F3083CF88F877483AF3004D55EDA3F7BF53345
35BC604C19CEF53019A6E12178AEBB7EFC51BC9513D3BB549A44FDCF1AFF2068148CA3C31E57
8865B95F5DF47214228C07168108D222E0E7C2C8A9FC35E8DFE284E16A0D4E9EAFFF5B3D5ABF
7C19DA9590D4707CEE97A4BB744F837BA86D387B2B03D06D3435E62306CABA1FA6B85DD357FE
E4C69AFA35AA94611008F3E2FD32FDEDB8C7FAD7AE0E70DE4FCD983D5BA6719D65E66C84510F
4E2B38DC080845AE4628CF3AB60C57B546E9109F3A52497885FC347E95FCDF30ECC7BA1311AF
44445A4B51D9EAC57FEEC0F77D99A0EB16CF15233009B4CF12D615F9D1DC10F99B309FC34EB3
1428C96F0780541D9240DB35D825A3A50BCF05F9261B1D4861395950B409B1BB39D846ADE1A0
5DE2BABEFB71C53258A7940C51BEDDD981C86C7CB297A284A4389B9CC2C0A724596E1E7E72ED
2B70950A98B8F1894201CAD455FF9F09FDEE641C9F45CCFFECBBCCB5C043D090449F05073943
D5DE9BBB151739BCE2F517B6A0CA7BE84F251BDDAAC05D7D13610D18E352ADF6858BC78823B2
1131750154441C340B27DAF56C208945105E095FEEA8517C186953AFFC060AFF42BAB27E20A6
FC1484D669E055535AD0E8F83F9DAC96223E385D81D79CE7341E78B737D65FB1ABF44EAB7540
A134125AF93194FF5CA6AB0C3EF42EF474BFA9CFF10204D4B5A28FDF4B3529BE86559CD83702
369300819C50F8F33F37E7985228C69E04B81562CB67B37870CB666228DDCE5231BE170F8CEB
A4408BA5F4860C00ACE66D09D064ECADDF6FC6F7F53FB1943FEA970B785BFA59ED8AE2D66F7D
92202133DED3E1BC06F298E6B07FB697DFFC04F29F58CF1E0D9D5C5F27BC412DB7F6830470C2
2E1A731A0DB1FE634531F8FE783E6C582151E371275C21783F101A5BD6CA001792647016BD67
44905C43340FAE604B2BDCE3B0C54B9E8381EE0CF2C095BB154FCDA6111635EA16B885467E82
9E99537C57F256FFCDF706B456151F385293D19E216EB5201FBDE42C002C28253E15F051E137
A02C2D87511CA01F11320A7287DDF7F597B7C9DAC840A5F7EAB451A93A04000FF582867F8E33
9F728626A671066F1E4197F492485F947D9C407D439CB105A5F0438ECD434F9E34D1A3CAC8DA
93E7B923BEF3461F52843AACB89E57716342FD68A9F9FFD840FBB5103A0918E7FA34C0387DFC
0ACE780A4D520B980029F4BED8197C322A12A99EF9E36B19767EF64F95F8EB9A45C86726120F
F7B037A285BD8BFEAB84E3359B7832F3B24CBCF51F4CDCFF2B8CB2DCF9B025140D273D47F1B2
698E236C6178AB11E2DD0A6BD252F9ACB150F24BACA31056112862BE6301842D0CF3616864D2
24CB17257C148655C3C84062433A42ED3D7B6E4A5376A7A387DC09109E2DCBF82CD8E1A1CB71
D237A27962C312FEAF8E402978A66E088ECC81F72AB20DA92186F97409DEDA3BCCAB6F87ECCC
0CDA472ECBEE03076B195589278426233C277D702FC7C2FF26CBE343DED90A0EA5CC28F7E023
2489CAD01DEBBCD748FF5E0FCF19F137F6BD9F753EF68D4073962A37433CED8BC46412631365
6E97DCB87191A59957358E2D5E7555DBFE991D77C0C11DDA2EC87370660E93CC3D1C877D77E3
00DDD85E138E5CABB8DD1F36E03AD47A12A7C341D39174BF6DB831C4858EF776DB71D21244E7
5B2717A1C8190476555171E3C4D3E8A6F2E9CEB37FDCB233427AC1D9F33984786A0CA0888C09
73844C950B9B264BE7E167E683EC17F6D9F3C1686028D9566B824EAE90F80966BACF42428007
9CB563C7EE9096E039AFF2BDDAF902C04E33A33AFBB5DC69514C29D0AAF0CA294CE549E13DE0
B18393E0C51B650A99C5AB73B171DA23A6A0E574938E3FEF9DA83AC4C686871B8015310B7C39
F8E67BAD9A0658A502285515EA83442AC764F9E715BD89A08323F181A021C7BB0FABD1BFFB5F
5E2F25CC4AB7882011248327EF627B38E1AA8DABE8F5969B73F84CE822BB61C66302569D77FE
252491DEB52314C5876E78187EFB8028F6C63B5D137057C3F1DF52304E705C0AD792AEC3533A
FD59FF0FB740DDA2B7972C28E1FD59134ADF0EC71439BBCB3987B516FB75CC5A4140978F3F46
933FE5A46117B9E91ED345AA27F8DBFD47497312DF7DA822DF9C7460784157B30B5C7321295A
1D4B022507FB31A641AB700E81BB9863CD9DF52F8935731674DB599AC7FBCB95E8561C327DCF
BE14E5A6945FADC3954975DF25414ADF7007A4F0571A450B170042D34939A4BF76F8CA3CA75B
EC4B64ECAB37864A2BB8D2B607D4848D073FBD5E06144787070E2C0994D80EC0B8B281A761CF
002365D19CB0A0FB833580A4EA40CDFEFA0C1CD2A5E7919F8EF2BB92FA1D97F2F2FB0D3F0504
7FEE26E52498B9F4195DA8452CF82AC25211AE317207E76DED493BE5D5F12C7C2E2EAC7444D3
43F2979CAFF9CD47F2A722CE3F695FB754FA60289F926979947401CA7FBBD699EA6308F39E87
E8B490CA37F5D40ADFC09E0E20E0E141E6B68F6A054FF84E4C873B606A123435BBD36D6F19EB
50F579648DB3B1BAABA7AE9DD86A0CA21E83719C34EB9974EFE65E86F7BFE2B7AAD88287D34A
48816915A6E62DD483648F1AF4714E430BDFAD5ACE961C361BDE19EF6A17B187D31751FBC138
5184182EDA613AE2599722B7300184F0BA3FC36DE3377AB191513AD96B242CA3DFB07AF81A26
5BD4C985F12E9AFF5D4B55E4CC6159D701B3174BDA3AE9A93DE9EFD0606437593FC72E1E510D
05515368AFEF9069AC3F8FD493E88B9F3D0178334E1A552879DD0E42D233B30C4D3AEC2D8BE4
AAC2CC64CBAE763D9664BED33C6363CA1043D069F49CE32EB5D574E69BAEE1E7F645BDBB7CA9
C4A760EF44F1ABD1112A5E799CC2AC22D89A95B5862C96EA1243FAA08FD176CA42CFF5E79C92
F887CEF7D68FAFE0A68BB5FC4CB9C14080E19547E01CF8D8570ED52C6EC5E0ECA2D47600EA33
BCECC390E1EDD6B365FA0EA04B7F1D3E11BF81F21D032D9514BA6845966B71FC1E9D4D37471F
DFE3EE247E25B20F44A4D12AE769F3B46F652C87ABCF83205F6FDB533ECA047D12BF4C9F7C6C
0E806F1279A72C606CA4C52BB08E98D38708D5943F96AD5E25D4D65560B2EB099E3013716BAF
9093D4300BE22756CB8371B7109D6F43CB205DAEA89E8AFEE774EE173DC666BCA50ED0B8540B
D8A5D864D04E29892B472D4003A9B7CECEDB51F72D0943E1535B8A98D22BB8513DC55F6D9E8E
DB1A17D580B7AF8E2CCEAAD36D13EA6DF16B0DC33728DC602FEDE23BFCB37874540851A3D3CE
D9F42A036BB25FE4648F37BFAF0385D0CF5AC875864EEFAEF8EEB93BD9B8D466287BBA42035B
D4AB37017729CFBB2869CD8E6435E1CEB75CFAF4338E19B6FC673FB6FF412C14EBB08548C067
519622EDA6FF75D28B8DF92E980B7D900C99790799C57FFBC66D4BEE2876C06D397B36CE726F
A0802C48EC933C61CA0F7DA8B1D66AF8D52932DD79B5458C93908784863EB66D55EA7DE29973
382E67F7BCBD836998FCB3A1B408DCF52C99F7338761B68CF0BC73327EDBB00B60E26CADFF97
99CB9384960B5E6B24E28422275784B068A136A7BED61042F43B1478961D68EE111176F6F7AC
A9C1402964F17FA0895CDD7B561C105BC5FAC1FEC7E7E4B4DD1333B3E6250A597F0756C97CF6
8ABE2C156B24CEDDF9C58FAB5FC2B5467E66E53C0641E4D1BED674149F7CDDEFDF6AD478D072
1AAF5189A64519F9A73467E22CD4A6585F8D0111E4E5413A3ADB340B0BA95D274D95AA04149A
39718DA91DC7F585B8BC164AD15C047D0512816D5A5BA9E9A8737D017AF929DE4B5B252740E5
74D3BE7BC3AAC21514A14CF7AD7DCDF5676242E851FEE6A8AC002E863B2CD0CBB69CD8716992
DC5665FDF80F26412DE3A63A9F508BF415BE674113D665286B1AD88D8283E3E2930803EA4F59
09BA35ED5BB1266D02F7D7A02742A638E70DCF25B5CE6CF8F993992CEBA07FAABE48B9171574
2A0CD3D267364E7E36B9028342D2A78284692CD5391653273EA19CA9025F63DA2CB24A9E4A3A
0024DE3715A0A7B25F43139205EFE4795B65812C56B9FCA96A35DA52844DE2BE80360A8A09E2
A8BA78A093D3709C6AA9385F4A5C705375EF9C87628606EA363B379E24D7C4BB4EABE3484E0E
69222826940F4A03B59B7514315B249D28DD3EB1CCB08CA42159B574657B642BCE2B69CB9536
9DA47D6AB51D1521BC155B6A1C95650847920275E57F66F06D0F94F42F308F9B2C41BE5619A2
2E4230F5BA490C493C61E0928F7AA77E4C7C43CC405CCDBEB7E3E00EA1655DBEBDF6A665711A
DAEF12FBF41A4AF22B8408AA6216A460A17A8266BE82423B79C8D00B84608126D10754D562A9
80C0A825B6665202E4892910075708EDA3620DFFC93BAFBEEB25687779135C4412D0063B799C
DFEE805B1696FE0ED1A7CBE51BBE21F564179AE9E3E0C38671750A3E1B7D8B2D959C22A8AF69
FD1B1909A7733540E6166D07C5D1DF3B1B8926A8921E0EF3835D669783E475FB1AC4911B1B9A
5288FE0217407AC6A0DDA1E7CB573C0CE652452EE34A75AB45908D40FE06DA4C88963C397E18
0100C65E81E0108237647030DC4C5D9F05D7C513D2E52AFC918A94E969342ADF0E3CD9A3B028
B21621C0398795EBE8C4D5BB0772E8008312868F75851E616A1425EC76E67FCA7980A3784BF8
8042FD98C304F7A024CB56FAB7F39C51770E6E3A871E20D77979421A962933A9208AC3C2A2FD
1DC34EF84BCFA5EB869FC5ADE45A8F8414F0CB65DA858677FA6254E25C808DD1AC952C26650C
6C0BF99E25204C6058996D5F3DD23136378C750834AA6FD4504274F968DBBDC4B358314986AF
F04FF03C1DB465F1EA4268E3EB82FB3A1A8AF13D5AEDA189A51B1B5013048AA4DF599CA47ABB
ED3458566040717143C793AD16016149EBA1134CCBE84F1F9324245E9880077BB7F9F7B5AB00
5AE77951AB044C91E8BF96B8DDB9729CBD68D9ED09CA955DCADD481F018D33C18577DD082608
B0243E50EC77A07A950F282B165BFCEE110A9E810E3D49FC7201493D785A31C1CF5B246DDE61
4B72B74F8396DF70CE8A13FCC25013848F0EEDF37118F24086B9CBA2A3C38B7E950227F237E0
C8B96139C2099856E34243C112BAA2B912876B0655FADB7C359D5B77560AC9B3066C777020E2
2441272033FA9939F278A8C1C01B1EA1235642D15A7D21AD12B2BFA0135E8772614656F97EEE
14033B4ADA4273C07158F12A3E1EE0DEF1B155E1329B84B0A9113E0998FE4010CDB4E7D07506
BB90C98B70DE1041A6FCD1E20CAC6019B61BB10A48C152A73D47EBC0F18205DF0FC3BD112B30
8DC8B07909FF41612C03431824DDC6B3B5DCB5412108DE01D4FF94182E90DDD5BCEC425D4CAB
10B7E22BCBB6B503B7F017D96C416E82F2FE082C99B3A566F6592CF5A8E3BE2DAA959911258B
387859138F212F8A46F9E1E5E0F8339CB799018519386F9715AC108A0271FD29B237964B9A2A
E930145C65443FE8314E245AD189212D2B99B2C1EEC31BEFEDD067D0F5E5BBCB851F90235BF7
53C5AA86BA9D42FDB2947AC695FB1BC7F0CDD57B33EE3092F58A73AC36E40D03F12E9CA1E790
3B171DD247D6B257F20FD057D35386CED1202144F2067B34355A18B0CE6E13A3BEA4DF9EB4F2
0ED23A20C26B314214128079DC0C795474A3083FB9DE02492746B851CCD59B4B3B349146BEDD
075B045963CF6CBDF68AC5D670BD01E441FB378B191CE45F688560FF2BDFBCBD63677FD669F6
D01CE1F5EB0E66B0D3D41E7B53CCBB9044ACDBAEC1645F23CC1CFC938378855A40E897E6C446
8FD46D707FD3DE5C080D4E8E73483126DC8276547F03CC554DFBD4E74CE04056BD8143C1FCB9
E92E5C5AAC83AA725D7B926BB266D9555C948453FF4C9BA01B01D6A47B831BEBE7FCB23D6144
9591D237453D8FE0AF43A687DA9797B38B945010561A428A07030A77F14D53537F7002E36A5B
D2C1970C9A89BC930E9D57668144E21A9094B0FF6A7746B399EE169CBC9B279C3A1E22D0E5B2
B9F7BB64825E18E87799B5C29AA6CE7A82399625EF024A25C1517BBB762D3EDDDFA44B0C8671
019116D73A45AD874A6A6EEBA06CBAED65D2D740B87A52E065ADCC66093B1C9F32347933A4DD
016D90E737FB2EE97F5290CCBC02AB947AEB7AAC31368DF3883476EFBAF7BD56AFF3685146CE
9F6B39ED164BA74C89B2A92CC8CB8DA6FA9B0F8320D14D31B9A80019D885B801C6621EC87BAB
3740029982782937CC1632482756260BFD1C376B4CD8C458F66B2D4391442E39EEC802798752
8EB4A1AE28D933874F8952335A46F69F503A130DB343D4502173EDBB5C07B3C24E75C142A9BB
58E9A1B8F66406003264791A920886CCCD284F8545532C8BB2EE2AC1F38CF9A464F82A9B83C5
9E7EB60B6BBFCF69946960EE85166E7AA6887A0B0D609C62BD18B5EEBF2EA99C2479E86721E6
AC5D2C21F7A085BCE4B05B73495DA3F4EEC1EED648708B9D6ABD9125E18DE013300522EBE064
42CA3A6A64DC704A9728A177A10D92648DA7C6DB79F2AE2BEF762FBC440F094235DDAEF16098
61DFC69D751F3FBA44B3AB190C6117B4034C510A0F12080AB416ADBA6E99FC43018FCE57F5E2
07C88DE8487961C06BF017B00DB006F2D934621E9C2DB8937D1A4497FCDADF03100695E2B268
4B37959F25DA6F5F5574FEA68DB87F9DFA958F0047CAF5291B8A955EB69A84C8F73B3748BEF4
A4B8BEF8C662AB6A3FF26AC405551E8D593AE69B16A6A01B1A88BF2E688171A2820119CC67F3
DA78A807574D5DA12819DD2ECF57FB8DD790292AB3DC6A4A28FF193DE1BC812E4FAD1B8AA82D
5E582C66D1FBF0FA26C7A19CCCA4E22AD263645D249D31761B70C56375D55A1BE039305291CB
2191EB88075E177427CA254900ADDFAC7763D62706B2CF170DE09CAF55F08D65A2350564B36E
7042C946551F6CE1220706CBAA6101DE0F37640F652572CCAC55D1FE65562583F7A94BA39315
C6B42657058DB161DA458FE47457F2AEFF5AAAE66CEB1F5B4F74823EB5F4A6E61FE72411225F
7A73AFC0CC6743E918182D115BB3ADC014E0EFCFA697222C609594B9D70723B641648B1F5CF2
093A9E469A4FC3F33500707C714503572379DD658FD4FB349D749F32426FF13A50C170B6C896
CFCD76C07B767D8D3E1D4E9E3FC482B9E6A65D8265614C9F6B315A97ABD18F52C815F2A7F2A1
39EBCE6239F9347CCE9D71DA601D5CC37B8A6F9AB9960516BFA5DEFA76283766C0F301AC4BBE
21B4D2AC51D69946DCB76DCE8A8ACD1780F88386C7F1FABDD2B4DA67D2A1C07F5072BDF95B65
01026FFA88AD597D4BA66710821498A8E4D9CDFABCD67E954650CBF4FA00CE6C9E0FCD8B8680
993A112A0346ECEE73075706E46D820EC69D77191124E694359A9745559321268ED80C9C9E9E
EFE4D27F2D2CBEDCAF27E33EF93483C662157BD0449D781462F1BB12B50622DA46BF1591BF76
80EE5ECCFB716DEDFF2F3E74B5991F2F37BC29E2A98D649328C1922291B5D33DC8CD1FAF071E
43EAEE80115283F1D5B2131F15F7AD7DEE2739B6B3C7B0687432F552034C3F541C7BA9C5EE57
67230F3F91272CA1502B6BA0668CB3D7BDD82242BC01D51B04F72F0F4AA4D367D219AC55EE74
64F90484747EB6E2360E825860B8605F6519DBE7F9139C0A7BC559555BC48531349EAC202B7E
7622006B581644D467B44D3C22AC5A166CDFBD9215C2C999D59416A9F512A485F4D452714754
49257160DADE372BFC397171B66BDB2A483D2EB5A7DF3479AB381B37811C0795B406D97AF1DB
9C998DDA6203A7628ACC4CD8E240E166BD9B6CD66C6D6876B4F475E8159D430527093265ADE6
A55284AD768EA42365BC5199897D093C44AE66D8FF6FB5D4312A7C943538B29DEA4946B413F1
F370AAB569B5744AE7523DB08FDD315223E553CED5AE1F92CBF2263803CB35E9C7714DAB6020
3A74EF3923B880685F17C8C26F319764583D0038EED65AF34F3AF23DAE0D010FB8D8727DA1ED
668B70047002B4BE55962819CF9487C1A5C006FFA009A1999A95B5B8A42D5D01DAE22FA5117A
BBDD667F3278A6961BE45170D392D232A3DA44645AD43285829C9045E8D68C3E87C4C59DAB03
67671EF859C96168777835BCF3F0E7E952E69BF903630464C967D6946C02056003DEB02293DE
B5A5B1F8E331EA64FDD89858F5D6C610D7610ADB03D2C6113660A589AFAB45DC0B88D8D92C8A
6E49767428BED4A39EDF23FFE561B8DECC065CAE29ACD8E4F6D59B0AF84098EF60ABE204C17F
B356FA77EAC9AA24188D65E5175BE1B76865AE11C41EFC2626079FAFA5A3A100852504771257
7FB7A0E0E7AD50220BBE11ED73EDB2DD8ED0657EF2B40D064EF0CCAF2EAE53BD71F921B816E2
51D266765BD97472BB5F465C99F470314DEA782F68416F6BDAF6E53966207DB840B31B3417B9
305EA7369ECCE7FAA29437FB85DD46F7F0146BF35E825294C791966CDF0102D584659EFBBA9A
5C421697CAB15B0E7C046B3616477D2F6505071F626F2A4241A05A760B7438EFFCF9A118309B
EF7ACAFC9ED9AE17C9530CBD625BEDA6F224BA9BEB51676BDD27B3C5E31628E346BEB371E389
8299A517D0BEC4D2E8EC7BF3C60A92B9D03F61EEBE3D1CEF65E3584B296D960EC620D38F16FF
21B8A47FD5793E46BF37D52CD51ED5D630E70919C467DC68F770E7308BBA86DD6BA21B58D324
9F35F35F7D0DEA01ED08059163A56BD219B49F85A98AB56D15AFDAA17CC8537E1E80617E0A03
8975F8DCABF7F35931C47F1C88490D0D5D47547032C980CDB8E2138F4342F9B84A824427B034
11F870A4523AE85B1FDB3CB44EAF5F90F0D5D97FB44E55A80C5038876A3EA7ADC28A6582135E
1B40C1C3A2A129A8E45B35E908DBA2240041F1BAADAC7BF241132490919B4C77487233AE5B57
53834739A9E815D5D11EAC5B0AB9812E14EF97199304E1077D7DE6768B164D4C7C69824B0ED2
F3480EB9533AF9DDB1625BB80960DECB90D6F03CC69F9C7EB851D2A0228DEBC62A75A53E8475
2B6A16F81A339F411051432EE95C73BE36312504D8F7F6063E89DF87B75DBD59D9A22DCC4562
353E1C85991EB845CF18D6655F97AF9ED25EFA6D59106C6EC5A15A88C7EA808B760DBD9A92BB
1BFEB16B19B9ECA8D27D8A8981E42A9A1E6D7BBFF94739B848B25AB2178376435380B123F10E
42ADB56951796D52B0DD6C7C737A001D8E5225535A3A1BEBFBB0FCAE6D278348519ADBC127E0
77C307BD9783851F31016C4EE8CD83904B04EBD8F68046A7B42B380C240166B996313731CC70
02F1D8B438DEBAD313CFC779FC0D3DAE2ADA54C86C8ED88EABE82BBE3EB92B64F739FD61B72E
26DAC12C3B3167A056E724646849CD5A72B3A3F0EC7E9DC895886CAD89C904EA911C7FFBE284
AC094C83F1800D32348B99ED12F13CAC16519BD99BE5BC7C3C525D6B12C8BC41661559ED4BB0
4D674758513A9F9C9428FF4AE28B0BA54FA5535FBEBB445B78B31C5F8E64F76CF2B685A772E9
A7F365F5876C8291C0A57FBCDA8FC5F1BB59F714412D42FFD6EDAE1DA5EC873125817BCA7C6A
D9682A9F76B6E25260C54DD1A48B6C6A9B4D7C305DBD2A10B0317E211D0D15F890B14736D31C
1403B55AE5848F96F3A2E133C042D64A3ACB0D10148C3FB3DBDB489FD6C1333C26BF7B6AC17C
4CA3A3791E01B71D3D93D27A187079A4912A37D95BF38BF65B1C565CD588681C31D574577CF5
388690B6D22BE8609B395D6CD0113C0F70D71AF534B3863425BC8BB074DAF73149BAAF58C9A8
33466A0FAFFBDA1E79ACF6BCBBAA81C63EA29512AAE4E0B37AC01CB669FC5D41B7506AC85E6C
EA0286281DD2A6881894F20D3DF2FE7D158231B3018A53BAFB43DB9AB4C2A83E6763D942F0A0
2655DF9B56981FBC96FD2287224AFAC5AA0F4AB4DCD791B8A73A5796075E42C22F155C306444
6A076D8534FF638C9BB39454606ADB1E28AEB7347080A57BBE840875C682B902A1E510251E69
BA5F423D890E8F3751C3670BE6D992AE26532E986FEABCC8CE0E29B74B623122E030B2232495
7F210AB4482DF9F2EDC785BECE54826220442CD98BBE13E261253B873F81871DD5B0726AA09B
EAB26D0ED6AD43E6377441BAFADB3A7B9935CAD5507590613A8A85D1AB2402B785E3480EF489
FD8CB6EE337D37CBB1B155C17EEA83FBC2BF88C0B3B4AE1935EBD5B82406AF9F2E0E2B1A550A
F6E1D45B84E82E5B7ED8E3C18054B868D4FFCDA8FCA632B898F16D55E9BA5B40B56D1311467B
233310FF0DA2489E6F8F6BF4D8B573CC931E11B13BC09F79666314A054A7769A765F756B650B
7BFADC243714939A6B440FA5C373DDB69F4667B894FD2630700CE76665DF023BB5D88829829A
0F7D8670176B580A4E2C0C1AAD0A47B9E160764BEDD6A34CA8885CEFF994CBC6BA1BE767DE53
BEC96FFD88F9FA0B9195C1125FD9C7E5E6E835C70198B01506DB42C612AB1EBD3846CD0C9581
73CED3C188F08FF2AA1CB5078AB61DF54CAC195513C02213BC9CE8456DEA32CCF941253B6D07
606AE772B96168D3B11036C83874D800722D4C6469A88C3C1D6C4F28BECEBC61A4A1AFABB26D
FCD3F26296120B79EAD45476463902625CF169C43A29F8ECA4F71C868ED959788CB34B040C29
B9DF2703B6A362A1E8D636FA330BE1E65A33213BDE120A36AAF52152340E385D72AF71BFFC0F
34AFBF117CDE4DBD4820AEF1D453CECAE6281C2EECB2577737C32A59D3686DFCA6B82783C98D
6B310CE5BA9299E974C3FC1E6BFE92A264EEF97B568195357A33576EEAA246F5D8049AC80E6B
10458744110F1219189FF547772B2D4233778D4DBAE48B91DFE1D5DB1F64F919EE809A7DEB2A
916102974FAC2389057267070D9AEBB6FA96F2B080C8032727D751569976841915292AC32F5D
5D0D01132237EF63A759E1F1AE1750EE79272F04AA99B477CCC6A4E5B0F26DB40627B6D27411
49FC679108C4C13830A2D6031BDF4A630327738BD8E7C6A4C384BD281F612B821F932DA1B9D9
33E78B6CA50D28E4D7E30F8B4B21ACC7700810121BA0AEF6FA1036E32CDE52D3BCEC0DB12CC6
5E57DC5239710A97EC0EF9B3D4F43E7B86AA115FCE5AAED1C763C75F8EA3DD559CE7B11ECC4E
5FC5B08B9BC62407D56D366364E28A92FAAAF94BA5CC3ABD26CA66A8CF0EB6D015589BD15517
4C08787D87BF65D7756BEC6B4DD8114B953C0E603A492C0CE09CFCCAE35F0CE9744491624A3B
52D9DFAAAA6EDB5874280295E49AEB3FDCA1353CC96E91C7E3F8650DBAC8C09540292CBE3C3A
541E2509DF74BAB4E1A6E0817763F09211D67EE2C0AD57277F3F34C881B0DE1419C47787E3D8
66906BD928C109FF52A7EE898DE2D765ADD468CCF773F36106A52767E88086C29DD10E5AF3D1
15FD7E969AE3FF46E1EAF11E769B4D31AFA2E0CE40F70E58C4591FF528C76277179C878991A5
0D493FEAEBB3B3FC830412520027C275CBCE014D342EE66AE0ADBFC02A7D244D6DF51BAC68FF
752717763123D7B8EF5D28D8F610DFD14269C4AF953EC779EFCA0E4D3C546F5A7197BBF93E02
D5A8A7E7946CC9582AB280C76C7B82701431FE621F84E74F2605BA90F37863D18A99A9783E5A
06B650BFA364AE92884BA554682B3D28937D303DD6DDCB1BE272B237F990AB8BA742527AB65A
C412B79CFB6226DD3F5F84507088E9A61F08A7EB8C89D41730660A26CEF3586CB67B87328AE1
539F88F886259BAEE5C12C0F9FC2F13B61625EF653DC04F00F0792CA47319553C25476931C76
0AAC017475AA597D041F19C7B90E3CC98D5B0ABB10C84A9F2B06AB1E16BE3F5B187D8321A0A2
996DA378E8D21F060AD91F3CA70EDEE4974F23F8E28FA122626DAB1A17F1D9C4720DB34DEECB
1443AFDE17769614B5DC6DE1BA724B221D107B36033CAD041E75B3C07F66FF118EE859616780
B3998EC0C8AEED2AE569C7D3C7860FDE77459602526E4243C2772DFA647193EF32291F2F3C10
D5C9549C4745EC3F2CF6D0C964CBA9BE4C0F6E99B2399D9273734F10E681C3EC7333A8CFAD19
A6C2A20CAEEFE164E1234D63653F8E7D6E0E622E25BADCA106A97AF4D03D462F895E1B25E1B4
E72C9C647E5DDAAC87779B428635FC9EF884CBD59F074E49A539619AA184B1583D0203C48ABB
2F51CEB0CB18E891B01F466096AC457ED2E7142958717963AFA5FC5CCFE08987F1C93CD9BFB7
789FAAEE6E3D2CA128DA76974CBF27D844DD91ED448C09D7DE02348DAD997D893D9432A5BEAB
44BFD24E208AA6DE4D25D0722EFDE306421546ECA721DEC04FA8DA48A6848A1E0DD4737A7049
2E29A30CF89AA9684710E6B25CF6982ED21D5AFFE4D819C7BF4E5F3235778CF3F822C6EF0A00
8802D869FD3FB3FBF1B0E465114C0B50CFE597A2415E9294D50120D6B93D5CACA6AE72A6C507
A1501D2EEF33C012498ECC2CF72B26686C8CC5111342B0C454FD98BFF5BD4C077811073FB790
A352F975500759E2A9786AF87AD6CFB0CE12BA6607C231F88CF11FE0CAB0735C486E18EF752C
EAE14F6C2588F4D34085C0968F3E932FE055284671887CD9481CA18038D28B2261A18690BF30
4218DCF5C04B4D37C900B01F665CFEFDB2F0CF29AA9FECCCDD4B3A6324E3231A4DD8532686B0
EC257FC0D2D401882D628BC062CC2B862A89FB30D3F78975D61A0EBE008F529561021836A4E2
42D58FAFF9CBB537A70F9439B5E82F88C505D288FF899E30F879D73C5CE4241A7BF638095921
576DF3FA7932D97405E280F36EC2F1759F3829CEF88B5B788F7FB739BCD9D100F4C52B858816
20D6085866F33A2DE3530E23B4DE8B367D9D76010729C38AD305B29608572CC5966F78D9BFD1
B991A511BF2AE641F46914F52F2A9A8CA06A942A575A786BF41EE65B2828662CD21C199544E9
4A31C958128D7D35B7C4477C09CB6AD89D2CCDF8B2D2A4A8DB28DF82DDD0E3A294C07DEF5A79
E43D49022057B212EBFE376536483E9DB181A390E8C82823FF2E4C6997B37EDA058A6B73158F
D861B9246B48D121C385581C81DFEFF89B99C218FAEE98C3CB54A59CB941BD463F822DAEF99C
FF4694C1B794084F9F0D6D365206D43C86085BAA443773AD6B59C596B3CF2C69803E85A6C7D4
787077618D99D6B556FDA15F91C6597BA96117192E9377031B76E6BC658D0A59E1BA69A2B5CC
91A8BBC604D8E8ABD4B1F064ADE3ABA43F2C101103A12FE366EDD2A467C58639DCC0AE5E368C
F92C83D35D3B93B407347FF46F04794E05D18990B07596CE506914CEF60AF6D6886E815D0454
72E61DBE796E2CB6EF315BC33109F898845B1C35D37926E3FA22B4663B3A3283C5F716F419F3
E0A3EB57EF2E021A33AE9338CABB4102F1DCFA211D2B9287E4490B148265E4452CD1C031C8E4
3500929C1A1E5704F8229293A552FBD04C38D83EF82830D4C06DC802D96BBD84C4E6C44E2E41
B8B10AC6ED975B32A2BFC9D4D87BDAE7E8324CF1D4902C2219481F2E2EA39E31B51CE4BC663E
87E674C782317E9DE3F0987F74562788E961465B941D82E920EE975CDA0EA07EB24528906279
AAD6E1F22031D0BE62C16733D799F905AB089E19FC546DEE0D6FE2A468499D91DC455A2D76E4
154A8DE1B75B2546D3078CC0CB0494AD4A2DAACA192E5A1E9851CFA2052C85523917A9E9703E
F4341DA63A64ED9EE2827369BFDB6C482049A17001DE299223DDBBCF042F1A546BB8004B35B8
575DFE2C3D331F2DE653D5965803B7772AEF3CFC930276D64C66D4807256EBAD65648C3F7FDE
96389828DD1C83EC4956578A3926C6BDC4929D5D87809C8B3A65FDB211C5B308DE4B15BA5E1D
2DCC399AF68240F827EE7CE21A3EB6F3333A05E4056D1748D73090F68DAB0EAC4C66D49F2758
2A74A27394359A8FE631B587FD260974195ACAAF4F3485B1AB8A9DE9A60BB3045CF4511F1141
42FF5BAB99429785301FC1A161C00AB3E9343A2C13A0D9D742161B5960855154849ED9E13069
F28C957D290B1544819CC2DDA813C251971351ECA317B02806233FD6007F236464EBB7B451C5
A927A2E70017304BFCAF69C5EFB4AFE800676BC45AAECE18ED002FB157451ACCBB3FA526E188
524A5EEC1C7F6A413249BF4DA142C8C2AB169875A1F09E7E75A47FF7772F7398DED9C4A4217C
96AF1258557C0156816A27B4FDCE954E3B4B5A086B54D8BDE413AF4D0D3F2ECF413514763062
8BD9BA4C9E162FD1147A4B56D2594C4E1C7B1F7BEBC810EB0AFB652236EE327E4C41E7CC59EE
7FF06B48ACE2F003E2A28A601817E87FDF925ECC6E5AFC5F22D9003F3BCEAEBE42DC1319CC51
4A152B021B3FE20D8B8CD5B6F60A8B95F81F382EFD54C88C496D260ED5B5609EEC78E875288C
C127A456211F8C21E27096E2C08B02E3C78C0813A76334AB82C926279D58F48218885743255C
0927183F90BAAB6133A539AEF66F8843DAEDB1D287156CA5D0146441F499E4F5682E6FD9BF24
03909CF8517164A2462021A019FF969C6AED234CAEED24940EC88E62227FF2C37E9E024E9731
73B84705FA61EC1857B7C26AB1BD53C0EEF6D2074AF2ED52B9DD70819F6645E3DDA6D912D434
767D7B438709E75F8288B0E07A710A5DE59088A867496892497BB408207165BF0DD67240FAF2
5467BC4885A1857E02B446B8BF29C8D88EDC3B6BA1A1AC7B835FAB3D7B4B3BB31511D67C1A87
17AABF67B64B7C36D68A58FDC8209831F0335F12894FBCF649E5D207A0FFAF75A70F4594E3E9
07A5A77FC65F1EDC5CC0D8A5BDFCE808B05CD87C346822093BF37DAA16B985B585D87BDEC265
8F7A38E8BEE0C3F0540FCA9E3990F45E521D65002AA9750C3D8EDD27B1683B433CA3CE44E610
F360E0D4F3B1E10BCDDB0712D2F41A3E2D6549E1ACD880E466750758E3A95D588B5D53B5834B
6663B81F376A68FDDD362EAE5DE8D6CAD565F0329E96BB7D8B0C462CEDDD4EAE1E5E9D321A47
D266CD23753F916A70CEFEEF54469C17D53ABDC58A2E3AFA8EA7BF713161E83A0285BAF8F164
189B99323E45E8891037A3DD59E7422E5FB3D0EB781DFBF795E22A6353317940AFCA6D7701DD
7AD683AF8D72EB70524042ED928D91214B2F22FD0A3B87C16953E0BCF5F8105466F959FBF032
39C771DA99C16A09AB1DE670BA6828311F01E4CCE2E76DC4C1A49E97F9825FB5984FCB95214A
4E76850661116819DF0B76C55D22CFC5A088F7BB5B09449786C6F4F5065A5A5A536B582A7EA9
D5DDC5A95C03B24DD8E8F53A3752268C858E4270787CECB64B4F73486FE5817D0A0D12AC30C2
03B3C5E3F2FCD8562ACC4172D6DCCAD3660826767D752D0DE2C36AC95564486097ABEE20CB03
17F8A3A28D15A69534F8C7AD6E0AF43C20AA9F19A95ECCDD3FD32C872F78B320B816BB21C7A0
6D02F9F2CB4F611E699A0CF90B58266F47590AE53811EEE69E7F7CE2FC8F544A6BBC6D10334F
0577314E4049F12408818E24AC5CF71D6FFEA42CEA3754969D026F978897E3D044CB7E101180
5398617E1F4F8AFE15ECA1CB7DAF2B0D829F0774FD77615BCCD18B6E9870F76DF41310A86735
B20150D15CCC5686326957B6CD44FA8C0EC7836F009273C98195350B61C3B705CF214BAC5609
7E55AAC9C1CBB6A785CFDBA67ED98B47C8001AEB8D096541192348D10A07F04E25480CB3ADF2
6F571BF82F61B55894784A38214B023DDF032FF11C4E895EA6CCE7E28D247DFEAF5F727B2FEE
7D6601DCED60CAF42E3CBD93BDAA5A995564B19F5D6745BA563C6A399C20EA8A3885A400CABC
8EC401D26741DA2A5E194A08B9EB06F449E7BBB21DD01562E38B995CA4CC1498705924AA4B75
0BCABD010B9689E07D3300BBA5FAE5CFA1C140EB0F23B29ECAAD60C12F5ADBB1219464658A24
2D22F62F4799F3AA9289016E2F852E5FDA0D80CDF1328CC28B74D5021E34B1EDA20B7D95FEBB
C9BC4DE6C9A66B7084878CD55CA2B52724CE844FB003B3FA29A6C78D0809E08ACA109E623812
371529D811FE8DCF234B1139C10675D0FDADDD8E4BC55F58CD0A7F0C2E0AF967D1840ECDAA70
76430F43E109E2396EB44B18D2CBD2EE3E4E59138F187C193A36B59581017EB41F6F470F798A
C653D98A3F027FB3C0DFC7F653C4B2618C2129FC057646FC154DD34522A373AAE7210BC6B0F6
906BA732572AA55E0F923D4E37F3F6E86DF9C5167ACA91863E0C0AAD7DCB54445D8F65181584
64F957AD51352822AF90EE423361427C08599CEC36A25C66B5CEC3CBC94857083DB9A87E24C9
BFB9FF931ECEEEC92240491F3A4433C9CAD2F759AA681FABC488BF9941B623BBA1894E1E80C9
E60B0669E21762081754AF64E67DAB39BD6493A086A0D855049200D0DCD3469BD660AE445312
AF3F982491D432CE9E7F8A8388D6B82E21DD5BADBA07860A412906D9CF6B2021F53E97170D2A
98DD4B235CF6E02E15E4632DA8B2982686C859CD0C0AFF50A91EC59D8DE40FBA59E649B7EAF0
21C9A1577B99ED111AD3F5268ADF34D21F224733BF4BCD6CAF6A0283088315767709C2F80419
1736007D82DB10DB5C0354FCD12896A385A0C4D8798883BF0F78DEC7D2985BB06334BE5E4B18
7B5088C8C2F01D296094C205CD328B332F06CB1D75D6E7DA38FA64F289F025623C4757F788D4
A8BE8C2DFEBC52AA84C58DF32DF025F2F0CFC845F1E228CCDA11D120D5902D659F57C391C980
F1301286801532A92F8C27676F8205AC4585D451BC414FFEF8119CFC9E4DF83789C80F498144
25E222DA5C46B86E23B79E1EAAA87CDC58DA787D08E9D866BFE134885DE57728721D0C1D8775
833703A00E6CF60254639062BFE87AD332D3A7A0E96E7E76658EC1F63BDBB216A420C195C756
51DA07618741C137564329911170C41B779BD80C3929F9837BF7896E6CF7B8AA72CE318EC599
38BAD9AEFD6D4A9982B39AE0DDF9196C19236D6639CEFAAFE61A83EECB4DC34CB16CBBF7A8B0
AA63A93BCC65D9C3C9A480A3F9F874FD9FF9072B96D25635B98E9B51FEF7B6D41EBB33B02488
6A2FE371FB32C0EDD78339F45FF83A99D8086A4FEAB6BF8FCC1873513B668D34169DF1C8F9C0
D84DF470333C52D38D8EA64D2CC512E82417333F5A504E205C9AA3BB190E217B24D8E3E1156C
3ADFEAB88E6FADED7121753FB3BADCEAA52365A83BC5709C00C2C56AA0A1132E79FBE53FD105
8C039F6F41E138D3F1DC0F83E8CF69F15D3775F9D99BA7D58E1D1DBF3CD0DFC3AC3553DE4F83
86C423CE446FF364C55E6B6149E3BEAF384D3866D61CC859C37EE64EE955FC91DDCB2EB1BD48
D414E301DA3EB1FF856DC6F0AF3CDF593FFB1D75B7E6EBAA8DB1DB976DB107CC0DDCEF3B4284
77C4EA1865BCA1F6AEEC66FD7FFB817BA3F3E5203A489DB5CE0BD375F2961311E52EE0AD5A67
CF9E8DDFFA80D228F51DD1946BC91FECC6BF99325B7A630C92E6681B83C0D25F6C48DE39D00C
3FAEFD0762420C8BCB3F8DF24AAF1E603D96590A562F0E1E1406E105C00E91D01425D5662D76
50E5C62B1D57315DFCB030C1ACBC0EFF103EE84C1F86B28969D91ACABCCAA6D73EA0A43E6FC2
3260314B2B3CF21DC735C83D5F2ADD54E1AB48AB6A476458459B9FAA8AB24C7A0D4257BF9455
DCC516B2D79BD9003CE291E5EC4114DD01F92FFF6A1F477E92A2178FA3F74C692DD8847F0458
22412C16385D1D583FC074572EE4C13474E18E6111E1DC10CA2B288BFE32D8695BDCA2BDC3A0
89D149B5FF43A5899092528AF4FC8CB2C05765803384FBBEB547814072CA5D23FB0C7E13E0EE
506FB05614804C9235E227B68A810C26E52155CA80697497E735E5A2A1EB82CE489F0FF649E1
420FDC81414A9F8884256117EE33C4DC6D4C9DF5D65AEFE04E4599D250F1CBB12D4C708AB5B6
E2E4E32593671687254B52D2B5E9EB8391B8ECA5ECFFBA374825FFC8C1539DA1C3FFCDBA287C
2E7CE7229052C5221E96CE242C6FB9252DA51437DBE5B0E249CC7CAEF567B0DEB1CCE0CCB4F1
5379984DA79980272407D1A34BBC4EC53BDDC2F49070443798AA3FD3EBD20CD799B140951DE2
A773CB615DB8BAD18927BCE37704DAE151453E24575614894D6C8B1F170F8E0F2580A597FD8D
A8DACF91748E869FB24E8055708319D9934369DF9AE3126730EDACA10788DA4AEAF192694BE7
EAA6EE75190A891A6D72608255F664CD875EA6EC4BE7BC1F20E477B05B796968683FBD7AE8B6
C8AC8D17F544269DAEB43889C77F9C1F2C6FCB3ED01D2CCDE6291D2D5B0FD90AEA9E033F3098
35DD6CDB0D40BBC1DC21C999D85DCAA2DB22D3DA0B72579C472B64FECFC60427CAF54A37626F
84BDFBB642ADC2BA872CAAE3DD3F8CE038FEDB52E9B74B1BA5251AAC4212AC6C2E4F198E7E55
ADA04899F7D389DA90505C9035522BA00D6D2FFAF853F86A9DDB040B02A24254A5CF4FB87B91
A6DAD89E3C88ABF88C2FE052A0F8E65E84B5F498EB348F45CBE1BB1A6E0C61B7439EBB86E8A6
A9A57D7712D841F890ABC9E21938DCB304264B65F9BF5B011339D3E7F36EE0F6A58C04B182FA
C9FE0FA1B6D2A8C2061EA4C61D5BC1DF3F9F9E1318FFAB1232CE2082482D5C59CC42509DE0E2
053B2266CB1372CB586F2D6E312E462C1DA95403A2D81C0362AC9FF604F1DCD1A8A7C974BE46
0FE926DB168903582538BC2E1C98B3C1BB4B76759C688390189001CD3E893B92C48FBE6ED099
35AC6BA6CEC26258048D5FE9D3C2E8597191D5595CC77C9A001A2CD507A7342F6EAC63345FB9
4488C48EA078AE04FC4EDDA7723D0A7211C470D8A67DA6BDA246210367180C289F32AFC59DB5
3B92AF282CC7B4805E01A335305FF8799E6F5D31370B81E3BF1E95C87EB2BF1B8B2CC922AB53
A4D492A503749DCC0D66460AC9E3403B5B2DB2390F9012F94DE3CEAB2B97B6066FCD9A90EBDD
5F9D3858EB85B2187E361551191854D3F30C1480D41D8D4C2A566543F0899045C9CF100E0410
A547C334A971D632D205BEE44DD8DCA890E42EAD5D411DD561C6FF95462DD3D80B563AF3E4DB
ECC78C5F01C2E39E5FD90FFF170CA1425E199C56D514307AD0E7045966D0AA172E9ABD50687C
2E77D136D55C930A5F6795F26CEDE2FFA3C7FCD86FB28583E23251A02FC8F3FD7F42EF5D6BE6
D9829E3541E1D4FC806643752AE8F72873420E6583D7123A0ECEBB89B7BBFB5EC661A7354258
28DB16A93086B66EA21C1F9D73A2C9329EEEE9A04BFA98748B83AD9F1311B346453C7D767415
A1CE767F96EBA16FE954F7140899FB85863C66D967963173F28ACF22DFA68D845B335AA41B01
736FD0B8F414B68FDF4BFD0903077852DFDD95096988F673C9485EDFA786A13AA33A23B8514A
FD360295B571042A1CBFDD1EB0A2DB0E33440C8A642F0816EB348AB958CBE45ACF1FDC13F63B
94D92E5823ABBAA87114E507F50E8C83D699EEEF0FD0E044A32DA4F357416B090A4B50F3A356
E97C9A6B29A27AF683FA99F9857B5CC052BDC6A2EBC56A2E6B4A3288174AC67D658FA67A1C8E
D40F502342D66C47D001FA20F7ADABAECB829A5FCD9CBE1335D6F9B56B5C2C48CD9C770990B0
C55A7FCD8021E4A3ED14BA64DA93A13C11614D46DE4EAD6E45EDC6EF05F3FD415CD634BBDBE0
558A912A226DB0D6D44BC1B73C1C1C473C15A44F8FA2DBEB41C31A75013F4563A78630C5056C
DF7B8E9498A551916F7BB2A9DD003C5F148BF9E96274C70BFB86AA7F83EECFAEA9FFD7D5BA9A
A3418CD73FA083C51436C103CE37C0062CADAC1A532AE8740238085A010794D17979380A0207
6AEE9A89A158D334C1FB8CE7C6CF24F594BEB5AA0DB95C45E1F03624142465ED378B5A81CF08
A783DA8249C16F678F687154DCE0950E7785D16ED4BF344357F2D1E63B28BBB957C949720CDD
EFE00DDD18ED620C0421D991530354FF5D72E82D442FDC5309B439FFD7C69B0415936A69513C
9A1559A922273A243F909EE375DCE155A13A9ADEE2A117ECA7800000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: cmmi10.pfb 0 0
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
 /FullName (CMMI10) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle -14.04 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
 /ascent 750 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 16 /zeta put
dup 17 /eta put
dup 18 /theta put
dup 19 /iota put
dup 20 /kappa put
dup 21 /lambda put
dup 22 /mu put
dup 23 /nu put
dup 24 /xi put
dup 25 /pi put
dup 26 /rho put
dup 27 /sigma put
dup 28 /tau put
dup 29 /upsilon put
dup 30 /phi put
dup 31 /chi put
dup 32 /psi put
dup 33 /omega put
dup 34 /epsilon put
dup 35 /theta1 put
dup 36 /pi1 put
dup 37 /rho1 put
dup 38 /sigma1 put
dup 39 /phi1 put
dup 40 /arrowlefttophalf put
dup 41 /arrowleftbothalf put
dup 42 /arrowrighttophalf put
dup 43 /arrowrightbothalf put
dup 44 /arrowhookleft put
dup 45 /arrowhookright put
dup 46 /triangleright put
dup 47 /triangleleft put
dup 48 /zerooldstyle put
dup 49 /oneoldstyle put
dup 50 /twooldstyle put
dup 51 /threeoldstyle put
dup 52 /fouroldstyle put
dup 53 /fiveoldstyle put
dup 54 /sixoldstyle put
dup 55 /sevenoldstyle put
dup 56 /eightoldstyle put
dup 57 /nineoldstyle put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 63 /star put
dup 64 /partialdiff put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /flat put
dup 92 /natural put
dup 93 /sharp put
dup 94 /slurbelow put
dup 95 /slurabove put
dup 96 /lscript put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /dotlessi put
dup 124 /dotlessj put
dup 125 /weierstrass put
dup 126 /vector put
dup 127 /tie put
dup 128 /psi put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 173 /Omega put
dup 174 /alpha put
dup 175 /beta put
dup 176 /gamma put
dup 177 /delta put
dup 178 /epsilon1 put
dup 179 /zeta put
dup 180 /eta put
dup 181 /theta put
dup 182 /iota put
dup 183 /kappa put
dup 184 /lambda put
dup 185 /mu put
dup 186 /nu put
dup 187 /xi put
dup 188 /pi put
dup 189 /rho put
dup 190 /sigma put
dup 191 /tau put
dup 192 /upsilon put
dup 193 /phi put
dup 194 /chi put
dup 195 /psi put
dup 196 /tie put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C545D25FE19253
9D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB47934F62D1F46E8671F6290D6
FFF601D4937BF71C22D60FB800A15796421E3AA772C500501D8B10C0093F6467C553250F7C27
B2C3D893772614A846374A85BC4EBEC0B0A89C4C161C3956ECE25274B962C854E535F418279F
E26D8F83E38C5C89974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F024
867411453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC21EF6CC52
7FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C7B0BD3BED7C6D8F3D9D5
2D0F181CD4D164E75851D04F64309D810A0DEA1E257B0D7633CEFE93FEF9D2FB7901453A46F8
ACA007358D904E0189AE7B7221545085EDD3D5A3CEACD6023861F13C8A345A68115425E94B8F
DCCEC1255454EC3E7A37404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF
07BCD13378CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFFA1B6
F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E4062C6809231B8C670BAE
3702AE125F9780A706EDBEBD58ED7CE6464ADDBA1E380573B133BEFB3892A0420054E30C3761
851A1AE79D6C4E175B392AC53B76DAB7CA35ED409DB30CA2510DFCF1D58B730E450B533F06DC
31539DF79A10B87E47E04EC6B1CF1C46F7551A63E736E27AE222C4DBD3BFEC3CD512CB1DE002
A8D5E6B3A1D19FCBAFAA88DBEA497988BBD3DB60A671B3221302F55FDC4D3693F72228229743
E0C9E77C581B6818198778A4DC377D53EEE0EE329A4D807AA4F213B5EE8043DB9D0C8CB27071
4A7DE096545CE5C2C4766C89474D325582A907724C6206E1D1579CCCCCD755F449B08DA43DBA
7177D082719CA3D363C3059F1A90DBCB7EB0DA4B461748D39E5E7A4632E5CE964EF7D23A1117
DADC7E3B5C789E25E10AFD91B35EBDC85BAA97FE66678DFE3007AF95F2736E54BF3178B22CCE
1F0A4095D39D7070F140962D45CC6170E79B4FDE215510A0226EFE75F24B596436BD4F1B4507
31CDEAC504B7954D851E16ED1C28C1DED3E96000E2718CBEB3476D300F67CE3E9AF3A0A62703
A2C917F7CEEF7E12914F417DFBEB3FB510BD935973B1FC224CAEECC104578C61AB475A21E0F0
E3842AE875B0D501BC007DFCCE09C1683FBDFE6CDD2D18BCDEE417FEC839407443F7AFBDF059
E22A2428352962F28E12994D31EF011D44676A64D47E385173298186484D446049BE5DF92095
47EC7114D10CFEF53DD2078C0528D2DDEA99DB803424845BB971B9072EB7C4B4C21C3F10943A
91BAE4092082F9A824B03FC6BE7149ABFCBE4A60C300EDFEFDB3034969096DB3A9EBEE77FA38
FDD982BD0FE8635DE5CB9E7A0C5D1A77DCB92F24E081C131089562062C32DAC108E364713674
438733DFA1204BE8721AF055176D8F66E7C426F9EABB581D693B531844266C3AF03D29B78557
F7544059E3E71141DBB5F756D22740AABFFAEBC65CA518C40CB0D494E33F2FA7A7343BE3F8C2
3D43F76D4B5C75F93A4B49EC06A933F2168A3BE687031AD896523CAD3B0BA2091A168F9A09FB
DEE232032C6ED2F6D167E31E62B4B2258A4DAF9B61A9EEAB1A944F1E6E6FCE1B06E6F6C5EC7E
947D99BE91592ED1D6428C63D72575E5B0DB0D83C5D68AA7D48863932FB46219412214BF4E50
7408EC6C1756BBE41DFA293436589F032821455BBB852F79B8B5CECB32532EB9F66260E4B6B4
51BB41B911E70E58A958E7A564BC69361126F8C3E61C36D2E216E9C0581CD176CBA03C66EFD3
AC62DD2A9E01244F91F7FA061E909B6241BD53651244BAA2A1784BE07B059FC49AE148A7FA58
41C5248390B3ABB8255B8292EAC87598B6FC55D24136F9DA482552BD8F2C53457568DD1F323D
0211EFE93156AD021E8622F792F21E65862DDBA5EDBC94A56E426565D47FB9586748A311DB55
816F2EEA29ED07253B440CD6092D7339850F32F9DD1D0E218348A4AE2A73C518393F19FAA57D
BFC9B8F879939557A744005878384A0E87BAAB534E5B3FCEFB11CF19C865E97DDFA3FD3B826C
32936EFED8C95D58260E95ED42FB787B1A98351DC786028D978CEB9972E88B9E13B711DAA277
796188D20E9C7296D35ACBCD4D1CD7D19C3BB3B5D572F1CAF8A5D6662B4B8664878A86E3B051
ABB6AA9D07C292C3EB738CEF804B227CAC1E63753CF8F1F715EB9CA50981A56B9B87918D60FF
03BCCBBCD56B48F542C98365D76067F6A9A4A5BA39BF317A88BA20EDCD4844F4649218E7EB03
1F545933E2696674179A7E0475C42DFCFC52696ABF07E5A6F0267EF858BF733B13C78E49FF57
1E61344FD7EF13B48F29C08AF31EFCED0A89C9D9BF270947EE262B3B3CC5CA827D7349E62620
7F7A277AE4E48E0D364AAF82CC718868F12B9437754993FE918937D152B509F0F7CB714941B8
56F71EDAE36137F8A29693BCBFCD9D4229E4EA87B04ED14382B8C671E518249CB4027571DA99
0334A3F83F5F57A015D0FC72E7158C548CBCFF50664B0F8E0D141FAE922C989779D4B82252E8
69AC9B34F5C2AC136CB86EFC19C7555AAC09422FE7EFA15CA7138918F809ECE45E33AF72B9D1
853CA35C187AC67623AF11DD21EF46B8336A38FE7B38601E40EA0DCA314BBE1E98FF6991E9C8
A1B44D5EF00D5BEAB8E2E79540FD52ADBA0994BC9C63DC3F010E10D4B4838E4197885A7C01FF
661976F03186BBA8ED2A3E0C2082A53A60CC6147B17B6D88C4ECB0BAC71FA26A727E50918CC7
A17A5D617499B3ADEF13E131B7DA17C25A12F6C7C135CB71E89F9221AD2BC92AAA14F2E6D8F0
60763F5CF5FEF92FE4B5071D34AEA90F73B68FDA8BEE03C2FD6755A297664BD74DD9FFA4ED90
ADCCD20DB68C868789C27C9AD6D1D08E1D26C5CEDC1853C358666B979C95C0DB0F92DB44AF8A
1F8146C500BEA331B2A79CA6B90BF57CE7F9B975FA42559A918E1B27E595D92D588896464A8F
6A119AA6B88A69454B0ECCC10C2A2454C48553FEF9E5F73DB77277AA39D2D21723DAA7234185
D3985B0DF9E4295055D6EC44487DE4D9770BB51D4039D957A97D60E7FBB03F185DA2D9829970
BDF0AC31C0A5E4037DA595C67FF45174E94BA58AD7972667ADD43A80ED37CB809AB4F89AEDCF
2F4A95599956E49FDC6587024E4DFCCD30F46B4DC205101E026BBEFCF4C2F30B2A05DAD35549
0EB296F8BDBB84D6B2F035199D1325E1E54498DD98D16E6340486D2A57F70DFFCC9BB3E8E416
FF1DEBC2098025B985206EB0A5BA79B9E73ABEB0362EBBA8323F1DA75B3047868CA6C6412A38
78DB9F52FAF52219F63D505DC87852E45AFBDF441B0D8E47716D800369F86C4C90338CAF2981
C77CB506B690D22751C87D0352A021FC0767FE3AF39D42A57A3A3357E46A36B9A318D0C8A0A4
7C1C3FC8868545D5B2CD42EA573619AF5AD385F3917756B82F60B16E7A33913D9144B2FCA93E
9C75ACCB70DC55DABB5B1E84F0BA757954593BD61A53F41864659D9F1BC293417B4D605F2F67
D24CBB745CEBB7919E9BE1D93E9461181A3888A271E7E094FA64459385FDAE96D342ED2E593A
EF5B0F5A2D01686B696461091A16DEB9FCAB20F2632732B52637E81E598BF7C8F17970B6E3BB
3822F2EDF69EA1746819413066EB2ED7B43F1D450799EA12EC58DED38B5143A90896D806E37E
F1373011E180D06231829F6C2E8433E9F56D7A61A96C55463EC5E6EC36695BECF3E7A3A4DFB0
63C30986A5C0D1103F31803D4457AB0D72C44B1BA2D1F0FC740D98AF3E9EC01F84FDD6EAF479
48236D988B400D94DFE926EC2EC38AD6DA2F374441620990DAC5593CD34E154C3FF004E9536D
6B9B8B41CCD0C9AAF237299B91524E39F867DA0C0CD33B05646A10B13CE1DB4D9D82FE29D528
8E761F55347DCD040928D34560C87C7A93ECF8A1D31086A33D2BF9F9E4CD06B11F0F197E8EC2
132AC23976CB80FEEE0D68A30434C276E4AE9D46468397934F8856EC2E482B2381AF05C58AF2
ACDFE0D758DBAC363F1817030BBD26FDF5819633C9827E27B1DDB43A56DA5001D17B59A6B218
D2CE2F47C5308235C60EA08B24736176207EB3944C0C2B0A2F5DB51EB2DD1EA27E545A4DE795
E16061FB48496472787E4D06DB2927700CFD5C2BE68FDF12038F06FE86474186F647AF4ED1BC
1C8B446C5A9CF538A9813EC2142A9781A88D524F8B03B26D2B3C5F66BE569717CBCCAA602876
7D5D7A4BF00CC49827A766E67C6E98542A06B479D831754AE7A895F6CE275F3F03E8F09A5BAF
9403B9030651336D8F4B3F8D0DC2EE50CE8593D2A365652360033ACE6D449BCA26BFE2908344
BB6D46AE7EA36AA4256E0DB5E5EE1EE666C302F00C782D02C2A251B9AAE9DF91EE1E58BC17A6
6AEEC65A75A8BD1277B3B3247F57A9AF643ACCC2AB63462E3035B2E14482B625A69934744B0A
A98113F919125346C854C73F7E24123E70FBF97BAB700B8146DD010F4470B08E4F95B61675AC
033198B0871766002B6688B17BBD2C010A44CA430D763C3B4E7F005B7BC21A8F91072FB3CDFB
B83F5B92614683730F26AABA94398A506BE38A2A6393FB78C46B12E2665BFB3C543EE45EBD37
AAF6DD641BBF996869ABE0983549A76B1BB226DDDD7BEF928E06EB9C1B185BC3CB9BAC42B9E1
63DC13193F824CCC82A16907AAE7352799F2510746FE287BCE1097AFAC2C5CB2E163637E5626
75F81AE43647FB2FAF61F0572734D41258E0F290D2F16E653FA7451991CA7149CE3911A0D943
761EDF2F1045F274BCE511C8F6BA6AC76EC5C36CC7D18E6D1FB151ADB459D5D18715F9DE964B
4FF2E7529000A29DDD0A80081D3E66919A2CD2D2246DA276E42465CA9FF24BA1112896BC8B84
2424E8743153B0B972BD829AAA296AC452ABA0300BA89EF0745CE65102BD2B5C74CBB0963D83
E1EF4B3C2A58D8055E696DAD94861DAE50234D6565CFB7AD2947727D76482DCD5AAA516088FC
A6AE15D1CAD26B869FE82AFD428D0A077C2C490D260A75BA834B7433A3A698FEF7CB1DCD2723
2D341939409FDD8FEECC663918FEC5CB68E7481B9C97A90CD7074B2E972D87CFEE0F3C2BC0C7
44E1F720D7F33B88B2DF064E121074F338AE0C57AD3731855519BDABC623AB061D027DAB1B8D
5DE267ADC44E93A675680CC40A3D1CE638F5C565AC3485F048BCF9D485EF2D72D29A0CFC31B1
9171307AC6901B2E2F275F6907E2B9DCFC471133A613F62ED32DCE4A146ECE788EC534D5C084
4A08C1BFC8CDE3229DEBB8C4125B0D10A1440FA313B0377074A0D890EBA590CC2207C3D5F825
CD0C846A1B47E885EAE2ECBC583798754A64702BBC3C032D4A489FD986CB7FA37CC4B633C8C8
4CCE56EE6A9C53D334E18DB204E43F2D084B0AA0435E1E5009957AA0487C7B654008F1B83B7B
C5EE4290986F106279A994116F2BC3B36ECAB14E1E5A6F57383983E0D48520AB39E999D248DA
7D1D376C28BCE9B74DB2D38E6FC89D217F948971526087C02D1B4421D2B81204C1A210F9DAD5
65EA8DB2A23BA3DAE525331DF23748802AEAAEB7C457C9595580E1F903D6C4718FB1843D9C92
80FB1750EEDF4DF8D18E168ACC025AAEF11E7D57D03D3DDB7B001B7A6DEDAA0E443075C99526
BCEDA1F1EED6717BB775A141B925A27D61EE376441206E18B23B8EC62D755A250EE1520CC279
A6F67A3587F4A43439C194BDF6D9D95730CB744F847EECB180A241D1B3DA379EDAD4C43B7838
5FE83136F4091AC9313E40F3E39A3EF1C5CD95CFBC350369E6F5435BC36EC337E8ADC69C2BA1
EDEE45B6E858B76A10FA145B9F029FE3DBC669A5F91ACE7ED62FE70AFD4EB2CD683E50B5BD7B
2EEA06D1A2F2EA3F2509CF8C5E19219405AD7FFFAE0B22F738C4844D89EE709021E9F6BD78AF
46FC120C37AFC3F29A315F801D6B2E354448D5EECCEFF62C43A016FD810052104CF9B0193885
BFB7308110B285F95599B5CB732C856C70E665860E1F88EAF111B2E3145E5C9BBAF4C53D789F
7DCE86D8700B1F741D342C6E8C17E89B3432EB47CF263D11486AE3F3EEA479CD6DA86D1ED0D1
403E5139C0CDECC5889DB49B24EF64E06F9619522358375FD54AEEF7984A7B4998058D23B065
BECE937C9638B9380C4AB40BDCE27E0F09D160121DE52C7A7FD8F9DBF47D78A3F89FA2778FA8
65CA61CE2E64A420E60E1AB30633E632992EC7CE37AEE15456446664AE34DC0DA2BF08AFBF6F
6BE4DACE7067BD1EF1B45646F99E34754A4C434DE88507755207C31BFEB8CD8DEDA6EA06A719
22A38FCC7D33E6EBD78B970FC94528A8DB5D12D2B8222CD5AE9703D256E8D75945AA5B7E87F8
07981E551C767DA543AFB0F87CC4D9D35DD3D790AF115E9688732FA2513ABD5E001F237565A9
078B782198971F8599C23BBAB1C8ADC098688B59619C07DCB2137ADAC3A0F83AF46E7B9E420C
70D92E5588985D94DD7D1DD46361DA4FE7B3CBC1F887112F1ED0D5BFABB41C088B40CBB45D2C
1D0A6114C2D613A91BA2F1CEEA5F0FAAD1D4C32AE8D0AEEFE4E3EC36935C209DB4F8AE49E279
18924F4E9BA0C813519B7E0A8C71C3910BB0970E7E3980BCCD990245C28F7676A77934A03D60
C634A478BFB1C7FC811E65C5770E74ECC042F51183A8A570B986F27D5DEBDE77137BE74BF14F
3B92C30A9C1B1831875F795A0C141E0833DCE32A2F396DAFB4A3ABBF023E5795BE3417AAA442
0E1075E8EED1489A8AFF4FD51A54B517E737B7734C4ECE1721DE9D7DA8106BC326C8B28F6D1E
C46B903F4CA044F663C03562132A08AB8CB50ED917470EAE0F6565BD507B02EC06FECB8F53DC
B01651EB79EE4640E8E1985C2ECE04D3CAE9616753555F1E34E75EF364FA93711DB9087C713B
6A69CCED8A5185F54D3299F9531BF7EAC47BA0C27ADBBF90A4955C986C38FF8EDAF559CE3095
BF7A695AD178472BC5709D0ECD90C7C537A4F65DAB6A81E87E2355D2854EDDCBD9173676C779
C5AB91DCCCB74A35E2134D2F19B6D495280BD595CAE39BCAC779CDA2C61A3B6B62CB34DE7D3E
7AB665D6E460DD8522E97B27EC820A6CBF1FA75EF0768E92D3CC78B8A78D25856E371D7B9480
68E17D071D62ED07E307F73B7ED49C46D9DBB212FB89C5079FE0DF25D2D18D5FFBB8E82CDDDF
B72F1D1ACF10AD23F2CD2CF003235E3E1518A2A46C95C7C5EAD396D0989DE2DC6F1EDE08D2AE
1C763D2528F49EB3C6E5ABFAF9BD05A3D9C5CD27846A743EC6CC11839AF6364E6742840420A1
CD3CB76D9A1C548ECED1911A4F03E5FDA3AE0549AEA276EE16A37F31E1485BD5AAA9AE3AFEB9
540D08D43DB9EBC456BF648B6DE6A53F64AB5A65F756AD68EF9B5A01B8AC9E54627ED1A6DF8C
FE87DAC019A6A33603D005C6B492609380D388FC68046495C8CBC4C050BE8F6260B578BB4150
5CE0BF93FBB5E75F6C237C8EED48AD41F91BC4D9249C190316710225C4C3CB3F3BB5CE41A81F
9E885BDF56744CE20FE1E134F31793C8C92E671023108B9EAFEE63E93D8E2E083ABCB78F029A
28BB3F7360C510BF86A0F5CE584C959E80AE6D048D250A0AB3899694EC569F5A60FDC91CEC7A
A8D06D3F20E4C5EA037ABD6A54F5330A04DA05617BEB1BA01A8EA4CF94F1318D6D58BA2F4980
242F2F39BE32A0DD3AEC378B08C916ADA5271ECF7AD07B0BC2D74BAD8F21D6963D5A44B80ADA
5B7792642C6ED391BA1D8C26257C8FA2C9628478C1D3A04583F3DDD5AA9BBDA20C8AB1CF2429
2E3DA39F0AAE89A2BF2707A2A0B9F99A7E4AF7208588A0DA8C5E58E1BE9A934F659B3FA24F8B
C762447A1249CAC524780A1F27EE4F3FC039BDE351DDBCEA00EBD4A0F65FE6AB022AE73A65D1
162C95C48E69C8284A8300216035F189CF3B4A051E3DA7AE134145C93A9D36BD71887DED330C
98638C065EF056061AFE4AFA9B8C5422B1DC82FFF65B8B276FE9E560BA16573295F76F7C8826
0621587FC16FF6D48BF9B8D258E120C3C1B5385962B6DCFC453DEFA99DF6B76D0987DC232178
A078C99CC3DDC5ACE95A878698D5F83792BC666778465919400C21CE472097DDACA38264B4EF
2F0AFA898C8137404E4BA18F6CE51FEFF96043D0015AC61D7671A40A13FC7E10ACF9E778ED64
5AA1184ECCA49857A84C6D9CA2A0817887BCB9F55C882CC665A6AA8FA7988FD05797AB0DA780
23E249A6D758B036E8DA6C035AD861F21616CCC988E29D5060813FA27C1D9884BB0FA3EB65D1
FA0ED45D531439F600F61C14247E632909EA78CE4568A3642551DFF34F1AC5DA759CBE317F5A
44FB1233392D62BAC0126036564A37F263BC1A45093327484763281758727B11A4A8A4EC4EEB
85A418E6D008B2DC93191346042AD7144F4B9BF6961A45071055FA029E53DE2D2FA9D92E65C7
E7D14E7568A003A88D25A09770456DD457469896108D4EA5F62DB179C9EC05D87566D0FF64AB
D151041524AD6BCA0EDBA36CC2B96315572528C63416BE8EA4B48402844D7453035C1D46E821
750FAFBA9CC104D0E0E770FA802BE0D09B56C556D32CCE3268D06EDC9C961F8F34A682439A26
B12C076D2FFFB098EA0116C08164A673187892078979BF133A59AD48821E93584774ACFAF0A4
00C8557D7C0D715C712D4EACECEDDC049DC8A0C019435EF5E5B042B64B376B162308D41EEDFF
2FF5F7C1B2309B8F86FDB47F905A0453FF2DBE0EF364C1CCC438A3EC818046F07112EE3CC218
15CEF16A7AB1D6BEE1625C57FB3179BF7B5701D0B47EA3BCEF53D6B455F321254CA5976CB3BB
53E381AF19769DE275AA44CDE3BCF83F7C337E59058A2E5A1F50894F78EB461C37C9E3E63C79
F31E76BB68A767AF96EB097A8D930DA33568D47324B47C81CE0DAFBE3BF007C55FEA4B0A0BC3
908A2FB97263FE5F2837DC90C1F81F56A6EB014AF134E0A8E36E2A8CDEED7725755F776464C1
86E92D66DFD5E59140AA63C141374E1D883916487F33FE14567F18F10C1F39290B988399B275
3802A1E28F5643412C907A02AF184F44CD506CFBB13CC7413CDACD2EEEDF3B160B01FFFA5222
C4764E652EFBC89E44E7AEFA9F275F2DB1E5B95AEB4A7088D1EDE5CF40D7ACFE4A3482A1659A
570971CD5997F89AB3D20E77398215364B5814FEA406ECD4BE1467A41BC9CCA2D48E382F447B
386AE5495E4486B02871406ACA754A3927FF0A63CAEE3F33CF6334A1AC3E2F7432747CECD5A5
C39ACDD151341A341DC82EC8E951A2F5356A75124911FA1E9AC9029F06EADE0D2D5281A2665E
0E14A8491FBF84A24CABE27D908B7DBA52377C6E95AC3B7486902006C5E40C4B235444E30715
3AB4466756B5B3B45D77770DA48814B2B908DB4665FA90D14872F8A82D452FB2264195EBFA0F
F9BF255A9B773CED969F9072CB9A69FC23092E350287FB55F5BAF7B2287209970714623A8861
8780F4A52A63936A009A2889454022DC4B88121BEAD8C1029208CBCBF43DF8B27AD576AEADB5
887B5C3011F9EE757F7082C8280A0DF6EFD62C5748F093F0EDA116D0915BED54C87257961D49
D9A78BD3516DEDDBCE1995D8DEBF1C0021F2ED25835EE7FDCF6237167399069075D892E33BA4
C81EE7537EF02190ED04141DCB21DCE6E4978A86B94B0BB3C08B9CB270E50909D780B0556AFA
77409C168B61E4D6B81D4371D1667C6744A55EBF628154416AAA6EFEEE7D0BAD3F5FA4AA3237
1893D9952BDD20ED383ED83904821B1834BEF0CBAA0B00EA1B7972990686477F6C233D2AAA9D
A87F589446A89FD3C83647A8F86AB1EF20E3E9435374BAD83E13388DB4ADF5D211136474109B
DFEA1EBB21B97702EE3159A4719F169B0CE3A141CA48316EDD73C8AFD576D7A4826677A1ED61
4CDF61164679F34FFA68E40A0476CDC04636674AC36AA22122376A0299A18DA803363D2C8957
3E5271C57DE0F58750E33867363653E1A717CA0262D0017F6DB8B4A8B705A084F0354708A49A
03F0DFEA45216E50DA8633BD448F4109AF8864B7749CB7A0E8EA4D9D28ACBC7BFBB42CCF7D10
5488FDF1D814FD6B2F47A9569293814D6D7FDB952F5D85C4BE0E437A022A394678D2C842120B
4A2FDD89516C5F00228C6365B7F60151D451B272A206BAC3255CF5D68FDBD4B89C92897D1736
8EB84C740BC0421FFF27A307C640BA27C4EE467ED3BAB502E0BEB8FCB8946593C70C8A21BBDD
6B77F21DEF4AE9F2530F51E95DA7B8A85134F695B8B16DF2E10ECAB744BBDF3FBFF4CDB9A091
767C7C9C8D3656A1AC5E277353DE528943ADEF524A41666DC5D10276F404C0F1F1606CFFF798
3F52436E5A34EE91D0E4AF98561298430EB63E31C51C4BF9E65B9FC8C9158DB1918DB3984C62
9794AF50C43C18611F59F1E3DD200153EC9A6B628D56A46AAF1276632A53453EB3496DCF4F21
74F3B86A5D4D14E67EE18F06C153F88DEE9A91AD36A793F2B3D11436CBAF71811B3742C8C578
1A692410F18BFB5A751BA7E977A37A270187FB97EA44ED468AD03E0050A3CDEEE397B377EC23
CF20EE2F72ACA6B5129C6A4ECA5C7B5C4C9A03BE54956B638B217D51D416D79FB3D069989A03
63FDF688FC3D61529B08036B1B3B8B0BE0101DD9F5CD0260FB45044E09FE59D6ED39F9C66189
A5850141D33CC7CF390576A052DCD55586C90188F50088D6F038C1DE31A636A042266B834F93
39CD152A84325BE676FC6C94312E6C5582E3D063FEFE33E321758D7CC38BAD25DBCE0ABE021E
7F17F84D710BAC4CEFF5F44BB036FED06B6614A1FAA68A7B175378D5409D983BD1775FAAEFC0
8B93C7EDEA64FFEB7DE8105F0AAA9F8463D0CDEBB37DA9494C42181A2AE778F738776A02EB21
70D636582B84DAA97F91ABCEFB09748B8660B4C59D18FC35D6EA7EABD2DAA46C47362B6FF034
E1E19ABA030E06418148FBC88F331AA341D4471940446E4BAA085867C020699401010626FAD2
8BB1344EEA338F7309AB42840D60648D1AE5C3FA516E4D96263BB411F5CB3E506F639D3C399D
6CE2CB00DD6E555A413D3D0A52265ABA30FA0BD32CFA9C890D5B0FEF16C98DCC205023CE26D7
6AB91C343CAB3954BBFC473EB78A31AAADF1146997BE3E214D99A95B32274F289C087E6AEE97
443AFDF046F923069DF8D162A2B4A9CBCFF1A98DDF00F13972378F76CFCA501FA81867E7AF04
6C3FD1FF8B4125F0385D78DE487C3EB1A4EFC0F0BD1F9421B0B3D38C48C5C54C064F4941F55D
46A06B8D4369421F1CDB123C143130D64D1A9F0D69D8CB77BB18FC678D5C4E41804DCB55AD7E
31860B855696908A2255A4D4016D0B547C7AD0029EA4B8F08A54FFE7CF12A00339087A132C5A
8DA7ACD499EBF4D37E73D3D3F6F3546348A9D0F842F0249674982FFE0713E1CEDD0313E507BC
85069D70FAF8F8A2E36FCDDD22AB9C1144D42D72681F464760CA78D0A8EA0EFD0797DB43F50A
7C044D1421AE9B41CB7F23F18978442E65A962F891A6E90163F70574236DA0F536AAF7402605
BE6D076CC70ED2935BEB6CDEC6725CC6ADF5DAC73052EE0D073E07E953AA9FEA7E88588E98B1
9552506D1F2538E14C1D80FB7DF3B7DFDBC348D46F285A1543491828B072F7D42EF82E9EC755
CF05A292A26715B42F56773BF86562F41AE18A060DD7F2BC5891419FA1A313405C76C056AD2B
22AF876680F8C28689B4AAD1AD71B294454F305FD382AA98405D6A8BD80BAE503C39D570A8B7
7A7E17E3982A576790634BABB2C82D33B1A1B25CE073002A15BB536D75233DD4D907B81C6985
768E76C54FB0AD83219C747CBBEF093B931EE5110237DBAB1305E6668777B3341748034D05F0
BB4547E485E975BCB018443A878576F9B85BDE41A7BB6EC20EF6369F795EC24597E7FFE309DA
42C01CC7CC46FE9DEBA8B8686185B68D37742B8AF331354FADBD843119620127AB8D3123F121
D88EC489CA76E0212F4A7A69BA6A1045AF054EE33AF6D43C46866277B947BC1EF241E556DBAE
8F1B5F5A57EA1E76A4EF1C06A926BCFA464610F93432AA880BE65213C15CBAF727E9174DFB8D
7B16A11C8394054CB6BF57A8D8A9FD840D21F9715773C05FAA10735C8486A2A67F925FEF7C43
79F3091A456622439D8FB7ECA200FA8D26B63043DA049742A4FD9E5AA5DA6353024606C9A2DD
6EB9A20A392A9D3C0B8BCD02FE28491BD822EA387B5F8831AEE6E419F8E7F7B2D87CB9DAEB59
7F50E413F78108C0EB03612A18AF994902ED5C91523E070407488DCE1A7B459F9C1C483C7F3A
C4734F8F979CB87344DE2F1E81560CBA80F940945787F375636170E2A16315E8526BD42AD8EB
0A1B00FA47BD3CFA00571A91BC04462DA38A41944AB6E6A762FD34E8B2085690CC934D4420EC
52269F6D7ADAF02D7A48464778AC9690EC14350221FEDB06055DB4481672EA0FF6AC2105A124
ACCE497431BB6A21490F8D76B6BAE99DFE5F4A1F91B68E23EDA04ED030B757F427B6D1734097
0943CC90E7C9356A3E8A49C057532910FC54D05C9F604B7FDC6CBA5C52F82EF7611D256C2172
7A4B7F7D2886430087D3B02D44B3E4EBF31D3185418224100C32A176DB8ACDD27A3828507607
B8A6358361EDDD2697DFDBDC928BE154BF1232EB37CED424BD55B2879DA7FE7C30BC82A512CF
1E654D0CC0CB4DDE59399B55BB9E53C9469F6813E1A881599B2F5A1C0CE63F694F288EACC9D4
D691EA5BD5E4D725C3939D5C2B4EEB1C27A2E36071C99764EB61C597D5DD0EAA594FD503ADF8
52D6212E92C4021D3D755B35FFFF2000E67AA8C8A8F887907125A703FAEE4701DE5B054D7223
389D076AF1E78CE229D2B7AAEDD3B83B9FF16C2F100C552521BD8EE293A019967F783D5E73C1
174AB8215BA5496520EF03ECE4E0CC189B3805209461202ECDDBFCDFFEAA81D73A3E2D7A2F0C
086417454D7F90449A7FAAD52A2177E07A2289B7A2A990FFA14ABE6D48267F2A3DCEDBF4F75A
A4006CDCB985067772CB50A88145BD8F799F545B6FA34AE773E25E48CA6C85320EC48560A051
B68E0E06F173133E2879369280C02172905879DCED8ECAECD8906F80ACA1DF9BF626F5510595
861D88C681564B868679E5522765A809B2DEC2A107A2275FB7E5B1768E27E0684CFDC2242132
5E1BBDAD855FCB0A4EC08D1F146CEF2CF68208F87957A6A15FE1E2755C38549AFE1672D99C2A
C75AB8F1A33E2907B78BA020BE9DC1BE3EC75982A5CE6AC241A050AE3C36D885EAC4E73F0CD5
E21F1773F8E147918D4CC694403D0EB8BAB0150B8CF48CA91F9BA174003D13CE9F410A5AEC31
296A164E6D611C8527BCA8DC71A2AE57C4D7C9DFB85EA5DA647ECEAFAF417B0F6A0F70FF771A
31FE63F6896FACCA9647D2849F3E6067308F0A26A151DA800F9C9902475E6CE9C73214B7579E
7C7A019798195C89722FFC804EAA1BCE0917DEA7C6461E7E6A30D27629010BE7B0E2D8770B49
F4C04D0FFE05FFF2AA626F05CC3D2E4852A9C0D61013227ED4389A3061620C8C1DE967D227E9
4FFD522AB24F7EAAE9BF4203E1F259F5CA16EFA197DDA8CA0519B6F337C5A2B53FB855BBFA65
1B729C88433561DD962B347294E8784C1B7E8ACBB856A567A9D8A2CECB86177C3E63864D82A1
F795B2B67E6FA4E700F0C64B051D830D5F20F214C109B6A16D3EC5DE0EBE8E1737162CF7133B
5EEF94101E050AE455BD4F90C9CE7B5AE34F114491BCC80B1422AF8921DCBD0850E30F986716
C8B968F77D7977F825FA32D5826C2F4EB3C0F7C78850DB3D0716F6A70016A7A249712499FC52
9B928DC66E388D47D00EF777BB0CC69965A4C4D737C1F9199D677552B91A9CF7FDB8C03851B0
8006861EB360998794CE0B955C16CE1F6FE86AAB4700CF6E2BEA44F92ACA4E6B779454E59FED
0768F578FC6856AF8BB2022BDB32B8FF477595FEBFD382CAADD04C695132A206D68A0CFABF88
C8A78063B2DA93B3D70DBF77F70AFBF179BB0E0B99B88D3654F7FEE3CA18A6243C211F297898
CE19D6A90D4C5744F11C8533780F6D6BD712508DB98966E163A9136991CA3066B8270D6A5AD7
891FC0D6C241B2085790B2E9632FC8A583CFDB200841E01EC500E67D3DB1E5EFE36D708C2424
C896FE3AC1A36D798C9BB027F3EBD7CD09C01C2A9B3E8ABD32044F0822C6B0FCAB6024AEE7DE
4AB5A1A5387BBF87271B5DC4615D28B825C0610DCDF0F7F4CFCE880F79EC3217C2DC72193441
FCAB1E76AC8F51881A10D67687E1168D7D5408AE252686303F20A8F5E40C45ECB3DDABE89582
98CF9853E5D0EB6645E392228EBF0C0071EBB8B239FEA5A4390DEE73C505B9699E44369EA33A
0CE909E1BFCDB5DE6E949B02163650D6ACD4E125D9BDF310368C41E601C26A9A150843CCEC54
035DB2101703E666EFA11F070C375511A62AF1B10E8E590661BEBA214606D093474DA3C8E0D8
400DA49745FF02BD1859530AC09C5E06F2AE5AF23858E108D0044DA583B2568EED4311DA1028
3A87A7AF3D486862C322289CCAE116C89CBA36C16FFEB2A511925A981EC533258FE80A6E75BF
EB4AF396CC664B33AB4F8A161E715410F55A702B4697E51898CBA67E345DD272ACF6EDCD9F47
4378D4A97E9140CBE2923CBAF1158BF6835C7F5E3E8A21649BEF43AB7AC13F481F85C26D353F
AB2625BA6A5B3A553D10D6495D2EF4868684BC25392DD3720C58775E693CFC4E7569F569A26C
B392AADF1292209F27ACE70084142DEFCF0E2B261D1C8C764AF52B63714A499ACFA62F010A83
8E77DDD525DB1C4C03D33D551A0B935566B37874B9B75B8ABDAFF6B68518CC581F32C7E2E2F3
D3DD3BF7EC74D28D4763FE1EE50813D9415734560BCBB5A52A823C1EFD8BBBACDBAC34E20861
63337C50945E7DEF65F949ED9EFF4BB11C36F21346C1EBDBB80D937BC7A485CE7D938D76ECA2
001274528D30301DBF65879DEE2FEF93B031E930CAD083ABC10545F9E6F5E65399B694CBE958
BE5273910934D9F58BE31ED7963E5A59BC8E40EF77AEA65A59B7778EA4AA54312B47887E3311
9BF3E1BE854C4282FA71227207B75AE763F8D5DBB10A091CDB0BA8E83E376FAFA00754BA34BE
EECCAF0FA84C68981D35112E483933A571F08D551AB39003B6484DBCFBE2396CAD864C02AA99
6561056DB2588BDC2175D21CEF1B8DBC9701BEC6A41B1B8E128CB3B17F4B17627F8088801102
170B13431BA9B1DBA850A74F4E5D1F69A9FA83D28D26E4C545E3BC40FA4BD52B93AA9D11A114
ED30134C05785867F926DC0A1462F6241E81F0F0D9C8378A9E02EE09F35528490DDABC52248C
12D0B070ED1A6EE3A59B7C6DDC563767983DAB24E9EA254FD2ED4344ADC6EA2E815DF3820C37
4C4C6EE05F0993FD864FF6BE3DBEFA77F5BE949C4BB8DC9511A5211BF561BC025A7372EB8799
9E9419D671FE53C4782510DE054A1BFF97671BABF428B0522E85C3010756B6BC235C07443E8E
27D00322C392DC724627284141E261CC83AB49B65B8513192F7B53A4F70E4A41DEE8A7662373
334B850CACA3CA53CCE3EEFBBDA2C041CC823725E2D5BC9BB8F33BB18E59E507EEFB1FEAE5AD
D86E77406C4F9BFB791D14CBF827A12B6C8BBFC54DC8916A9801FBA958AB26C2F43A7B927EDE
A84985C3624FE9EEEB08D0428519CF426847DFF0B7838C9C18A2EFE7C3E8ACB68E95866B8CFF
5E5E567BF1AEDDA3769466DA9B0108974429E7BFCE72A309901C67ABBC61365325EC26078148
8759050051D22F80915A2677CC2C27BCFC79C07B871D86340AD06E0E53FAC4269AEFDEBD3DF3
080CF9C7D96178C5299D8DB975572995E5350195BCF4C83F16CCC823825B8AABE165CFA4DD4D
1651606B834F6EA375F774D6961B39B501062881D70A15232749BA8A43DE23D3F4D3EFAFF602
7F6F1FB9477E2A1243CB2E7772AA8438D31CB3B7D11FBAF0CC1F0ECCB087EC67AE9E13632451
BCD534AC7B2CCDB5C6B6C6324002EA2FFFB529BDFB7A7E2E9BDC7A6B46A0D332DC4285639252
F3BBA3357590320BF8650389103771D430D8C79839F74AD77B27D3C230CC8E2D5FA25C582D72
3433C732CF0E53B066C56B7B4DFBA2232F6F21667BC6F74D1976D86E21C62447E8EF2092CD0C
8AFD8533965683E7B108CC8EB4E384727E36A025B786D2F1197DFF1F85AEE880145D7DDCB02A
780C87A53E51EBB2D2E99984AAD4E0D612F57F7CD72C3045EA63D9B648D72F7EF57B5E9687A9
354D468B8F6B35510C53AD8D9DE10186CA1ACE62480F6BC57FC9D26D831E9E9A1060B85E94F8
54A67ADBBDCE00D1BAE12B04654944A0C88A1BB6B95E73140E4FA21043F5ACB21B6A16598977
558A10532BDF3B604637801F9C7F4304F1F6C7C01C431DC8495AD308878D0BC8EE61081D1BB5
F1B60E0FB209678684CA11BB2B57E80131A410A51F9262F16ACE34A8E9962E903799D374369B
1DE57C3FE9C9C09C7B33F4AE3D02771CB79681FA4986A4381146A02509D8755324C32808C3C2
B41117969B4B33E29D53256D93C20B7F28BEFE788C2709229CC5D96F7C9761652DAFB0558946
FD6B51DCE07474F42E90AAF2B9ACBE87130DCCEF8F4D2720CC2A89FCB37DBCDEAEC7F44A1E73
230D9CD11DBC5A9238868E723DB31361E849EFD2C97801373FB28184793AA82DE22FA932504B
D558C9D46F4551F9A9D9C012C2A3025119285B17D7F0BFB1A71D988D1149C1641D6E76C1849F
F3E3C5D15B22A3E0B0D5D796903BC96A1907144E32263F5185BC2FEC93F82C7F63E0230C8C19
27EA8EEF440B7610408282D06F1CB8ED9CF1A65683C3CA2E875B269BE99A042A9B936B9AE5ED
7FB2F3EC1C01C50E512858709ED2154185C2CF22585B0B3643C7B642A7AC808B8F4930FFB50A
05875B03757886B66A5D1DC99AB3444A0631C3DDC29F794300736AECAFEE7D46FA69D7E39BF6
499B2147B7013A99378DAD5B1B3CECDF57A1B96A4B2077441FFECBA1924D326A6461D3D89C0A
DB6B9992285687E54372FB449B2820C94CAFF63B2FB49711000D44E3681476812944A8FA28EF
59482237F8DCFF59F1AD81AA615BF460E2466225F07A9BF084D348158C6CD4790598AB894E33
0D1758595CC2F4922C9D1566E8FCF6A8460A30977DAC988021C917E255FE0E1F7E0E6240838D
0F4D821067927EC46753C952CDCFCA4DA2A99BE0436BC0C70CDCCA1DC2B45789F8A95ADDE25B
752BABF81F9BE611161384D7EFB8B53C300612D53CFA142918850E72F2975169F6F7440117BF
0611F75469FA6ACECAD3A3ECFD2625223D70D0614C1EECB6149EC4A52BEC4A3F229E5BC292DC
9572E63D43202CF30FD1073DD1ED553C80E33B08DDCA87DD3863B7D28087F68251FD49EB3F83
EA92577457DE19452A87564A1257DF1796F73214D4688870CF681AB39BB0B1DA8D2999D93D88
F83B827E2CE58D46F84719ABC5F6D8FC62D48F4E74305F5BE732BDE8CAE001547302D519E2ED
1DAC157CFFC3FFB7DB7BC637DB052A4C3638B957222CC0E9DB61A731F9109E09772FE0591054
B198B2605C26CA25635E3AC337797FB9BDF5C9F5DAB3226A0DFAEC8723360362A33793A8753A
7F553A4268039BE77C53CAC5C462FADA77001B172A4437EDA49154565596AC8BC6288641FDF7
38B75DD6D841A200B450BA19F2D177E4CCEB6984F048C8F97926E207DB2C3215040877F73D2A
BFE79E813D0E1D5DA7B3ABC9AF94ED3F2F9761C7369EB5EA04C0C84F42A9C798BC35D6FB639E
99929A59C2BDED44F7CB3EA11BE88F115F12DDDA132F30F0B0BB544330EA3862D477385A3E27
D43747A7CC03185C5FC7E3A1B9816533C1EBE7890CAC78C34B5BBE6E20FF4B2D679911744B05
1961AEFFCB8477D61A5817F01E47803878EE8B2555CAD97E24806FCD5EFF6E703E326FC46AB2
1ECE67E60CA9899DA6B2ECAEA53E6BBA97F485F894CC08DAD3EDB8C08EE653C82076F60265AE
348E2414117029D250FF553B3B2111C921C5F468932995098052206CBAACF00EADB4186D68B9
DCFA41E59CA0182A70518FC0469C373983932D5C8D73182312D13BF03F8430EBDE31862D42A1
57372DE1F85EF55E5B994AA50C0D418262E1A7D5A7EC6B8A95709859509642D780107B5F9AA6
380A67BB86E17E3F1F1427F5826F5DA3C519E22D3F44BBDD69A60EBBA9FF91DFEC338BA9D2F4
132A097E0DF1E07804DB4A077E37DEF25B8FEACCE2A03678724C59C674D1B89BC0BB798F46A7
EA9BE7D5743C2F4003A2FB995A6E2FFF14BB0F6372B70E94FDB4BE0AFB203F6D724837C455ED
D0CD807AEA01F35122C5B047C3E3C5A2C2E2EBDEAA116C9E08089E139104E5FD1A1F6B4DDA21
B9C805A220BE54B923D9C790CC00FA72083B5C34A15C2527F30B5DB3DEE56A1AEB1AAADF98CF
CC174DECDD41D91A6AE1C423EA6ACB0F9ACF9E3B495619D75C5A3F6FE9B7A189D2A4640A7CC9
6BC19CA78C05A6C58B1B28A0020890552B798273F3BE08366E85BA8945BCD835DAC185581A41
1197AA294D9914D2B37F3B9F09F19E7C3A878BC13DE769B51BBAEC279A5BDBCE63E5813A85A7
DB0F2C275E242E6B3406238E8AEBA3AF160CD3AF0FD251878419322D6237B3A01E17A76D7F00
D5EF44D1B1166D7ED51C800EDA39FF5735C83F846B376AAB6C0DAE5001BE673BA46CDCBF3B91
986E935E9AEECDA483E2B76D3C639E08E27AC04CC9D0F6F9884A2CF9517DE7E1D1BDF872E184
0B5474BA4B974CD1F3C04A4A29B0A4AD26E166301AD321358AA11FAEF06A4B121532B21D2FD5
BEB4485C9C1D1019BCEC7407A24887A1441E18744D02665F36E36EACA5B9CDF3958CE1BC9294
0C590536E69D15BC053D3286E24A76711AE0E299213C543E33437DAC56768CFE4A190345B020
B8368F4001F1413DBD743C765F120AC0348A834F7068EAD20593769505CF891CCD3D351F3873
7F204EBA6EAD77CB03556D4E567A1390AD64F85F21B9ADF835518F5843A0EE6F0B15AA90A484
0181A0C67677197106A6F92F00D20F47D14D5C213B8A5D32E08BCA99277B9A8858D84106AD2A
F126E03BB893945DA9A8E1EAC787800B5A0506DBCB104D45398DBE06A2B1B20403BDAAD14B56
E3038A04F05DFC62E91DBA42F273C7A044DF8B7763A51F466E9B2C160BC033E361D40FAAB8A0
718E1339304B4D6CBFBBB21C900D439D5FADC69F5EBDE98D4BE4CB9DAD3BF9433471D004EF25
2CFB63FF8E03F2A5CA39CD213D5C5DE0A718E79E96FFF02B809BBAABDB0459FB67978662C948
DEC5283F92C887060C895DB9B93391E0067192FFEE82E2FD7C66167D35EBDB9FC5888DBBA45F
E50565A4B1543FDD89CB9C5E48157C3CB0812364E96F646E0746F0C929C499C05FA6FAB2434E
8E7081E2427E99D0B6DA67A99DD709C6BBBCAEC577DBD9BE6A8EA0192E0A4272DF08E9C67DA5
CCBF4FF38C396C55280BE9A7F7253F7F273629B94A3BF268CC05B12ED6DB9B9EB8C3CA62262C
050C923896B5D7B5B49BE5E31F70C75F054AB73129259D14B758E93C3BD651C85F2003C23A6E
EA4734483914C64221C244314B1EE691547D83934465823986A46503A7E13A3C4065E0CABE4C
2CCDA3E46EC297756FF67634AF788C5635E3EE3BA67905CF27131983E16AB66FC6AAD19CE73E
C51990AC752FDED9D25794E20FF0BCBBFDBDE419394ACC2A37E7EF0BFA8707BF9B193FD5ECCA
A235115FBE22A4F090971AF19E8C6B777D611A16842329E977DAEE443969BC03A334C616F110
C335261E9CF9F8270C10EE7166BD8D3EEE98E4E60C63693D398F903A801DDDBA2FAAE2804507
E8791D3E7F2194105B0A97A4A248F27172EF16A75CD230C04EA3C27E0474EF3A8DB470FD9F5C
1FB0A4A1C04AEA1A9AB3782DB8CFAED0EABC01F6D4B3F6C67575CDDD48F804B79E162A6FECD4
06812DF4D8F52CC88FE5EF5F74EDE924EF967BF5CC412B415F5BE193B95598669A1D87176C3A
ED3437EE11C686861B1E6F92891660FE8DB6805593D11C5F78B796F69CF8718CE75544C59A22
0703291899CC42955D44AC6F52BDDE513926DED284AD69CE596FF7DB262481F19C747D7DEDE7
165DF22714845B0F5FDBE177DAD835434CCE4830A283721212CE5EF708D7359D6B5D752151BF
40DAE4BD028C615E2E8DCE4DFC3E3D4FA35EB6E04F4394AF9B0B4D85EF305D12D428B3D607D9
FC5306451E4F7FBA6F9DF7D9DF6CD8D46DEDFA5ABC0D73599B46C103D3CF28828D1355C5C297
1CE14E1730520E4CF20F1E31501B2081AA1379AD31A018D4D7E3303BA31D07286666A0206255
F9EB2D2FA6036E9FF472D06A703A927F10AC76BFEA916AD1F0B8619ECBE9FFEE4F7EA9FEE669
CA4CD7E8203E23BF595B0C9202560E05E0ACFEB5B1DB40E7014DCC2142B2BAB6E0A7D14A9764
77F91CBD4434BFF24F3E8CD5DC5DDA34BA3B24B4A220FCC668D90D962ED169E39BEEC85FB63F
B473D86087600E41D30C853604B9B2B88E550E0C18E25A5CF7BEACDA6857F70FEF09E88CD8E2
FB9A54D9A060E33B608D5CEE327C32D1CC8C19578E65C6E17B8C982B8395B131FF55BD568222
3AD42FF5ACD42E1C6EA8F76F1ACFAB1C77825825CFBFB34752B779E56B2CCAD3302F16AAFF4D
73F812FE0E3B1CF60B2A977D65ED505AEE4AD27A7653C74B9C7F7C87B5CF051A8891B2986EC7
678C20B6F5990F2FA389E547BD5E0212FA608DF050D1B7BA12348EA8CC01B6818CFA54335D42
8752C54142596CA55850B3713C577ECD7230B3F5627B68AB7D3A28615676C5540BF760B99344
9E17726592EEC9D74E4ECA0E60E6CEA0B470DFBF98F9420F81707109D8D6BCD2BD2E0209AB41
D9C6020486E9ABC518D0586FEDC942D45AA4E76BB3B33D361FE7CEEA92A4B3EDF2F5D3A3F8BA
4CA4F5F6A76F3B825967CCC80E9531FCDCD097DC86205A713F29327659E3F5523307A73C43BD
72FEEBCA54DCE12C401B1BDADE58765E396E38CDB60CE5D5037C94BAA2A19784B5D169ECEFD6
56E9D965308D88BBBA8C9588AE8B687FE88156C7A10C4B6C064A73E47F841AA5A2F05C3C4913
E6257898453AF778B06333ABC6A3EFBC4915A0C0403F1780DF83549CD62F1541DC908CE020CD
E768D73B18CE02C0F5DE968B0223E83731300E2A6A2149284D310FE882EE9ADC96754724B574
D88176B65FA331B116451DBB80AB999F07B9B04AA66031EABCBCE4FFD035F8CF19188F6C063E
4DCA05AF15E5731F892E1E7AC924E7690C1EABFE7A5A5266D88B78A626CCDEC2ACA7E91E9ECF
4254CCCA8925C6B004E1D5CD056063419F9E9D105A1E3B866D181D1443107FF10335B4C4856A
76FF9483B4781F4AD63F015A117D22DB63912558B2F4FFDC8BEBFBCF9D44DA23438B99782B63
116A47D5FD1FA88C1035DD4B842EC72FEE1AE0C5349FBD63B7F8089AEB5FC2ADA226C3572333
516187BF3AF460FEDBEC607E56471B69FB616333143610CEEBF2040EB6933750415CA80E8590
F5831C873A92304EF15A18F9418EE05449BC5EDD434700E7993E5F291952A4D876E6460595A4
ACDE51FEFB167C90A83F49CA77961663AF955EF07EAD20C5A131F82E89C0DADD1E0AAC5797B8
B599B0CD16F1EAE45031FC390E10923DEEF75A803F49B7D7A9BD18A3F032DFB948D0D9AFD90A
EC51C7473B66D4D1ED80C718D1DA4405A3457C567AAE21ED9A6FF02925005861C090985BBA48
4D1CD3AC669FEABD34638881A54C4E33981EAF7A2B83AA286E7578269A9B9527383FC7EF22DB
C1D62F1A030DBD9627DB99F0668ABB8FFF1953EF4CCCC44269FD4E9F6F5747F204204DF5679B
17E8658A2E533E38CBD76232FDEBBD704C13CAB33225C03E7689A2071631929B3A7022C0736A
2F627B72D2D824A6C3A44BF227E61358CB70BF1D01C8068A367A804AAF4992C6C7708507DD00
672572DB5351BEA367F4EA323511FCEAD2101ADC50C569655F68183715F7334A7FED2054BC1A
EB8B92BB3487865581F68B6894B08FDBB5C2B0906C57304FB912731E102BE9A13EBB4F091E91
5A9C44CAA778B4F582064DC5557789242F6FB9851C9A9AEBF187BB25BFF4F61230E8600FDF75
BC0975505E57C1FF34E896A1C2E3FBB3ADB1C6627689D0F10E17B7F6662FDDC45E3C797339AE
E58DA4BD85940DA3C3F9626BADB53B6B4674FB02C8F51CCC9AB186BECD819245813FB0D6B3E8
B29A5828DD1E2C9F43769365DCCD5B8DED758208DE7347173D93EBE6E3B80D059A238F2D03D9
FDD97D8C53C50E1C954A8851D9B5A5880DB0DF8C531DB7D6AA99C6F801A431F491B2A3B3F9C9
5459E75F860F448CA3B1DDE43F908A8EC27A5DCD70AE6D38DE903097780576ABF33B77E912A1
229369A7CC41B036C2A1F94E667505D6272E5CAE42252F19C69C05DF283036E31DAA8F8BB862
6EC9C940CE563D49269BA2FBB13EA087D4CA17134A2ECD9CCD30FFD5C8B38A4ACC899ED3B4DE
58631DB3B240E1E7783868D8B1BCAB29AACD2741D93B60B358541A2336B960FB9AAA5448474B
EC223F4CC7D7716BAA4D372D181CE262EDA55054D22B26BAC4AB95914A6BE391FF77E0AF9F08
FE324CB387EFBD5C379DC77FEFDFAEC984DA46430052383FAF2938B170A150363250891406C4
87212466727685C98104281FDC4A6194353628976EF3F99AAF9616022E5536A7C67B62155EEA
BA24D4BCFA2CF2A6ED89AF3D71D5F103655D8E0158E66D263AC300491B2511A8C3D78DB95B68
E8EC2ECE2948D779900A4156930729736675B75A15A5CABA334D6FA8F5CE59BB442F69FC4F81
07FB59A3A4550D11A05641CAA8F517251631FB2FDC46982C18CDA7D910F0384C9C069AD424D8
0434E2D096E9F4B85783EE7CE5FA2D6349CE04E56B8E54D42824F1DD6C3DCFB49AAEDE74CD27
D7E4460CBFAE5A17963B705F8FB0752CC069E4643447CA2A0BAA72EEE8F29419BF09E353300B
13963F0B5DD22834652E3FBCF185635243400FD0A6F7B6BA64C604FA4BFC58CF31D6A83773B7
8FCC22CA7E06A519E691499C0BB44797A18579FF6595CB2130A9B9657074005FFBA690376DCC
DA69B93CEFAC268ACB43694C0C5E9C60A806E9C737F6184B36771D41FBC6DD601D17D38FACAD
DE8D7DF9D9D0546188388A17DE1212843C8751F13D969B13C680ABED16CD9A5CA09AD58F94A8
F1B5A3C18418D2C43F1118967C982E35B8436099099C36478C332DBBECF0A080801F9DFA9370
C8DC3AE9B1CCDD75CDD251FD0DF74C19EF2BB9AAEBB232E9A0ED0BC69E84B20B358912FAAFBA
9C4A26D32644C680768BD0F4F9C253E14748ED7FE2C095140492F303794D16D38A04CC602804
FA9C1FE1313ACA0F2937A7D30C3132215D32BAC22049BBDFC23A6D18E16C72481A3F372F64D4
035651B2DA10E8843F692F679A54F33B63FFDB1D7815213721460ACE8654665C7CD5FB89C7FC
E1360BF6A61E49602E1CCEEC94A18A2505D25D0CB95D12C247CFD22E467678692CBAB00BB15D
2355C62D0F793AB32A3A65A8CD9331F0AA794D98901D5424CEFEDB062E7F338330B9D95DFABE
E513C6B2356B10705B2BA650F21EA7D33BBE7DC522CBF711B2E5FA682FF91948367CB5404E0D
997F1A82FD1AA72D87072A6B0AE21627A82CC4486F753F84F4C01FD874D19B03D4DB4F9D7E3F
88D59F59FE3CF6B9E3A7E33F8A560F7EC0D5970EB50EC0942B01F83E23A25352FDCB5B19AFD0
5D2758B3200550114FA05BEF17ACE4C42A357A7A0055397FB666F2F24A28416B74C3A26736E5
0BC8463FF7BA58640A1AA29C95BB2B4E91D80D5CBB97C83BE135A201F20081C6DCE6825099CA
54C8583F61BA07CDA5D0D10943BFEC6FB073606521C1F31F3F23FDEC9183740AAFF05CAFF477
DD7ED960F45CA8A8A423ED3D48235250CD01AF906E05FD3A28FAE11492A3F0E5CC187602A29E
669CB84E19DA01500F3A38772BBB2ED0CDECB076272D412814B31BB78F5F1522E2F96111DE22
A2808EE2C01C7095E01D1869F6487F505132DFE205ED9C040A9A8E5517F7C143D82A990292C9
6BE59D5DA12266E264905ACF9FA9FA0741F0F4425290D369E23506CF92DFE63EC557819079DE
9D53553FE3CB6BAF59E7E229B0B5700BE143B0F215238169FF55204A15EDE026D31F783FE35D
5AED1852D5F9E3168931A180390C322D4F3C6A492042018C88B9E4AB9BC5D160A51167F1197C
DE0168A59915C7FE54863EF9CB147EACE2BEC439C9A518A2CE32CF88AE5B08BF5F0B5A87AFAC
3914CAF1EA4112D1FF06CB065267A624D70D760B80E4EF517071FAF91D108246BCD12205257A
48066EC3B1AB708BB50DB97A8A7F1D485B636E87AC024044F7F06737A864DED5A0B2A1798846
5A52E923322B45988D335F91F7BD4A181C4FEFA0A4CC720D8480AF4E02F3D2471A58D6435AB4
7BE415E8CBD37EA99E61CC21DE250F20BD152822978C70E624A27028E1F153A199B997988E07
5222026DAFB0354796A4B044714785AC0FAE6B0EB9536B65A0444036465A6DDBC5CF245A08BE
FC6E89B1A2D17C87206EBE479BA6395B422A3C33BAC43BE9B52FF5A5545E2033FED2FE60D893
E2991E9981F342BCB1E0F89A0D5881459E1BFE6BE3FA652BF5F5D432CD11C0674A23F74FAFBF
5F9740A81F9572B038A82F59FDD0784353BE17C36D763FBCAADBAA92F7D19B52987E6EEB11F5
E1CE1A6E57B4BD6246AE212633C643BD14B90BBFAC9EA2B220C8845F37D93560F31E5B19CE90
7052C9B3292AA1F24A6ECCFBC89FAEACD8FCAED983C57C361D81C420034255EC6132FB645DC2
7F1E5075D535AB33E72B347C6FA2F5A6E1EDAC8D8B40436D07A732BEEF6F129EE4A660FDC905
3AB05EAF292BC50766625B0AFA3B42D5E6A619D2E3D7A3374DBE3AFB1BCF9122CB54526165D1
D59A3DF54F59664E4CF5B3B2B26E585BA83C69FFE8C0BE36F56C90DDFD282D78998CAD5D3455
A52ED86F1BA90A8E18BA2EC097CA0A7634A2154D94B1BCC9473CD337BC412029734D1A0C2F29
872274C92659844E174215501E7607864A7ADF4AAAB1226541C71CFCF85AEA97448047DC8817
AE98EC5146AC703B48CFAA56B6AA8C7DDCC3416493DCF59FB8A3722C70B14751EC6D8374301C
149637A02CCFC1E9B28F4458CBA8DFCD3EAE3D1BC0BD8A3AFA436428C3AA2DBB334E6191EA8D
4A5A4753FC1F15620C12412C39B85F7D631C774CF6A423D79989FAAC69B46B4C2295BB8CE20A
05E411F87F33CFA7DF9A78D070FAAEBE4FF60F89BFBE3151856B3A8B4AC8DB98F335612BE65C
228F5EA60640E08FF51532340A998E017DA0415D0D906382EF33340793F1195432E2507C1B0F
B9143604CD056F150B12E63460E19F6F1DFD90E6FB50007961B589CF760AF92A049854B4A043
82C50208974AB808B2EEFD439AC69E68B1A42B69FCEF97E92B2272BEB13AEF27D58EEA02BFE8
687DD2AA1DA5849C077A4ABC53A9FD0DB9B3C5E14B7349591CD5890A42D6F72527E699B60AD5
374EEC51EE0E853A80D5B714B59B9482E758B6545532EAA43A4C39F846E518D647BA39F9CCB6
C46A8F6FDE1D2562EBBCA5018CEB9880AA90CD18AFA2803D71553857879813C8D229FAC466B9
1DF73F820B00E188F5CC9DA939A2FB63535CCF1E13B0B5ADE9E926A1AC7965253B6DF858571C
E2FAD605754C9B46AAF5C08D03AE83054AE0B356B89F374B3071D5C9AA62E487B59363B5934F
0953FB9B201EA5251089A2541794CE1301F2817FF53A55449AB02CBB81B8D1BAEC61E85050F1
0BA6FFAE1A8C2364FBC6522EB0311DD4BFF2A3B55BBDF4A971F70FC8EA6ADEA4D36022E3DE35
3BFB72726863E68B7CBC380974E6770442EB4B6112E4FB669A04FE36B45C1E046E78E41C0C0C
04BF734C70E40F73CB1F83AE9FBF3A1A8DFEFB80172AF4C557FDEFD3DB0C47C0F94E989DBE57
AB4919CA4F57F5E30F2E62E16F33B32ADDCFF587B96E44E533C2B5FCA428E4425F2E82E50EE4
97912A4ACF8B380E8F033AE89969C87A1942736845240DB752AB5641FA65047BF710D4AB8E91
154BFB6E2541AC80B88B8C0456FD36FD02A245A2F65308C6269C6F8A0F3173D060082F04A828
856F01D400E2679943E7C1C02EAEAFB0A57E820AB9D37F5F69A5ABFAE1898A35CCA442B114C2
9758B96C308C7D8048C1662B5F5876FB01D3BB063B23AA0F8451C35D055129D58FF08B5CF458
113549EB2DF1E991F20BEB0FFFF976E024B51678B95AF7CE9048D92C010EEB90D7BCE8B25434
1CBCE47B0A7BAC62CFCCE16E88ACE7E4160239D3E23206AE2FCA2D35BA40E5520822D3BAE5AF
60E26014C2C2A364E918DAB1E51A64C792D43A3BD711D7239AB21A362F1B31531ACE927A169E
D3D6DD4807F0C6AC77AC052DF6C915355DF24871DD4E22AC5EAFFCE6DFE9CE3FC110EF3674A8
B85A0D3447B6758AA86D96E09CC859A2617DDC0CEA8746A02D19795FF377B61A360EE9B88910
5CCDBCA63F47E448B70B6836F54284D6DB4602A83C96E8F352FC9CA45E5FEC18EC0C5F9682D7
D90CC91936A840F1320D1538CA11E47B69CCCCEE392D37C302154479DCECFD484587BAEBEDA4
427BC554EA4212E3BAF5562419CC1E39ADE481379F795131C6B9AAA8F780297E632C4BA29BA2
2087E48CADC58D8D2A4B5362E1D90F9B0654D0207626D7E53551A1B291B8A053E5CDD1AFE7B9
BD33A4D5208F5469357B87CA290E3BAB4693D439D003005BFD8769AE2274EC40BF80AA2D8829
2691603DAA72551C4C48DABCF8D7FEE0E765185F2131EA22F720DB27FC70A58CD69CBFDBE4F3
1E219F9DDC411448A50346504B4FC367170A1A3662FED42E57251E21283D0FCEA963CD62D2E5
8FA44CB0F342DA8706ADB56A2DEE3E184DA3026C03AF3243781B018DE4F67278511AC243EC2D
25BA814B3F242293DA7746C1D0CD0930708EEE1B01E0521181EAC01CC6AC73ECEBB1DCC23164
0D576664902989AF0F7A51AA874D3FA6C678D7204DFDE8A3EA1A97A550633BCCD6C85988310E
D65F784D130446D8196EDC260790B2947361349D64801EF5DB80E373DF130455D78EE8A1493F
FC924749FD9B8FCB657270072D85DE0066033D5F9F8A399571AD2D37F034D6DDCB1BE272B237
ED5D9F353DEA917FC5DB58517B0DE68F4673038A36E7D0D2CF8A1721D168C05324650B335528
071C139A47D9F88C432FE88B266439074F9209CBE70B1295711044946931CFB2A030D3C5BBC2
79A93E897F9428F36E5F26F729EE80045E6CCF0D6041C052D8323324FEED4127249DD4F54CEC
5CA4183BE06EBBA091A729F39C19826B8170AABE50D51F2C666D5C867E81866C6F68E7F57531
28B4EC241EA565D38704E41DAD62EACB31E078DE3BC0E0E14211D270C7CC6644EBD087B56A64
D9711C3F2562A1E4C5AAF37180B85E968374D7B6B059C3D5DB001F67BE24248A9962CC2B2BFB
FEC99FF46267DA5BA57F9BE5BD88E416977A9368D76E1076A9FB58264049CD6CD452957B999B
73088052A14285E77FC7290C43A8D26FD54726F493A53C3C1B3734A956144757AEC98C8DFEEF
C557992DF57303D673E3780810718CC88DBAB84F8673831AD82B5FB074FBE364604B2F00A35E
EBE7DD52661772380773CC086F12EDEB1FA63A8EFDAF5CCEAE27A9B045BCD12DB384114C9A39
5CA7DF68BBB7DC580DB1D88C611F7058277FF3605D20C61EF83D16AE19CC7B603D4398215307
FDC83480F32DD4AA7BF9D466CD8A761ECCD1DA0CC00D5CB420444EABD8555C8B2425150C5CC0
52391ABEBD670C9A6CC0F085FB079636681E8B7686C0E49DC6BC183BFC1FE0BF0D047EC3928D
A869EE0F9FEAABB40D18226ECFD03D982BE19A0A9DDA19E2BC0ABAFB208799BC9268D974AED2
BA576304226864D5BBEE3570BD58B5AC56D739AC96F429250F640DDA287DAE5C2DBBCA73736F
991BFE2C447A7EFBD64D72E6FDB06D7C98F743B37073052E7340A93E0C6DFB9B8B9B750BC8CE
FBF5445CF0255ADA1DD84F0959035C7A8A977128A62A8672E8DEB5932AA498A33557FD639AF9
B073452CC8C76B06075B12EBE168661419B57867E3FB261D49C4F6E9F67522C8B387284E7AB9
B3385B54C72D957BF0D6DCCACC1178356503E1CCB0BD590688071AB2DCDEBE2D63419E265CD7
0968083DF0A8B56FB86E7D6E1221F071F580772538FE3856090187E40795274374B8174DC0F4
E20B4B1D5A2449FEB466FEC133C0DA1B1B41F5A38104A5F0A9CC3CEEEB1CFAA18F7534DE348C
DF12DF83C8D4B695C0B0A82C5355153646B85A0EAF02CCE453286DC055FC48142F1DB5D8FD45
8342A35D62DAA9318B940ACFF349D2763C82B546745D627B34C9D5328806623B79C258729343
05FAE0D228A047A23DF0A893B6412C6B4C80C4EBD5917A38AD5E05B22FF05B84FEE897C28826
ED85FFBCF6C296141A964B85C08DA862053733830DDFD0B40F144C30A00A6E010BE460EE0B6F
97DBC59E63CB677D0777DDC8ACD538AF43761F14D030EBA29EBCE8EA43658A5AE55F69A73CC9
A17C999208D5B78F7EA0E80214665D3A4A63D83AF94443EFE46F31F929472753C2785696660B
E4FE514E4F4864B836F0AC747227F899B4A8D3FB00C2997135A1160B7B06AA1A131FD4715258
DD81E91C84A6A8275F92B259B71AC055C2FB889D309BAEEFDFCE2B626EF704CB94953AFBA41D
84D99B98335156E80A73F35E3C14902A5F9EE805BA04EF4D26E4E957F3CFB3BA9C53EA8B23CC
629F4279F9EA6EE86FDAF86B66E646547C9B492CF616D2DC32B030C13312557E8504314B0EDA
8BF857410CF7CFE74843961272F319DEFCDC22D57666947D2B1EC54544C6AFCA68294125332E
775CF03A279E271AB8C8E5C2DFD996F37FA37F96B5DDC6D403F120CDB06883395D80EB233852
CFAAEAAAB5588C021BA1F1623E59E68B90E2709C17B2F7FD1EC73B606654A145E10C5C3A4E69
7D52A071976157ED19350258DC7216275C34348E000A664ACF3A5D40149D82832A833AA3CC33
E9BBBFFBC913DABB75B7E2A026BA00687ADDBEBECDCEE7E4D5A62CB81A48C12A2B86ED304A2E
CE0CACA59900D444F86D9B035996234FBBF0293C77F4391F8A27EAF75D00A29A7520AF77BB0C
45138544F2A08E4DF0EF44504F51BBFB909F6CBA437CE23720DB1E2E97BE20BACEBF1CCB17AC
779311190CD7096AA90FA57D10734A752556B6ECEECF70AA3919C2C77F3935BB0E3F3B05A3F3
71A828A6A489E59F1EC773830C0D2666FCA9C2AECF3C1CD05D9EBA7E5745D7050451C3A733CF
D5B6DD359732E8D4E76908CA33652C0BA542CD6ACEAFE9061BC7720696CD19721F2B671836A2
AA5021ACB69A66AF8F580A9DAD35FA31046AF6AF33201E7F46A3890F0F8FE54485B5E81AB77D
C82AD90DA7120949598FCD8FA11DB42BD2FF0CD93B197207F0AEE1FFA49C05F4BF91AC4FD3CA
D057C2C790F87D997CF4E73A57F554994169B8B6C588DDD8CE0286912B39A94B0E234BECE8A9
6D7B4D2A8BBAD54734944A9A8A6DA9D1A24E63D059725F08B0331B782CDA087B39D5B693A0D0
4EEAE14801BB0CA11AC758997E7DF2CE0C0740F2D2A3BC7D07FD17263472B47BCEB74421D747
9D8C14A14FC17CF5CED09CF717D58E93248CA1ED631BD9B6FD4511A640569333729C1208A62D
518A6B22B1943FFA50352E1414609C70FBC39806061A41A81DE11E44C256C603C8DF3520B365
B07B208F52770F41D12996D4EB9CC4DD984DB10200E7CC75974D00006D691E8F2DC2D68CB53F
5E8BD817C7055F8EB4FE229A546801568CEC1BE7BFFF3FFF92AD5B0FFD51E5ED907606658400
F7D601C2865AB43231E51E65FDE075B693E0524BA678B50FA392E8295F6E9824B294F7A48710
2B40CDC7E3E461EACEC78ECAFF9F82A3B84E19AE54ACEF85DD0E56A357B7B302184B85B52351
5EC15888F0829F467A0F541F8E59C064BB411C5E77958F7D2D20193F5F0B3A01B01B5095AB6C
54D0EC76E243028AA653A7F8491FC5BC5B73527A42C7EB65BE5F461865A2BCD4D499D75107A1
88B6CE465676F8833F49E729061F060D402E6685253E1BFA892F7F1A019BA9CBC9452A08A255
C230140568C2E1BE0E6C4499025FA6E6DE28DE55C1BB42F6935D1B4EF96D25784C1CF721E0E6
ADE0F042780C8ECAA4D618366CF64636E722DD31D1EF37FCA2E2009C0A3FC6DECCB5D548869B
33CDAAB5900035192B0BE49578452F74828A5EEA7DDBE06FF8AC7181DD505B52F07554A20DE9
8EFD1F935B9E91BEACC12C4BBE29C0A6195A40D377F89C081EE74C7B317263FA73E4F17EEC3F
FBF34A12B73CA948E40DCD65329C9F994351E2FBB60302FC22B92468D1AA66767095382284A1
2727CF3F767A210ECF85C16F29D93B3D389F221A05A66F532B3EC6F6BA84DE0D465B17176322
735E6C27BF0CFB700F41014D784BB9B7B726BEB4C02EA22467E482536FA4EB93FC343BCDD31C
94095F1606A7FF72DB96B9E74A35869926BB98400C0E2C631A11C4A4B70AEB2FC3C3DACB6EBA
19E388D46FF725124D06863D79FFF418F86E8A2F8BCAF495D4D1B312FE52ADD646CF6339CECF
F1130AEEFF89C8024C473E4CCA55D93BBE1E446EC09C095CEDC11EE288BD9B67E4FB11B69767
B4F033AC504F2B9D36FDEAAEF8E64BFD66BFBE6BCCF97A6D36232022A3AB4F507DAEB9F6CF9C
51A367FBF53C216C540F70519DC24BE4E45B4A5505493B460A32233910029663DEBA50554E0C
231A0873F0C351AC44109F73E7E1B76BB99518E25AC4C5C4403C71A36FEECB05E355B424071C
5223D3C970C3E7DE92F4818443EE949B02FDADA65A8AC61F346D54E8E6DB341AE0F99E778373
F30439E80CC3C0BF1227BA997F0F8BFD1BB2A02C6B49A52E5AE2B83FDD5DF8E3CC01361559E7
F89449B5DD29CF46BC063A76442F8E1B722B8AAA5DB2B58C0FBA3E787FDBA29EC29B9F453843
F8F3BC6889EBFE5708639274FDB2DD8EE405B22807B841EBE9068A9C6DF281AFFD1612F46A03
EA56C4142C997080D02D14C13340FBF406600E5AB62C1AF1846AED0389715B4297AE995EB147
AFB67EF9B258C7FC1D0D4E050B57D190D626C8A262EF895FF7875A44C8591D9579778B9F962F
EB65467ECC9587DAA9DBA76F8EED6B9F96BECF5A281727FCC093412093ACA1F01DBDD6F59400
9B8CC665A15DDA79A7D51F2397BD6B4EA476FB35F82C480ED6F5F2CF6D20C4A9F590D399A9F2
AED79399B2F043D68F5A73067EB8B24B25DA77E905A711AA78C331B53BC304C4A89E00B2707D
F83DF080D5D461E710F598FCD130BE6FFC17A0225F03C0958D58FB48C1227F97CFA83077A80B
7DB22C8F1321E02323B2B35ACC70970BB2643D5E42795FA98F517F7665725288B185BDD1E689
7D8144C711EE9239AC7D1BD9F088CB5970F207C3319C911EBDA88C95AD36D7D067A5F208C710
A45948C0F980A3F308456F33DF4000117281107AC5B180CD420CDA53380EB1E273AA7A633044
24B8B94AF55B2A8987B4CA7414B3BB0BF744451165B32528BF3209653C0657838F7647183483
497FF2CBD25D4B3347CA7E29DD29EDE355FFAADF1FA2E5E7AD85E2F2751EAE55AEAE71A94907
22F6545772DEF80EE610C0137ADE25EA4E29DC9FA5B9CC9394D40D517F0C82E33CDE655BF211
2C0582E9DAA52DB442510429783189F9768FD17D6BB2F5AD9D48653D0C4FA24D7D62BC8B29C5
4E606519F688C0C4FDAC2C932ECC754A614B4CAAFF06F6838707517C4113D165797B722AE518
0E85064A229E57FB76DE3382F8A249770BAF8C86D1A24E1DBF1AD62352265FF90AE4F0B81CFA
F8911C0DD7A4687B35FCC2AD2238E42AC50D1B787B9A7230680457D6522B3F81F3A5E0F92952
DD775E6A8ABF546D28F678097946D41F100B6C949F652DF9DBBEF585DFDFF77336BD9375BF99
5DD6331C9368AD203469E2121DC214A1D14BC88E686F39F9232C97872EFF39CA0EA66EB2AB26
E7F6644ACE9E5987C272995E4D208F393AD8E1FA5710C433E63A42E96DFCB7B078A6B60C1BD9
24C7A6783F8BB420D070933AB28B2E234C49876153911770B40D646BE209F545323ADBC8957A
CAE29A936D4A1CA4CF881C27D212336EB15C0C478C0768491F4E4CCC84CFA9DABFC8A4E47DD5
391E8DFB148C2A42F5A3D81EBF09CC4E52936ED51210DC7D3ECB4CBCEB99C5507ED557D2CF1F
6B34134E6C1744777BD7E991A5ECCBC09FBE8AF6B584E2172CE683C9F6CCA44DDA58B04C8070
E6CC96A8539C2908871765B46C6D564AA445E377CA5E84CE2E389D83E8C4E8F6F63D5AC181D5
B788C903DBCC02068E09C643213B1DE7DB1E3DE58F85A96DB3B83E4A0B703373B6EBBDB872FD
DF8FBC0AAF38C93D0298E227F22043DFBBB65ABFAD3E60E40CB69F108F6179312FE251430AF4
09469F969FDF4D4E8543D1462753362E46F6E3F38F6B52718588694F9BC81DC256195B089C2F
5A8B8AE47E8ADDC1E169ED031E5253206C31E6F547FD3C9FD7215D4600FF361FF6BA5EACEA00
38803DBA4E660723A78E36A745A2BD809D613D86B53AC9312B11261F5EC792FDF2C1AA5D0BE5
123E11F433EF92635E0DEF412543B5D6011A9F724DF6E86366CC80359B4DCD7D393BC9C95B89
1FDFCB5325EAD88F505FEC98D957045D6EE85F9BCBE73D6AD83ADD0BAAD772FCABBEA7358B5C
82A5979D5ACC8B1FA26F27D2DBA6C883781BC4F6731E3504F408929DF315CB0EF99D6E4B0C1F
9B08F3B16B8AEA8B5C15DC5E7ABC429708A688707B89EFF5773C10AEC71FA3C0737056262619
D181226B9A0B509A73E1C70F55008941830D7193824935426658FC51377A3BED40D210AF4126
0C6BAE3F8631BB14EFD73BDEFC21018AFB810EC4E75E946A361681F4D443CDF18E9A848B0373
413B81379121DAA618C4DE6062974DEED48677C09C7A0ADFAB183C0D8548F668372BFB722337
CF20E0F19CD0CAA4375249E4E1C5DAB674CB6A1DFFD39C3FF10171257BD7E2D4577AC2E5C80F
D66AF7E2BFCAEF05172C72DE8533D61A8B3B77CA23E7BCF50CB351911481BC73A1C780D8AD80
9435FEF402FE31B76AA8704EA4A3D9246E2615C649D3F36CCEAE1C6C8C6602DADDB63BE9E7BC
7EB204B35B2930A3FC55463AE0080E2866608A2BF156BC00D140FEC3B04BD9675082E66651E4
F8ADEF53A14AA912EAE3FD16D5E29130F3E51C9E19CC5A37377E6C5906D73A88A30EAE6DE570
D45194DBCB048D024A3E803A8BE2627D3C8354DB7D844FD32F84257FFE52133E32B1B8407F74
C0FFBA764F329F27861DA3588773606DDC60B9F3A8DBECDD16BD8AEF5DACBB5E88D44C3659B5
47F18C454F35BA8DD7A9EA6564FD726D9C0B7BB9340A443156058CADFA37C1909720C2A978C8
F431E15EF229567139F9228B912E25F2218CAC594A08CFEA15171D72F978F03A49B4E3AE7866
B9960F79BF1D6FB5608F51298538FF56F9E0F403C9648D7015CA1FEB4C560442FE35E8E5D31C
646B0637F9EFBFCB256D2C741A23403D88E9E0486CB62CF90AEA0AC24EA5E5519FD4A86B41E8
92C54931CA061A4C93821451825776CC26B3409D8B3130C62D872A48A67560BE044F1F1697F0
6C0B5A11808CBB3192F7DE26AB520DF0039CFC58BE4EBF1A2AECC882CD293B87771306E3CE18
794A75AE6BE391BFCF0B8A59697CC507CF2C4A456B4B233FE209AC39BBF7155068C99CB2BE25
F0B755960C54ACD21CF9651779903E1C8E7AE7A5853BB26AAF69D43916E1560D54E40A14ADEB
ECB18CE848C151AAE3D16794D8C124007818545F022EF2A1EC7EA7490B556E1BC7876A46732E
61F514848A196E5FBD4142A341A52FB55AC8F5014791E5144CCA96D3D2999B3D683D292AB86F
C5D0CE9D55763D9DDB5FD6428B52423AFC22AEFC7F5FE1A1B878A0758CD4E59FCB099DF6FB95
F29EA45BCFF043D707D570B9F316929226BE1A54B23F28485A9DC8C809ACA0076865019DA221
9AA9FC70628139F8B8BD64BC29C119EBCD23413D75931262FE53664EDCD93DB31DCB25A2AC09
0B04A9EA8CF7833E34D1FDC26B3EFE65C086233A1A1A1C1FD5791D1F358019F7D098EA72EE27
0275CD522E72F4B8C5BB06C78224BE8B8056E11B2513EBFA09A0D155630EAF2AA4204F77ACC4
AB83C205DD0559DDB46FB0BCE65B16578830BDF37B3F5589CAE730FA6A11EEE8E6BAD3125F59
FEEEC295A5F2E05C2E3B6CE16758A080C5B6878753C7182050E296B3FDD446DBE10F9FF91E83
8B4B4BA0034E134827F941EC393CBC54111627B9351DA460D2A6D5D81A6F6144DC5A5638ED70
171594956A838661237D07D7DAEADEE51AD0F09771DB822299265AC292AFF7C49D4ED442A685
106F25798CF38FC48D5EB13F821A7156C850A20E9CD8179702C91B9BF425F370F5479CE97030
F369E32D2930658C7E4E6E4DF87A4EDACC66ACA3B3E6502F9CD086D9A10D9AC7B96C817A7643
7D9A5D653D6575B4FBDBB06510E996A0DDEF3E3012E9F948A464CDC28A352F999DCEBCD83B74
039531F46A7B43EFA9012C20ED0DEAB569F3905BDDE917BACBFEDFE88EE6E9832F040D84F7CA
8AE2E519A53EA988A3BD0CB16D3A3292C27EA51BCE3F84CF5371A7CC10512DC5CE2FDDBF7453
36B2A75B056FBFB763591481BE5D6BCF9FBEF914F1DD1A1473F8C8A72697FC4AD66AD69AE74D
A230EF274FC148E45BA67E61919BF46C32CC3D8B2E2889446E203B4040BF3FADA3AA9408F5CF
074C25F1BF20FF4ABB074592B054BA634BDE4A8062F63DE02CED708FE3A39085EF04805C862D
E1604A55CDD7B282FA910B3035FDB41BDC171D3D0781695DCF2F9DFC86ACB8D3CCCF32C83B6D
51C6A87FAE0BA5B527041D3B3BDF74C9545B0E9F0666D0C35F0C8FF84384876934FB6FBB6CD3
1FF26C386C1BA290D6C7AC672EEA424C44D84F1AB18D4FA41A7C8A08592733067371207EAF33
F13CFC4DAA1F5CC16F5D5A919127CB5E44A3E1911947C6C4FD86F001D9E0576221F41DADC527
35D0224F3DB69654A8C4B6CCFA9B4C8D6E92BD0644614857A06FD32FB3D98041794E01A39D88
4075A946FEF57FC8E566BE276BEC81F7BFBD5F545FEB3FE8B0C936E8D8C4128B418BC958EBDF
E5CA02901FB054B008626520AE6E64EF87C8B3D5A73B839A8EF115961B89AF2A71C6D0E14A14
1A5210F910ABFB1C7E83CB8AF3B2F4CB2B76A72F28E50F668948AAA20D0FCC6071E125888EF0
E1D420E18D33B4C946646348801AC42E6A89B117770BE3B067E8B2B9AD9F6936BFDE738BD5A4
568888D6C29A5FEF9484C735B766DC66002EEF699F91ABA21EA8778290899F335D794F691919
8AC9041BC1A9D875DDF91BAAAEE61A2BE1B80203FD7D7356EA2EFF7382F33CBB07D656F1A941
2D6AFA5144674E368CE1ACA4BFCAA3386933F14A3309E3E6B03A056CBA6852D6B6E617331F66
0B47B01BF60F0B2ABAD06BC2573FDEC871FDE62AD6A8DEDC3C8EEE9460220AFF30139A2FFB80
B222C3DA73BB69BC304B37ABC3B44DCBBB6EEAA3D9137DF428A56306F3A0C0F79F8665355B4C
B71A184533DC3D35F9BE1E5A9D5A5208AB5667465DC382C6B681C4C68101A0A46CE91B568D12
76822C069527FAB7329BC4D93E5BFAAB8C418904930E28259A6DB57F28C0EF1B85169A7B3BEC
52B4B34B51FE6F95141E9DC55B9516435D856ABDEDC26DF75B004E78492031CB5416FFE9CDE4
AF300FCAA08E8CFF6BBBAE0CF7E2DE402EF503BB6CCBE7FDA50987088460B150972676AAFCC5
C693B7D3983A60FB306094133197B58F916E5DBE3B2AEE1BFB570AA3CABB6B44153EE8AD9171
F6AE40FA8AF8821A617F1C62DE38961D4CF0AA6A6014E6EFA65D5586E83DCFA9C80481922DD5
FDA1B86CAEF2449EA5006EE07285D89C8A09F416DAF70F68D742B1F21D001F8D31C6A336417A
527BCA496CC4FD6ED7D001DE59A44326B53F06D1B269D4570980A13A5D7A8D48623235C539EE
6FC8564BF06EF0701AE2A8CB09BB3F72AF8634F11EC26F7383DFE8B72A09C3C335C60DD1FC50
3C4476FB0DB86BB858C3F148D23CD69F1FAA0BD8148B19D5319AF9711BD69C72072975C90951
E2B0BF44E0EBB7869AEC436BA402F32EF3CAE3D7624F2CB09A0954A8A802BE8F83FC29CFAC3E
0A15AD37A13D08FE3AB4C08201A3B060E22E4B767DA23E0063443A16E675C3E83867C0AB5053
7F126EBC5E276EF6554F31B89C4D292FBDEC55AE303F2A62E0226544EEF480DA35DE3CC606DC
71789B9538C10A9A1A87EFDD0127E243F306DF25F353AA35A149AAAC71B61DD55B30CBFD2B58
C4C93130766C9CC39EB1ACBF2B86822FCCD4E2B70D4FB4E6AC8E9665399BB5CDD3DF09C4C1E3
94B2B2515891601E9AE1ACD5C4FE9BA858C592CEC2D80D0F9E7D8450F9DF486DF1BC8B865B44
A2590CFFADDE516509752B659ECBFE98807B42BB1E79709BEE4117B2C36DA8D5D52A66738983
54422CAC1DF463CEF092120277146457B1C54BC3BF884B0077C97287B143A0A4FD9EC1F42A27
5D2DED2084FBD5026D0B75662210E42C25524EDD98DF8F374176EF4AD7C4218F529BF5772F11
5384F7B297611D6FC711AFBE43186630EE83512AEE9D61E84A2537C0CCC862E4B7A7EFF0D9BF
27C163D8C08E86BCF60B0C90E58DC43A105B044A1C53FA13439467057BC2C22E829FD813A0E7
A065DEF959F3193FB401D3D87AB7B54683D0DC3BAD4A530FEAC44A63E208382031BA1C8420A8
17C5C2583513633206A2DF738C9EDA192813B1AC108C04E05735234173EA7C14D12EA6117C1C
E7EFE367DD75B795B68A2335797EEC2EEA29A46EA272B67E38DDD5C2B6AD9E3B59C037A9914F
5EA5852A32818E3DCC65AE021F0D308080460EB7E1C410DB05C67E9FAD5773A93DAB602CBDDC
F9092AE538E1C879C0FF1D540EFCA789FC64358C5FB5F066BB6C30413DD3E90F5C1C28700626
DACD1E602793B95025D0D49153C1D36FDDD8171DA27834788B3B7F3F338E71DBE5A532D3C5F8
944844E70389B8392F8483A1F4E8590B4ABD566669E21EFC691E66D8703CA5D31BE2F0F5DA01
F3FF9DCE4CAEC9BAB0C4BD89621588F2B2A6A02E286CB4290B895BDFDDCB51316B248DE9445C
7E6CF4D18BF699142D6F5D682E0A069F378DD9A92C362D1C5E19C63C77F21C2C3F4462F60FE6
94533757F829B6F57D007843CB22217CBFE9F929D431E18FEB621E450AAE0DC90C10A3C563AB
88C1023FAA8BCA390E2597194E29DF540919D9382387F200F51D42F99928C9057A63777B3DA7
2F26C917054A964EE65C81D52E0914A7E0BF757B3B07B93FCBF4B9A39CE117683807965BA1F9
8DE922A226D564C8D19D48A2D51D7EEC607464A6D1F55724C33E35C905F71605B823C7A6D359
BFDBAAC68788CEBBBA77A41A52C10036C60E683F8D0316D8C8E37E24F4E80460BDD16F382036
7B6823B37F2581914221BD590825BF1B5A480AA077F44AAD68952E1BBF50A2D75CE489DC318C
0C21667E4E1466356DEF034026B65C27DF125B0B2246A1F83A97C75982F557F4739960F5426F
8CC0416F1F997C39D6A8C765FBDA9D9704ECBC480BD63FF484F5FFF2294BA6205B5C198BD5E3
5121E52DA9CADF557B4DEFDAEF6C657D4503D2D527D6E8FE6EDB084D6770572DD51A75595957
3191A719B4F6B37D63F2830EE459B9F323EF6D5F2AF830ECB7B751A27B6ACA11D8971A735434
B1DC2B1580148C18BD9AD265D39C52909ED8A57631D1D7929BD7A265A929D6E75D25B93ADB0F
8637753D79E886F451F41FC694D1A2A12DD723C045120848C3AD8E37BD1CFB38EE9B8A561A38
17B30DEBD83EBA10BFE5E07980F832FC4027985F273645E96C19C1A74ED0ABC0555C5ADF48B3
9147D72FDA940CA8D2B46667AECF1BBBDEF9892FDFDF3A38CC1C9FFDA83D9B34E680E088BFAA
8E39B049DF8110EA9937A43746B97DF67C86864B18F16797F266EB03C3B8B1D08FF7BAD68B12
6CB980B1D0E1955FD8FA8529EF4FA72E08344039EA5EA41F752DD3C66BAD15BC220091C5EE82
68F6EA9E6E684AC5A675CC671F6BAB30C56C6B6A4A7FD4955F6F28060DCCB5FB4B00BA077905
89BD05B2DB56564A1DAE5084E7EE33D2F7CB265F6D9CB904580809793B99CBCA69ABD6ABF313
028C9E8E71F423A5BC19851C5D5F0BC58BC526021123E83B4B5AD33694414290F4EADA65EC84
5EF90CC7BB784AB25549C28BE3140A289BD163A08D4221979D679A2735A34ECFF91FF7A4E58D
8A0DC2664B12E21642D84C06D5BCAFB5BEF0CCA3DD5443724932518CF9D855CFE752019F6B33
E0BEF54E64F76D88AF25849A46EC65DE3DA8007E4DE9D245A20D83598737B067070347FFD057
4211E0EB0552CDBF57EC468A63F9E9AF2C73FBDE4511BFBC66B074AE90371177948F40F6A300
9D64115977CA05F12A043A41AA699FC87BD04F022BB3BA9B856CBD12BA3D1800FCAD32251D03
E730C6F0872C28108F7E18A33AA6EB490FF27FD1162D9852114BCDE22ED85B4B67872DEA5B19
B46CBF794B9068953FB74E75B9F8F62B024238FE8D3D2AD952D6E0CB5B65C70F67AB2216FDD9
264ED3E1F628D7F662271053440C11D57641E9CD206AD034426AFC710C2261F2249BC53FAD6E
417C9FB4D2CF69EE988B19B128C6058B4400277C3334B3F56F922E9FBC79E0670A9EF73A1F7E
AD2782F305BC8C5413CB44EF6B8AAFEDA7BCDAF1B5BF749C3B9F799ED5C286F68E8D008FF9AA
8BE9FF76E3AD75D3A9D557283988016B89042FBF612D8AFBA25456D5660DA31C8DF25B94D2B2
EDB66BEBF320279E30B5483F99B154D0BA512C2069F2A87F902F283615737D694B9ADD65BCD3
0EF360FB82E9BAE684645619F3AF2296ED312C1CC40960BFB92EE2604DD0C13EC61F1941FDE2
275E59866B349848C9A18D032217807FFE0266E17AE653F41EDDA7E36DABEE2DFDFB197B9FBE
CF8C044B8792A37CC83A0343243942F8DD38EAC1D24B295F1942417A979959541C394972CD8E
8D7C675409F7D1051B1034E260390597D84E4EF8115623743F3094BD75A6D5438AE7AD128DB8
A496EE6B9B95C1DBCE8887EF1AB22E29CD17EEDA48B57206352EF7683794B8406906B651196C
13A6E9CE582E416B66786377EFA27955E85102D6730931D55A06F649340BE9612825635CB60D
9534121A5A66444FA51C4A09A30CC209F09FF64980E3E83F6B5DBBEC4AD830805823B784D9DB
4DFB87AF383760553AF30B5BB988E18C5F455A853F5D91D30FAB2172405214491B699F9C6EB7
D7368622C4810133D0C4B75C55363F38D6974AD27EBD5E480CFC0013456B0C54F65B51BBFF2A
A75DE3B262B05FA25AA1112DAACAEE9722FB241E0C4A966160EA9861FFF7CA13B4785A654E15
32CBB7118FA372EBD41E963C93AE5F9D4651F56508C1E89FA34548F72C946B4E384E9A08ABFC
BA3BBE1520255CD623EAA863BB988F635BDD9543B607933EADC0EAD5E119A11244CDC7470539
FD0E926F03CD32D9D4FECAFD3B6EFE823B3B05B94CF359AFD938575D2E733716C4E932C04651
0B0DF620E87F6F39B99D738E66D3383CC151381BD7611D0B44A1A40BC90340534512B3FEC4CB
E307498C773A253481105700216A5BE3CCE442E00219A0A3412B274DC8640CC4E759FD2823D7
F48E614391E5059A1A126D0A1626FEDCD738CDF6503D9B5C876AEA31298AA287055C7C24F20C
CE51BFB14B010C732F84A13B4A1DAC571DA1948668DB9E786AA9F4DDA0DD25528D785BC0EF33
CDDEFC80747C7EF0EAE30B4D687AC8EE8BE325A8E43627A2846CE3FB199F593CC83E320B8A34
254D8FFCCB45D04C4D41FEFB65AF2282D036AF8B614656EEEA10DE9409CFA0B3E6296030A0C4
91942A17CC43614A5D43EE2EEB2F2DFD2156100C452F1725DB3B7C649FCD5D1CE8080B148497
E8E57492DF0122BE6F1FEDB9B8EF8AFE2F119FA2767E9D451CBD637CA9BE588A0B876EFAB92E
5D238EA9C05EA6D92115BEC4614E05F83DCE5E70CEA9ED15936C20275FCF467FF3AAAC5DEC1C
EE55D9805A37AE0BDBD1EF8C6FD7A66D33E29828EB9C0BD6077F862206C6A1C734916811A2D1
89AD5A48E5BEBE377E000951BA74B979CFC719A03FFAA55A458146215A33BC58A42B6D535E4F
15B1525B8B29524188CC192F923DD9F8BAD3D203BE862F0193334CD2546385C55B5E5959F7E5
7B2C679D176823BEA88F86EB9F2FB5584A821329EC7328AC45EE0C992035D0A2EF6C71986E95
E0EED9B4390B39A3E9EA4A7D79E72936A0BD4722121722621A05662431444C0E90CDF102CE66
0D977FAEAE5DF63CB289D701A434F14BE992BFC1F336C4A43CC77CBF8843929A9A76CF768B10
0531FEA4712B37C97B1773A36E290182548FC42C2088D028A938C6A2647C74E5FADBB36E2AB7
5E07750A56F08F626B1A7C41F8642EEF04EB5F0B5ABF0A563C5DE626919FEBAD2B5297F58204
C5C5D2ADAC3D3136FD33EC5DDD98C3F521E53F836B21DC8A8CBCB6456A5D971C94414C7BB3E9
1F7AF3A1B6A7AAF71F95926B04C288C647E4A8080D91EF3404FA04042A584765523C6DB40FC9
6397AA843FF4BE0BCFEA2ED32B276328BDD1EAD7461E5FCE8D3AA3BBE3183A6B4F56A3D16A86
20010C88E82DB50E3F81DA8447270CC745B708E42034880C2632DCB85A4C6DA78116226D8571
68A6C9C73680AA674B1360DA8D17CB8F642D3D0CA2559B1E452B1D5641BE4A664D4528135911
0855E4F957762F536E4E8CCFB3D9CBEEA8C0E2AD2C1A47E42C878AB16E0DC111660F54349AFB
9BE5605C1F821BD68C941C42557C1736F7DB2D37B17D49C0A77153E99A0C99A4BDD125F3FD51
3F3A1A496AD3E17EF623979BBC10DED32E319C764F5DE1D1DA61C1D1053EC4822495093ADC33
FD9BDAB0A8BBAB65E0A24F30BE9D60048BFC29A832816CB6D543FBC850104B6322C14612FE26
DBA327A63647BB3C71D2F4ACCBBB798EAD3404BCABCFD85188E875967D677909BB797DF62255
5D7C5ECE1D8C59A5767257A08A6803E3CA740785FE5C0F3CD640E14CD8629FADD09522CE1DF5
7BB7A7E5C10D15A6435598D1F0D112B9784D4DA881251C245FEDA1104DB6D3A6DA5A30AE293D
14D346F93EF45D569959513063BE28C1048F98C1AFE5B1433B7097C0CD5711FB68CB54B8BDB8
C37046FE5505667CD4D4BC92F357D58458D5CB06CE517AAE44F596B83E7AA1CC8F17F14BC536
A6554D22B446AADD28EFA83E8469DBD1563695C781B030ECFCF3513E4029FBF6C109C79A9DB2
B5C7636ABAC5A4A282B74B359376DA840C62706EC64D7D41802E5065F5C3A364A01455BA6F2A
A1B2282E3B81CAF1B776B1D3863F6E02F68F0A91ADC7B9B6E3431142DA75663C9AC606D55514
7BA418E7CB2B2C379587218D8A7B71A4CE552C980E95DFD8F9AD95C429F66DA569FC5E1A61E2
DD1A6816FA54C7BB85D0BC6533A52BB1F4E4FEA68505D1CEC0751E21354412F72CB5255DE620
690676CD20596869071B48D7B8843E5D2C006DC2FDD4461C4AB3E0B1D16D16C4A270765AAA03
DBD1930B131CAAC997F41BFBA9C3220B972FD5B724582EBACD95C5C6BB2F8357DB8ED353D010
ECC7C586F2D25DAF23D8E38DAC200E1D3725D40D7A11F35EB7FD572AFF074E67C3C0A620F972
6D4CF7535741F9804885506F5D0311E349388DD8892B42A81058C34BC3F8E4AAB67590316973
0F448B4B890DFE3789EA67DC3A58A295367D00ED283E50A6B961CEA798C075B5FB914F6CFE0D
A8B183CB5CFFA5AB0CAEE6E321E08DF9D67949BF1892454ABE8E5C1ED844FA3668773C733F4D
0660575E2CAB415746B8255BAD4F8715A8F01BABA2F92DD593B7B60DD17E5CE0E3F8EBAE6A05
17079961C4A1F8B225C968BB3786581A277DDA386F3AD05382340EA03CEBCA7E0234444D7085
454B657F6F3CCADFC192B6350F241224686B23792341B6DD7A4B698991AAA3621EE07ED1B642
63D4905C112A0C92541E16875F7224B5CF48327FBA64FFED5BDAEF9355AF9BF50216D607770F
A79D33FE90BA99787F0077D19ED0E5197C5F3D839D74903D47C958A58B36E92345E84595D971
154489B33A584148B4E0EF976A66E955F8763052B5444177E960EA6E6D3802DFC402DCE6F405
4BA3A9AEA23FFB106F82285D1BBA6224AE9A5F33EC1901F93673D6CA54BF0F096C628A920C4D
97F2B78C010453F2A91798A07A9C0AEE9DA864044C6FB492483C51D4107663289BA772B77175
7603F4A3C5A862D7FBAE1467DCA7792A2E56DA65FBD8F35E67109ED12E04069A32368E9ECF65
1C5134A06616035C9B784B900A7B6B96FEE2537C17949B4CD471BE647B50A1BAE48FA28D7DCD
F8878B36226EDCF8B39F49AA35BC1AB0016A23CAE8C8BDEFC783CF35E43F76052CAEB4751732
6652B03FC748EBAEFB54FA2B5E0CF3E6D07A9AEBC3014EE2DF9165BF63253FBE3D0FF297EFF1
0E6B6260AFB6B09B6CF522BDDF10C077AE16ECA5B327CC6876DFDF38764FE0E7FC100A4A773F
BE2EEAE1BF68CE9095AD0FA4B465745E4F7B836AA7C59DE045ED5F9D99DDA77A7C956395E9BF
0B169AB8E649A4FC66954F2E65342FDE5324A7C506EF568008EB73D7575EF5B796A6784113E2
CB3904BB51B5EB93FC0960E6A5CA6A8DC3F7E8002A7272414676B237D224BACAFC8AA2303EDC
B48CF50FE71BEAFF551831C166BA538041D7F62B78AF227D153C673CDA5D841CE6F168DDCD8A
113AA4DCBB5118C51AA70961BE08DF8589595E096FB341AB47A1EB7887B0B430743E4AAC5348
E406CD325C3BF7E838707AEB3B058EA17CC8F103B2222A426B8EBCB6FE7EC44985808BFC64DF
DCB59B9C8543EBFBCC295A6945825BC2A3681C161E111F266DE158776EFB087C67A29373C7BE
DCC24272E4B28B6209CD78FACCD729A8A5EFC68DBC32F45799C581FECCA978D24D7E85B22F3B
B1926A9E9D465B00D5CE2BCDE26E37A91A212EEC76F7D7C43AFEC26B84FB1203FB9EF604CB3C
BB2847A09C2E04F6E0F9430860BA6837C18A449F9F96A51EAB42B1936C876208A61EC17EB92B
53CB01E1226AE96B7CF57ACADD4D2D76356EC420561A4CA88F5910263EC9178A3AAB165B15AC
C2AC07F908E3B6F37D88BBE780AF15114D8AC65D95110BC8BD9D25C7DF3310933D9625BE765B
14D1AB5032EE9F7D6FB24FA2AB57561AE1FB564D8D2705DEFC9FFAEF7303A99523DBC54B9C79
A20D5F00A96D5A21D2B4E2D1FBF36AD4440D6179F5E7E672E7BF45B6FF1C0787101223E91C14
8DA2AE709B7E9C6F576D1599DDC97DEED39831930C70CDEC4B47E899C3950D9D1EA3C94CEFB1
8080C6BB9D46AFFFE13C4B0FFBF71AC75C79879437E22E634602776DE13E175D9EC5FAF508AD
F4D443EBA749BB4B50A1F0808BE0519D977F55024212C4601B86C2975B96CB8123412A33F762
9916648A8097A2C58AD1258520D987CC57F712BE770BF1A118B56DB8AC89A3050E62C98F6D52
09C2A668E8BF541DF27DE2500994AFFE9894BB56DFC60D8C7579953269E44CDC3E2B63E5C288
8DADFFA3F9AD060D67A1A94599970279B2D45DF85ACAA6ED5A6B11A809C9E067739295AA2DF0
A9FFE09F07574252FFC8FCDB39DFB64B29607038CE4D6F0D7B84AAF5281F7414998398FEB89F
DF598EF5B2D7A617B373D7BF1DA47A7F9ECC5952A39A71B1DDAEDAA45DB4839D36A7A60047A2
1EDC798AD8D9AF7A8580610CE3A96A031A0C7CAEE7FB68CF51EAE29A899AD15410A692AF4CBF
CEC43B424A92BE2AA7ADFFCCE93AA8C1886476B1A72A4E9384B2B59BA5AD1883654672C5A93C
C2426959B1E1CB2F820A41002A4BC457D79D46D11697CF0AFD6B7A23B1A9F14F6E1166D59F99
6162243BF998B1C64CD3DE638187097F33D7C1D23F78D3392C9A9D260281045E264C342EE708
FE86466F6F7C1E8E4ABD455226A535236256F2056D5C6EF9D91F340557FCBF8393CB982A84F1
CF9EC1EEB361BE41FAE829A468459E5A995DB5E0FD1AC9EAA687F26BD04216E7BFABCFAFADCB
AB3A8BDABFBBB7BC47CE9EDAC7A148E1CE35027D8A5D573B13DA6FFEFE2940EA94C94B4903F6
A9DEDE03EE1723057CD83CE8834A3C8A29A14582CBC930990DCDFAD1986895F348036656FC33
41CE6FD4207C17D5A210ABB48372E73E5756A7E0F50132826FF9EF97D56530EF705944ED9A4C
26EAE0F737A50ADB2CC9099C90F2D54CD103264D93F4BF6B5A9C7D837B2C73C664AE9BF08172
805CEA546FC3EB1C71C68458F8153D8EF41ACA46BC314BE963A921196BE22E3162798FFD945D
93893BEA902309D7B2254ED921AB8C480EBAB7A389EFEE5694934D7FEA330B7D98DC67F13308
A73A39C7A9C87CDE598776E51CDB03C8E650DB86749EE8324BF66D1435EE53B1B7502533982E
474DB9F6A0BFF64004AD995065083A78845A4EF2755626CFF4D26D7D3D7FE5BFDC5AE420DB9E
615411316BC5AC1F5986DDDE4783079DD06DB4C9D2E28E523C054F741485CC99E9238B1E39BA
CC625FD94ACA6B54605C3273C142805D0BAC9F39A99359E52BC92C0C779C4A4C10BBF95DE79B
55CC736C80AC8F6F7CD6D0A316E7FF1946E15F41CA106A02BDF6F33C2B83016C121D9330A0B7
FED025FCC47554B50DB8CF7800DF1F33D7D5D52C2B238F0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: cmr7.pfb 0 0
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/UniqueID 5000790 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
 /FullName (CMR7) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A53E152596
AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019CCDB9E3DD3FEBD4C2B36B
A3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D17907079DE6A078E8A409D8295F642DF492AC4F
86AC84383B0F4C6BAA7C22AD5A898A71D6CB34D2CD12266C486B75E75A69C14819DD9BB81590
88E04D4717E576B8482DBDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B
02534FC9F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939F82F
8D73136D3337C464D87C9D05A10CCCAF698DE9CB7CB1B0038D772B934E2E882856C8216E405C
B4A3B6915DBBD6A23948ECF970C762D542733F0C55CC875390A374231C24710762CD9DA9E592
B801A3DDFEFE970DD49047B3560E559D86198A1570B864EF8D6BA386630B1A14FA4F3937941D
694AB40BDE56CBA869A908D96B46AEC605ABDC1DE1DF37650191A966A21253CBA6F4537F50E4
367F2C1FD60FD38F35E3BFF31CB5F5379E7C47E8E27A3EFFFD4EE2FC8A7D026BFCD944D8B691
25B2437155F638123D1219512BFB26E6AA22642A376C41FE0DAEA39D24B09462E1FF02E8D4F3
BB87A95955AAE4CB2BBE3E9E6686EF7CD8231EA8EF10B6B4AC940A8A2B8BA5FFAAB24160EA64
6F3770C0C42D4A107B0DAE812DE880E9CC4C32B44B6C978808529E3785E0DB0EAA0B72F26990
DDE686EB30F4AFB83CC3D9A2C87F6B3DD6D15D51ADD1CE81E7CCD539CC2B2B15FF296A25F812
9ED5674CD32209BE149ACC5314355420BFD1053EFD124EF5F91F27B260A7299D6D1422E48BD0
FA6E39A41E539FD8F60EDAAF01946B9E5A63B85977EB3D8856F8E668F4E8BFE7B996362F6012
FD8023E12ADC8C04203F0CE164131BF709AFFF2C94700D6C229EC72B7CBEFC3DAAEDAE3328AF
E23783515CDCFA14C757B8CD6FFE5F8D28455EE28C3DF8E102DB08E529C43F54F76BA6CF5441
6F586D61E54BD78D401A1A5808AA53FBFFF3FCE46C8BEEEB31CCFA037177D8AED8CA6BF45042
4598B16ECDCB558D740BBCCC435674ACB41367DBCFC585F16D60E36E1E707A2BD984384C83B9
609121AFD810AE0E01B9B7128FD1607CE9BD76E3F2E7D37E5C0ADF49CC3DF47FFC493D601FA4
3C56761D8B9F7FB0A310C95FA78AF12CA770948B2C749E072532D386959B8E306568A1172A35
6795D411C604CC9903C4355BA4BE38DF343B63AD86FA0ED7B30FAED6C7BF283BE5EC367277FD
D2FA9A5D29EBD04CFB16E7290E7C0F90B2AC6F3F43EEC445A5AF7DFE9A67E227CABC7D7A5515
5F69EF84246FC2F27267FE26EDA07595960C52AA7ABCBFBDFA163D007B8613AC8C9890116C3D
C30BC25FD0794C291F92B5379439569264BB6F85AB4DD2A3E6AB7367532F095F96D270CBE65F
F83C2D0536F912E065F6C2507E646FCCC7D6EB65AD118E8B47017D67DBEDD125C9146F608666
FA70C6381F01D582706215B2D3D691C3E42901DD004CB116F495B9E1498ACCAB24F2A88714CA
5FF5E395FAD2B8960F0114EC0F7B753DF3135F3A066F098C23A60A54B1B2C27FA5155AB396D1
65B1536823A4B336E006AE560D3B2999D761BE7E6845677104682153B097CC023F53D33765B1
F8571F46D8610872B6570786913985D6645237A5A5B7755BFE702BC5CCB59476BD31CE8FA143
FDCBC1C321AF985ED89D55AE980E708F9D5E1824F738B4262313118CC5C06B7492D5CF876D58
F892C4D3501C299295F86E1072619FB48875CD2E73055DA2D6CAB98CE598D49A45084DD3ED04
C7D894B50E739854E84117A451A304EC56593F384797B50CCB971F331D72038D1F345EA10FB7
4B46D42F338C7443DA34063A88F8E2AAAF0E0DCBDDE36DBC729FD895B3BDEA58F1E40451E328
F1F84E4CF01444DCED3F21B539B53553D923CA5E9FD44DA4E69E8FB87666B12A6DA032F3B375
3189915C4041F2A1B54BD9BB41522A807340B497F53979AB1076675D9E63A380C9064DD6E4BA
0319DFAEEB9EB6C43DF5AE4073E8DCD2CD8CDAF5D1BC9F5CF67A5B9733DB664D0BDB9560948D
33906A17F5006E9D858C429F1922D7EC5FF80E9C480401FB21D74744876D58FEF258A58F6E9A
E03D358505A76F1D2AED973996327B34DCB11EA77BE8F29A2CA20FC6E552AFD80215F52DA1ED
5EB65876FB24C0DED82EC96814C0F8AFBC1DB375051BDABAE230A873DF8B5B55E6C006E6F7B6
334287820BA8F20D65B01155C9032D6393EA04D967E4106EE05423610BE003033E86CC7F177D
F3E49DC911D5CAD22495E430EE44D9FA74960CE44FF6867327DD3985C0F7F456B049BBE721F0
7A2EB9149A44F06086FF1391A6E2BD4A5278FF89BEED802BAB6F81A8D4C25F17597BEAFB760A
318EA610B5F145274A2B3AA611858529712D404991EA274F2270452DA3B68D89169943BA7686
E3019263133290796975CB035B2E6169B8621E7136990AB699D1C89FA0E94551191523FD1A69
CDA50CF8ADED596F56DFA218CCCC84ACDA3226A0451E87FF0E44FE54F52B37A59220FB135473
A469EA525805DE37D223C18319139185B97FC2EA83356EF7799081D1E2A97D89F977DE14589C
A8446CD692FDF2419459618475C952F389DB09C0749798AF8397AC3E11D4E7302E39AC34CA03
DF273851301A1AE9B226E84FE2E0B65131299516BD64AA90EFE39F280591AF10C90B652AE14E
80CC1201B4109629558E83B83483D4DD57E0857AE0DFCD5A64B5CC36C1F28DDC752AC1D1BCFD
E5F5B1511A3E6B30D835186F38E35215A328D396DB7C634AAD187428B23F68D013BD6B8AC2D7
FF93A1D399C360245641C2200021B9F8DD69304F74616EA2DDA34144FC11EC42B09AF21134C2
C7FBF1534ABD44083021D4BA466E732A1FAB596E9F6AFD4874CEEFAD852697601AD8F15AA5D5
9E20C11E25B8FCF60D6138D6E72A8F4CF154C97BF5990595C479BA3A2F96DD65396D54A42B20
9CA55D3EB21CBE6C44F0780D2C43FCDDDDEA5A65EE645AACBEF909A155B55247A4DBD5D59E7D
0FC8C20A219344312A1D86CB69662D2C7CF928F6D817BA34FF554890AEF5AFE8B01DB6537B97
25B88CFF02DB92E787B593A6491F930EDA75143528147E0341763F3F8B9794A0DEE7A4889530
C765A8E665F58C93340C99A098250EF663F3158EA3E6DCCFEF4212909A5C5C23E2D61189D23D
69E8BC366C947019C2305017AFC9D36C6E8C560EFAA4093C944A4457698C5F5DE74374FFDD24
CB5E6D24A04B531793BE802D5AE400E2B068A62252C678F4547FBA7C677E634CC76A0373124D
65CE68DD5D085841569A2F8E9C9B71ED1B3794E6F899D6F3CF7B6EEE7F33A285ABC190B8F174
54B084C8A83A7C64CB899733EBE3EA8D710BF15470C8699B265B4D3714870776F16AE4A5402C
0A40070A16114298A51C1646F6CDE88114626AF0E4CAE0FF7384D863891521EAC6F31A5CD295
CC0C0E7D59DE52DE04BF5238156F4CE33CD4897CC482AE5AD1826628529CE5A6A5E6A55ACA0B
20B657CDF5E57C5A73F96F93622C6CF500BCD7E6922BC3CA96BBA05FEA0B0FF7DDCAC109BE83
FA8934851E9BE9BD3109192202EAB1C77B0C86D1FF97E3B8732FDBB9EECD2A547E3A1CC4402D
8F1D213C98890AFB12CE908EA3CEC9D2E7B5BCE47C25C32EF337C45F3EE522F5CC76D1505DED
96156F80BF6C8E2CF5C3F28898C2F7CEDCAD10F6DC5C45FF4979906B2FD4DB0D9435BD85FF5B
78E78E441D140AB53DB156F4C6402F716ED7AB7C5617AE1D1A22BFA5BBC89DDDCF9F14FEB699
D206E1345B793185D2907BABE65547A9A17F8B0CE718D98DB6039357616CC44BE309EC11368A
C4D965927773CDAF50ED2D48E692B2A3B31521BAD488BF684F01E3506733B27EDDBB5D0D6D3D
8E65A5E1BC745E1EEC0547984018419179B38D42E3099794341D97885F230300EC6FA06B18C1
7A1FA77DC186886492D150DF1440DB4EFAE287F2F2A4ECBCF0683EEDEA3F78B1B68FC1911CBF
2625185F73C141DBC9674E7AFFFF580B4A0296073F5B6505E4D63A4A736BC3B794809E801860
CE4691A57EB02C0947EFC1DE4BED3962346769C613F240DB1574368B28F186B608BB99DA33AE
1B3C266E49D58AE67A462FCF2E6BFED1AC1FFCC24C9752EA793F60923F7579D2B8EF9860975E
6A80D5F9637D594A9567F8A2D1E15CCB1EDD3D502972C969EE42F57D74500D30170904A463D6
59AF0D96EE6FED9F4C7FA0C7800EBB2ED3B78C3F095D18068F96573A033EF343C07BCA94DD98
97AF2830B6A40086C1E8945B26F8BAEDB8C0AF3371060CE18CF8D8693738C15C2EB95A4F7F7A
37E82ABFF54CE8D19524E45379C92BEE3AE74131231FB175D96FBE54274A88135FC74D9F429B
9794912A8D157C0CE5045F3B16A4BC78811F1007C96EAEF9BBD706533A7AD80411E4A3ADB0BD
BC27A94632D00A5A561DF53E0C63A0C17D9DF09ADA247B420B524135E9E7C346998993F716F4
1A8601099FB2CBAD6F760245A1B52E1F8C45FB5379021A64EE55E368F1E2D704BC4176D8E1A1
F034A631AA520C6039639207386175C7913AF1AEEB95F1C6F995387A454C25E6F78AF60EC1D3
4E0FA0BB4BB8B9417B5D8C59D31BBD89CEBD28C490D8436128EAA23C69816AF90A4622B82A03
0514AA5EB2865F5FC5247DBFEF5BE641DA1448376DE08544B9902118A5259175D547A8793265
10C732848D4E5D6D4569021CFFAF8BE720FC9B73DF8A0B8BE87EB08C3A2CDEB28D6ACC63694C
A9CBD263838F26A9F538D85FA00CB23F053094977019FF9A935D627668BF9E94EAC831D09DA1
7627B4A4F4B6A790273EC536A5D8F66F478BBACAF17382F7A3E9257E554ED267EB03CD70B803
59AE7667C44C0C9411A2EE41A9B0A6A12418A37E6E814069DF72D0534D6BD5631F158A3FED39
FE33E4D97F5B8D0133F8D67B92C72466CB2B82DEF502A67FA8A37EA4473056DA8B1A1C589960
957B0E1FE2316DABBB150F8F8BE2C4DA45E4014CDBB22DF11A9FA8B85278AC7F0A6F75996A7E
BA0E524EDAAB6CA54EC3B3DADE7C9EDD4AC5EBA9087CFD542CDCCDB9410202EA1C5DFD4ABFC5
C0E1C0EC82246A93F453389BDEF4FE8A94F9AA5B492AE04400C73F55F67AD0B02F092D87E10B
C9F14AD36C3E8CC6519BD9AC63F795A51F61A9877CC56E8D87E1078A1562332869EC5D52BC95
BE2923CE6E9AB07C7B9CE0382A5AFC60A44693AA58CFD33BAA0415F5C8AFC239125AF4452C3A
0010FEF23C70DF02D5D1FEE6D23FCBD6B59137EF773E877DF1E42ECCD49373383B5355692965
0002A51973C5CB12EB6696F8D09086C7A0818B7372D1D17FEA577704DF4EAA121E0271B9459D
57E1FD89A3DB3D4C75C62079C3CADF03EF97D04C5A4CC5E608EF1599AFB139AD7FE73FDA41B8
1DC0CD9FBF93834F9BA7FB1238E895E9DA72F1BBB8FF581C45A14A39981170D15D4E04022A9A
A5A2AEF9F6D38D68DF4BFF98A371296A4E9EBDD2FEB5BB616BDE6C9A4647901613239B815DED
225E3408799FA2F73D7BE239CF11494C456DCDB4D618D21D19D81879BFACB55EF117FDFDD0D5
F66BC97FBD7C6AEFFC84D196359698E9F36512D6CC42775D1ADABF6C99B4F4A232579106D278
01F76A71F0770168E40A85403AF26BE14BA533EC0551C3B18EA8EE97C57F9FAEB4192419978E
E50242AD61347104FAB8F4260F518922AE10276C55FD46EA3D4F6471207910D77C8DB13E3911
24B50453B60FBB4E4F15855FA03AC4C3A5E0F6CDB7995B1118BC4C9BD2F869682BFB9BE20D91
7CF997D4C2000ABD5E11E2DBD79C9C8B7685A17943A2DE2AC4CC60A50CAFB37BAF863AA8B835
0D7DBB1B52C2D3652745CE06B1193D2785073F5C668C4A117D268D839D41E497165A50D08C32
92FBD174411692A3B744DA54986D1EF767D6BEA6A5F437E5FB61F7581C72FA8DF1F51909443B
E412C321C9E1FD626B345B705DC4A8017EB0D8CB61CFE5F3F80F796BBA6FC7502BB925A33915
953141C4444698A18663EEB95E492F20542EEF84B047AC52A439BC794CCD488EE9B25BC467ED
09A418256BC0C14A808F007231FBF97EFC1881425DDB64FD6C170DEBD330257427C9D8B53DBD
E875AEC06196CB8F0D33BF10B681605A02E750FEADB3196BB3EC2C251E5F549C2FB6C91FB32C
1BBA3C9AF6CE30CB6B71CC2BA681231B1B521619B863ADDDA93FBAE29F8C7A439415D22BB35F
59608609CD13D22612CBC6AEB6601B37A6C9F09EB1EB8F60F12134956E456DB374FDD7A93302
DC2FA405641D09FE7C28314B08E4FC9DE9294B2CAACB8F8673647EA32571BD33996045E3A3A6
EBD1315C3C0C91FCE65DBBA1D1DC730BFBF02A1D5B16C74A8E5841450A24FB0D87108469267C
D21AEA77CDD8B317629BE24DCA7FBAABD757ACF62F5733CDE3C4F6D138ACEE93DE18CB485C91
78214351FA3F0A44ED41A3F7DE68816B7FEF6C2869AF4F677F3F358533AFB7D4F090C65F0358
BB63E52D2C4878D2EA0620D1FDDCE9B8BC22E99BCB711DE2D4086CC2950ED2FC50508E3AA0C1
5B109A3221CAA9CBD6BE368BC6B7A7033656D9FFC85F729D4BFF1C18B00E78B5EB5C9CF18190
6885C45E315B2ABA41D3CDF32F0CF301DD4EB4BF9B28C0A4D429FC84AA97633A6BBA6AB0F43F
61D0F6FA9A35256EF7BCD8FB934FA1C035A8AE3B600920B608EBB40850E4C7E3564572675CCC
7002CC2029BB963D87385C2AAEDD472A224F92187298652BA268336DF3BC28B33441C1A8985B
FE71EB30E33EE83F738123D76F94308A1A2F2F549D40B7FF6D97ED87B1989DC12AAD21BA8BC4
2B2C361C50E44B74EC9DB17061DB171B932C910397D42C1D6A305299545952FF8AB117BFF8E2
BC2E52E7FFDF6CB64D61AEF2E79481CE9A1915B207C58C4DDA3D71172CD99883A27078693831
A07AC70C67E1EECC1DD5B3DBD0F7B445A167E77F54ECD3F88A4622771C55C53C9CB58631B603
74FC4E6FF1FF4A26DABBC2AE562A124333C2822E4B52598CF5B4D5292DF4B06800D9689C04EC
D895D17847D93FAA68B508E524B39321AFF9E749343638ACAB6CC92AF4B447B87C3798277B3E
833419888CDA9AEEB978FFBDDA27B6628FFF08A55FC41F646741D092148A2E149CB295F283B9
C3A6EE040AECF8A895DDE8DD46908FF65A57F7CABE8DD42FBD82206E77CC64ABA562E6D21726
A63F5A75C4F7FCE6A8BCD6523BC18679CF3730BCF4F1ECF3CD00D8BF63AF271164211A34E3BE
B928ABE1A06DEF8B2DE826C893604C5F375C7C254C4A2A797FC1EF11B38CE154A5B337C453A3
07E501929D361A66AA0EC59243A64F8CDC31F57EC829093184386859FE4B6792265A6B32D03C
F1C81E583ADDC7BADAC25C98FD44A3796E33E53E9B2019D0D8C6BA3685019E67D931B5A817B2
CE47A88BE668BD45DAC05199D05B5F02DE05455BF2CDD48F2B93B50EDEA9A5E0C871F8AC1665
FEDCD0BAB330EE628E3DF4514D679AA059AB3C1DA74E2590354028FACC543CFDBBA7F90010A2
AA33B7329FAAA0DF1C555E03B71F153A5CAE8A5F9738BC5C53DA38544CC23C785088062E05E3
896956986B6210D343068B5106361486B7545B0547CA1D18B19C7B073C1D5598D5C19A52E47B
945A369294E30730405D41C2CBDEE5BD4168485B7DB8A8D7F3E1C56A0C924438354CC6B69289
E93437CE4792385D35F705BC2A9CD4DFE0EA1BC88E523099993B5718F851FF9FF10CFE04F29C
A23BECCE71AB67639EBC8E9AE584A9127874891089EA7FBCD800EEF2627BAF6713AC74DC153E
E0AEA7FE4E03637B459D3ADB17A6150680EF84597F9E3564D86AFC09303A26A7934EC200F635
DC09F26DB9F7DC4785E9818A96AF2AC20D0A7D8EE5CBB80AB303791397CD00FD000CE43D41E0
39F1FC0A9B6DA7194CE33244946F43E83836A5E85FD65A945C3D5050786573D179F115052F03
24273243ADCE6057DCBD605EF1CACEBF7299500D31081A5085DEEB3A875061DC94A08DF3E192
15C207CEC82EA5B01EA53E14631B092DC3415AC78568A5099869AD04218758F11D56265232C1
2618F9AE589F32A5773C8B38EAC7F7370BF1FE9180AA3F2FE79205CCF69ABFF3536B0138C173
2A5446FDF7604419D883F38EF4131EAD4E518D822EA26243F46949ED42C6E4A060889E1979B2
6AB2BC90469306C9BD7EFBD72F9C9A6F801760D467B766FFA50AE98E5F3EA07EB0CC652E3A1D
12E61303E71E99ACEF315932D7911704843D6396F4A88FBF00C223586C5259D6B400B18F19F6
E87978C4908A372193FC45FCAC92EFC1494640BC70897D0A05ADA21CCBB28DD89EAACA4B99DB
D829A6B50C297D5A40E7DDCBE6AF3352AF434FF34A27DF727C2D5539CEB8C0AFA6C18C7F507F
5D8E4F407C6D6C8892B9AE0AE8B184910A98F2950CF5594D1C42CF604808B758DEDE97A1DDE5
C4B54109A1B5D3696114CCDDA196A43EA25E34BA7635791A0E5394506DFE706DB5ADE9F91C08
CD45A5C6DAF40D12C0D6DDD6E83F1A7C7C90D7B2B9E94D38A677DEBFE6C789BAEDF2CF821C89
B2E992A8BC3EBA57C1B4EAC247BD9D5A24697B89D852E772C82A4F363FCC3C18D212BA36958B
A07F7656A6C5D157C62C50A8F13EF8389670659A9A58342DCE27F00E3CE58375113402DEDAE8
EA6688550C0AB39BFD238A08C135246E63EC1A8CD62DBE0982CF431FF500009543698C650ADC
ECAE3E2BFE123185A2B953E1AACC48F7D15CE3F849F1F8FD6B781C00587A9D75E218AFAD1245
64DF3026F455F701A66D0DD5B7613A0329A02E6F467261CBF14E828D323882FB9039CF2E52A2
2503466E9254E08DD64B930909CE36A7FFB12F2C8EA3511F8FC928B1C78377FAEF16B6926C3B
535A49FBB28AEE24F1B811AF40E41B406B2FDA63F8BD2E486DBECC9430A60E4FB834DC44098E
C39899CD93B0473883EF9864EEDD71752428EDD2955F01879163722B29132232D5C0278540B6
2C2A8EFE5F7C0F9A83E70A24906F2B090B77929B36827730BD362248254FBB37558C0585A097
B0488D05BAD1E491C01211B9BBC1E23910153A31E56B5FBFC3BB6352CD62EAAD3413C9D80925
C48046D0FD4B9D321FD5F3D59D1A9AB0916056A0B4AE0EDD9E0458C8EB9DE4C5B20C68A474D3
7D13500183E153A45A7C26A675B6FBD0490C688ED1E26466B19502ECCCE7F89199BF4F71E1F6
21D2362DE9AF2DD0D882A0391103334D5DFA079976BB3E7070C102852061BE11A664F9B66037
64B52D02B917E584DC7C1DA2F71D02B18F758AB8605C40856282038ED4C3A9BFCDCC5DCA960E
98B6A075842AE3B880DF242AAB37C135387AFD43E2180BBDB40553037845D841B664F2392C3D
C5CCE32942F59807AE4868012441E36C7DF403B917ADB6156CD9A2EEC9994630CA34E2DC9D44
61F520B26A2F525CBA09EE77C492EFDFC2F90DE311F8776BB3B41D31A64BE2DAB07A3F4BB94E
06AEF96A09E6C26DDFFB509DDCF975E226A27D2BD8EAFD926EE7FC6C5EC1AF79FDC7FEA8577B
16D2C823108DB41246EB8FF5AE97EB9E0255C02313178DE8E31956973C4AED0C8A6F73E07A4E
1189DA7C73E44BFB1AB8298F0FE364967426367E6913D432D42E817B796D86E67F0CBA36EAE9
4F46121BE50CBCF6B78D737E947B97A2157B1E9A16DA891583A7557372D87FE44AB921D65307
04C7C3A1950CE219CFAE4676FA3AF71A7163B32A62A25A0ADCD31F8EDE8ED4EE5623E4ED818B
91C537E23C32C39B3374690033ACE0BB43469400B81EC896CE9D27D1897213BA641AFB6DD9A2
FA388FC6392C6B25AD23E46DACF41EBB22F08D410EF85FE9193AACBF49FEDB1AB78568BC2312
427BF0D49595CD4DBC992F094F4D58CBDC77209FE1F015DA253BC1AB4D1F4C65703BD4898CF9
568A6D8E16A9AA574002BB80B1086EB70C88E22549C240CDC638E200397D3DE5A5D36B019356
2CDE2A247D1C186D0C39A92B624237F6480F51B9B3EEBBD3A868DF26EF277046DB68447B71A2
1B4C1B5F1709D59E9EA79D388587789B52CB6E92439AEDE78B1D844E434BE0D2EDD0A83BACB6
035540003C95D3EF6153C2465DABC0A264F1BA9720CBD55A3DA4E0CB6CA301AB61E114396098
038188EDDAAE38A56B518ADAB6AEA5C4EA557E5AC60425A4F256AFBC428A361E0363123402FE
CBADC54E9540F4BD76D694979AE65296D896ED8DBDFAA1E2E75D091C1CB7AC7E65D5A5D8C526
60147D5915A831CBA6FF3D541CA880EB948AD28C9B43719495F504A42112AB86E63DEE8E96DF
08656C3FCC5581F8891D1E5772C886FFC7B728E67929754248FDA1C9C3C804A23B0F5FB4C358
0FB118C15479D9261167B2068462C8B7F3B5E3645CA312A6CD186343B6A36FCAD472FECA453C
AE76815493048C8DA86A11EA401632AD04A6AFCE6D974FC095DDDA31B9BB29F15DD6EFAD3975
1F944092E812E121168D58BB1748D85A68A8086FE0457E81B9D54B5A0401B91F1C15294A58CE
D1C41BEAC0EC501C3AAF67EECB23FA527C30E329AABAD1843A437DD238AB25128ECAA21E7AEE
7073DD3FEF1B1C8DB582A51857BA9D12E848616B84583BCC18D903ABA5452E05B9E24ED205F0
81CD98426934D9FDF8EB973D353EFCCEAB03B23FAD49A36AB8B5E1D3893427ACBD301F05815D
1A24088CCD24A818C85D1C0095FE051751FE57196DF73A6D514C2A06911A7FB36E84120D9029
BF51F2830F1C0D315CF9F36C5396AF9392981B2AD055F8F45F6E2430737AF7FB825CB9D8C68B
7B97D745323F71F29F6BA88E682465AA73643BB13B8EAA2D37D8131764E22934CF3A4AAA3836
3A74B31197A6E2FBBDFD16BC47CF55956B92898D910A890FCC38F4E61CAB3714446F8C7DCC4E
67C338C10FD9614982B39C0816B5B1B312D592D5A01B53A78BAC0E13B2735DEC520195226B87
968DC2A9F678B38A551CEC94D49DEB8AEF4B59C5EA85C9985544A1B4CFC616C9DC525B9317B2
F62E880F663EA69BF0988B6D7A6843CDFCD8A99EC4A18B2F77561C0738BB020784CCF4AF7118
C55D492E5DF7BBF3C305C511FD2868542ECABE52D6677536BD5A9CF7B2178A77A4792F69C212
EBD41C24671BDC716555A5330E9DAA9518FC9D3B2B5DF9D0A0261967C769FD73B9354FF2CA16
48ACE02D235AEF8FD73F2932BBFC5A55A7288645ED260FCD3DE430C79B4ACDA1A28EEFFCB10B
E29D89D642CA27516C7EB8EED18F5856ED69C30B93A632AD4E555182A82407E86CAB287DE411
CBB61AF53B48BA3467D37A0620AF7117CD294271190293C1E7CDA10D25806FB19A90E81F6ED9
A88930EC57BB08E556BBEACF44207F7E1A203481EEEE721A709FCC6629FD35C579F3E8B3FFF4
3C908F1898014F9661A9478FB59C7C8AEFC488A0CD5F8775455AC4ACC56AC8B0D9D34735651E
7BFED3EBB65B94D6699F616DAEFB3D6351192D4A570AE63FDB66DBA25B3219D0BE918D653BE8
8D33AAF67DADC48341849E0B16300BEB96CE04B7FFBB8A539A5A78BF4C85CFFEAC8A69F95F45
F96C5E200377CE5B9E96ED1567FD632A2D098E1BE688DB589182D944A8E1FC7E8A411562BBFC
9A0A661075CB5DDABE13B4A31E63DD2BCAD90B2E94F1244BD0D884A94EB5C0FBE75A2D92E205
C34BFC195D675A2A93A631D1BF3F805FC2AC6864B8876C3CF5CD53A489052E03DD5E46E00721
7F10928DD34D1F2AF0BE3553897C804991E35D0D978DB8A238B50A954CC08EB10C670FB15F35
7091777A0F061B38607A1EA7613FD0DDEB7E556C64D2F5A6F86FFB1F85ED705151BB92584509
C88D01E42DCF474190CA1F8122A935596C5F39F7C1E553AC9F4C659CAE8FC4AD69C06E3022B9
302169CACB10A5316534448B6E8AE258CDE13C1634BB5533B2BAAA7D27D30324B368314E9BE4
F6CAC54B95EC6E3735C4EA2715FF574F7079861C6F61CBAE2B5E3AB25496C62433CA18756D41
A5513E700BB726E7CE78B66DB891BE254E8749226376804F02DE8B07137FE39A8598C471BCEE
961D70A5D6C4333B52E6C9F810C6B6F28AE03C54882A915B38545A42A9FF33A45E61C1923BB0
E21DB1EC92F934273727DBB574B5925415E56CF838CAFCFFF473AA0382CE0D612A5EE0BAE508
D22A88205ACC79C2FE5F5C42B1E50BFA2AACECF0BAE94CC532C64308902C3FBA46E1D6670F3C
510C3788459F0C05868298F5D45DA4AB5D955660095CB0228A39EAE961EBE7D16C1644694990
ACB90DEF51E4EE62A2EDE668AB8FB9FA04B0159579B2B9FA84E72D5B71A3157B9AA0591A653F
21E480CC285693CF77038F85EB25FF5CC3130DDF268E7E3A8CCB67A004DA1F49378CACF6B570
CD328EF0FBCE2CC2AB20ADD2DB136C8DE4D2644B1A60538BD70B4F01B2B44D7EBFFB0B28B387
07604F344FFFBA2F081A242642F030CD3388B9040D76399EDFB0EED87C96320722B82D9EDF45
86E64F4C61FEC73AE26BB9B59C413C1603741A37F963057DB989892C2F23E2D9DB14E449D972
44CDDF5B1BE8A7877AC5C876CC9058F0B7B90836C749E92EF8A19E7E091D1228CBBE15DD7FC3
2527739290D967B8519A623A1B17349E226FC5584B9F084408579180E2EA760A32FD5F53B5A6
06935AA3A6B5E412A0A767B2E278542433C5E1EFD1CE0CAB150844EB0F5112DFC09812155DAC
E2571A686C91EDEF1253539003DC3286EEE4A5FB1407FB537B3B65E571B0FC454E6C62CBCA5E
951B3C312EE48BA72015934063F213842969EA3EA3576C49369F828C49D5A59A51D2F6F1B410
01C1C0D3CF8442329675AAB6271CDC42599ACE74B48B60DAAC6B9ECC05B5F04A4484F727F331
846B545AE2D0B6200A185F6FA29C8A6B7CB97916A47D4215749E892D6FE8F53529ACF82C4129
8F895BB6F77E2E39BCBEF8DB6582526CAE8C669F5BD8CBA04D5510F164C2BCF711FD7F32C25D
AD5DA9F7BA88676DDA7A42B488E8A32A0C750F73208A2DCA2A734CAF158BF47A4EA62297E8BB
863F8A551DFB632D2A787CB1D08680D1810B8E5C4AC727CA0EE25EB49AA5B63C250D373AB7E2
8ADCA7A92DC3F9785A1D5D585EE5BF6C9DFC8D2114DF5F03991F3E2F8C64FEF3B62AF8B12AFC
EBBADC979580CEF32C396BDB880B9680001A10551BFE25E8D48F8EC7CC5C0005366D5B44CD5A
84038CCAD7A58257A876FA26726DB9503876E5CDFCE12128CB5B5F627D0244C7807DBA60DAFA
1720076130EA2A2EF4D7275C8D7E2A9EFCBC433BFF61CE7FDCE88D5C2C2E1353F9486028856C
A7008AF426B41AB0AEBA00AEB5023BA80AF44C904ACE2A434FE7D79B0097013EDB00E9D90B7F
256D18D9E3284DCD568CA561375BA0FFEA8F698C693578C537BA765D1F9697B1037B26CBA3C1
8FD84A638F76BB5CFAFF1EC1BF9F55369513E55B274E7E131C10F488800DAE3BF672D51BB05F
CF0F1B60C181800A5B62E07546BF517156831EE569B042778240D733FA2ED1C78EDC9878A625
3E8323347C2952F440BC614981CE99E5724961C4DED03EB51B58FED5B9C191D83EFF0EA672C3
D53974D62F8E67DBA097E7EFD7B4DC07B8EB52AF762A35F7643ECD967D4C1DBCB37008DB6C8D
25D6473570850560ED6BD60BB2DA16906044CA04F9BCD29EF36D90D132F604A21BBFB3F3C1AC
A9F90C3F0D50BFA293301533D7D0C7BCC03AB1D9D7916599DD6726DAE47A8AA5FBD19FB0CDDE
E1FB90EAEEDF3E79632D9956F2F7FEEFE9823EB7044D71D57ECCD2522F1349D649C16321D23B
72CC86BA8536769B61960683F8BF78700727910915A22B241408C463D4ACB0ADEE97F2F4DBFA
A425C4A389AFB22779EFB298271611D2D1D6BCE24620223CD03D943960432BAF29C6F890995B
95E421EE14460E491071D70E1D965977962262AD793B582BEFBE6EA4BA15F4CDB22F45FF62A9
E66FD10FC97439E5AA06D17780B0B12CDF92B939D3E973F3A61F457974CCF97025329CD410B6
753A3686670C4EC10B7038CCE6A1B92D32B6FC62F170937ADB593704EF58624E39BE3FAFB1DF
B0D3109F7B8818140FDD40FC7C14E633C26771E23017FD1129FAB083A4E580E84B0CDCEB9E34
BC27704CE9CD23274C82FD8363CDD91C9298DCE054F9604ABF295AD0B0734A36B6492DB563D2
C26A0C0E9274B9F7E22131E35D58BF7191A8F79B7B1B6A3F18A603881734B1B109A22C73237A
D20DBC8FAD4D1199B6FEC8CF00709FCE3D06884A712216A564383576D5383E990A5EFE712B02
C56D4B940165016B12308AEDFE518650A49CE6E73A2840162F9B86081B2B092724FC0F1261D1
39B849E829D5EA5B3786279070B6C79A188551CC6B02A4DB94022911DCF74BC1B43666BCA510
7695D03914C83BB58A5919DACEFDD51403F95EE8354B307E5A79BD25FADDAAB3DCFB82C1672C
1C6E8350B83F8B677601511370B6760F76D085F4DDDC949D0739BE20ECECCFC85E3C3C922422
EF7FA2D6E19358B44AE59C6AD155D7DD6D80DB4CEE18E54656A9672293E79BB0AF516291CAD0
D5469DA5A473B457E191314BD8CDD174276F0FEFE43B18306744264DCD3669DC6C3392E7E224
13ED492CA92844B858BADD4AE93BA493CB9813CF596E9AF1084EDB120512F6CFA332787DA180
1D8889E0F49A97701264B779787F3C37F192F41559F653D4EC298078904F16507B9D090D9EEC
1B9390C78861F288D964BC6B73CF85EA4ED9C2FA4F01D4CBA4C71EB3EB95B162F210FAFFD8BF
D1F79EDA5C0AF99A37B56D550A5A92A49937F31C23B04EE90FCBB8469515DB89371175095846
D737ADFCBE7505771F77845A7ACB214C0451487568E62270F4B5E8E05C903D32062A3896DCC5
DC0D0BD912DDC5876695D8360540B15C57257783731C8D55EF5F5CD89C8FD4BF9A43D8294F3E
112DAF52BD9C893906CBDB83E14F4DC27FC9272864A53431E14C2D11D7FE722C45AF7279A737
BFDAFB07E581CD9610F6ACA79781A7F525B6D0ECABFCA36DA75C274BE329578D36347A2BCE0D
1117B9A2902681FD9B69C2819A0E23BB398F1A65E0AC01235E8144776CB2614888C18D4CB000
01D48F83A2C14320C2E74D43E9F3D3392AF18D3545052C5A00A3DC557A49C375657E5B611021
2AB6070A3F81480DB50DEA42C03C7BA547001E696CA4BA91C61F59D4874FE147DE5AF34082BE
2B3099C249E7B14E3BB1EC2374527704787BD0FB1923C7DB03E38474B7910DED66DD318652E9
B23AB730FD74328877ED03CD49143A58D911C42BABD6624DA6A1638827E2311701278F953B6E
E77D7BA6A82DCD6869C922FF0BE10FA28919E4A485CA2ACC9874A9E2A468F2706DBBFE7F9E54
E92E75E482916522C837577BEE11EF2F1F1F7F662A03513BF815B9971BABEA220215321F0F66
0007DD5BD4F943F388457F06F0A325B088AB74F24D6C9821D745EA530298AC018A679F8F36B8
9C57BD74799BF278A9EB732D5BB45901855B4D08F13FA18D50B691AE1C2025E07C08B5C1D49E
90FD315886DAE2BC296A838AEC61942607C1EC30041D869444BB9BEA0C2E6D8AD001BC918E98
370DE90E7169E8AF674819BE506932DB21C8A959440D4504B2C162B71457959B8B8FE0435AF2
0F3E6ECE9861CD7B0222DDA66F834FC1BFAE779EEE04099CB4AFA22DE1D8687BCC6DF8B71087
94ED6E6796FD8CC731037BAA8166A39AD811C2D3FFCBC24A61FF51F4A7F7E227BF2E295944E7
B2667B60CF3FE8B378925D7064063659AF077EDB6B75412D53EC2D2D55D828A5FA1E5216DBDE
B59CF99895ABDFD34A6498F59EB69FBABF7E6E9C87D3BAFE739090B5910E205155D3740F871C
F19A82FB9048C20FD4A0AEA1F6D6DBC12C1B9A350208D7D43E0EA360E621B8C3F284535E1338
824A3DBA50F0FE4869707718D9ECB32BC8070EA92D93549CA1C848261845B392C50020A8693E
D3CF433774973B0F9ACDF7EA9A67E55F0647FA07B7B6A0D0DCB39AB091CCB5226102F03411B8
D6306A19463757094929861DA86EF7EE95E01B2EA50B536474360A84D2D2F57B544E8BCA4781
D3D2C7DD92A1579100982B03A6C4728E7F6AD3CB659292F61B15D5E40CB753476A3B875C72EB
7F5CB6ED0D61263147396A45938C804421C445651CF915145FF03DFC2E86798D69EE29F5F5EE
A00152F89D44A24DA080D9AB34C986A23E96A012724703722672191E37CC138ED3E2D4ECD334
D1A86E46B9B77ABD735F10B642268AB2FCAD57045D6EE84BDF9EFF464FFEC68E9E3DF1AC804A
73FCF99203C31A9373FBB22682284C65620B94174E98A231539A432232E50E1B854EFA1B3655
5A683FA48CF7A9D2E67D165A5FAD4965423555A7E40CB0B44C2702006EBF980B6558946F4BFE
D2BAF8E340D802D4B0171F7EAB32F208689416547572ED08FCADB8BD3BB1056EE8F5D382802B
550C8FF117F19329D91C1451EC1B201EADF23CA23CCC465A732C64F02143F46CD970B096899F
6F86AC4CE3796B6A8D8AD401916688A7A7B16F304EE646A94886AF09F0EBB4728ADFA516A61E
9AAD39DFF938DD44568E34C56A33C7446BB3B60EEDAD65787A88FE55D27321850F1404FEAD33
096E2C79B339FB4D54DDF7FBD46D78009220F0893E07ACD1B4EC25C5B61683ED3F15AC9F6D53
87777A2714BB3F9FC027872FFD077A90B1D6F6EE6A76EFC25D97DE2192D5480916B350822908
2AA9A4383D4F5F97C2A79FF0E80D4036428A8932483731D14D6D5F6B2E6E67196EBB1013A2A3
B33EE55C8F7D9E05D623DEE89F8BFE1D3D52EA6774C35E7892D653627E36F4A37CDBA9704DA0
63D55E3793AA25B043D665A265212BE2E8916C0AE60E0BA4D8C27CCFB03402CCF473C6F08452
03C137035CBE5CC6DB95C7B622840CFF41233F648DFB970DEAD4B04CF1DEDCA7A4027DF486E7
5569B64EE1A65A7CB419B16E788B74AE5C057EDEE39F5B4E82320D802E91BE6D24F4583A621A
269CB1AF11E9E3F7F4EBBDF77E557C4D28844FE70A38E2BFCDC60F646CC1FF1B313200D0881E
E5042BE0E1F8A73C64DF7CA36C1A6A4A0455E8B872E79E4B8DEEC707E3EB026BA79EE8C469DB
3475667E6B0EE3F8A0973A209CD08D0B909FDC40934DA16354D1F58867E399D607BBE4E932B0
868FD0F8C2A278A5CAE375976645905B390301D528A75D4B7F9C3810DF01720D094AEDF2A58C
A391B3C1DEF9B7CF9B5BAB9EB40AC9CAF3BB7EAFE804407C2EBEDCAA96E258C48B2384124F6D
182B0EDA0F4F7211B5B5CCF2BCA277FB6D3191518ABB8C095F1BF3DC5769ECB91E6BDA67CFEA
98E68F5452E341580E9E990BAF771751A92CE9131E43349D0023D7C88F42F5F3CB67D05FCC20
6B822B9E2BE8C0561FA774912EEF8E18B5F7B0164FAF03ACCD2EB408756262968565AD352CBA
F5BD9C14730001198EC578B99B0F52500C5DE733098F1B2F5B9AB72B3A697016DCB037658073
02049F2ED6C935DC65F1EC69EAAFF042981A868B09A08B0D8E7F8CAE2AB42630FE245C5CEAFB
114DE33A18C7A3CE7DC59E9D79C2E2AD8E4D86D7980EE6A6FD98BC2F58AEE07162748BC9DCDE
35B2233A4BA6393DD986F1E8671B0902E6AD91AD5959592C48AF065D2E458E1F2AA4FE64FDA3
316933AC779FC2ACB5810BD41EFBD4EDEEDC34B739392CF649E889BB7DA9202C818E10A41906
5B51772772A0ABFEE6927D23EE549A93D3E7B48AA8D22A9B7BF542479F14D6404B2C2C1607A7
26C61BAD6229F79044C90CDB41980F776E8479CC0A492909C5735A5BCD2E26CAB8DEE487A5CF
3D78B035E268339DD5DBA43CF6D3FBCE6C1680794BB3ADF05E0080B9F865D19D396A848414A7
0AA1581A8AAB6761BE2F86914F02794A959BBFB23B2F96F1A174E6DC6FA008C5F633FD83988A
3951B04D6DC4B179B65F0BD2317039C075709B2171D69E0D01F635CF12F7A47E9FA2586BF443
1723586F46A2C29A4892D2E1BBF3215C77E5B1C7FD3BB126EE6DF6887FF3B5143C0375BE0D45
5C6CBDCA591AE0AA08A69F19F82AE32CF7AACA10781390777ADBC697E55735939E243B9E80DE
EEA1EB5507D79996FA49BF35857E01478CC25D830A0803BF7C7827082A396FD752181DB32B91
0498FEEDD4D3BF8B34EA3F264BC95156F4EC22B2F8F8BE7558960414054253C07FFE59EFC50F
A20066C08F2E907B83F89C3875CB2C3CB755430D359A80C56F99D0040476CF6135749A2AFDC3
B6BA0D244BE716503BCF60489EA30F23865B21531E244D2DE2DA6528BBEAC6FF5AB700F0F3D1
344BE08D815AB540A0A502C917319C6512467C7D4909800AABC094F4E3A21914905EDB796E46
E40C1BD6E47AD6E2109DDC9C4C758F3578582EA4B632323B04A182C8370314A6B82F9853909E
7A7E5E2BA0F43823E26B0211F73BA246556EAFA6030B82F192D54901D622DF14403E075F5D9B
0AFEDDCE7C52227E7CF5067BC827CF0E32B1A21B23D600D11F4D9ED39D8D40759EE9B3740FCC
0AF4E5F80A5B8B958D51FC5DAF2B1B993CBDADE8B8C53046C1C408585FF36315321946B62AE7
49FDB1138C436E214867F51C6A221F2AA0DAD2F8EA5C5EB08C1E12BD2443422348FAD350862E
80BECE68FB8984398F95EA25AC4753A6135A3A97C986C147A3FB7B528634113371E25E52F754
87391D027BEFF87DC6BE031DE0207D78138CD96E0024296F4A72F5C0AEA2502E6A63B245CB08
AFF1E3AF2716CAA7E350B2E4BC2EDEDC32E4941AAA59B5C6D9EBB525343E9FBDBE359F28C2D1
22B621517C7C2BD890E3E4E27041FC55DC22200203C73F5A29CD6F24C9CBB3E0AC53E63961C5
5E907C0AF81F4EFDC34B9A783B935C607E46C8F9F09264275503849E4528A512F4C61AAD801C
35B1B52E89BD38FD530DA93DEF7841B702C7C1311ADB4D94A4EBC6ED84765E119AA24C49198F
892115F813DCD7ECBDC7427B2F649C051F915963F9765266EE9C2166C89F58B18B60B2B3066D
6157675A3962C513B6B4C63BC6F1DE65C66226D706BFB2C7D175A6D0887A2B2F7DE5FAECA561
A0713E67E7C08467C6EB1673878AEC02223A2E5AB7CFEECAC0E81DBD5E7DC26B2DEAF0347B0D
4B23A8B95DF47A7DECCFC0DE2F627D669AF20AD761B6DFD1EAD7144993F935E82E87F1048E0A
368B7F3E73876CA1C47856D1B4446E89FB0FF219E1AF5857E435E9A9638F3F52AA94985115F2
6C9643060D79DC3EE65EAD94962D9B0D0736D2FF160F2E2908881BC420EA953837F85811ECDD
5FD29BA4969F064B7F3234B792EA0A2664E4EAE3F6B905C86FC92A4562085614ED504756E90D
709D1261D9EC682D816AB1756841920A7C4A041F007A712E00E3F9216D8BAF17BA6F24EABF10
C9FBBE1D455A10907355E926ADFA877A61292C6B32F93A2983817AA2E3573E14EC50109F4DE1
2E87C568C953D9036452306AB4F732F5016879A5C447CF50AED67614898478569427B9D1F8A0
104EF1B67ED9C196623334EB032C50562FE79F5DCC5ACB5ACC65F564B360F3163081AE000015
0CEAC3B528ED8102132537643715C7270C168843285EECA61CA7ECF4220CA050747A770E4DE8
5DAB279E55945EBDD7AEF04380354FC198FBD3DE62D86C6C2DEBD4E587081F21EC78BD8DA1AF
4535E342A1D799D17B93BA81566FC91D67AC3F4A90053441BD3E26E36B6B43436B8777261B54
6F57E15EFB3E67660EF34F49AE28B740C2E34FBAA6037751C1CA57D7AE83C79D966BD87FECC3
A0F6656BA8DD3C2C793C3A47716D53B205E1548C6B03AE8956F004464C293F3016DD8888329B
9E525131E1C64283E26BD10F9906C161629C74A307693EF222E67C7B383D1A1501CA94189054
D49808A11A4B5DB88E1BFA8694E0D1F3E3B929CF266D8F028F72CE0D066658B9A654E2A5F34C
9A718FA819177EACA9985BC0D6942AE343464B494EEAA2F357FBF8A5298D361D43B35F88625A
965CED31E52EAA139A819CE82B7625AD138A738899ED1EEAD6892955A334042E14145FD2FCE2
F749434B0C0CE1B270DD7E10038BCFF58309175426A6570D1C347FB255BA26D6BDE27B65F917
65A09D2BDCE5B8A3E308523712FA34BE419056EECAD69AAFCE5618401B61BADE55FA2FA236F9
EB494869331E8025E5A743B4FA10336DAA88F202B2B4DF5C1A0C8B0C8EC011BB0C61D7A36B0F
AB141A81F142A41DFE30B729048306A6602F7B27636E03058A41FEA312D270CEEA706194BEDE
E5254B67FA486F8F240AC53D33A3861F85E4266ED1E7EFCB23315BF317C505441D7AE588BD89
FE60E2DF2755F6A4B11B8F32F54DBE78C77A6722A542E8679317CA1A3F8207AC8139E883F979
AC6219F56860D4A548C6E9BE5F9BCA7D3CE1981C4EAA725E1D718F3C08911CF1AC37FB3D21DE
F8668881159B8BFF9C8A19EF81B48FF6A5F8AA32DE6C53CCDF23F05366C098A90256442ABE0F
E0C8BA6B14EB49D384F9B938CDBF2031899B6EB32101389DDABF5D3631227A1CC5D50727217A
FCFF087406FDFEFCF89F239B907A35160545F7B9E46F3D7870B066FF1728A441AA6D0D93CDCB
9074496D8F4788C621BE5208E94C7C245D2F90726F4DF6F9F282D9EF2B08BB5D7E0722308B3E
47DB69C9F04362C46F880CD46736974BBE399D51EE17F8FC39653B335B8742730FFE6565B593
6B5CB16C4831A6FECE44018EA40A20CFE424CAAF3C1AF4AC3529A053A5D36B5CE0F0BFC9B2B8
15FEDA34BA3623970BB881557E16264B379D26A04E3F1FD5DB2584F8910E44A645044B59022C
5DE3AE635B34C76F3D4858C3BF77DE03B3AD149C4C66739E91345096C7DBC9B3592C99200566
0DD75982BE137DC1BE03C1BA3852A4542B244BC71E4F0DF340F6806EBF01A8465AADF52A7DCB
EAC40C5D0A55210CCFA0754FE3DD4CA43DE8BBFB47DFF8E37F89439DB16A7EA25FB14E20FE02
1DF2300D68F120B36472E0F888B1FCEBDC337801B3576F496D58B46C3AB7CC79A845B56A1242
79DCEF3D4F70818770C9E30C50C92F4598363547BE8121CA4087388C1E75D8524AAC17B193A0
71F2E33A894D0754608B35FD75901325350E60410A6A8194D655B51FF9290F5A965FD1EA65E5
1FFC4E4F85F3EECE7FD48A32B62C8ECE004BCF21251629D44E48CCC0C1EE05E5F8013D7EFE3D
CEC26254D39843FD1BAF5FE4E51F003B889E39ABADF71E73406D8FDB53F4C3B0255774E6D1A3
170C982528AC7341489399E43CF862BB7C7E3FD951502E71CEEB6BC1DE22423FED015D9665BB
87A1DE991AC54F2CCC44FCD701861F25EBD97B9B4699C3388E9213BB855D8B2B488D808147BC
6662D13EABF1BD8E8E64641E0C8695A89E8FA04BEC5E4D82B4C517030747B7585778BCFA24FF
B962C2F8F3132DF365779A3F5CC428547F479B6459A671824598F4AF8ADEE8886650F61B008E
DDF5FCF68280A422CFDBA4F1647156F58ADB6D803A8202B1AFAC46A8A176CCEF7885586C0B06
5081D9A075FF7E41E53F964D47C6731E5EA88E6FE1432605C93B1B492D1AC04542638D3751F3
88BB23F8B3E96B406FE889762C8815AC2FA24FCE35A51E27C090C4672285F9E52115A0EDC56E
F9871D413D2A9BB1C28F0C628848D5A42824DCAD8F15A66D0F9DC8EE1703E679B7E7ED91CB43
236F7635BB3F7F97595C7E688BFEF954254B928A1721717DAE82814A45AC395916711369712C
450AF99909411CFD5CF4D55D104420A8579A2A78B49F9A86435119A72B4F4C418AF97DBDA84A
3ECFAE7B741CC507ADDEB52445AC179CAEEC48AE6EFD1E8FE73A70CEADFFAEB928E5AF4C71C3
E851B5D010DD17F69CF723BB218F293AAAB689FA714CB0F4583A03388EC5B72709818139B2AF
E90FF0387FCBE4274757CB87213E29C07E254E99BAECE82BB7AB9FA8802E21616E454FAFB8D4
86E95CDBADCFC9C00D8C1E022A74E0D6F46AE41201A6E6A8A09DF4EEC2743FA5D64F2563D5BB
805637092816B8CA4554DFB8052F6AD8A4653AB81E1DBC9A971D506ACD2405641CC12A4F5E5E
72968F41E6C8E0C022DC54847D7EA5637160C80CEB33E91E0C6C8FF410C5BE423716E671BBD7
7598F17BFC3B71AA45A4B4B89C697C5D32A76F09A433E7043BEA9EC78E9D120FB2450F25F113
ECB45CCC8BA9BE5563EC54691CC11FEA2E3ED2BDFF21A1575B79D307806F6A252E0F82ABFB06
328F9E02CD6986BB610C89AFE178BAE9512B541019ABAF0F61B18B37C71F8564762935DC729E
7E9B3B7FA3E5E7A5B6969848230D254B67D0044743E904CFE38FE56380B1A933A2AA47158A2B
33536070B7E7DAEBF60ED5D2B94F812ACD1B135C963CBF7AB87783CD269C1F49B51DAD346E9E
7F5C79D22020F251DB7C5F13E82B45428C27471E02F54ADC8FACA7B244B8A2203EC4A79E9B11
BF9B1C78D05954567D64FC7D282E3278B5EB25D874C7BB7C7D54909D100250600F2CA7649B55
69841A681D77FE7D3FAF7688A1EF77DD8FAEE8E02E6CA3A2086792050DF6B9D72757A4C88D7D
2273BD7F43C3FC0B5E5A7D764CD07660F4DE610C8F928CACF1D8549EC908E747E452CADB6065
AFCA2735B2CE2E75F16E1268F2D22C4630C653BC70E24D1ECF3A3AF93F08FEE3291BB08849F9
387D8A5E83CC8A213E6D21A17463958A356F83DEA2992645971080464A2E93CBCC2F8E17AC44
4059E56434E1C82190CADD1C2B9F4A8C37F6022D698727E75B6489BB9F910840D15955FF59A4
20273DC5F61D356E2EDA5D205A58E75B81D183B2694EC2837E7E96A31B9260199C71D4F6125A
0960508B61BB548FCA3D8CE016DBDFF9EB5DDE018458E9A2E37E66EA35F62377BC0677433BBA
62A6569F08762020B0AE7DFBB73FD1A00367E45238E4F379BF97F9F8A9550CEAE2E18C650020
83A53B1C4BB221663BA738338B4868A8A2EA3C5C8156F1B0736D7D3D7EA8DF611798E5CB889F
6957B8085E10730C91A75327BAFD19DD829AEF42BF6FB5C8C1B20D1A0A18818E12133B366F56
B066D7F7AAB6596931567520470A1AE7DDE2416CD7A3B305D4D295DD6D805BE74A809C938626
01494688A39FB2B5CF6C9198EB723099CA38137A8A7AA033D943BD6C987EEB9682AD2ADDBC9C
7CEF9CB0571BFD480F1ABEFED5CA2206AF07EFF78F55A4799F86D3A4EF5B60D8A126440329B4
B20A9E02789C58875816B34256BE42E521B84782B68D1432EC046F58E46F717E411DAD2E5D4D
B4F1241AEA343C9959763AEAE109A480F0920F20EAA32EFAC34C6F6F887661ADFD242FA05A59
4059383D2140CF55EF6382EDA3CACE984D623756FEA5250B52BABACD1CA48FA40B463CB98F2F
97F2C4EC9CBF67A5D6440478134FACBC3E91B02BB85EC0BEFD7495DDBDAE5D33C40519402F13
A3D1E72C2800D8FD1C74FC7B810B23A0BB783498C8A6278B09230FB0681DD7256EACA65ED14F
38EFF1481F402E4C139EF95DB0EB1FF914EE0BDCF64C82DF6B9D6A11F4D50C7BB20217D97467
8FC1F874EF8BAB66F290884BAD145102E315A929197EA9A28CCF88144825F38502C82157DA1E
FBF40E7A9265B6B00F1D44A12E9EDD13191573193BD1C06606EFC4390580B6269B390335A905
1DA52D6A1A6CCF79F94873EEBE6660DC2EBEC7B577FB0CA9FBF6D58760670350B67E84862671
A614F20B9A467BA91F3C81B42AB50955BA72D1827B54AF1D91DF01060BC03718E3A6B6934137
DE6748BFD0E827F522322D4EC87CAA126281DD2FB083BC821E416E5FC15AA54EE7D941CE6AE0
E863F132D723E94336F787B71C5B5628A570638384B53E70C8894FA8013D49C46DDE800B5574
EA1808AD61DF5797398075E0D76D049DE3079B8BEDF4F9457F379F9864C04110DB102D3DB0C2
33D94EF00177057A6BCE716C9E22C75C43CBDA61BE14A10473E9388C686D3DA1F50B8E4C6BE6
4AAF43A4DDF43D13EB1BDB790F3EBED441E8AE4FB3716ACEC1F8CC8901BDC8D6FC00B646A5B8
541C844FC26C06DC68F94C53148E91EE663CCD865ECDCF5E6D68C0F82698AD4D91D962D5887E
165F31BF513436D0B3AC76BE50AF9C576DE1CCE9EFF4EB558BC7967B57B6C0489BB3865234B4
440D4B3732340B9606BFDAD150DE6D34583695A41B833110B235BB31512CDCC32EAB95CABDE7
628A6322CD3B68EC4228E7006B3103A4E4852CFD0388E334939F07ADB71D8C99A2E55D43777E
A1B296C5C22BE740186E0A2B51F80E136CFBC38249E41DC16DA43FB5F4C818B50562240B36B1
B873244F033D0BEA70DD39C4CA9F752E13174079155C0950257B2D376A9E29997B8E24F023A3
7AA98673905C9B25D8C22ACD555900403AF3219B35CFFDB4562452CEB40C56B8300A3144D8FF
CA288BCFE520D50FF6A58A69B1DA6A4CCD9E4CB67E0CFF81F6686E70C411A34A978ADDED5E57
5CC360BE866199C19DE6BF8F469FF02BF0DE7F2EC3CD4C3CD3A40D316C88745E9CAA603B075C
68C060631C1F6CE0C73BA0DCEECC6DC223B9F3A341C2AC71F373CCBBA02EE91C6D838D9014C4
2A66D4887029524F1AB1CB034FCAE5E0FDBE31ABA8709D4C1108F0B11F743F88DC0E9CB57228
4752A949519A2D1F32279A45D4F6A39FB0E52D6C63E61945F66A4183457E3A4C90606E58CB20
393DFD3DA89DAC1A24B254B6EA73592BFBFBE1AC5D6FC90C88C31408097ED545A41467BBA99E
3DF1F933B03277ADE2FB1B94C8389077446EE1DD8B73B457E077C9AC9A32326E4682B518D6F7
8FAA59AD4A0040918BE71AF4A3841222DF243529AF9033FAEF30CA38456F91D150FA5DC1713C
6EB7D481B79B70A784C1B7F0D538005A23FA38D28A4485C4838679D7ADE9B3CD9418B0195E40
9C760F61825EBFA38BD18B206DA33FAE0A275717EB2F667EA93A0DE2F038DA05AB405236682E
616265BF5D1B9704F3E12E3A0B1AA0EB03DA86F399B99FA276C17EAACBA70FAE534F3262D6BE
118C1712B9FD97E1AA9ABD23284D728D37EC1A1CE6A69315ECDD7CF90C82836D375671377EA1
86BD87CCA4292C962638A521D7903076BDF6E1751E22A72AAF2E8BE7F075CE96A536DC0A934E
0728254C417FD73ED73FA28B5D77D7651EABA2435C34522FD22E419F48F7CA084EDE82DCCF69
5436EEAD7034658FF364C9E916247643EA515DE87C8D0E16E6B13581A6951F6E5CE070FCA1C0
EF05901E8A2232A3ABD671E278C77FBA2D99EED22E5F60F18D698F9138F88FFF86FFDFD3561E
9B17C69CEF12365C06E92B0390230EF5C819E09D3F4BC3AB8DDF41CE99F5DB6A011301F1365A
1BCA6BC0D5835568FEF36CA5654039F3BF00F73F2A735A5C519D876E1BD8ECA71B421D3529E7
E5A011F995287AEFB99AE526E40E51425CD63F971955B3CB1958A265CCBEE7C9E6DE28BDB3BE
670B3DACD28999A1481659AE85BAC235AD4F389FEA7FCC35872B49F693D1E69700942604D5ED
5AD4273576299F977B0CF8D67C4F284DACF9A77DA5ED45E3103F4EDE9750A23D0C9B2C180CE5
7191A6CB6D286BD12A04CD415B78812E8143EDB42067648619F656224039ABADD89020F462AA
E701CC5F49B7666A4B6233648DBCF2E8564939A552A34F4E588990FAC3ABFD525654112AF367
62E2949FEA42A55A21F2525A8C15AFE669BAE31ECB7BD1D46A360697DE8B07AFFBA693E77B53
B4972B80DC8556CB3EBF658406629B5111482EAE2FEB065138FA244A563F4766CCA825C94ECE
3F8CABAC49D59C9593F24BC89BCFBC608D3FFD5623FE83288F68C7DE92E84BB3D11F851D49FC
EC7453EEEFDF439C59732C3B54584BA23DD9580153624B3CB438F5A6F4A5345E6D2097B6E292
3C3EE1AA831E55AB6CE7B46E3F696447D33D4F297598052B4459AF9B96757F2517F11D965B53
9D7417F9D4B9FC92FFA4E8AC777BCAA6577ADE30B3347DE4D4A0EAB8D0678037789C916DC151
18AB29300609C4C4EFF78572365A234AF57B89BAEF3D7355F3E7D9A20855E392474B053CE1BE
3F8D46AD131AE93EE75EDECE687714E3CFD7984695BE2CE44ADEC0F4BAF81E55982744BAA372
7A2FF2261342E9EBB85D541B46BC50592BA090368B31AB3110CBFB073096F8B98E2D4A193B48
DF4673FBFA654996E78E76F30D54C1DE8057A37AF3851D0EC398F5DBC1E234655DC6EA332590
F079125B9D82D412A9F462D266FBD6A0C07FADDFDB1EFF3C5DFB123A884A705F996B9C9C6F7E
A8AC33C46B19A8A1692E84B1F1561EFDD1B65340118436E0961264E28B039DBBB025FB99114A
05D19264CC87740D78EB9F507923FDF488DA73D7A72AF28175CE559FF7BCA8E07D8EEE85C9A5
839E87F107EA5399184C735C510213208CAD46D30EBCD854884E9883F0BC2D4334F9A26A6691
8D5A5176749E2038DEE6276DF72695589485EF88185ADBFE37614903DF8B6D857859005A735A
9FDBC39F3E712739FC4F251A9B334583E567353793A6868E3545007818E39D81492DAD796E3D
58CBC82DE3976A4C2D476CFEC4F7A1E73E408DA6EFC79589C6AC784312E5C393272B1A4FC435
8EBF753EA9E2D16FFAD598FE8AB52C7DD2DB5E3513A61C9C3BD9336A230EE86E7285404D760F
451BEA0D59C862115A44683139AF687D029A521F33698A29ED81A79906705FC20E6EFF1A42E6
83F28D4C8A65BF87BC14142E6EA0DB14A9C4A72DA388E8FB03E09A3451B9C33E6117189D42EC
D4585C966B50718835AAEA885AF66C1A86D3F93F81BA3B829A08CBE741235715FC32FB251418
590E19A42CD44AFBD7599E023C26941BDFD722F1B192255A9358BAB9EB59BDC13ED4B759C81A
6194A018B02B2188E163FA9D50B603D0B5F64DCDD8F5E8319C0719164DBC6B633AE8345A26AD
CA095CD7BBB1185E71072C2D9138695DD55C9081520F23452D4FB234A4A2934F5358F1D66CA8
9032A9828FDD8B7BF706EB44E3DA9592C79FB4EC0DE571498C10531CED53C55EB2415A739CE4
B235617754321395D877BA072FD66DF82210368F471DF3A7929654718C31827A3B8EE3B8C65F
E1B056BCD1C0F6FDF6FD995BEAFE4B6C3C58B181FC61BF9C49FC5EA900BF952EF924A78B0E1D
44B93368C215E733C62DC2B14CCB96F538EBDB1F014C55E8731F305E9DE5BFC433495B0E925F
615B315EC0739B71A70BBC30E09A85DB229BFDD1222AAFA5D78D17CD0C27CEDC20B4FEEC7562
8F3BBD29CE3FAF25B3E7F32150B471B143181E104B3748BE55BDE9769CCBB012882ABEE02433
1D268EDD26F9B5CF5BDB1200EED9D2444A71D7B7FB5C92CDB313F1FA9160BFB2FD7CB082E6BD
88CC5C098A7D6E9FC626D67EAF6755CD50A46E2A489A2293CB715E9F04D079EDB278059E6793
F0DAFA5AAEEAD3B31FA2520067DD30DEAA505BF238554D62D005887C7A09DC4591BF360FC87A
0ECB7087428EB8B56616A1F5B5349D3C0A7AAB806A450CEC5EEAFAD32644FE997C07908752DB
1CA3A96D1C3A708E8CD56FC0C21E9951BA3E5087BC5FCE7A96D70F0F90973E3FCBF74E38B0FD
D665552FD58C6117B5FCD68098F116D44EF168B4169A048B5833C151B53BFC4F72753340AAEF
B570AC1456BA952F812E64CAE650DB86749EE8327F63C34D9E74BC8AEB85CB04188B02981801
624D108B6755A755C98C9D275F85699DA502BAF7455E1EA7B54FD9C5257AA7DE882A604F5023
F1F6B19299E7C772A26F793499B32D18F227774BC05B25D7C3AE7B1E2A504BFC33900092CD81
87695CF3293142405755263E95C871A9EA894175DF60371FA7D5A137C7F31A68A0C12AE08ACE
6DF36A82E5BE2467724ECEB1DC8533259C2E4CDA3DD153C82EC657D0C3D6B9CE96616C23D921
22A455805819E3642427A90FCDE30970A04F325F35BBE463AACC815DED5EAF660096EAB8417C
E8A098500F6FF063169430C9D67E8CE38FE9202E4B88A7B2BFC4EC797B07FEB64B4D4CFC1E60
42957BA81D7C21AD4F21A279B043A1A6186C18D86DA0A07235DD694B633E8591A460B4CE2124
86F108053A082A3D85487EAE9528FCF6A7848B6FB37AAF54D5AED507E208D0002351E4143974
6EAEAE18D4EF99BB6D0883A1B8921FE11E33D76A0B6FDFF18A2706626796B952EE809FE14DB9
C6F4FDAB5791305501F084C029DDDAFBE1C2CCCD22336A057BDE02954F3D8E9B47400DC6C4A3
7E9AD0769C6ED555ADE4DD1745995303D79F1568E072A2AA4F7C26F6147F90BD644B1129A2A3
48187F9101198FF98BBCE37F7BAB5FD90E265CAD0B4146729585F7072BC139F087D532A484DE
356239B54E5CA2FF0F6A3B66BD97FDE533529DABEABAA485710D38602A243F0AC6FD1A7652EB
48D4ADE925D8270BA95402AF131F1031E6B2CC54D0277730C2F911903452623B60DBE8947008
6DDA3EC33466DD68C9DED90C706912306E4038E00067B6B91E710209AB1A08F2849689C40DED
822650102826E1165685E3EE5ACCB7B22553960BD3DE85FDD8F6702E863E8ED14C5368D15ED5
0C20642B9943669D48D2DA7795EAA06E0A44F23318D0EB807D28C422A60390460100842D769C
88F813280062D1E39E16E45F675EEAF84F33556B67967878311C83E77F23386EC4A993F5887D
48ADE0DFCDB8BBFFAE22B5319EFB64C7B940EB68A54A65BD94BE4EC62B066D4D05872704C0F0
3830F155B251BC787ED7DDD51C37F0D52F882FA15BEDBD18A1F3E4E311817299D94C32B6D776
5D67F4E201C5175CE2824A7259A8891FB2C2823AD9768CD5A04D6BE1CAED75BA0EA3764D8725
48FF3786E57CD5CADAEA18619FCAAF68B76CABAF000BC79F2826EA9CF49DCC8265457D27520A
A9E9A88A22CAB896C12425750246C46128A546C090B5C9BAE9B2A9205E7E6F3BA3944E2CD192
F7CCEC362A6781CE1AABFB64BA796094865B89453278D5800C619DD0D0E35E8793C574A33D7C
CD6C039BCAC6BFDAF9D3A593E3E152958DA87F4F2F9DDDAC6A4A8D2043F92BA9FAF32591B986
02F1B13587F0727866272419C78ACE3001A53F9FFCDBBC3FA12ECEFC28FBB37A44219E17B57B
A6A502388935D27DCDDD224DC4D53EE533E18A36D9E9D4CC25A7339C351129F1AAF2F63C852F
709A3C5E58BB1256FD5164CFFE1554B15F5B2986AA120B2A93DB8E78D230D6C432CFB2DA7C8A
10708324BA5A1100899E8A2647D62550C2B2D0850D0636F715A46C2C8F357017764DEF69431C
7549008D62DCC1403EA94C9B96CCE1E0EDBCD14AC1666D1000ACB64480F3D0AEC8191FD947B1
D62CB369746F8F9F9E248F4367E60C3BC2C1CE505A5A0E2582ACB805FB684B639E984D18F45C
626B13791B456174FDA55159B928BF55E4FE05EDED2D83AD0409A43D13664F4C5C23E6D5C204
5DDFA8775FF05E9E577A54B9A6483749D1465A4619B2EFECD9D4C5822AB2192BEB1315CEAA3A
4EB144B61CBAD36EA6FD03B76AFD635CCD900E8A0EF92D2F35CE223C0CB5AB595D7C5812F4C7
DD835983BD79F187899A91246270DB36A8CC70E07EE3ED7DA84EABA5E73D220EC2ACF313868D
A9CA910B6D711BA186C40D66B2A78C1D7A3EFDC9BCEE383F6190BFCE35C22C8B51687E600FAD
52408A553A6690D6D84918095C3A681C4AE8069BE845AD4143D733664698B99389AEC024EE74
854E098D70E0BA1FFA85737D31E372243CB9DC46FEB7E9EA18F43187722764687B962C789AFE
F0D4F5F90CD9AEF7DABDB8AD2FA21C0AE9DDF13F22CB2FFAE2BD117E88438E0B8D2DBCC5C6D3
F73244DB6AC8045322CC1A363F8339F53370FA307CC431E7C91756C2282DD373AA8965E7FCED
9CD9A7305F97060AE8C43FC0BB52197157EECB796825A670EA5959B7315E71A9348FE01BA1F2
E786A1C546D872FC97BECC46541E517A508766BE9308E62C4AFC21AF209E17A1DA85D969B8DF
EDC74B07A2B64272F54F00D454E6980563FED97DADAE75467109C5AAC2A4AFA98A0FBE011A1F
F9CDF1C53F5CC63D2C65B6FEC2E12BF42BC65EF0A69F9A04B50A9A73AF5F21DFC5BC20A95EE4
7CF12474B2A80157C984E6ADEB275CAD0B41467295858EB16E1CA9FB10664CE74B45D52D6FD2
4C714AB5DD8127FFD8500B149A8C8732DEF2C4FE464EEECA6B8D79B1736594A88473C02EFE80
3BD328E6E1820F69C748C1833C753926272B7A89CF856A159E4AF5E45AC06C8B540CFEBA87A4
8869CB02C96A2B5001902DC46C6BCA4A5490FA000AC3841C3AD62C8982A96608DF20FD71FE95
A4025D0DAF6908229254016FBB6E9E7873A39419DCBC7372568ACA76381381AA2EF802FCC2A2
1739B3F6D5702AC74BBBB6899E4A3B775DE8105AC6294E0059DE2B66FC1F181EE46CAC599848
578AEE2DCCAF2F4A1C54A0411B352EA1485A6771945DAC4339E98D1153C4995A743E1927ADB0
FC69E93BF1AABA5FEE60DE19B5756708D51371FE883C8A9FD21F2644E6C7FF7C360FB8721FD7
24F72F3517CD8B0AC6CD95E015A94D814A9A97A556BC3B8C26B70C9DA49836BB7EAA0F4FFD92
8722B664684DBFB6B87CD83EE1F6AAB258AB3E6E69EBF47AE0288E09619267D10F31C7AF5DC2
58CECFC0949BFC756DD76316DB1DAEC2D093524EBCD3FF569AC28C4B871B6D14E5FCD6422DEA
7F8EC14E67942D154850C2CEFE6DC6E5DCC58C5FB34D8DB2F3C7E9F21791B9F2233400CBFEF8
E988F445DE78860C2F3D18B1DE5D7029B01544F4A4232ABD7D04DBF009B3BE0C3AD9940A65AF
0DEDB4ACB2896CD9D578192D25DC620A9A8EFC3D5F0118B7CA90479A13DABC358F8B27AE31D2
E3834BA7D981BB745D2031234360EF786F1DB8AA38CB3BDE919FDBCBDA06B54D692524E13F54
55C1A09CFC4D384983143EAFB4722696F0945FF4297E61F9A9FC7005247915C596057B97792E
C79E0463A72A5A5394C32569A9F14F221EA7E606F10872C609D90971A09528377D3382C8678E
BC41A63861DCD04411F508B8EEB12BD8B862DD86550CB0F9E5D1DD7F5BD855893A2F847A17E7
7C27641D2C9EC2F64C61A8A809A46FD3E343EB201ABAA638491C13F4BB697504037E3753966E
4B4023628A9E0DDCA764CAB365F3AF5E1B364D9C33145FF1FC0C777755BD74E92B8C99F8FCDB
3A42F0D54353AC9AC76249975921E7709B5763D7B5776EE9CE2C22FC9BD029EF3830758CBF23
E7AA88E375C3FDAC557DB7A1B407DB465F50F2BC9ADE65D45A195865BCFB3FA449421ADB5F9A
AE23635D26FE93AFFC1411A7E4F94748F189DF3799D891F386B833E0B7681A56ABB5DAD46A66
00A946949F6A9C28E3B37D3145FF4AF35C4B5525F61E0B98033314C4A844DD92B60DDF7714C0
7AEBC65FA5F89FBAB6F4FB91BCE885BD17B32E44721CFD031204EBBA6356CA655D483BC8155E
7DAD9D5F77ECD02E50217C265E9B0BD695B058C0A51EE10F6BDB9A217F423142257D683CE751
61F71660B15F850A283EA6DF969D997098DB7FEF0DDB22E5B7C8AD748C964B54B55DF47E98E5
F09154F324AB1E6A0F0A04CD54BB7538A243E14FF914CB80FAEEE4E2BFF428DDD9F5799E5626
3362340FBA704BEEBBD8CF112668F9B4544A2CF25E2787BD7302EC994EBD6DF12B59668CD89A
D0A0D3956EF9A1A00AC4C85BC80DC6A4959B2538F8F3841F2ABFB40BF4D8B3AFD0A0024F023B
8A4F606652DB281471BEFB12A232260D9077F61D55D0AC0C01640EADC7FE87804637C50786FA
1A63927EBEEE4C640A4E8CFE893664E7C2CCD757D450184F7E007CA3E4A2D74C1BD7C3A5E7B5
2C8D2583F5BAB0BDBC677740768392AFAB4D66F0619AC8A4490DE77F24294C1C199F181AB1FF
1CE2F48F13943C8B812709D684100C2AC78788053783A8A64AAA5C9C9B2D2111B364FDD4957E
3D8DDB25AADB84FD9E1A99C692E1B0E210782DC5ECDE434E12A695F9A620156BAF053E977486
6B1468FEA94E71D81FFCB83DF3F3B6D5B7592CB66DDA7B0261580A512DBEA4B00F50116529DC
483D6D03E4CE9A7AF11370ADD5AE2549CFBBDCA096F46412F078D28C8ADA8CA46B347EB1154D
7072C8FA72386BA5972CAF1494858FD253113720B4B8D86D7632947C4AB3AFE82202256651E1
1721E3A48A6E11EA1361EC93372C24EDEA7A49BB1C165F6CBBBDC046E80D5C3AF6EEF4159834
E11F2C618317DEF428F85C7617E91E5D6D774A4C89379AC883AE0DCDB1B8AA1985EF75F7F486
68714F130693C29009254CCBA46D2A8714BED613C2EB4DEBC3CC66775D5DB9A730F93AB7D791
5F9242BAB1FDB94ED7A7B009CE8A37AA3723AD6C92BD62814B2738199E31E5D13A4C45331B7B
5ACAE97774251ABF8540568D2A4485B523515EC15888F994886E435645DDEA4D5CCB42BE9F10
5FDE8D206BFF84D240F94253CC99F5B887047BC942C950166ECC01F1B3777CC50175EA1F2622
3F7E9C1BD9E53D62188D50CC497C7B335DE0F4B88AE56A2E5063C2A5A097E4B9D82E2CC60369
35B7ED048057D2EAF0B2AC3C415C8B8128E0FB4A253F8C345D03A3B167BCAB50DBC378EB89F7
31232A994EBA7BFA669EBEE582B323A02F082CB4C6D524BE3B9CAFC4FBB88499015E10B6CF88
A4A7EF5AFB509D5CF3A38B6E4D7BBC799E683833C41D8EB64DC40593CBF2EA038D96035390CE
21AF6EA51F038040A571EDFE2045D04A33CABFA073AF4FD19A874A00D1F7D0F42C843035CECB
D7E4B93997B7ACF9D4F3F621D19426C930DF08E5F0495F54931E745A38E74BD0DAE2D3B069B0
8711AF89FFD6DC9F88E558865EA3C16D4211D4F5F249120DDE323F09C76AD2D9B073A4AF2E0D
455282DCDCDFE835670895395B8ADCCE90193645FBE45FDBAA283D8F8AD333CBE0BDC93325A0
82EF233B2F8CDDE8601FF1C8F09FF2524172D9A97BA3625949A22F951224B1A9A97ADE1D3CD5
F41D8EE17ADCAC594348DF6FAC171B606C92770020FF0B59376FB1AEB72D085068D30E6256AB
887E304B22058844D2F47C482ED2727C68C6F894EA674006ACDA3ABE7F74467F47DFB495AC48
72C842052FDEE81A1D440502BA50A66EEC4ACAF2C7D6100151DD91733724AB8E6036BC9DECBE
992464436C131C6359B93EE1472684ACE970C09AF4E4C6C014CF468EEC7864BC2145D6432A38
B4A561EC810ED5DAFFE353929EE387F38FCD957F958BB53C2AA7E2939EA5A80AD95A8216B8D4
279BF3CC5418248CBB9D9F1B6F171520D668E763680DDF2C4E50E484D49CCCDAFADE65529E03
F734B3C27E865C409C2F973F878955F7E13B811A743B797594208067EA8FC67EA7DACDB54B54
E872914279E918434BB40295F8F9674C2B451283DBD4B758BDE32CB41ED527F5E091676B5DA4
F0A43195B84C26C53DC42BCB951AF6DBE2ED6ED84BE37AB62C9EFD891CF5AE073EE95B511EB3
20EFA7D967CE9C90F1392788C06D2A4CA5D56C9D9E73AB679D8689A21E8DE979DD731B97C92C
AABA7A45ABD838E17996D7A3266DB63F87F3EBBC20DCC91BA4744EAF418385069E9F3F8188C2
651EA788DE708891603DD237F8A5F176D58AAF5DC927E14EA9100788706425518A1E2C45B1F4
AE077D242537FE27DBE49192FC6CB537BEAE9ABFDE4760AF0CFAFCF88CBDB708144D7F9B8488
8AA1BF2CCFC28B79867D77BD72CEAAA21FC89D661E092155F863BDEC7E69147E75F8A4CE73D9
6564D5F742BF75A86BCA08389F79F1DC998CB6B981F15946DE8CF1B934BC08E8459CFA9723BD
121A2699CBDBD84819B0299CDDCA6DC1D902AA74CD2870BAAF5890F436635DBD68DD1480A34D
21D55F862471A03674318BC68C27293556F5FD08BC40CCB66BC577BB392AFC448B45B35311EC
7AD891D9FE08D06E4C6B6751F3B44280FCD657574200EA3E66BEC2A4322A0C942B03F8D9D584
AE310F7FFDC0FFCDB1DC5A4EF2053319CCBB53DB6DDADD5EF4A65C70367B8A4FAD2C21034701
C09200526BCC9C812A1D5FC039DC0F3B3E33CFEF7949593E4878F9A85C9EB4FF637D583EE2F9
59203F3A83C9AD5C3F031F931DFBEA912F2EFE680A624BD622FE51B6F5D324695264C103B924
BD06C4CA0618CA4DE5888CE09E4587B80841B34A0BB6693C44B36BC832E5D4EDC8CA7567626C
A76408D598CBDE5CD93FC29F6A7B0FDC699D9C94DE613C37D8AA9EB9F4087BCA80449948534F
282ED0321AE9C530A8D5EB9A6AE188F666EB00F0104EEB1587CA41AC63FA1062F5A0B20115E5
0E584AA2116A13C26BB6DD1DF6FDF4CFF3E22C67CA9176F156CFED5190238AA88379DD78216A
6B357A892D84A80E3C65AA41ED5A52E0AB769AAAD8C6D9271285A4226079CAB7568082A5693B
9CBCF8A536A23F1CB095FF802A1FE3EEE9EEC4588AA1B9BECEB13A174908AB287A45BB19788D
112BB7B4947CCBDE7E65EDB0CFEB3E98B88CCF10F1ECAB0120D9FA2CD37EF964FC636A3AB8FA
02297F6680BCCC0CA03FF463A0FCE4E7ECD9D167826EA384543679029598EAFCC2D6368DB58B
7C6461629D57AD663364E710807AE7C4DCEE8B7AB2D8DB119BC9C72621F8BBFF0F72CCECC5CE
125B85434133B75B69A137FB95ACBB4C09D32BF849E8F4178AB5B21CDD45064AEEB0DB27812D
4B31DBF29AC1A6EEC07A8A480064995DE6015C148B07F9587B8C3F7DDCF9A11A87FFF7FAB64F
145003954F4E23C4DA806DB133056602DCE59842127496D15FF90290AD957B91EDFCD06242DD
AC00C14B8CFDC6F295300B31BEF872BE7559EC0F7FAE47F5A08C6B42A8F127351F693D06BFB1
E9ADF234252B9A90251CED853B3E24F7040A8489D93A7B50AF89A2B57AADFC41FC3E22F9D820
D2754613C09D97C08445FA7C392DF3804224EDD1DCA0057297C5D0893B5054CC4479FFF0DB74
C86B7E2025FDE195D96A96A138E7E1421AA0F101BA284DCD26D6A48F8AB410BB0A0FDB3BB74B
BF0E21397847D3CB2F36276D58735A6E0CCF16C8B821B9DBC1C18D64C442F3D400C4B4E2A362
D2936BF16D2AB50E3AAFB7AA154F4216046B149460F374F42542C6FA6E670300FCE91196E892
5C8D80C0C25FD2C17BB4ED90697361489830DB023958000AA81F1C830341AF906DC3CF5F393D
63742BAFCCE3DED8AB40FDFD1479064D23DF9F36119A3CBCD99D42425D05AA6812FCF9ADF0DA
A883A750CC2E4A4D3FD33931B716DDA4A9B9ECAA8E3937AE4AAF43C131E24EE2FC5605069DED
2D8676A98A575EFE8FF83C8C11C71C49770A032CA5B0603F5E0AFFE7A53B846540F446960960
1E87D395F36406F6105947B56B43CF315C0075E62231437F645E03FC9BBB2E909F4D429F730A
ABBA7FBEF66518F9C07CA35548174F41D789C97BA79493E7EA079857C65E1C09DE30A41D9524
971C2929CE3C1E3F3B4172CAE8B60111BC380B7AC387844A365806B30A571FE1FADB8AC4452B
5180F7993CF060CC302F5E7F38EBAF9FDB70ABF03F65BBCDFC54698520B2685D24DA2B79836A
A1328548ECE141D77B58CC2600A7905E96609BCB8F5323ED081A9154895AFA7681EC90899CB7
241FDBD06FC910790A94E637AA48E3D0A2488ACB2D3086662792300C3F527065D2BADE039EFA
27D2D0A55DE4A1BB6273F18624857ACD42C5A41732F50D1AF5DC748DAF271377FA7A0B82C769
AEAD08123F28EF2A7725A0CDE106D2BD9BE10AF25C3CB00EA17520F55D100F09279F88AEFE25
DA0389A5DDAFDD82DE8156A3A43FE4FA5FBE2812893B82589BDDC232EEC488E449A60BBFEB72
FE6E3C9564B01CBEE3267144745308BC36CB0BDC7A7CFCB23CACAE102B581EDE7304937ACC34
B574D0BB32AB28B811333A04578D867F27B3A1A34F9C700B68DC53FD0BA8A17A0EC01EE1BDE4
6F852B90596FB300C338DC77C768C7F057766B96A40E25827FD2374C00F511E1EFBD0D9A1C7F
D551EE7D785656A7E3906EB1F42077AC5AB5C8826A858BED001E2D09E8383FBF522F3783AAB2
B0D188BF355027FC3BCB32D9D5AAA2FDF090110050C1E6CF7AEAD97641B68DB383747CAE22E4
9B328FB15A69FAA134C9D928DAD74FA8E76CAD95A0CC34553F0F5454CC7ABBC27092BC11A0EA
592EEC93349C3A72C5F7B479789EED2E077744105D5ED958042BCFA237C28371A8E93A28320B
CE6016CEC459BB4F2BBA0036CEDA82E0D17F328B51F65B2B24A5FADEB5C89CEA5F4FB3BBF56F
426EDDA043A42EB1F850DEA16522FFACEF5B30800757FB0B3FE3A04DB902C0F6CD0C0F96FFAB
0219274011A81048488F35809F68E4F8D8F259BC4653D7387261C6171841413B59D8E8F460F4
B38B3F6059505ABA2E6C9756E781D156A372FC9681F9238F4349A894599140BEF11C2D1B9D7B
6576B56860568D3DD82A011C1642EB4AFB6AB5C74AFFFDA594ED429BE80FFEA9C0FC2C57FFDF
B60052AB012A310DD0F258AA265859680A55ED08698EC6E659E0415DCCD1882A557F101BE413
08D3B58B5D3D9175C274BDB841C95340663A073F28141CCEE58DA0894A1278EA0D02D2457BA2
5985F70F6880C4CDFFC9092958C69BA87B05867B166FB41BBD058D0CD16EDFAECFE5CF48D72B
A63E738ECA6789967549CA6D92AD07B4709CF89F0286B5D60BDC21F61AC5CEB2A8857FAC05B5
B85BC5059B1D21BA58A01DBE52292AD5C385D0CAFD89FF5F02197492E31D6A53F982DA1D4D21
9A7C0B12E178D3E5B84CE598CC2AF64898A9CA7E962A7D0577A5C09A4B013293F2C311FDA69E
5F9B99B5E8D55D638D310999C5CF67C7400C19B1013AFF5F643EFC8CF808A7DF7CA13A770E00
A3706F6CE54F941A29ACAE388BA32413E8F5BDDCEA11949DC803EC35234EC32D0B8B3D9874BA
C26E69FC7987E3727E43796ECEC589F8626EE0F7F725857E3909C19DBE9AD2FFF1AB043942F1
19C814FF062CE5ADC1D584A294C5F80F23213F20B373E323BE1480B75BAC6091AC92390F8B0F
F5BFF4D57AAE04789E030F113CA80CA13DD3160FC0187C1965B12274346D1DE154039AEBFB72
02CA625C404A0FA4A17B41C6744D82FCDBD865610AEF9CB655193BFE55CBF786576B6C41B58F
6F231570FC58A6AB1755FF56EAC96A8CCF139A52FDE68E704F10641B113ABC0EE4D8738F7A28
00DBAD05C5A0C1CEF547ACDD0424A08CCE1949B4663D448C09073A73F51FDFCDB0B188C0FD46
7321F134FBF699D4D5DE0A0DC0B8874A0173087437C5496A4E3947F66778ACC35A061BB52CC6
9AA4AC1EEEBA2F1227FC0643DCE745B5D09A4B69111BF003AF0838CFE4487E573EF19D9BE7DB
31B655B6068E033A6CDA82F2641B3EF060CCFDF9871850FC9B081686743F0FF6053FBA85F46C
7876F3E366B051719D04A08947177CF25BE05EC7ED5111D5B548D5FDBD498F322B07093A096F
9DF6FDF5AB0FEEE5E9ADC1DF6060C542E54BBC8477878F6D594C0B1829B05142D2DA0DA8F409
92ED9BCE851A271921CDFC2F0C0084FD0E5C7AD63065194DBE0FC3E21E18430D358424107B04
CCA0EA7E4D33D5DEEAC00D8E6440BD019E2DF69ACFF1242C41F608FCC2CEED9AC76426FB9793
1C5B93677969E31EEC99EDB2C621C736542A9AAFF69F719040D790A4B769F89F8A4B8E039C6F
ABD00B847E5059930664BC568941F4E9C26EC28595F88784FECB0952F89FF343B5098F53AD33
E78FC1D59429641B254CA299F61082EC4D74112F771B0209297BE45313CD96BF734912FDBCB5
0AD1A479F795303DE0FB4B6A8FFC8F1F21A7D220E97323E7FDD0F2603F0CB12EDB59D7EF9FCF
7118D5303BC0116DBDB2E3452E1496B1CCE4AB7C0337617B47C9EE89E387713FAD9EE172FAEC
F866B7D22A68FE65AC2D63E160D578A6C43474B48DF58B3B81F2921A116B1AAC6F5420E1EDB6
28AC9009BDB717F42FAE660915711EC25EB5405AD2552D07C238B6AA049DFD4820998EDE2E89
1ACE380D6D981A8AAE140A2398663F0CDD0196FD2D1CF4339EA9BAF461F21B6B79182FCD259B
C0805EB78FAA5101FC624046CBD24366AA69A7F8AEC8DAF2BE839849B059F48C38C31AB3148C
A07002DEB0BEBE653C4D65639FF36DE66C3E32C9C14BCDC5B34FE0D960950DF92F6AD100A5F8
96ADCD0825E60454BBD3826B1A5D1235B8977C14845D70FCF829797F0BD8767AF5D211507500
B5EA2F9EDABB1816D18ACA624369459BF7CD1FEAE039768286551FF7A84784142A3F0B73D6D1
32065BF5120D731739C6A4272E724153700F0AD86E09BD22041BA97462D92657899E29292A9E
35B8A86027D5577C9DA15DB11234C95B42738BA9C049EEB7848D5226C6A81BF2E35CBA8D98B7
D759FC2CEEC144BCACE86642DB34363B45987F7E733D4798C76A9D626F212A8EC970E2B9E9CC
FBFF159B2812893787E71CA92D0233242645530AD70630F74848F979176399C627C18CB41459
0EB6F016C04FE2DBA53E782DC80A1B4302CDD03000C6138DEE12901A209BFEA6AD10A4C9F465
9F4FD3086AFA3AE7D67C37E0F26AD3359EF99F73BF5E286C1661F31ED1E61FE5FC73D68C4FE1
6725EF3B380C28D9790CE55647CDB7A0C20577E24326BFEC12EC7705A580BB1AE1CF953B4633
ACBFCD3093B061A2FB23735CC60BE3F45AA03ECD31A43491BF81B7B2EE03D8410630347CFE4B
A38F7BF6CF26636B0528ED725E24EE69915A4AC25CF2AE921C6CD5E51727C0A3F7DA96B29D6A
7191DECA0C7714AB3D017E061CE038D56DB38EC43E899942D2B5D999381B5B53D02D69F06FC2
0DC4C17FD9EDE1650F2469235C99FEA60B79EA1EA6676A6B3BCCB221272D66A36E4B8C305670
6B2AC89D3D6448D5924F4E861AC85B7BD2FB83302518EBC79BC5631106497A4706D7EBB39F95
A265086AFCFE6532A6629E35203B336C47CA1AB429B0D5D8826691DA3186ADB04D46246C61C6
E50D92B9055BE311310654C5F69668C464405EE1BAB92717F09BF8B9D13CDF6ED7A48201ED69
E9AC324FAA94F2C41CF57CD0AC4D97ED5B2DC7D76B7871AC8B350B5979C754B943E0F7092449
9CE83D9BBD8453E01225C09F680280D8DBF6B79CCEB86D00C44C6FF0D37442E6DC96B95AE82E
BE2B8031CB55F14DD9DE66517F98A6CEAEFB48CD5DED8437223FEF71377223EEB8C8627C7318
4CE747B345704A546A9A1AEA18B256F137F34494E7C09779E40D0D074B1AE9CBE69E8D76291F
386AD9E770AFBF824B4D9A5688CC8A7D4347B7D7E7FD0871B27312D4331D5DC31700704CD4B5
EA3475F459C60E8088F9C419C81B327CB9430F5297B9AF01008E974CA86193C82BF2A23116DE
37911676CD14A2867A4CE330AD6848925B24A8B293C00408FE1AD65CAA8E526472C7FBA144C4
573D8FD295095C18EC5265633C33B8AD2474799E1FEB6A7C49F88EFB811F0D338B07BCE5B7FD
9CD7B744E447A34BDAB4CA64606F86A2A4C94FF9B0D6C7C476AC3B3E61219828BE1348FC8424
9D77FDF2E45BDF05AD299734DCB6E153EF021BEA752EA4F798DDB88BA721353F305A86E4DBEA
2D2265DB49B2EF91CE5C11FA4141218111DE9B1FBAD2D23FEF8AE46EEC1207B591F568B69666
32C16B514CF0736D28FCF313E156EF8EB25AC7961B17FA87127E0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end
 
@fedspecial end
%%BeginFont: SFRM1440
%!FontType1-1.0: SFRM1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1440, tcrm1440, larm1440, lbrm1440, lcrm1440, rxrm1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-178 -319 1370 944}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA6B96583CD5632BAD9EB3D511DF934CD36447A31
D420FA313B5721C37085F478B27E13191957AD30B8B082BCE733AF8402AA3B7D
EC69807BBAA8142AF1CE151D99F5A59AD18798F94781EFAD48BEC8C62C05C56A
336D71AB584F6DF014C56523108606FADE931125496247870E980A65AB33C0C6
D5B074864D0F58CBE333EFA1201AF335FBDBFB1CC8B1294856C250F222BFB8BE
5DE74F808904F7678552F213C674497F829E96812D340939F73737731D289801
54E5A8F7F5067ACD9D768F4649B51E54513F2F7878141FC719627C23FC5FBBB6
3F663343D902E95C56C559B588088227B22378FAAB29392FA62933283D2FB2EA
FDAEC6C1A94ABA0B5BEFA1E728A2052434BFBF6D9759D02A2C6092D4EF794241
CC28BC939A424AFA193F96530985EE89E2731F6A99BC84C6551A3FEA1342509D
D389F786C8EAF972B8C98B79003B6C71E6696518BE4CAD2A317C5D29621031B4
00A035445D8CFB67D6C136B3F6D82396E11A3679BC82498519C27601236F1FCA
073DA7817B529424CAF49A0AEE8FF7520C0F204A3B1725F46C2C6953C20E93B6
2F3EED0EEDF87A350CB841516107D9571503A3D62A2F81840070D43392160783
D111F3463760EBE634515DA1A1B6C3A5D14FC475F277BAC792FB69B4219E9BF5
E6F8520584096A7B7BFE439A1604C2BBBB9140A4F4728B4B553A27E1AF52181D
701E90C4FBB16EA8DB39B562E5A2932D45893081D52E020A1FCBC44DC204F4A5
BEE47F9D25876644CC856B1FC225B61124B89B896C39CDAB0ACCA8277F827382
6F58A0C8456DC41217219D894B42968FB2EC75D5518B6C4413BAC888845039E4
869486B52C36749C395EDD843C3BD94E6870E37C4C519911662C42EAD526E964
2E36BEE665D19323F858E1D1E81FC6C81D962A66FDC9E79D5FD519087F5AD9E1
8A9AD5F8EBCB95632404EEE5136BC69D75574913A1453EFDFD859CE8E3947116
20470808691DFC63554FAD885B7C6429DCEC3CFC13A7A4EB1C27E62F2E93EF78
FE6B6260A8311EC4FF98621B15853E03AD997880BACA30444BFA4C1C0D195945
4C0CDC7616E83B75A282EE4E9D7067233EAEF367AA1679C9D14E100F6005382A
ED4D5C735623120D712E174DED2094FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D59360C8C44357DF473
7964EB4DA2EDFC44A24AA194DFF3495E425BAB69118ED72F0D07C72DFB31A87A
502B95B1D7508C55CF05BF0511D1CC7DA0E98AC508DE7AA8E5B97593E967246A
0594E5CD406B7CCE91AB4FA1A65A41841233DE712834DED3E1CC78F75474DCB8
3DDF372DA2BE907DDEF99AFC71F9E824648589C9A1F10F565CFE1CE97A0834AC
F7523EA3C6A2A2C1A2493D0DF6B6ED4C593E6092E101D399C419E0581EE3E93A
56BB2E065A493B6DD834455E96289217E6DFDC98CBFBBB45838EAB2F85F6ADB9
9ABB895605314263E9E19A40B2A1B143287C92F68B152114B4A5FE87BBB59858
0A18EC7856644EF0D6A289DBF86517CFF904BA2676804922BDF0CFB22B87335E
57FB9A2963477DA03C84847089726A11B3491BAF7C34BF624DE782B9FCB22DE1
F6935601A05F0BF8A06459CA0E578A24F707A21881E5364C486F578722974737
54AD2BB7A52F3477BC594FBC8F2F752435356DEA1F59CFF50F34503AFB5C201B
73F524D15B157C5A2FD46EC3979B61092C1BE0851D5B14BE70CE68FA72A0E29B
D33C381200E79C067DEE0DD0C94C85E81F8290FA83E76A069F87A53B0B277C45
7E8FDC21B06C1DDDBEF707648AC55A47FAD0AF553DC3F8EB82EC10CBAFB3871F
B39C094F052E6E8850ACFC8F0D5B9D908A7112326709FDD28222593FBFDEC70E
73E06439891DD58FB8AE6F7C3112A248D52946A2BE5342D715BA89F6789A18E0
B8548BF1F44D5475D85197485E2E4FA17267C6E0F6952250CD8A44DA0B726340
F156A5BBA14DC10B1F04DCC6694F254B5634D8B05DA14589BBB04721F37ECBC8
970C48E8D9082CF75B121B88105011806EDB941EB1B5B4DE1B0D0A0B00800394
2D6C7595081FFBFDD8E56C41BB7CCDA3ED6A6A0A9CB1409050C44971D3F3D346
ED6C5ED7E549C19967683014472705382A042B45ABE80347611A90E653DE2C6A
E6027D1CC00E8F9C3452759DB9C65FF05064067D8D529434E0FBF159CFFC973C
5B5671C38E442F08B7DB5357E980785AF88321787BE63C4ECF9DBF10BFEFBD41
C0A310CAD9970B52A1492F1FB00F1BD55FF69D26CB1257553EF69C31A849D7D2
CBFFE0E79FD21AFCAEE86B73B3CBEA7F5A44C5754AC11204DA1F5DED89F09450
6D74BEA6D97BBAE516F3B04386D1C60BE4875F2AC5C27EF1BD5471BEB8E16A2F
9457BF29E778A29F84B247B09E5D1CA43C086290D380F11A6CA7FE66C3483355
717B25CFEBEA2937C502716E3C48C17A0D0413E2F27D332F68434AE11E0C9CE4
B59ADA44DE69D77C935CADC833F80400B519CB26D4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DB7EE4FE60074AF97818B3D36CF51110191B4E10655F52CC5D11F56517CFF9
04BA2676F4147DC8192C98C555B01CF3CE65912744C4B419499D3F6B356E8561
A9171BD894DD9FD3EFF11EE4830B1ACD0DF81BCF5D1D288DB0C09C934E3276B5
D231C95BBC9D2ABEE4F39C9AA60948803ABBA21F8768BCC0F612565C54AB722B
328C3B489822CEB0BBC8CC31A585E0DABAE1033FDEF1DEDE464D93255B987241
2694F11CB11FDF9C1E058D7D27AFAF8DC868E0B3173F58F0DEF25FF1EF199DF9
5C809F4776961879470BB5FA281D3A9F7949DDBB523E307ACE84554A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /emptyset put
dup 90 /Z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA852
EABAEAAADE1EFD16DA13E367A6FD05F6C5D61A321B185BD0D596400C8422C933
BF332800160813A68AFB7152CB3A4758463E638F4F7911E699E0C0F7F1D0C83E
06BBF5680D88F6E9B3D2697F5A16E0E9AD2BB3A7D43D477DF28BB4634653D2E2
FAD235C0C1D225110BB84D551A2C90846A7B4A596BBE9791322946826C9344BE
92EC248F5D6E341A7C17AFA338F2589EA4256748B3B6E3B45793C8EE27A4415A
8054446AFB55007335C7F4689DE1EBB54538F64B435A5102B5EC5D8502CF3267
D93E32EF70B21BDDF5DB7F8D92EF721A47455DC80003E159EA2F168E3F413D82
7439B826FF83BE2CFA02C77A2E1640478891218C70834CBC626DE07300E92283
B333C8107169629AF50EBCF715820203674982E0642E3DED86BB7BB1CE61BBFE
64B005960524BD2D4194C7BF6C1B6B3A85CD873C6BD2D9E8FA82370593F07AEF
80CC0A636B03D302A537DE3B016AE75397ABC2442901F77B3B9C260A407FCD20
388B705C1A4D727D501E78FF39E97B78F73A56E66000876493C142C34E12F0F5
2164F3F85671B57ADBE0B994774F3C421CFD5F2142BFFBA5A4C2E4F01BA97D04
C970B9BFDA5739E428E5111F3E3E2708F1857DC08878BB6F2D31899DB60D4655
766F53699CDDF461FF6D5E11C1E9169FE33B63FC45093E6DF5121051A24967DB
0398076291E0E9E35BE191ECA4707CEADC837E11A56B82AB547622990FE96F7D
CED882022765BDAC34716BAEAA5B9BCF118E610F895BACA699337F0A30B55E94
96B814C1F2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFSS1200
%!FontType1-1.0: SFSS1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss1200, tcss1200, lass1200, lbss1200, lcss1200, rxss1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-197 -321 1455 895}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839D875E65955260BEE4FD2EE46C4CF0F
EBB56CF719D83812B0CCCA99506907D390244B14CBFEB79D52658E88D4D4AAF5
6EB24DBB527DCBA8F432EFDC13764823BD046DDD10F18279AB5535003ACEA6F7
EEC7F9EB81F17B0B61C2AEC870DF108219795AD73918BECC47853CC4D192C4DD
F0C94E2D477E3737D801D9F1238820CF0AC671EEA2BF41A027E2C3BB420FAC65
91347049BBD4B735BF006DF39CEBE0FF4A310B1C70D087326C54337F8EC36C88
7328908888D67CE61273690B2F7993F5BB0DB7593C96273BE448D924903CA1E4
1CEEEA91F50683773CCAF7073258CBFCF2E671FD0AC9C2F147FB3A2AA8E4F4DE
C64CF9127209DA3742C8FF678F053BAE630E1086520BB2B4B29752224863BC52
0DDEFDBD6B5FCFAAB31E759E604DCA487EFFCECF5436FD74FB29B56BB903A97B
CC0CB60B12F82ABF3D080BAC8E1E951424F93184B9451505B8CB4549E58A8429
C864A8F4638DE32E3E1B9DC968EE31210331270FC86FAE7634D396CA6B5FC99B
9F6975A218D55BE8658B383BB613F6390B7107A5127B266273E7B4C69CB3671F
BF6742D64FF368CDB22924D4DA24B1196585A2E525B2BC49C0ED21AD8727797B
708A13CB581233B7FB519C78E166E7894E1107FC84F103977B9731140F397F41
09368A85A614F300424150A03194FAA04DE41E7F73C25D7AD2C2BEAD0E60B981
5E89C875F633153B1C43B3872A7284651B91B9390DD0BD3AD77EC3C9F1DAC884
BC6E6DDFC74B48639CB50E0A82FB89B797E0B615F68B506BC7CE5F2CAB9C884C
5D19951993091B515AFC5C85E9FCA6174B6893713FB06BF9D7879C1D2CDD7DA7
232199F55A7B7E2D19AE40071D70EE3A9D6AC8AA9D5A17E1762D7D2CEFF02C32
B8B91CC23087AF3DF0FB21AAE64B3BC84C902C0641CD0FA17906BDB310233895
B9C854304FE17C22018ACC15B4AC1F1825876AEDE1A6ADDE01B507306C456655
9619269AB9421DEC20595278BF516641EF95C1BB9CFB2DAA866AC440D058A0C8
6C79474E685C917CF3557E2EF9CB6BEC0C27D8CDC9D77F5862007305BB91A865
A734B39CBA4448AA595EAD2B623303ADD601D7CDABEAB1A821D2E63C602FC06F
F2DB646F4DD868B9A6CF4AC327F403EBA7BCB5C4708AD640107935D5CDCAD4A6
DC453E045FD929AB522E4F7B5D56000265B67769EC8F9F1245D214DDE740B263
D9A3527FF7F9A9CC9B9E472B094AF4CA2CB96CAA8EF9FB39091ABB2B18D727B4
FB3B41637C222264DE7FE218F25718B7158C4C53D11486192AC67016F12CE393
3E509E3F8E2A7CB9102E24F7A4E9FDA6D4CF7DED163B00ED3E874EC152E3A4F8
18C3B5ECFAC1221EDE650494F8A03F05F01B310B4AF946AC88E1A25BACB9C1A3
95CB1B953EB488742EC2B223FCC809E407779249A268F4DD5998AB3CA7F0E20A
50BF90B99E415473B4BEB3114F7C6C1C8CA6B50832FE3ABE66AEBEA33B8D3031
204968E1ADCD1D69A71EE8489AF6BBFBFA1C94E6ECAAB5634C474344B3A8764F
0BBBFF1131F5AB4BE5BF0514687BCFD5F190AAEAAAB404BC495072124859B4EB
BEE4A10DB24AD5B1DF73699D3AA808B9349F1C756C1035B23F3D28E2A7D30F5F
17278917DD8B7F26F881C130F766695B7640167A022585E100F9B6B473BBAD86
DE9B242BD5F2000B1B2C8D8C0331BB6CA787CFFFB281AB0AB46D321DEB7AB0AF
62CA95CDECCFF964614F5189F4099812BCA11070E2410086D876F6133E6FC8AC
D5218E0A781E5A356E1A6EE68AA6C934ED4DDC8DE9670A9AFF60106112583633
A6C8BBCC8BE089974B29A41603A99363DD782AACEFF250A86AD18CC5C1BAF659
D06067E28416E0DDEF39A388E4A864AC9AFEF0C55D7476DA23F631BC19FBBB45
01D417D51F58B2B8FEB1DF7D06346EC0D1CDD3D4994219F7E089DB937DDD11D6
09163FDB56BCBF639EBF5781375F74F86A8647D05FC94F6744FC1BC8E03247DA
02438D68BC0017918DCD399C09D0247C1E8EBBEDEE9C2DAE7E6D248BBFEF50AA
AE963EF14691E6A75F79F0E2EE958E5F077F4B2232A9739ACD6BC51208C5D000
D37BC694C2F5E6CABF44F28E680FBE6EAE7F87B43FD3F4BAA2FA119D69A75C2A
4F6A82A2245FF9251ADAB0AAE61ED752287572CAFC194955C3F5637C8D00BB91
E9291DE84855EC90E50B5D50CFFDC48CC9B96A21D64DA4FE296F3D52DA94FF37
C018A5211FAE935BC6C3C6B23AD6C1BC8707A4822F3C03589190206F3D3E9BA2
CE2E2D1935DC96866D1D58AD90A5482C2E444BFE08C9D31F9FB590D93EFC0606
2BEDBCFE82D329D45D9B589423FE8E386C646710BCF518C58EFA7397D0227C6C
A5DE14AF5B0721614837BAABC36F78B9C790C18AFCB5968EE84E4C5B2ACE37EE
DB6C1F42165F0D52E95B4BF4CFDC2B73D5E5E510D5EAA04804CFA6AC99B7F112
965F67442C2269BD8B712EB5368DD1AA4B5B97F9BAC5DD109034CBB31C63BC31
2587F75E0DBF780F656D77CFDCED41D9055C9357898A00626F93A6EFEE514B86
71658FA4F44A0E1B54AF777A1B1E43FC1CAC9C13BE788C42E310A02534448048
82A2CF152B69493A9009E5963927A61EE92C3681B4A816B68FD6FA63EC0E2818
10D8178CA4DBEE8B62786C0DE81F21E52073633C7126AD5C8E5455322554043F
99B66F7E21D717B43780A0A35F97881B63AC4E78DAEAFCFB357E095639DD17C6
9195D52981FA047D21F0378537FCF5B7317A12567DA35A973090036AC25A78E0
A69DE64C8257C7FB873F5CB104BF9CE1FBB610A4C6F8A178878D2ADF539137A9
BCD6607E25DC313E8EDE734AA1BEE176360C9D4729BC929331233E7EC8CA8A32
C29601C7C0E4B8D05A915F5C39E1CF7CC308883F159DE08DEE9595CCEE99D0F1
E8511199075023217F2BC1178BE026FAE3D5B960B22DFFCD61D5BEFEB6E6B767
7647A5F1C7D8579435A468F3EE577A2BFFE83E15A84E7DE2253E47D4F7E8A497
4CA1960C6F4A30574C654E6EEFF59EDBB91AC60A8C9DCE59770BB9C0A40F45DD
FE277292FD83B6EF154317EDEC8B6A2A70537EA4AF071B0E44DAF89C84C9A546
CA5F71F912D3A7B962735DFCBD5282270500C7C6818380E335F375C4190A3AF1
EC6DF13854712FDB81061810C97A2940DA302733BC18E0BDDFFC2BEF915AAF2A
6314E5AEE5B0DEFA8D0F98E508E077FA9339216A4AC199A29F919EDF2C7AFE62
978756D26A0C59CD21A7157A42672B6E60941EB12C0944552166A6C473EE1910
795D1DE8B4708B12719BA0211BAA8897F64A47CF35A448037ED5E72DF3175DD6
7443D34FDFCE3F2A0300BC063E0EF740120DE0E2CDC0DE2D416965AA09228A89
E0645CC7A89E2A8784D635D8F9AFCD759798E035F49F8950C3E836134401ECAE
CA4F3AC8A21310A84CA2D3298FC4FA89C76833DEC9FF126A3D412185E3855365
5DB2C39CA75F07C4E14C754E6A0A0796E6FFA59FE7A1E814D6EB51F997FF3479
D7E68C5434949A65CC963D6D1ADD8FE9C15419324E20F5E34DC5241FE5783E19
13792A8CA4AF81E4B2E3C3652141A629A97360907D8ECC3B6765B6BA808BBD43
7F0C136C3457FE740572CAB4D1DB537529A79B2FA31EEBFBA2EDE43E477B8159
50D219ADA4B1EC501B8FEE8D04803EB8C058D09053A4B27B18F18BE4396C900A
7245CF628FF243EA32B814D713933F6765EF4C57AA3CEE39F00379C736D07A87
F9D3BBCB6287E91755BD247F23EC6EFFF366CB91F842A92E76419D5B9D42F0AF
B220FE1F5C02E7EBA6019C7D7199994E43ABAEC2B4BBB2C19268182C2BBA716A
AFC480BE37CDFBE9BBC24F63F407FD21A937B3D1735023A9D03739D8E4962220
E444225532904933F860E4738D638A4585F4357916C6CFD3E6CB0F8F1540F4D6
0628BA30E8927FEB98EB195179E0F787BD7DA81796DA835F45B43B977B83CC39
6807ACE71AD8C3ED8C840F1DCD3ED79F2616180488C8D09947DE3D258129D5B3
194304CC6889F09E2B9CC8A0E126AF3944D1F842651DE6D173CACF66DB19F0CC
8EBD44352E372ACD1E8695E2A57AC09E4F87013494C30A922F7D0080FC2A395F
3028F3DF384D0CB06766E094152B9043D36523837E4251811A05E1D8104389E3
00E221E82E13CF73ED7DBF0814C7DDCEC1B3C150DB919D6F260BD2A6D148A089
F0402B564A90125E00145E290A6CE20CDBBCC762F2BC91AA5C167412BED78AA9
195F3DB251C33AD8760FC7FE976CD624F4593F6AE969F722DE131752CBC0B7AF
7824E2A5662629D66864DF130F27F494FA4EF1F3ED532F10127C92D56B71DD80
15248055B007398319845C2CA498EFC6A015BB3CDCF576A0689E9EA28AA8DF69
5E6C2ECD03328C7D0F204A3B09391C9181822EB234408EC343D68390822454DF
7D24646E642D0267E858F45CC832FCB4C98B9CA3558B105DD2EE7616669DD6BA
E02ADE24F38A8574C447B702E2D40285049427DDAD7C1C1C0FB672EC627172D1
0DD0A2CDA5F8AE65C30A5CE2D1F66C28E1A266658FC6EDE2BD31BFC6A25D2D08
40346540D2B65210953D6F2D725214730B3AB6349F3A49F175619B968A23A549
4BF8FB8E7C6219522898CDA3AD586242A955D68A53069A1FA30881EE82A7D62A
AB06863CCCDBE52E274666DCA531A7E3E1A94935939358D67986B89724990CEA
05A566CBE2333ACD6F7A1E67AEE1391C89B1E6960B0587E8F3721C04C39BDEA4
D2AE7E6D248BBFEF50AAAE92F9091D37068B3ECB9EE5C6E46AF5F5F19101EDA6
0143FAEB063D23BA89EDA83627093769EB7D2AA576AD57D84FF3EFFA537BACAD
AE1F3808F65E2429460AD4D257DCDEA75EEA8C523864BF9F81ACCFB125F5E5D2
6897A77DAEF0A1E84E146E383018447A70FA80705F357A5368A23599557D1C23
EE03044B940ABEBFBB64F34C4D4BB7ECF5DFE24CC5E0A7A69B500258AF10F2FA
61EA1F01DADF9A75017245845ECAA0435039788CDFF603D5F4209598D1BF56F0
B95DA2D4AFAF5E71F7F54401B7FA5BA81CBDD4A9A4810B43DA6EBD30F4472841
48153F80BEBA54C414D549398D856334A2267BD9908E08BECB3859A71D1490C5
3B9A81FDA289217F14F953C2546DACD0FDB22477226FBADD57DA59013D66786C
0DE81F21E52073633C7126AD552210E29BAAA4D3E266C9C2E17A046E6D07DDC2
02ECDDA6D3E10FFB63DDAE8346CD6EAE0633534B7284F107340EC5569B2DB12A
7EBCF0B45C30D0812C5FDBD9F110CEE18C594735815509891419337E8B9FF55B
57B482CB4BBCF4C35092003E5E28F15BC6AA05F7F87A3F757E691CF83CA1DF70
1E3C5D4A6BE929DFEF14636A8E2B766E0F89C9EDC2F5E489F222A4546A59AC93
F2613983FA3128BEE83B45DB703D46EDFDD3A7ECF49D996C0A21A9BFD86DEECA
B495D3F08D50F8ED5C17DCEBB4BBC6FCDD2ACEC2AE3872B199CD7205C6DE8312
4755B02A4184CC0FDD2BAC1277A1CB63CCDACC8FCA97B5E0C1A4754EA185AB90
4EA0F4ADCD4434BEC2A8AADBAE37C2D90A8746784F5AF4837021895B02E348FE
A01EBC8AF019D25B7BDB40CD67138E8E2095250BD382187EFBD03026506C2B21
DE4106B0DECEFE6CD2DF3EE1667ABD96F36EC5661B53453B543C8F1D6CC98047
2DEA0F242C3A6CA52CA0DC7B77727ED9A508D258B7685B89D4019E3005E71C8C
0A7926AA5643A7F091A006D720F403D9C3B46E57D19F344791CBFB5F5E332192
206DF42CC5BACCB8FF8ED6676E91A4D75BB2A1BC1CBF2D6FBF64BA6446D5BB39
3748C880C85E4361F6655177EC3CB06AB07847AAF0014990D4BC33D7A1BD4560
B8DD9AC091799B6A938581EF06B76D3C7B5C89318F005BC288840D95AB9C5671
7F73674677043CD7A203D903D20BE11C491033E7AA36C8F1B3F48F2ABD31BB34
940F0DEC67A8D482C631760FD3C1990FB5DBD31F593A04C0C7D6DA4920BD3F14
74E425B7D69765823B05EE8604E044677F5A28599D8707AEE1D3FBC520301DC5
0C2CC930DE389BD7B71A88D227DBE4146ED2D218C160B3D708E5211033D34258
21DAAABB09F04445F88F9E2E6FD2D8A4F18A6EEFAA6EDBF906C7334F8CCD3A80
BA07E9AE56AD38A5E5F657491FFE9C4690F9B8DA5DE01228ECCACADC0AB17F8E
36A873EE3837CEE7D015A8FAE3B321EF1D414161D2D3F44841331F81238B28F0
768DC7F3FB4445692A4ADC061BFE498A578236D15CDDADAED2C7DE83CCFBF825
F5C4E35ED3D1504D95C9343136C7ED6D09248150786DE3383AB03CD11787FDAB
C874F20395995B78682F72DFB7E6637167C69305850D4CC2810636D594C60EB4
D4E725B55DBDBFBD9D21D9AE8C10E28767756DD6600A44DCFF73C43176B2C8D0
BB69AD975ED7E11BD704D6E0C41D40D27BF68C735F330217E29DB4F262050A11
FE8B1CC0673A14DB42FC6D4384B9FD83FAE697F3A197CDD17EFE2D72064C2222
F31790506CB7E6E203760F07F84BC5DD2F2CD98801404E2D1C00E8BB0781C2E5
4EC4CE72A35BF9788D92939740A3F382463BE906375A80C4094485D696405187
4BF44E20E4A3AAE67F7081A7D4E739C9818D6DD30C92CA794AFCA4FD7E49B738
5EE2E22A73C2580EF426EABF16350A32DF82A23F0A1A479E7D64EEB11FF22FE7
12EAEBEB1C1028AE971AAF5FD65D2A44D432004DA354352C5F6503160BDF03B1
EAA14798980BD38BE35C9C0B9336D866A9EF4049AE91E7D9644C7B083B38298E
F80E43E29A301B2CDD3C5997F9697B34F86A91518BC47827D2877AD1267FC4B5
3A9028AFC586020CCF1A91C2701BDD305F55798A0386A653BAF8D824F3C05627
944F56F3133693E2A2EFEB3CDD57CE9FF4E6F14E87E8C55A55E003A9BE8EF0A3
4BBC440DD263A14595E9D549F696E08BD256FD1D6ECD3A8564D7F6A7C31F4419
05F12292068127F36FB7CBC32511D668F859928989263FE70330E210A1A63ECB
F93355E11B89A257114177EA0B8ADA1B4360F1FD8FB0F64592C48BF32A70491B
C4372245B295D1F69326A8BFCEBF7DC1DDC83ACECE26E3C00A8F8333941CF37C
A7FB84C5EDE850CA254A979DC5B22D659125ABECF0CB858979D45C48100D44D2
B114B775E6EFA0CBDF19C5B1D5CCDA045002C5AB3DCD4A3D172B4A8AC5DE573D
512310E57B04A669DAE36B3010FDC551ACB5FEFF711C12A60DC09BC0A75E0E4D
D995D1E2D68BC5EF18ABA3C02A766FE35B2A7ECCCA9A549A1F99C8357406BEE5
B3AFBDD4AFD139C20BA435EF6A458C976DA92D7C19D19C6B1D844077F9864701
EED61439B1AC24C60989D71558196AE53A1C2CDA74DB0C401E312F74E991B643
1E34152899A64AD5B44B5406F9BF790EA9B56459BEE6955D3E4957EF1C424E74
0AA002E3144A27AE6A8DD8021413CDEFB8C361C47B4F11C845ECA7BEEA06C101
F62C24FA3BC408C471AD74BB3AAADC4107D09FA6F8DAF204B7901829DD87256C
54A40BD2227A24D54A22570A50401B0A6ACBD5B93019A80291B560BB631974AB
A413D66AECE2A5D3EB21A0FBA453326CC0F12008B3F208A8F82FAC431E355186
D9786975D171C51E3C2F6FB335CAD1BFE3900115E9D8289D88F3B6C41AEC7BE4
C3F572B57A5C30E372C63D0DD8CCDF094C8795E09903D0E011A3D4A234E5D186
500F28684CC506B321CD3B89C8C17BF3E6D741C5593A82DEF1698D668B23A0F0
500622E3DEBA3995355D0446BB39D826EFF827AAD83457E6B8A925B4F5304557
C22A7CFAD1046E6ADFB9706C67BF2ACE96D37BD3D656F639664D935C2C1FCC67
DBD652EC205C4F56071B6C0DB68CDF34CE744E83F8E1407A0E6BBBA1135F15FC
C41592F8B6962280893E22435E399E14094AD90FA7152A5F0F7C347E16B44A3D
F3B610DDB9A77652544351B1D5652529F12AB369979FD247397D395856BBB5B0
ABEF9579EA768FCC19EEA785FB9DEADA9C00F2B34124DB26743928A68425A9C4
D66C5D92602C038D5D561091759538C12EAF52F1E0E1DFC968AA34B0DF127B10
4C2308F738F622903582A1373258110FBC46DC78F8FE1D6C25F632DF052BFAAD
1CC9C0C628C36B8BFB172CFF6CD93A3F8B181DBB14D22978331E6E43D965CA67
7A15A7CBD916DBA98A4B902AD71206D9E1061E063D8382F7755F9D7CC32D3E33
EAB330852508F3032498DC80BD5609DD3EF8374E832F0276038CBE9350106BB9
EF533622C41AEA1DD6F4D8C5B81D6FFA62AD0A603A79CC00716E58A6587CA522
6DAE37A387B340803CF44BB057737733419A2FE62EEADC8A89C4F015854D0A98
9429DC2369401AC74212C2D1B34B86D26E172615BB91DF727E94034724274401
87FD35FECC810E053B778BBEC005DCCCE9689EFCB068DA356FF7CF5744C40DB5
35D534CE662721B9BC48A85821D1860168B2379A3D7726DD830E70AB4E2C6950
407536240175DEA8E8D6190D2D713CBDE53AAF372985337DBA5EE10A1E588A2B
272C68F33320B272193CC349B1BB8DD1D9345307D510A3416510DFCD079575D4
87B8A47F81C4DE9F944D898AC83021475590E0EE3A3B178BE6136BD0C0EF3893
14025F4F2705651CBD7BE519290CC5FF0FF8D990EC71A4D12159496FABECEDFE
257540BE10F3F898F07E270938EEE6B5606D93BB0DAB8BFF010F4D95D6B6B8FE
BE22C9B58E498E49EF7E664C4398BD64C2FE1C0734FFE25DBD82C74F803720B7
67F9CC6DCC164D8F1954351E0FCC5369A5F5040CB82AC74D0776E316857120C2
B7C6ECF999695A845DED85B2D97327DFC6D1283045D29389200E37110FDED774
66A930FB0D218D563AF8D3812B1761D8831C727F919740D67CD55FF86476E966
DC36D7D1AB5B77D873700E623EDEC63801CC23CC8B4D2AF93A94B64F1A74FDB5
24062DA1AE2DBD06E2E3669114138A9585EE63771A1315E5AE65918681C40D94
6B4C436DE1A4C23D63E9A876FD6CBD6A4820AB6E50A29DD825A20E2A1AF748DC
3F8602DF97844F48D6D0D83AAB9FF19AAB88CE7E989050B5CB498C5BE556C6AC
76D9B707140E1521EC6A605D23926A84ECE85CCF91377F161698D2DABB797472
F2BF535D381A54BE16088753EC92AFBC3F6619B3E820D173E905EE576B50FE6B
47155BB49F5E394AA2599D5B29E9E7F210CCE7463EB991AC0D66A7AD54DB60C2
04F628FDBC3D2D5F28CFAEA1309073359CF8909ED957FF419BADAC33C2401FEB
821735E4774ABC123ED3FB9F8DAB72014EE639CFC3265CE88AE8AF610A8A7659
BD964D8A2A8080291E877DDCA6BA31E78586C12B7E35943B093A368B36F2F100
74EDF4D5B848788A16DF0D09067019A987ACF399694329A200A1DC89E263C50D
7F6221CDCCDCC7C6ABB694579840FE15CB9FFA021EFFF9B35F279F375A2A833D
5FDDDA33CBF8D0D642178072596F157D9198E75834F71CB12575EBF6050F7327
21C13E361384AF5E70C7CD0E528493D11CD3D359F270BC4B3F03E57D58BF1446
E0B13B15DA7FFD93AFCAB62B786FC00948F2F6512260924DEBB77E9264C72332
BA0FC0FF5985AC15D10649504F0E4FD1262AE5D58AA59A6E28D846D850B2944B
6EEF4B5F7CC25E7CE96D1793DE459A0B0E6875CC059DE9A26B70FE8158AE3D72
950C1432B6A5AF31419DAC953D1DFD88595710BC06C20754615CD15B6E733B24
C40351EF4F791C73404A7EC274109F1B3EEEADDFCF8E2E0D3ACF5D2E6A167A82
53145725E8BAF9572B228479935EDE331B2C082FEFF5ADD9B295509C65665578
C08C06B63BC05AD0903B512598A7E2656A4984CC16480844441D9EE12A7C4EC2
D2E131E9B7ABD343B480005EE7011C857EDC8282F5C36A29AF089E3A95553939
0670A1C76C3E10EC3D11E5C67ED1A4E50009FD0ADBF945EDA397B321EA2A71CB
D897DB4EB1E84AB3C5A9C4D75C72579AA6F4EF6481FDD864C04A115C5EB9FED5
7DBBCA853470CA0012E0CDF98CC4AAD97599320E4952E317364A87499DC2C5EF
AE90125DBD5223062F5BED7CD5FD14B85D30B2218548BAF20FD0D552FEECA071
E465F4C9AD9649FE5CBE960ADA12169451586604E0F9E706BCC2FB175B8F8672
8A5CA63A13CE013DD44E6DD69C0BFA82A46374A0DD6E895E27C04EA2079D88AD
7C0544A09FA396FAED78647BF9EE83AF781A57F10819E6E5ABD488A91B7F1021
5B5991D5CD485666F160ADA459B7111149B8EA9C7B3D351046940D1028D8A554
CC0058D9A026B429EFE24260B6F21E9F0EBE207D466B09F240457F16B02D0A14
18CE95E1DAAA46472F85868DE275FB1D0F089695D43A692527CF002CF939F2B5
AB27C75FEA906FF927CF3CCB35971EB80C5DAAD5FBCA3A549B253D8FE4ADC107
360873D1B81CD3452122DB53E8325DFB18FAA6F73AA7A53EECDBDB1EC0372BD9
CCD41D6B7E981B1F4E7479C15E15818D368BD9CBD34F18CBF9921F1066FC02CD
551B4D910C5804D0A0C8F691D65C6DC60DF3DB1F50E138B4FE0846667C47D3B1
0FEAF1FDA349FAAEF1F0D840422635BAAA3B3CD8153CA91B19455A18ED366D7F
DD20F54A1E42496DE474C885F4621F2798BE60555A6E50A9FBDE5F232BC0D1D3
CDABDEF7F387B3F22F7BA5083688A1A22497E5D1C81AD1DC549BF94377A5AC14
576CEA974CB064C36CE96BC12650D6635B3EB4C8E39E8A460B2E0AB05C354C70
C440CD4BCCB6D9948AB8B7FA40381F36653E2B46117D1ECCD2E257C6F6E45ECB
F4CD718C8F4919A4A62668E0FFB21F76C71671C0880FB5BFE80A99A8DAC609E5
5FE333C5088802F7862C5A9893885F3E50A95538536A79EF72547453DECA199A
C19E9B767519A5790E224E4FEE281E782D47156D12004FB1F9FCFF167E92AE51
AAAF8020AB8301530DFD9FBDB1F8615CDD3F93DDBBD52BE7404B7DF9991A3CAF
AADEA69A83BD22EB68AE3429F73E59A665C893574CBBF513979C38A348F2FAC7
13344A5B70E6B788E8E534C1F65BD76449DD01BE44275B5C3BA859242B601187
EC16A70592C38BBE9A0506C78B8E042C0E0F15FAFB944759951B635CB4150A8E
710B709D95AF370F7BDF4070686F76168F6FE81954F52077C7D34257EA045FAD
6FD2E4D0128EF9A86581F34FA5610D9BEE07EF115C287448DB053C64FC3B09FB
458F7E994FA0F79EDF7CFFFBCB84548D40491AECEC5FACCACCF490F61251982C
AD134B368B306BAFC2A8E09640AF32CDE04C1E581521984F55AD109B6A46BA48
5FCF4226C1D0883B923FBBC4FC5827C580187A31BA1B144475FE37BF51CE86A3
CF2DCBCA27B69294B518204DA4017F2918B5EF56D78304161143FC697868011D
DD237B64398AE3A09635DB95A63B6C9F1751F6D8AC798C37276BCE14E8E37F25
CEE9E1656716CBC5ED86621ADA518BDCC4E7380F759F47A60E85A18360B19C4C
33097667699005A548F21A3015D23DAE0D5F7391F18D624288F841AA75C27A4A
F2DDAFB29B158D854CD063FBC9A52839C58F6212D4134144CD8B8B391C2F23CE
CA2B0562D95EE26DFF978A0828F9DA10C381C6E3A15E69B12391AD92417B3993
CBA32BE3A878758DD6E85A367F58FF97F9BFF186803EE06D1E9E295412C96797
0CA60E23366883598AD6F4E56AD65CCE1FF287DAF03E405DCF3D03FB75E5EC6F
1982F71566F7A843C3AAEC153355FA4FEEF24E0E5E86E54491E4C5FE16869EC4
7F14147126748F9A1E6F4EE9313BB550258FA93E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSS1728
%!FontType1-1.0: SFSS1728 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss1728, tcss1728, lass1728, lbss1728, lcss1728, rxss1728.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS1728 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-184 -318 1369 879}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA4DC69A02016AD2E6C71441AF871C23062853799
F0CDA61AE6C6DB27F23F468D99267500717A4960473A31DF3BCDD0ACA434EAE6
8B8DE10B91085F7F894696092E154BDE988B200427205C81CEB40E8A66C4E3D6
45F6BF96D0E17B76E02D7C57FF157826AE6CFC2BF111686DF1C4044405E3B676
8281D6E44D6373DB950F4C9B8E38BB579EA291E1F855FE455C174178F2C57DAA
CCD164B297FC94955B9BF13D74CA0D8F730FDF2B7CF186079EC447B012E4BB18
8DFDEB3DC52B42DD3D132709E034E9D018720270A354E55553BB79998FB3ACD4
7F71B9B51E82B9B27407D2654C0BB624E4321AFA014E3B5D246E1F8A3681B95E
AEE22BBD8FA497823EE6B8D44A44389F108FFB3A0E6210D855BD8903E48EFFA9
2E738680ABCD4CC155740A85B5D7431B9AC341A9E2E9D0D0EC0C3B9464BE447B
08B22E3495579D21454B50E2D3D37E6DE597DF969640426F311B4B199024806D
77DD06B70194889F3DEF5C0CBA49EAA38A00DEE769A73AFBE825E55E690F81B1
8795576E5BA14F043CCBB06F2E79A92CF6D825969A192701147518624A01B156
49FEAA47D09EE818424B4E52D256B5DC7B895D3B1C72B71A91332C9442F91078
C62EF34ED1484D4785D9A7286F451DFA9B153C92FB61FCC1BBADA38749550D45
35228BFB1E017F759071E4565BD20ED571C1489C3142CE46C80A61E7BFFF25F3
DD9EAFDDF799DA5C0C592E6418EDB1AF962CBEC101E65A398788AEE6F0B71D07
1CD28C92B4FDA5DC07993FFD58E0F746526BC57B7C369946C5B054729C1E3CC8
9CF705834D9D6A3428BA1A19C4DDAFB83D7428CB5E0C5A48D35A4022570276B4
A369D76C3BBB453562341FCD30FC5682ADF171B5C073BA94910703EE4916D0A0
5EC6C3E0C229C4E04CCEAB84250AB6BEAA35BDC0CD92D3FF7806BC320E14DD85
7E80C9FCB7C0A757C9ECC5500F58421A0C367A54D809A0A9E1DD701C3969F422
8CBFC825DB43961AA1C22EBBF71D328B75C8A623A209E4871FD2A186B7A875F9
93981B2A10C459AD9EC1683DA1B06B72A061D4CB27A085BA2FCD1B26C54D2E45
D20697E7C6AB24AD83CF50CEED8FC597B470A36D8114B7EF03927ADD585F2DA9
A24065867C03431A4A5A55D9AB034EDF79DB10B73186F982EBC388DBE2988C00
C40D3E45C90384AF2407F76DC332096ED812E97E15B9AA3BB83B59228F4E2836
C059E145DA25A3A605322D08EF50C9B12A300EAD9B5B45276BA04D2450D625FE
73C61A81220A21045B4CD8A3528B037CD1583B31191EEF52A8320DCACFA49B90
D49B78BA37B7B500DAD1B6BCE260A08980D70C70EC30D128B5C6F563D1FB7AEE
28242D1A98DD5095F0BE6FF3058F61DA3D09CA533BCF18F1F156C0650D4A0B81
934BAA3613676D6F3E6F6D86F1AE28A6B251C524E033DC8424D4EBBA7C5FCA02
8A3FFE76311A8CE50A8FA91F9B68A2AE149F1A19DB05A9B44DAFF1833FCC9BA7
0E3854881B85E359A65F981841EE4F938CF22C2D28CB0FD78979602EE49524B8
6A2C7FF1015A0F9DEC2788B4D9FC0D30D42AFB405221D30115BDCF68F5E93A0D
8A5875A75782C75D64BA3043D6CFB92B85ED06204C8E0ACB12D8B2740B7E461D
EF52DCA83E149019441A78EAE913E04ED6667AABFE10B91FCFECB4338CD458C7
87BCF3A0D2B46E9C4588738DF7BF13E2B803220663D0959A407015E556EB8CD2
CCF746370BB3B3371702D774DE3F53F1CEA689C462230A005D972B2197390228
60C73676212EF960A9F1D789D9C8BDB551465F6031C38E71530974493AF6DEBC
59D1C8C48F3B71516DFB7F927680679B5275D155D34A31A80801ED6AC5DB2C5F
A1F8FF39B4B67B36944C96459079347807F5519A908C7B29049E17A42068CCE3
5AC035F37D978479FE0DFE0DAF702F2FB7382C6161524D175157D159E798DD95
8F557E777544666E8F68FC22ACF90949369A647D07D21ABE6A6BD288B0F56017
0599C3ECA5F4B1FC8DA0FDEFD09B9A6A9837FB775AEB8BB1A69ACAAB601FEC1A
6E5FEEA0DDE45DAFD813BC5D248569054F41C46643BCDD308685ADB766EA4D2C
AFA2167F866D4803AB8B1C26C46A084588FAF76040C7F1876C7DF7A04515916C
B24B5123B52E2F6201CC3474D0497793CD7D40C04E5C0C540C8006AB22A63264
1B20909A8E189C40388CD91B52A7B4534BC7FFBC55E3AD2213A3BB412398C635
1B11D5766AD8A287A23D089D71815A8DF0C8099D0E793201CBED380773AC3BCB
38880ECF766906A395BFEA35CD5A7576A3DB4AEC41CDFDADC4442B36968C8DE9
FABA50C10A70F1B715A776DB6524EF155610FFFF15522DC68CB09BA92BFF97CA
0E3245948B21EC7B3ED2EC4F92472EF7838C22DCB176C6F502DA19B7A29060A6
573A36D82941BA552FECB876E2B431CA70817B6AC58DA9E0710110D11D657C31
646F4457DCC364C9428A78B649AF94B6B56E32A9D02A95473DA76D687B027B12
724F27C7887803799512DD91FBF55788BCF20741CA567A6F089CA05A86F74CA8
42711A6CFBA90E7571FCC24D616F0975B1604083835D61D1EFD65111D743CA17
407C581BBCE3CEB9443F06D7532DA36B3972684308D2CA63A2C22DD75BDCE3DF
EC13B3258E709F3607307608F4F1B2E01622277DF686E524EEF670B93B4B8939
7E9B87969D432D227A24D54A22570A5040111B2013D08BFC799038D1CAEDECB6
0C4199751E47BEA23C35C70D584E3BADB22848DC926E5811ADA0F8765E184D73
83DDFB469B376539D4D2498477C8242EEED01954022C294C24C7F563224DA5E8
7AC53DD9D36055F1CEEB7DB985EDFCD485C12ECCDF36BBEE777B5C1656197483
E2A3C6B1CC9E11F2BAA4D1DD88DE5EEF094DBA1251CB1012CA6539175D61CB96
F5F5E765C591DE2694A95B6995E959F4D0F12B9C5F08D66485DA3089D6F69379
EF79701A8D7BE1FB876CBD7571F27E862D8881D31825D18ABE504041666F09C8
F83220E639107ED3222AC9DB5ECCD01FF04A277FD36B2A1CE58CB3D2CFD0D123
7B3FD00BE000959B0A1DCB278CFFA2BD1F60148D9D6D7B6B08C2C2B9AE44B58F
9DDE9AA52FE877F99DEADB503252B1BEB48B3DD05D0EDCBE353CA13A2C739CB4
AD2DC01679D8F88D1E958DA526DB2AE050183B69F77A375A6FBB7B5C20A2D5D2
7EB6DCF9A11121F93838FA183C150AF02B4653A55ACBE4C407CA5B4C0B7BD6D0
648443478AB13A3E53D1F0D53C4BDD9AF5E396488CF1F7099B6A2639DB240E4B
2B2E90A5065C7C10E5E251A4215FDC16BD673D3A714DEA4F93E8614966D0AE95
E91A067473FED96DBF7A52B3D1546E5AF5C7629429C6891070014323A5ED11DC
4BAA22E7F613607970A7B533140495831CC8D6D94E1620DE8430115FEE34C3A4
EF00795B0599531386BF7F7127FE9B82060564C53B423930737AC10191DA7068
F475601D6829ED86ECF4043D63503CAD6548D0F2F3D70565F5BA5230097AC8E0
7B5E8140DC07FDDB82F1709F81DBA6440AD57B94A928E532D29BA5E76038A828
9C058B1149ED20917B1127E030B0C06E669B098D551E75C9A390A6FAED36112D
021999683525D02165FFA4D8E6966A446A8E4E9D35609CA323FA12385B255432
2A9E0E720837B785241C98F9E0957739916112B3B6048641097090DDBB36B14E
54C2748EE8C006ED7A42A296FD720115A974D380750404774E0B19F8E058F1DC
73E628F09A97E597052323D68795E84CDD9EAB93721CCFB55604F524D5A61FC3
104C7A1A5C6BE598A448C9272EA02E66EB1EA0DCC90ADE3440C82D48D6A33EDC
F9D0466CFF9657223A0A35192F3A5B8292EAC86B9FB9F53878DB1ED61D3383AB
BF86B72A80A580BC6A33E9A1317E6DE3EE1DF963A90C205B37E8C3DD1B8B66C0
576A01EDE4FF8284425F53A69EF65E4ACFE1313D783C2BC0855D1E0169F8779F
AFB8E340BA285E43E91C98BBD7F833A402CC3391F1099AE95AC0B6AA0D02D131
D47A11297DB3684E4A333F0E6063A671470123910272BC1213B00A770F1E0B01
CFCA12532F833F5CE1EE3D8A6BC5E7B34FC63000F1EF33D98A09B085A9B7F9A5
CC58E599F5422BAD83C62B6A88BD1F364C0BC81203DC0328C9D9178337C20778
745C31D9A905EAF2784E82A6DB8732764C46F0FADD18E9EC124583D90B9DA03E
A412A7DFCBF50617E019030AC0D98A422438DC46ABBCC506B40142C965888B36
B81681FE0F82B1A27FF5A3815C1C88DE2BB999F2ED838DA4C142635631351C90
4EB2423B73BBFDCB0D9545FA3476377A53D90E2A9A4EB46E709F42B371DA95FD
16A2F2399E862A20F63813927CF20515ED111EB98D6953FFD8CD063CC2B5978B
BCDDBD620A6D5C41063966C7E2D9538663E6ACE25686F4EC045CF294A5053FB4
8BBCB211E8983DC45C64A4540CE542C4153336D5FA95DE25B164F92ECE2A7180
CAC388628E189C1B968A02FCA0132186C6EDE2BD31BFC6A25D2D0840346540D2
B760344BC15A7A28894B268A8C63765AFA3E4952DBF12F158B5871546C0A7B15
1847B018C57402A81456227362582DFB8EB2751F7925E8BD800AAEC6A1CD1481
4E47DEF6179DB67A8F742F59EE9F3757A3613D6B5BB6FC8A11889B5017A4C446
33052EA5D9812FECCA641663DB68862CDFBA97A8CCE03FC7EA8DAF2A7694864B
671B7131A6F796921D55AEF9322AA0787B76732E80276DC4EA7D90AB2E77C3A4
F5966723F07B048A3DD2319C87D306150C1C803E3733610842E4776BF41DAA83
8EAD58552A4E9644F4CD1629EECACD957127801C3B0ACFC5613463DCE39DC555
AF6889BC0ED4C4C012073C0C3338E060FCC123EAEB131B17067B364E0F74484E
755EF57F137E139B344524E2C51E756B8E8A16948E87AD2518A54F811BC6D7D6
4BB2CA07E340F5670AE1FFB8E694DCB2CEC24EA27ED377CB612A8339108F0636
CB074DB6D32811E4D58FB80958D56EA9D08FC73D77F5DE1E2ED2F204B038F853
CC86DAC5A0CD03660DE4D0AF44B4114E9819F846DD852C599D8707AEE1D3FBC5
20301DC50C2F5B10AD906BFB732646E3AEA8387E49B8F29FB877807FF108F3D0
91ECD37B466C88F583B5785C6FAE9A725497DB9B12C6005B9B579F361F0EAC85
811A3417AD06A62ACA429FFEC52A2BCDA0DC6B0969D391FA8209DCF54F72E0FB
99EF0AFE13427E0DA7F98056103D8859FC2DF47E4618F30C5BFF35F8A1FA5C3D
FD8EC23ABB68A3C795A88E93D136E0269DECFDBBAF8A34BBCBA6C09E2E8FBD4B
4BAD2832DD068CE9CF506E448C5466E648BE18DE8DAAE3CF7EC585CBD90DD7BE
04CA25541A42214BBB0C604567136E64075A8342110C70F6FABADF813CBD945D
DA55450B36FCD0EFF6D124AC5E19A044609A75AF9D6E0BA32E8139E79E32C139
1BA053E401E9506B264F2F3C07D7961AD86A0F83CD95D04412976CC258019D26
F64FAB5DD7F61E68F21B3093F85B99616DD58C40DCB82C07EE733AFAD713AD90
6B31EBEEA862D9DF33506A9C1A5C877C5AD88C775668BCC4131FD609EC9E5060
FD20FCED2FD021B8CB1F3D7C933ADACDD45FF7A48D0A4CC224DF90893191DF33
DB976A55583FDDE9B18DFC8638A39246C057EBFE6653F4F9DAA3401B6A9C5196
C166E1B2A18C094003D174A42C50B5F2C6C03364C7CCADC3CD919C54DEDA6D88
F4A4779C5147483F5E46B23F2EFECCCF2C0DF499693567B7222CCFE9F227B5BB
965583F25A67041BDE28DCCB72FC812D65DFB011A2678E9CD1A095BD356FB7B1
339E01F72F70BE2512183A96C577044CC14073847C40A48BEE28AE0207200A0C
A85F553B69E96DB034709C0F3097B23D4734EEA836994DCA197007334C052E4F
39E3FD104EAC5F6B51795AA4B80AB94367E870BB50759A6382B8D18CC25DA3D4
6CE294CAA6544C49EB1E40EE44B788E860EEE34F82858DDED200DA7293B6C73D
453A7DF67ED8AC99C39D75FBE356A69DFAA5D06A145E3F3A5C8ABF26CD716BDF
1E5DA7A83B0174D358D1BCBF980B073392E3CC65218457EE6277108C1D2301BB
CEBAD11EFC3AC01F83079B5C96E7F7D7FACC9A82BC2B0299BE6DA6C10DFBB452
CFF69B347227EF73FCA01312E98BD9DE7DC15C177D76A832831EC9146F8360A7
50E45A9DEE9C70A0AEF0B8ECFDD7A6B5C40E870E1C46F45871EF9131617E9BC1
F6ADA429AB4E5FC05D3E6EA2B5E808C8D38E19728DBBCC5487B4B483E61F5A4C
0A7215AC7CFAB77090DD5DD76F218E6636FF315B2916
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSSI8
%!PS-AdobeFont-1.0: CMSSI8 003.002
%%Title: CMSSI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSI8 known{/CMSSI8 findfont dup/UniqueID known{dup
/UniqueID get 5000808 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSI8 def
/FontBBox {-100 -250 1135 761 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSI8.) readonly def
/FullName (CMSSI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7F4ACE8E907D5EF95D
3D767387C90E3340F994983B26E5038E3EB949107C5C55ED5392BC8F10BE6BFF
024B7DA024C42E9AF989382A9374EB2235ECB8D3E676F531C893D3D5F160C3BC
69A45272FBEC9D30D4634423A1B22FF3768CB0F22028D36B8B8534FA62DD7EE7
5DFEE3411A25C4B2CDC4A55CBEDF5ED5FC4BE6290E0DDF41F6B0070810F96F2B
2E4D5EF987C11C31BAC419301683A1E66DC5A52B93D416D73D8B8439B96DFE48
0F080479FFF69E2F97BDF7944D73F55F531755FA645D37AF1A508F56410CF8F6
9AA2E6C87E7A802C7470F4B2742EB91C9CD3171253AA0C61BC85B59C1B9C8C1A
669EA311B271ECD3FB501A20E03535BFF043F326258B5738CCA2C9E375EAE10D
C99891F640D7BD20E96077815E2921DDECEC7DC2EAAD3A72840B378FC8EF8D4C
21E4DDA91D2EE5BAB4BC9C6CD6EFBCD4EEA34C2469474DA6818D3E0120A5AABE
DABD53296290B24B18A91093927E5C6D5626FAF70CB340717E4ED27F57E91CE6
01CA47D739EBCAF2991F58BCB09F3F12BB23D80A61E315DCF270AE3E74DBA3BE
E99D15ECC1B965F48442783DB0978A366ABD22EC999189168B75B08163C63E10
7AF0391C86471F56F9EEB994419EEBEEAB58126846E4EC066E4E81FC2C0A5853
8A7ACEA4ADD8F157C86A131FD8ECA22A2D7D6AF3DE989C90B297B57CE6EDA490
BF7F5E03B71F153A5CAE98F655E4010900CB5B7C4B9015CBCBB0426692A68DCA
AC3A9027B4E8D3CCA563F9B31F349B7A2E050E85A6CBE6BB8B3173B3E45B7E7D
7C3E23020C431AF58EEB4CC1ED401583F9F78EC63ECDA9A34D91E0739BBBEE59
ED973BCA5A43B128E467EF29074CA2D83E0826C01C0A5C1ECD79C4CEDBFA8ED7
9DA61DE7DD024F24F6FB3A3FB6D19045387DB75BB697F10E2B313BCF94B67AEA
32C89BE746E228C7350C9450B198581F6A293A9C48D148AA26D562632B052067
31603A86944A9386A480173360490C2EBA6B659275A5FFB5A8ADB1B70486D9AF
2B679682D31993B98C4B99E3826C71E04E2FD81E44493942B68D3192EE150289
74B37C28C833F8A14048E5F6F780FCE28E38B32FF8D3AE0723B3C1CA0A5C550A
013B63C8A08B595DC22DD7CCD8CFA1655FA2439E9CB048F485999E3BCD59FC0A
E0942984E2679A4A795477F6433620A679E479E0C3349641AEAC17A7948C911C
B9A55062A53311CE0EF67DC8ED11CC46D1DB8B3FA02B613AB701A8310AF78215
0E66FE01BA698D4D1BE57D31240DD20AF6864FD915D3154FA44147BED97BD86C
9F8D50CD24496A1C0235C6AD747D1DD1465B5339946DBADC561E300885540DA6
C49AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE447
FC64C4E76423DE98198BC093A636DF591877505FC6C9FFA590D30727E4734BB4
E6EE21BF4D6F9998F9E13C5CFC864639FA1DB6390631198DD5A4E83304A418DA
F28A90510ABC3A9290A76BD33643423DC378E8B15479BB5E92DA062AB6E33568
A3DFCAFCCAE6A87A86702D2A9EB6A1411293CC7389C2B2997EA9FA721C5D1B46
9C89BF6B41822709D1123DE671945987BB4678019A410F3F6285DE6C3924138D
62487970A8DBC4B3CCF78DFA922AB5FF94D0D0EA6942FD83DDA3E49E44C32118
9AC8DF24B4EEF2BC604B5C573FE4815A14C063E44AC8B465749C7D6F524816C1
AFCDF3889EBDA13DE2AFCF109DAB19A7158D5A6A86F941BEA8D6C1E41930F276
3542CA3C688872AAF9089B736986F30FE73DA3DC30D571E773925B86CC3A5401
422497BD1EE99B8CC60984585232FCECFB8CD7EA278531A0C19932D7E65FA260
08110E0CDDFD183F87F177C6515B4472D6FFCDD4659ED4900E4EFA450FF0632F
FBEA3829A63E6ACBD73B940E850F15478144FC91C0C6B65A3D21DB024AED7227
2E9CE60983D6781AC2D82DC13591ED2847851B38D6FF2C1AF3A177C1411CE5C4
77D848A72C4CA03B32AF94C0BD369DF16F84FEFB9DCF203616AE03B80A6CF276
A5FA2CADC85170D5E7A0F23487003CD0F57C409EEF9768F3E26CBE9327673F5F
3F8E258908B24BEE940432D5F5B7B537F8F178D6D4AA81451FBB70DF7DBA5141
49BCC342C9A006F075E3C5A4D75F1A972F492B5AB2CDC0010FDF8F8A6665D242
5DC50F2AB1D1C098E107F7EFF65AF274A947AFFA5151EAA0E38D584F4523ACBB
9CA3E8A7C78C0EB6BB75C44D60A811DCC5910978A6E62553BE1B304BE99BB559
7384232CE98EB577261419251FCFE8E37AA798877B1D1F1BD1D5C4D3E75F0A74
CC6D59E91F7124523DE23834EAAD90511C3F6E21D613B1BB91C601DA14449768
F2DD1500524476F3120F4272B995956428F130875D2F49DB95DA90DC9EABF7E8
C6FB98896D32F008BC6F44CE478EF946A6B3D0E2E8123782CFCAE81A62D6CF15
03AD9A6BE8BA27B98682EACCE341746E80D6B34446419A6E5680C60942B653AF
4B87765CA3DDA25D36949C24AB49990EDFA34BFA933C7BA60AB83A03D3321FA6
63FC28B76A147473B9DFC4AC4FB4E14B3E50138190BBD969BF137B90F88EF815
A2E433FBAAB2908CC7EFC2E76EE845A593A5C5C4891850677DF0A5B667A9AB2A
49BBC9B79553E5F14AA68A10D93F96F619700E5278D4B73CFFB60C115853E8C4
2045704D4E0861711A6D8286AA7691B7CD68C4505BCC4E39098B7D1015513208
7DB6E9513DCF3647266BF882A1DAB7DB72BA8EDF411ADDAB056F33CA16A8BB0C
74EC3A387612BFD7B47D8FBC321130B3066B454804E0A886333FD7A54F6C84B8
FB72399D9D1AD9D20D10058945FCE9387361C5A4C834114B7F35A01DC1D94CD9
32AE0A329943D48F05B3B7BA1877798A1B78CE5FF4A31D024A7F02D1784EA28E
4AD7C665FA13B93475B263DD24F362A44E1C56AC4045C1977CE1A859F852140D
A07C91295677E868E700352F9E195804A8D1B906594B3DBA293BBC87437D4525
96244D7F4ED03C1510601CCCEDBEB66B3AF0447ADCB87B1004D67ADD41512BC4
64C17AB21E88926F88486E8550D980941950C3B5CF567D17751137B2010269DC
F0C5DA0368B5DAA2DCEB8D1DFFBDF2DB214D1E73D943DCBCCB7FBA14418E4808
81DF9B8D60EAE203B1C1046EC4B2F0932986E03736581E2680CF0676F934CA56
C07CF644F6AB64756E9C016DFF6052B8BC9193EF2A8EEB5EFB5096EAB6E439EB
1CEB16603F0A525FFA7509CA17FDEEDB2052FA61666677A3556B38EBF9FBD242
215E3D083011F6AAFF7F534FD32519FB87AF4A41C77504F56703BA8B2583938F
7009C71963D94C91082918500E4320491500187032623DABB91AE4099482ADF2
AEAC3C50EDE1A33B262FAD61B8BE69A4B01A4E9B60306CF757CF01709E52D687
5DAF31C7178C962F27AE88FCC5F7BE159479AF03293563C37EB8F79E234F05AB
1516AF56212EB816B7B80C872F2F8BB510AA98E19C2EED6D965DA5AA5CC43470
D18727DF7940B43D62ED8BDE90B8AD9C14FF9FBEB92D2052FADF7A1C96B52BCA
0620A2623B9D25A81751FC60E9A27FBCF995B9F816BAA3733D2946655F991497
7F9CA776C7A9A1908FF4CEB0DEEB8316379CD8F6833906D0C5AF68E424F62ADE
B8861EF6C4644A2A27286DE776F5A54C90C33E5710E6AB8091C86A86964AA279
D92B91D5C8C9B74EDDD5D3553EFA1B1973B6FF49BDB92E0C18665201BB9EBF9C
C779C8CABAAF05A0CE11BBB581FC0AA1CF7F7B3ACB85D48B70EAD7B555AA243E
65797D3846876B60941EAE2980F3CCA18ACD94C4B39B476EC42CB2AFCD8B83F5
53774F74FF8F317E98CE93B48B27ECFEBBEBEB3106E3722B6053B5BD96200028
328FCE620EDEB9294C986688F1A71063DA2258DF8E25FBAC17E2021C981F7F27
A7F3C2042C1F567E4EB67E410D20A3962662140EC73D36D041803AAFF64257F4
C0808484C8AC6C25E3D23E97ADDC008BD27163626A3CC2829466A6539B75CB6A
E249172A5523779E7DC20BF2916F6DE1033062418B3EA1EB48FBF2F3A30C9FA2
506BD55D136BF911E6D7B6D4CA2B5F4473316A51A1527F22343BFB159038AD3E
102B83AB7796C78FF192A73BB713A3FB3A7507F659CC3C14DCFD076FCEC0E24C
9A3F75BA90DC175AF0557451A0048DE14D03F3133E687624B1FE77208AD8CB42
8633EA109BF1BB84A58CDE3166FC7468C17849C9A49EB8264CBBE15C3A58132F
561E3A403E1D2FA256954720B4C1D8FB7496B52535483699ABD2BE797B1A3759
118C7EB3C4936241958C32DA6FA78ECFEAD0E2B1F752C1CE761264843E776452
8D1CE6040F6471CC8D931AF1F50554912FF28C0D009F2D8D1C38C94A0BD73A0C
9159A8E75B4F8653F3F3AF30FAC387B9984F78CF28AAF34BC66E14F655E59153
0CE97368A17F5A33C6154D80F3C3FF1282CA4B53AF3279C1415D122AB2E159CE
561A160A52A233F913B6FBED832FE8EA5D7DFEDAF025097800D59C5204ECE9DC
AB2998063339D2F35C55A5B1025ECA6D0777DAC25CB773D92F9AF58F62C80481
6C734757BBF5D9385F129C7BCFE3B63053E8F30F652C81C17C6D4D2A87D0A900
1B00FB3F203BB09B49D5394FFFEFE77AC70F0D4A8CF5537523A461AFAF503C78
1AB2E7C60493B7BAD7CFF2C57A6A1AFBBA33B82EF7353BA3962128C473D6F47E
CFB11A039612D0AE291BCD1413083BC4FA5EA155E11798FC9DB89CFA81578C2F
76FF5F0DD71D0FD17ED37FA3CA3369BA59746E547ACDE18A558D80F47CE20381
B5C377AB0704C33F71B332442050297489DC376C776160DFB4E13510D17FE2A7
DE9CF4C7C06114694D48A28D27066E4F72EC33DA76F5162A75CDAFAFA23949D0
ADB5909325CB174D41E00CB6D215C63968DEDD7E4B614CFC90321881C0D81F46
1ACE669F3E268F89C5ACB66244AB801542AB671E83A63E3A05FC1A46FF0AAF78
5F5EF9C347DC0BD768EA27E177E0EDC516CD6C6E33629AD2EA37DB776F679AA2
D609C844F228B1A9E621B8923FAACB1B2A90CAC1A75B8F08D4429D25BA2455E1
03AD85F26430A971719CD9ADE0B67A4DCE5A00E15980F72D20B07C84F0C6F685
9FCB6A06030FAABB8D704BC9EAFA26B42B9114F36B9523749109C04723B29A04
EDD3F3DD4F2EAEB87157D2491FFEE09594E7DAE640F710610308D86E3D6D4D50
A7050E627BEA62CF2C66DEBF69220221CB1A195A32121A34D18445746CB6AA87
CFC5AFA8FDB612A78756BB4D29A619B031E979FFDC9B35415F7EF24398041D08
9A738F0A37C566CF8CAC64ADDFCF5A10291FA88847058FC99A43121CCCBC1059
DA7F4BE39B70DC469D40301303ED32A7EF14C4B9474CAAB02AD605EDB1D1D614
7E85471677275B1745CDE7295EE9A410B5A6FC005D009AF762F9EF7497BD43D7
2322D5B3D6525C133244337F3BF228776C42BAD9E12D6D0AB7F9870FE64EC39E
AC4B92396F5CDC34495957FB94B9888081AFD965A00BBC5B6750451D31B87858
6C5D30CEE24B216584C9B44775223DF5A18B6928CF4AC9C2B13E6C18B3799E3E
CCB8BB9436199166D75671DE04E604B39B566CE75840C8AF7914AC4380DFE875
C12A66B2A583C08BEC6FE29F895400C6C21D50B3CF549909FC48BFBA1BB5A92B
DFA4905E529C70C9B5C54314A58E04CD7EA9EAA813DA87897736DAE66F1F99A8
1BBA325F0EA7A23060DBDAA864F535BCBE54D23BB1914FC5985236F2BE93CFF4
97EA426F863BA392982083968E25122E6101342FBBC12D5B7AF2705F6497B3E2
53C7E432E5DF6B61BD508E6F297A617D863E7FDAE784986B47EFD87E449835BF
F135D46F3E02405D4149BE6D5FD2B693AC09EFC4EE1CAFA4AA4AA4B0826FEC8A
5E04C9926DB7CF861E6F8BBE8B3C70EF07814A5740B9AECC0025C597DDDD9E6B
006F14755486E4DCD38D801B05F58469DC0CAB452FC8B48AB8E5F5AE346A6EE5
8851BF74C4BDD84F46FC3E233611505541012258D9EA9BB8CCFB88DC2F425EF9
C128038F8C95400E6E24238AD20F17EF48C1DEDDE8A4943008E3B4BB66C1D672
2CD6E464001EE18DF2CCDC22B184EBEF71BDF82B9873FC3F0B6EA4A812BD7E8C
C8F9449211984C8CAFF2097A9243D920AD9C8BFBE2928E8C79A84345CBFEF14A
DFA2D8D078ABD2AF9A4A73F79B21A7F2E8FC28D01D95D4983EE2DA67735DF7CE
381D603B9B1206D4AD1656003DB8DD8F686BB2859D938F54074AF8F6584D122A
9538CC5ED97AEB6365998D12B2D1854529AA52950CBF21973604C577B6F1A185
E2F11F1B9BD4339611BD2727362273C9BE6DE9831D49603D30632567D078FA83
66F0179132286731ED10FE05E6512617152311FE9A70884F8CB6F303765940A0
4819FFD462917FFBD588475BF7EF24D19A5C4C35CAA29614CEFADAFBD500880A
66A5022FC20F36114FF6F6799491D1898354E3CC39987C8DFB5D4FD605C76094
6AADE9D9B331102B88879A5715832764A64E9AE3D9C3288CA76CDFC531AAAE42
C9DA44185E5DE1A3BC7A08F22BC14C34B0319786A21251995512710A8C1EAAF5
14479A9342181EBCFF0DDC93564127A1EE53F5A7FC71D311950C6A76E5F8C183
298E16B31234EEB0F10ED30ED08BBC190B657CD51C69C5BF1B6C607511832F8B
E694056FBB753E5FD8B35402295E5305D12D1E856E777DFD2C0B885A4EB84515
D04301F4AFF70B590B8D520565B57AC2D4F6F033BCF873B61D7080D0FAC5240C
EEFD3285CD52483F172E20A17085A69F23C12B4E10C21797FADD653E50F2A372
18DBF349C8257918EBF9400400A96E2DABB0A5AEC4E25334B1D9C2B6D47BB7CE
D68DA559F05B1817C34FEE6884A545A9DF698C9FE95C11192A124278890243D6
D09923A9CC287ED2233DC6C11ACF910DF593C3C6585CA7C8D679E051CEB635E9
ECAA5FFD70265235C289534AD65E209ACEE4D4B772F49558BFE675D7198AA28E
DE0D9C92E39DA2299E12C69431AC2C42A737EE0F4784B14FD544C70F4520E5CE
6BBECECB5CB3CC4F85C8A7F259198C40F8686E98953A2AF1A7E6B48A40513F9A
9583B5504518448053F35CAF8BFAA9EA20DDD8A0E49FA5B084AF43B318FAF385
F34D685151939FD2784DCF97994476D85DE98CBBA0D7F6FAAED2A6ABE14AAA2A
B954E2A223DC22F3D268DB1B85D7F169575F3513CA99951A18614BCD54A8AA1A
F324D723870087B92E05EAEE2081C697F00B590361056DE780C33D0290CF66F2
57E223C416138FE974C66A267A6C8549E0584019749B81C5DFB8E0B6947F1A81
B02AFAEFEEBD02273E6072C22F581E1D9A10B55628ED03736FAA03854784C252
A50085F1C008D56527B4C2E2FAA0A42C9E9871368E653A0B16356CE0FBFED150
EEBDC2CC0E26953789F92F15AE9C19B29AF6EC0A4593782A599B1207F7EFA824
D8E5C2C5DDA6C0E18DD3A2A6A0ED9EF3EE7FAA86EF319435FFC8189C5C3E15A6
D3F668B023E631D146CC8D5C9E6041AD6B07C7533F6AB848E296D83A2B530C44
B73A5D2B48A554C5351714C28B6615915C568F3A5CCA67ADF530C8EFAEA9E220
9449D2B2747D0AC3B46F44C36B0FF273FF3E2BD4C9161EC444D8FD38DCFA35DF
7D956CE18CED82532C40EFA25C2EC1F658A0DEDDC8EA3AE9CF3B12889AB6CD0B
DE7D23097A973B643F3DE8E97258420F9BA2C650759A03BED477EDBA94A2CDF3
4246461FC27C97AAAE4FFE52F990F2375DD857BD4B6C31A6A37F07B15BA28781
C1F362C168ABC3B289208E412EDD39A155BE4415388F0972D139E692B25202A0
1894C4582BC7AAA80505E7F66AEAAE9552A1AC30DBEB733584203EFBBF997F09
79A9764FFEE0B4D24E86C0ACB8FBDA3F0FA3DC2979E7E5A36EB303193A926B6C
6555E53868C6384CFDCEC2B611663F7E7065EA1ACA0B22F411E04AE47B92F8CB
A53BC335D84920C033EBB5F7FFA3A31A5A1E03E1F861D333F2B0E7F1B5B2EA1E
8C322C161A6A43FBD8D4687F5E2BFAE740EF719D1CF3B80981E9AACB1FE270DE
B980B829E667D37C0AA42D3FDE9E9245943A23627AE0C1C34B5E6BB15223D07E
1E7A9290301CECA64150B42A555B8BAC41EB877D60593E7DD7AE98A2FFDF5357
A04F8A74CDA53B7B85E7C0BD0ABDB6A50369F174C6EE49097FB80FFA36787D2C
5D4E00A09F155BFDF971B5A4D0AC102C295889C1B76C61582F341E570DBBE34B
E213E7DDC522A2F17C220DF312D33508279355F50B3A93FF5A9AA5FFD58DC129
AAF5B30735CE38276D23A81E377AEE286F677C97028D3189A61CA4A1640B85C8
FA2CC9ADF3EDEC9918CAFE57C04BBB12FB410661D87C904C328D2DE63B5C2958
A3573414732380CBE3F6B306D1B8B90B8330301425564C43E3712EB17257DBEB
3C0C5724BA3FBD1E34B23096E286436E0240D25BE02BA29F07D016CA7BD26D48
E87192AF5D2F2388506DFB61ACEF1DE5CDBCCB8CEC46CFE536B765D68A738ED7
9E4FB8995EA3474B7436F4489970AFF93442673F7B320362CB2D6B813C9F7934
C3F3DFD39DBEFD189EA9B20AD5A1986CCF7FA707C86B1EC9413373F65E8CE171
E553125AF793233E610166750471B58596D896EDC7DD3845D859AB7459BE998C
051B9A87A86732AC4CB7A50230E8840ACA4B55FC5AA7EA414E162F141CBF5725
EBE6249BC551CA5A0446F7E6828FCB55BBEB80E2C0C3F573213A274EF4615606
41A5ADE344D993C5E68421B87B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 59 /comma put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D76A470B0602AE45106417
0701ACD2C764DDE218B924E38B5A13CB82678372E743A8B3CC300BCBBB878978
D9847F0640A031D5E76B5AD07699C3B2FC6C1DBBF79938BA649C152FFB2B5BBA
D18B9570670B99907506494F362B124790A17D4F415D8447ECF70B67DBD46643
91AD465A1852B804CBE65206EAAA38FFD2B4180AF00DBC62903A5E59ED93861B
243B7A845469B9DC5E291C87011BB364ABF5FD618EDF8B9BB56654C1B8F9DE4C
AAC5765BA2B7342FF03092FEA282CC4C4860CBC1DC34E590F48C056B828FC78D
9C4EAA1F70AD3B2F7AFAC1A7B0851B1CCC2E681033181A5379B2FFC766B229F1
021C250B3398C3EE1A50EB8C6CADB5B9658EDAEB09FC03B6ED8ABA2D1CCF8B0C
582983A743EC6B29FFC1BA5AEC279D4D5CA3D2624AAFABEA1E4DC25F06F054A0
DA459D386A93AAEADEEBF1152426810D0F90D583402CA472E6DE4DCC18CA7A28
6852BFFDE7932850C2F6E02B631576F221E6980E1DD2327669BB59A0C97984D1
AFE3006326239F9D452A1CBDB31BB0A1C0A3AA55193D46FD5C0AB0DD2DF1373E
4A72C815F9CE640418CC8E8D8021692EAEFCCD7DB8595DBCC9C89BCED9A2F980
6A9401E15811F3683A02819E55B51B9371CEFD12DCC9F6A21E32933749D5559F
108E5851653B7610E7FA984032D4B72320EE4BDE6A8A80F845ED5A38B66B0CBB
895F654170E18970997696FD02D0A435B772AFBBC3DB65F14AD9A97CB30650D8
ED2D86C2F660B39BD56AA67FEDE50815CE4C341EE7145CB2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dblarrowheadright put
dup 44 /defines put
dup 54 /lessorequalslant put
dup 62 /greaterorequalslant put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEBE3247D8C84A67F
B0FA852538DC05B30BC3423FD37E586D4149D96E33BE469F3A7E8240826BF920
C8FEAE3B22740DA19BD70782CA4698465EA758AAC7B107212B363F9AC8947BE5
1D621C2E0B050F5EDC2BF39C72B62704A385C873648146E8E615D349ED779B78
7232605BEB38346E306018BE598AA09E444D0F77F63C7B91B8989130CC44074C
3B78058725777666DE7703EAC3383DC1036243002C75ABD706FF6272EC8B127F
512CD94B4EB72169496F57C21467F2E268E3F2AB0C62F99D6FBC035327144B15
3EA7313133DF49A031282BFAE803713C525D6B12C8BC41BF641A35D16CD267DE
5453EC212BB664805A6ABBD010D85C3565B2ED2E163B021D319558F8B12EC74A
D23D8D3D60FB98D39D08136666DDA4031A8E608B103688D2E860B9BDBCD50DEE
D3BE745BCA2104F0A28816B184277891B9231F28346A46BC83E8E043427C28A2
401F5ED30A4C2578F06DEF1FF3C98550BCDC5427F0D3CCD9AA1189F6A2A8844F
5EC219D9C8CA25E69488DF641E3A087A0EBC9657354AE68381B4DD8789E1D35D
4AE06A051107EA4D9375EE74AD0BC6BFFBE163DE6DD491740660FFF722FC1F30
238DBF05300C35CAA9F686616449FE094A5F972669F8749826284B5DB8E20690
CAB98FCB242CB73DF0BD147086881CD9C9335856F5F195FCAFBC3813528BCF58
6586654038EC562FB8C340A7A231DE2D065BDD828B097E7E7844246A646D34D0
D7356F6E3655663F9EACCC45B962A67731C76AC98678B54E6E3A103EBC0F25C4
4B4AE7D581455520DA75F0AA2AD71C12CA19CC7D1D0E4A13B262BEA658AA67B8
FC1B1350787F40DB00FE7A2187D2562E08382F94973EE4F7F6CB90329F80DF0D
FDFCD73F99971EE31684D721083208D4C964A75B5060C9B13CA0FE1281472A94
526D946AACF92F55944DA04E57D5DE2CDD0313C03A48023936FDD7893AB0AFDE
4ACECB1D0F6AC4F152E8EFDE5A98FD8D8DB7DA1A8F632686E80B86BAF16006E2
685F68747E2FC24D58A6084E6869B736BDEEF2FCFB7C807180071073084E34F2
84C60F505A482C1EB20E9CD415441CB01ECEE6250F9C51B8E3D4A824349A563D
E22AA6C41A5D0AC64D431BF16A69ECCE8AABE26B4F505122B6F5D056D0818306
7FE0FF1E63EE6973FF6072E851D908A1DD48C67B1ED30C0596901E60B71D430C
2383CE8DF3026B45443A001F8D7C7F3014FCF4262F6DEDED8A499474C8A6A4C5
7E38D3451BBAD3B332AF3AF95F8F14EF8CCA99B61EBFE32377E642B714CE5FDF
C041DD80D63A62055B37BCD95B667D3D347D18FC1E6802CEB7E45A3369296DAD
D0140B4AA22256DAAC39E22831A73799D54F2825E1E9A0630114F8DB33091402
F02E04AFE61ADA8E5EE4E5903324F29F165F4E4231E8C17D4AC0D3788D60284E
590D6F01EC88D4F4F1CBE390C68F0E95270468AB11AA3B5404FECB1E43310163
FAA6D7D3BA90F3C64D0B9F4BACBF962B7A756041B13E3F33E524A5E013374D51
44C524EA15E1E965054BA82A637F8F61F098976BA73F7599A8EED7CDDC7632CC
D1D30655472C49B4C328FCFE1C696033947EA65F1B8A55D8AD62C17EEB5EA74D
AFC51F012870A907E84AF4C23D66E8BF2EBB5FAB4B8877E8CA771EB6063BAE98
43D7D66508B83E667BFB36FDE90A9DA07E98778019C42788C9D0835BDD084AB9
7F1F7B7A703FB1B44AFC56528A8F31A7C681722166847213B9C3C2AD5C2468B3
515B4E5CBF0FE4D4BD911F8845F8F7C993CB40C4CDD5DBFF8A9B8EBD6729D6BB
4DC6B086955C9854635FB093F84B52B19BF2F8F99AC50536049B5C5EC61BAD12
89CDE30556F0182F863A742898C27A42EF6456607C0A502495526D1D33A2131D
462D8C58DCC311864F8E30323BEFCD2F94F581500DA12ABAEFC71C7B8D04D53E
A32690A0005C1D0EF9B3D4BE8F7D41F3BCBCBB6A06FFE7CB097CB39EAFE07AAF
833B699AEC6AC6019F60DC7AE41F579C325E53A09C311212E80ABD26880FDCE0
946F7652687DC3BB57D6331F48E88F8C6758951DBA63BDACD8D8D3B7466098CE
A55060E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS8
%!PS-AdobeFont-1.0: CMSS8 003.002
%%Title: CMSS8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS8 known{/CMSS8 findfont dup/UniqueID known{dup
/UniqueID get 5000801 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS8 def
/FontBBox {-65 -250 1062 761 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS8.) readonly def
/FullName (CMSS8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C6258F0D99DCD775
734480114DD0CD2931DC18782C4CCB90B6906CE08BF4CAEC2D4283CD44730A2C
28919598227F98FC5524B0CC92540E349C5B190DF5F2317AE46FFB97221BDFA5
114C21D5E8FB0D1C298EDFF8836AD72A9B2AA132F52DD5D3F30427563C97CC46
D241B7024B4CD9F1E0037FFABCC88D8CCFDF3BC6EED778074F9590733CD147B2
5B68387E0F19E6A81961077BB7640A3C0E27ADD72556CF84ECD981ECCB64184C
EAB8BD9B96A873D80E3E0D5B4F5925983C80EBC3A8A12FBC452582A0B37D3C42
4DFD22E9BADDCD2E69644AA271EECF366D63FCC29522FD72D6C1EFDB3597E866
61443179872395E99024F152F6D6A4FD71BF1C7383BC1CC27AFD2DE3DAEFC06B
6BA837BBEBD0BE09F6AEA31A83B1B45255DFD6FF33362AF8BCABEBB0D944B3FA
B85FFBA0B370B9035460905432EE87395E518B4B670246FAFD535774467C059F
DC30EA01C95EFBA4ABB41711818E23D7E69D32BD63243A6D98666BD46E234155
BD6ABC76F551C31B6CE2E52323A9DAD5C003FB116AC8A82B46ACFC45EECCCAA9
E12C2C8E3CEEFD98D49ECFB824E8677BC9CE9B682BB5A7117174E4B2A0B925EE
553713780CDF3A3A4AF1560343A8A448C0B5DCC4E11EDF5ACBBA0BA8E5B899A3
7321AA7D4B283AC9234978C2DD81813653A96F2BD129FA5F355D56C4E50310D2
0FAA8F304D8BF333F97A6CD20CA4BA7BE6DC1446759683933BB1F1617AEAD131
1C9EF2212EE7EA9B64E5ABFF45E1727EE82C00FD371BE1387987236F9BDBA4ED
A966658ADF028B5DAD1F0878064221D0469BF17CB4E738258FB5D92E9D380C64
16E95BBA6A2BD9EEB1A187A7231C53BD8ABC9BAC46CA4AFA94A4920FA805F67A
A0C61940F6826CC4539A6CD1F9900EDC3F720AE4FA097F1D7510746BCE2E67B6
EA2F2046613785AAB89915655408AC9D03201838BBA44F421D5F25CFD88E56E8
1CA23CBEE9C2E323DF1866D31F309C92281E514A87A9631F33B238AC6520A20A
346DD6A206C3CAF2830FE244F2AC5D894686CAD5F4BD1CC51EC0B547603BFFC4
F008FDAEBC93542A43B7C907CC85046313348CC8A017C585CC370604E40AC820
8B9D8F57A01868FDC93551DE10FA83DDA3E49E44C32118ED90FA67AB1C66B3F9
F80CF71131977ACCF4DB44CF1EC26AB363C5F95FC2523B5DFBF4D60647EB23AC
89CB971DCDAB3BA26846BA9317C051011C37468B21B159412E69DCB84A9F5876
F418908678F38880B95A4BFD3566A6EDE93AE05BBDCB3C4E240A5C0A06301896
69FCCC0B65BB269F2E10609B6446A68E2DECA905FC26D4F502CAF0EE9AB15E60
CF42CEB376D92D80A6AEE55BCAB006999BF4415815D0F5BA3B1FF9D2E60201B5
833FABE8B883847ADACF9B032721DEEE7FEBB583B89066ED9608F1EFBCDD09D4
3F3C2B7B03154676151753DFF53815F2EC1517C094B0D2CC5EC483AA93772D24
AD3B0084537B91BE1913A31C70750C6DD707761DD733F9ECA552D3F26825B2B8
3EA263488892C929DEC07E2F988B7F7657D53CFA5542CE336D35B462E5E8649E
05973AA54C0A4E63552004E3C77E5FA77F821D820B1620CC8CB3EC5B1D7BA751
16CC155DEDD4DB0FFD3009729F365670DF9472435557201D8E82341B4056D2FC
5D2F7C57599249DA2A99A522868716B076320350FA7415C3B10D77A6E1DC77EE
2D929A038DE3EB4735A4D4F5C8C340D6D293D57E83C2F379ED0EEB16AA3A2A2C
ECD664E526D918A3D0A934170B6E1493843E6AAE87E850D70DE65D34AA2A36DE
8687D57A6B6B1447F9A4380CC3D4D11D54CBE762258426C46B8DE6059E6A2F31
E748549310FF4362129080CD98E70817A06422743780B86E11101BED14BB6569
D36903BA8BEBC24A478CD430801082CCF49382D6F04DE270D51CA5BAFEBD0F8D
901CDBCF10DB97E2B059C8CF7CDB45BF931203D5F8CA4622DF19682DE2BA7924
47F78908BDA23C4E21C0ACD2DA259B23648B6F233EEE830E7B82DF4371F55C30
71993EC2BCC7BD6411690B9B1621903F358450976D6B6EC6B505A593A9FB7D92
7223E2424DD5AABEFF254FBCEF934A4D51949BA0E8CD614AAA3AE6C3ED7B37BF
5324BD4998D8D5DA95E4741B753AEE580FB3913770C00277C9F609B4DF3D618F
148E0EC7A75218AD788F98D35989F3DB94413E70955EF586C0995A450BC75820
F5490EB55E5D0D21343565E1FA94FA64A74377F87E55EE0EDDC8F4286951A4EC
ED6FB3B444206D89BA71A9723E41E93A9F6C80240437019F3C23DFC2491A19D5
29762876AC60A14404493D04B5537C1E6FCA67B69DC1CD859F9C956FECF4461E
EC8B6CD5B5A89A8A838660A6C3F47B79ACE3B05C0AA2F17CF2DA947B893B42FF
749E2CD5E7B56823A119629931B1ECF65C51000A10412668877178F589B4DBCD
24D39F9219C46BDDD6F101C6AECFD3876056CBB858FE0C4BA2BD0B5FC26AD5BC
7FA9E295E72BEEEC721300567B6894FC48FFE5E3067C538CBB3B77E386F50D22
F8DCFDD0E335060CDFA49231D157981925F1CB36110809C12BA28D2D116116DE
01898E311FAACEE0E5402CA30B64D3D5A0CA33E417FC322F2F0BB7AD3FEE2039
56A15DD6D1E86971AD3A5A9A27F33AB62A5A3BF5660B59235398926D6BDA33BA
BC43B062EEF199E4ED991518A62AC374EE21E8F1E1C954BA6D1493388F708D0C
961612444BAE019E1DC18BDE900BD7A781835580A74DC696BC512F7BBDBA2D0C
ECE5D83A049F7A3286B94FC446DB5C3F33CA2CD3DDE2D0E774A579831CFDAC37
9612858EA613AE6939CED001EE662DB17642D0357B80BA0F82ED306218DA8505
A613CD622FA998EBCDFB7BC70F4E4C8F1F43241FC22FC5BB208F4B20311A98B2
73F30E4DFCEC93875CBD1ABD29ACF80585F59947F23A96D218C0CB8BDC1C49F5
70DF3D49704CBA9A23294A88A2AD61811450921B1E5C3C86435C55AF87AAF6A3
A13709082DA9C47D372A4226116342DECB14E4A4ADB7598321516DD637B64148
12AB17AC5B2EB25718856D50BFC8D64C78DA6E5C145187DB0325C30A42013A81
590E58E74094610207FC70BBF1A497395939B42A6EFCFABFD9D43221DE484753
DFE5311F1845592B4484B1CDFCC32B4E068B11A82BA189D2268D88FE63B9C6E9
20C9E40B543B5C401265D92A932476DAEADD4D3E2BD6E4DBEC0B30FA90A1924B
41D2EE9D8AF2D8CA79D15518141665B542C696C2507DD2F4D987EE5E22397FA8
FD80743186872DD67BE58103321467CF3F4B8898E66584DBB9688B9C78873CA2
9B72AD7406CDFE8B58FACA2904869FB0EF126DE299CAC08CB89F60561939D75C
2722CA57853372C14F5BCCA5C4FEBCEB0728BF9E30140E6B0D6C034195FCCC89
291CD818CF66757EAEB0AB5A9D5710988EBB052850DDE97BA0DC0B054BDF5172
2002AD6FFA44AA5D9D4EBDB6B2C04E8EF38660D9BC4C995BF37DE078C279328F
4C360B8EB337D798962CACBBDEA517A5EDFAADF0D445FBD1099837F9D689CD2C
E330CF587246387EDDED64A2F4C397C1B2BFC325B39114609EF57DDCD7B93C53
811ADEFA323C59441ABC447F683B5EC43870C057463DD502E9B9DA7084C3BBFB
2FB864D26DF1BA41ACC815F2A71E96D2C6F572E1F7E4A224FE57CD605682F98B
AC7BDE4B85A4C11D58981E981E9FC43B87A368BAEF78AD87B7DA0FE403AABFD1
CF414CBE75C0E9E257DADCBA035E1BF05C4E17FE92309F18633D93DF885956A9
6C27E77540F888B8336B61598CAB04F3B5A1767C1ACFE15D32A25E5B1BF51FFB
CF3CFB25CEE7DC95203CC44805A935D5A9154A89FBD4E465F0E599EED4033365
0A31612F37BDAE8CC85BBC67F7E375EA68C2982FFD89284B027501184C4D2232
CE0FE4E905C4B504EAD009F047FE627C79AF9EEDD65D00A3858F88E699E5EB45
4957086CB22776AD06C317DEA41880D88F0EDCF71B4ED76BEE665B7937D5D0F0
E568C7615025172086BDBD69670EA154CC52C85CBFFE88C1A4D1AFB6624EE667
1B5BE2A31FCE8B2A4B03BC5DC57280199CC0970EBB636DDF8DF54C4A8CC8805C
AD63CE866FB20C64725AE4BC9F0EB275BD83EC89F2F9CE23A084B45694D8C3E9
3F3D3C1A678690877E8B1B77ED85D4F6E03DBF1F3B1D177E330475F172E0E729
63EAD8034E6100B2A5773E2605180629972DE6BAC0A8C2F9580E9F1D2E77791F
E1D33C2DBED3FAC47DDF1B74FD02583C3CFDBB2D1CC2B735C02B14B7AD3733CA
1682944ECFAD673A9AD5E80B6248FBB6E5036EA7FE5CA8C34FBCA6DBD0E76EB6
C2CB89D9815DB3C45742170DA926E03493AD86BB19A1D3FC623BDF1C920684FB
7414EF69CF39713A9495D8CB678BD4592B53C36BC6CF93505B8E32311D42532B
5661051B855F01A9B3D77AE38879853AF0FFE2448368DDFA3EF1DEB88AA055B7
91459586DD2DFEDA192306DF7143F998CC5D67C1CED313430E5CC3F9CE265747
8582102111E7AF9FB94D95B82D8E1DF01F04F2A2C22A20207B59C8976D56833F
E3B79DCB727EE7537476A052E92F7C3D6A625AAED8F026F22AB59EC0F86E541F
BC082D8E35234A18192862EFD232C9950B1FE0BCB91209FB540DC5729B9E36B9
94D0913A8F01FB6CB16DE85E6B89F144111B1D911DC527C24917D909F1CF501C
1AF2923EF71530F21F9BF049A56C7AB3249A420C28954E981EC464F61FA167A5
C6084661808089EE7DBD80A2D92FF4040B37B2D81A2F5A568D461BE1C62B0FD1
BF6D1063D2B5DB9CD48BB2B2AC9CEFA543E0AC5C86C462399C1E82F25A157282
D32D538029ED22CC5935E63FA076BE22D3F53B7D7CCDD344D68B4E73F87A5F2C
691FE68C981FF7CCFB124506FEF93F36F7181075D7BC6FEEC0E35AF57855BAB2
44AF021C7AD8912D884424E8BAEC68A5562B881793A1B47FD338B1EE4C0B8583
2867C78DBC2EFC8BA1431DB1C8622C99BB2C2D4D5475BFCE87B11762427867B5
7253463C6F2E1CF5F1DC1F7851F2EF6A957CAB0C0A55076C59A6FF9237917C08
5F97C2CB4B5CC903B76BE8C057018CD962EF90E1C0CCEECD52F2AE35A94C6EF2
D99DF4DA88247C920623978A1DBB81D8F171B588D617AFA8285F6147E889523F
CF11EF4BE498842D3BF8E811B4B33131416658E03293AD911516D8AED556F7E8
0181391AF36D862F5F8B4588BC99585BFF0F1ADE4BF73320158DBACB2784768D
D9794E2B0F2C0696E5ECE5C7A7DE78EB5CAE85EEA244D43D0280D4C87B6B93F4
803718596FBCDB61A0BFC2DC666128E56F3133B9D4F16305940B50ECF66D80BA
06C0A73C02F689314F1B4FAC22D16BB1E414C6F0A1A548AAB1364D2CD9DDFE5E
C8887964D26BE84986A6B1246BC306E6343CA376F990B77BE8D68A4E54304C3F
250B2311586A1D1EAD2C0221FE1828CE8396DEDEF13E70E0AA75FFB6089DBA9E
9FC3FAB43B3633C8EE7598619A0C6FAE2F25274787348E3660D0EB7212F5CB38
032A41A54FDF14B32E721819AEEC54E8FDE3AB8F0ACEA267B01081F284B008C0
5861CEB5C236729AA17DC78E92FE1EF9F047B53A59F2D1D6A6734D0413D1A51F
75B03234F4775523A55978C73D5BF9031EE8BC6BF9E2637DAC07F5AAF2A6C41F
77620B272300A78E86F71F16EBCE2DBFEF4920BD3F16C282E0BA4C872E5F7E52
7ED2B663FE45D4A36A588D228D32E2861F26AA6FA8DDBC8110F4417D0DF29285
F06B57B1720D0D13828A4DD68D57BD530FEB9C3CF305594B70E4394BD60C82DE
A64EC17661977B18199BA661C48860919CBEB56AB6C32848D51733F1E959EA35
DFFD823D92F11065C643AA69776F71163A60D4941B753BBB4A4C0C47BB1D965D
06C9BA1FDAE47926F37C0C5B591058F68FC1DF3933B2BE014F99A53A617A19CD
8BE011234D48CB7E14D31B02B1FC47C8BFBF04C4409D32CB454E8FA0EF9AF16B
8AFE9FDDC41F6A23D700D4AA922A0316A895D240C5595F21FEBA98FE0E74B762
77FCC80F4950A8C55B4A008FD381E9C0EDF4427CB324BE4ABFC790CEB53E8BBE
AA90163A7BB19E2840FDA404E830F5478DD69B85C5E69573D8CDBBDFF41A8126
24A6AB66333C749C35BE314777CC222D54FF2C4C75717FB938724EEDDFC2EC1A
8DA77B5482E760B68F0A2D240332BD48803004BC157C6E8E192D512CE83D5572
D388BAE80AAF5E7240A73CDA7CFF7F8CDAA4ABE1D3BF6ECC3641B6BD1C2CC703
275D48D62A15E5A85F003E76D1EA7DB65E3476CCCF6B504514AEB1FF1263FDB9
81FBF1A1873FC287FC6B6DB11F0FB463637D4F3280EBD19976588F900B956FB4
36AAA8C1F040300CAB9C4F624B22C1D3D6414B7CAD36B5AEEC90105B5A5C2129
4CD540B9D0129813BE7E20870365F8C46FEC92DDB64D0A6C7C5B9867A4592B7C
124B1B47899CE2D1C03811AD1B8BA253B0D29DAF2B53E312827478DBA274010F
C919D122DF24C1E372F7F3CA77A2C0EDCDB2635F4136EA0C202D4011346902E5
1524609DC031656660302CA36D376245A64135890C13A11C0085861792384787
D0831FA01C11F1E7B4429DDAA0B3A7EC1DC3CFEA24C34DA4BC993300F12A953E
80C8BDA360789FCB0F1AEEA7AAC310D0C3C56F43F7914C3B037DA02C31EB740F
2B1A696E0E5553656942BA567DC9C4D3CA06E45EA615B7B5674016DCFA07C0B4
285BFD9D551117A357F4BEFD58BCE60661187A5FF20D27D685B24BEEF563F0C2
B2CFA2565112F7F49023CDD405AF3E54FF994630BE678B0D6E1CED514FC93F7F
63710D289026CEE4B074253E7E0AB1DCCAB57DA7A1E2050D2B8D3D75F2AD7423
0B0A7081DB1FA44055620B0A2CAA54666C5EEE3C01540D96ACAAE98644E1D210
E0E020214550D723431813C031DC7DF0D177E82AE49798F8E0E5AE0BB8FF664E
4793F857BA380297AFB977065B7500E4C0AA1735AF4E15703C860A016F19E593
319D14C497F24ED8E42F3FFEBE976DF33D697656DC11A8A7C6A60219BF63F186
E0FFE55594B31E5C312DBCCA08E84E94E8BF57CD5F5B70EBE59F0D41DD3F6B05
F7635EA92FA9E082C80075A5A5F684160AADAD501BBFA7746327E3E606D1FAC8
EF7AE7C612371BB52FFF41A97A349D111E861A83C9C48B0145ABC3582FCE43C5
D121F0EB6F5D219E52E2BB660AA1DA5551D6B66A732628D640BF9D8BDE2BB3BA
046FBFE2E28DB31AEA2ED8F9405A39C16C3800E9B5611B460BE0F6716F2BF79C
902AD4FA3B6656E13E9DD7A785C17F28BD4D646D66058721610CD756E0D18D32
F09C740B6023DFAD45A718BBFB2E65544D4754A5DB23CC7988A3EF45CD3786F9
E100D9684549A16BC2DB736D43C293097E082A968C27F0C120C41A53E3464381
F7DCFA8B36344EDA85F53FF65BCDACCDE7EAA41A6D38C1F420F8F2E287AB0F98
A0DF7D8A6CF2E4C78D606569BFB7C51495493FACED57CF2D507DDD366247D807
28D73CBBDE2F4F666099411B1FD2CF7B93D0E9AA161024C58892285BCAA65E55
9FB37468777706D2C57A0DF6D520844B56D62CD10F2D7B02D17F97E4F87C16F3
9BA09013FBD7ED8C2DBBB432288E598241369B9DA6E3EE324290D73BDBFB5448
E9D7142036C0FE538F18E866A50DD23152E2C096E1045E7777888AF5CEFB83B1
C6FCA18A26E83D75AB66291A5A5A285DBB1B9525919564600D71A767BB03A8BC
7BF24CC3B318BBC0F40C79835DE626E99BB76C15719BFD5C15D967B84A6DC1B2
450D42BD399C5316396CB294D008771E563E5640AAA9635A1EF11001D0E20298
066B78B7F918E41FC48A6A6BAC8CD12D58CC2447D1BAC318E2717E7B5A94A4E6
462FE9017FBACA70F73952C2FB4B57406E692684CD10FADF049EA8173068CFA5
95F8BEBD313E01B345EA52562AE3847FFCBF9C5D99353819340952C7A4A509A4
906D09AF07C9DFC130B9A77DC8B15143C0A3A3C29782F102DDA751CB65176A4C
73BC02139B7A05F120B9638E9D0498DA5DB3AEE6DCAFEF2E7D2AD99412E4DCC8
F7CA272F0BF5878C7EAD5355E1F7F747A65B93D9371DCED1DD62C406DEBF268E
0AA5EA3B61B0DCE98ED633E40BF380DC58F303BB1CAEFB2936CA505822CCFEAE
E755D8EAD0D49CDDCAF895AEC8960E1B596BDFD7E37DEC8B2F9AD3E750524497
323FE1C8CF46C10570DAFCB7E7334FAD7C151DC1B30BACC1FBD2A4091630736F
BC9CD9E3175B23541277BA96A8B511D060C662DBF862C28B29F2C6DEEE7440B8
B1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 26 /braceleftbigg put
dup 40 /braceleftBigg put
dup 83 /uniontext put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A26DCE0D24776CBD0FA6F27F7636791537C1749969DAF
3B72CF541A2E7E72C3C4AEBC5CACBF5ABDC96B4FCA84D7A55787EF6A13484D6E
E37C833DA37E42E9473ABE2F9E0CEF35EA389542AAEC2E389E1C5D8AE6BC29BC
48B803E3EB1DE78B7CBDA7CB79240357C0AF60E817427A9126A9C26A07455FC5
4C21C91014C9D31B5743A9D4FDDEEAB473F04A08E9A86C68EC648A214D6F84B5
DA77805B27A0F97CDB6BA9B9A521464CA519C9E8B24E16FB4962C239B079518E
896FB197EDAB1434BE0F418D3BC19ADEA42AE0AB3741CE1DEF5B751D3B44C05C
ACA1C98CC87E8404F41256B3DF22C3C0E1650A1444A069A6EBCB15182FFEBA0D
3EA2F81423D30DD12978A8CC3B98128FCE221AB59BA62A91AE3338FA62E9A450
FA897A67E2B1D9167F97D2120BCB56EF5A317D8754C46227EFB54B113A4B3C98
D510AC0DAC6AECF34CE4BBFA2145AEC0184BDBAD0D239F9F01C677C4282E2C6B
96DCD784AE091B292F52099CA4279631A7493B0C574B0C05BA8972FAD8308FCB
4512D82FB080FFA8BB826A46F1F779F31A554D8BF98B0324C6D42CDED943EB85
E10BF87AEB2D85BD65368019B5FE373853661189F7EB8082AB28D5D7A27E1695
F9D4739120A909CD64F830A586C9385FC0BCB37F60CC5E69D4BD1D4DAD19C131
7B6CE1DEA72B60EDA6C65BE1A731DA1193AADD799D033A830F1250B65C8B3E7F
FFBC20D14E9FB2E2ACCAB330F11DA9352B57A9CD6C0611E7BB32032875A4AEEE
97588DFA53A6DF8E4670A041E6622CF1498B19CD442D569A893E5A3907D6C061
6369DBDBD4C8A800CB6B160247AA25A9B66BC8C4F4F7B8C4C5162F012910A3AB
28122B3954BBFB8DD9D3DB839A0CFEE9DBFEF8F88BF9145EF43025B02D76C96C
DBC354C934F15C589D690677ACA4724294478B4C661D4AB2E2B382826C80F33F
D41109AABA36FCEFFBA8D5B2E2C7EFA8295E0BA8FF634A918398345B478A6BED
B7710FBE2DABF6BAA59AAD2DFBCBBBF290C5F7298BABB4A58F5960C1E421E8AD
8B8EEDAE68AA88D943727257A17597767D880BDC407147C9F07833250CC0DAE1
02EF146C40D9750A585FF3A3ACC268989015EC32BC0E406BB8031AA5956CD485
5825742208E1BEA647C0B8C0317BBCFC95E8C8227523C8C95BAC17D2A0392019
7746B94E6810C92EED049A48A561168DE1E9BB659C7365EAFA87ACD3BACEF0B6
EC7689E8FA3AF1D372B75520F5B6993A260A14716672E3424BCF426B16879262
E2282D479141584FEFCB82CAC71CE7DBAA2F09CA339EBAC342BC9C3C0419DE64
077E87A2282726DFEB04EBA563421BFCB155A626B17309DE3AFF9F9E0310114D
FCB1A8F8D781E36A398B2D8BAFF421362A7CDD5866A35B405AACB9F9BF68228A
6F1EBE05095643EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFSI1440
%!FontType1-1.0: SFSI1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsi1440, tcsi1440, lasi1440, lbsi1440, lcsi1440, rxsi1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Slanted) def
/FamilyName (Computer Modern) def
/ItalicAngle -12 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSI1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-140 -319 1431 881}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA6B96583CD563782FD7B9B76DB26D4EA3231A57E
8BF89B7A316497ECF97721A21914336DE301E2FD4750DD7988C54244245FCAC8
F797B1071527AE82E8037FF36DD554DB440CFCD5E95783744EE9F8D796C4ABDF
915A73742D6E78ECC6C8BA531381F9C5AD52B235FB88381EDCADF4356D7FCA57
171AA7344FB4BBB067CFFADA5335C52967F661EF8C4F8D65EAD5B222FBA4D23D
CB692C2C1CC4BA786054E63701877B9F4A35012FE12407D0ADF9D19FCDF8911B
0369AE9C80818452A23EA191B757871431CD4788392A13DD325AE5EE5C836FD6
EC08CFCA7EBE080D06309C2E77BA7998B2EA5E8DC780BE617AEB8C0382EAC238
81E9913157ECA72F529E28DDDBB750CCE8A928B08ABB508B15EC6407FEB1F5E7
3D1AA59B84A910647CC3ECE4906F40D2D6A11D8A070E92F04B99016E56B53D9D
C2B650D6691F7245477147E8C6DBF83263C8EC93E39B5272933A9ED06EE3535B
21B7D65240E3523588C19B8E8C25CA1E9C1A1B16613F13C6AD73237FD458DEB5
5C10EA888290158ECFE6FDA0B2B238802E5E25BC918A17F29918CEE6EB272883
C53D4215958CA3720DD11E44F376BE9F307F6CD6AF8670EB364F01DE8FCAFBAF
656992F11E05E20720F67C124D0EB5ECB304235214781EFFAEA0AA5D35D58503
80D90DA5C4C6F4261662C71288F0A0C1A9500EB33109A0AB64FC031BAD91303C
167E1EA8EED8C9D0C4891653D2DB6BE674A20354F3B43201DDB33BBF008B956C
80332CDC35595A200162F8710058926158D498C70F009528B41D7841D10584C7
FE400CC8EB164947FA3CA26CFD9B804FA141839748F87327E515611C02DC02D1
FEC20E7518C87E63D9BAC80FF8B92D978351C7F5C1C20501617022EC7F92A6D2
78952CEC5115AD49C8694F186FC8FFEBAF16DE43F26C78967437A1C0E5EFFCA6
69C4FF024C43C3D3C2693F7CFEEEB699048721EC7F606B995A1260A131A29D7F
2D888C218E73286B89660EEB977F5BFC46D8FFA8371DDC2696F12BFD9F1B31D6
53715290949B0A689F7A3836F3F1BF309ADAFD48EDC787B34E644F5CB871A633
9B894DB20C9FE8EA91D497B2A49D7B91337D1201E26F8F20910AB094CA9DC360
6B93D210DA64BE553250AF41749C9790693C7A4CF5DF963950665040A1410D08
1623E40FE410BD667BEB0A2B421DD8A51DD2C430342CDF7EEBCDF11BFE38A7AF
80EC43EB6593C58B8E851A037CB63993992279CC7FD6D67BFC8B239F46DD7696
1F4393906E07AEFEFCA1025C9154DDD78F971CFB1B21A18EF7B52D3575DA03DE
DBC7B7392A3BACDCBB2F74E04A36147CB94C1F5C9B4E35F5A2B22ECACA52AF81
F8F896FDE8050489C4093FECACC8C1B258E2E68D1C85E1DC21A2776E06CEB751
C699D7CA664E7E61ECE318135C8375333B014B75111084019DE1FAD264E2B598
78BE26FA8553B0ECA1F525F7A4247D402879C09D44EB7F6CF89A910B180E6F9B
009FE34E4F1343BD815921E958F4A959459E83D830B53A27A4D686B8861527D7
189B293CAD4140145C03B42EB816557B31444ED5C5C9C740F645106B063D892E
77AC00734E8BABA933F519A2FCB73500DFC508A69202E47C11DAB5D6B68DBC3D
2AB4EC39D01F59EF9D1F2A12D10CA06A91925B8F0799FA72BD22790DC5E417A6
AFF5FAA2F62C1B30E247FAAC7EF825F48412030AF5B35C3CD3E5766F23FE0032
0EEE23EFDF315F5EC708BBCDEAAED12881464EC01C47CFAFE2F8843674313C4E
0BBD8152B06FF1B7A20F4E94528DDC7BB77C9C0E9B78FF583B35C8F097D8DCDA
6E17BA3DB3B04895E70939E1E6DA83FBAB0E412B35FE3B3FF28581F2678A1043
3A5AABBF7614E76EA86B408D51CB492A28985F393E959B19968EF90F27A2F9AD
2038DE6BDD2325B01F712185C2805F46DD35CDD3A321708D8AFDF862B406A8E5
451862A2DB1E2B045F0F5011D46D01E050A3988597E9F285334F7E32A072FB59
BCE349B2DF75B125F5537650893FD921D33EF8C6D4CADA1C9E0B4F281BB08566
DC1A5C2556B740554092E95AF81B1D688DDE9EF61C28B4BA46BCEB1E9E0436DA
0F26DED6ED3D668458C5BCC2DE25A0C58C98A6F252EAF13ED8CFC69D05D64D60
03C95FB2A00655F98B2F42C5B8272D4AEC874D6EF3E2FB47F558AFF3761709A6
B62B9FF1630BB899B09DF1E30215BCA4082C4D2240595F43DDB661F994C6B911
EBCC7DBA6707FB205217A2FDCB2029F2EB995F8E2A6C31619F14354D70BACE74
C201088DAC413257EDA5A21601AE737ACE2FE1D00E487ACA07E20B5C42DE54D4
A7B1AB8712DA78196745DB5120B5BE0C978C2B5746C7A6247F7C8E602E32841D
44984D48F7A6FE7F0F931971AEEFBE63D60A71A8B079A6A93055ED598D0D5EA9
018CD98DE9670A9AFF60106112583633A6CBC30FEC7B1820C42A1078409AD56F
E717B66752D8A748F58EB00DD7B3F4342FC871BCEAD013AA353EFCE9942F03F0
6D92CA5A20AE4E5BCF21CBA418E8F89BBB7AE23AC8F7234B6C380BFF89B5F824
FBBC8E013494C30A922F7D0080FC2A395F396E820DBC1D7C6F186B84CF1DFDBB
D7C9DDAFFA52A723DB3645215479A701BBED727196EF3357EEC176D06A59B3EC
49DD37E804286AD8535A03BF0799BDAA3C0960EBADB9D256DB0554A9B3CF6D6F
613A394F67E65BE2599EDCD10D0407325DF625D513648C841C3041DF8C4CACFF
62D1433176DFBF3D57C7BF23598F0BF61BAA363FD14E0BB7BC7F81B30458912B
40DEF9C0A4D945FF1E2FC2340BE37B673D31B0132EB14D5EADB9D52A6115E876
42611D428FD7B9D81D9AF18CB636FFEE11D5BA6035BFE91DEAC542888C587ABB
5E84E2671D2753E7DA9BBA69AE5C0A6C9F36B43B90EF0FDAD8BCDE9AC2BC70DE
5DA52591CB52B12375010D2678D585115ED7E0F79684F7B00B174750D7DF18EB
F956DC6EBE73D952B8036DF4229DF208FEAB52E837D7D1377C063980BB1B88E0
641973F715E41D18E51E16EA251C49EBE855E618DFEA314873A996C79E23B208
068E481B1CED5E2184628C658BAFBFB368388BF7C07EABB1F8615CDDECD0381F
506ED9908EBCCC8A7204078742E146CA8985E1FE9D36FB586488EA8D3235852C
AFD245E58F56645E0E2E070A5E8A38601D62D4246CA0155A54A0C3E2B3E1E8FA
C79FDE84DD1B240591CCFAF94EA0553B1C5A434D9B98F65EE74A871940EA14D6
BEAD2A9B22FB6BEF2419CF3214D67453FC59A5C02992B2F3964B99E200C8B303
64D11FE035549EF1A5BF25461BB619986F76AEE8E141490502696AFD064B6CD1
3122D50F769BE27D0EE36E4EF950D6C5BF5821E3252227942DEEDA15C90D564C
1938266ECC742DFA6951866BD920710443D6C1250A97B106149785930BA086CE
D7A5B2BE8A27345B1409738DCFB5CB7A37135058762A187C45D80938E44C4004
A915C10F719888AB8E0138F2860266852A3DB40FFCB68CCD09D80569FAAE3D9A
8ABD7295F452FB743260FF6478BF0B9746BF9282B91F5A2204035437F3ED7532
4BDC9839B935B1F402D955D1125EDFFF1439E329BC0C5CC42EF5590D1371C25D
D40E9795875B2B796865EE69B9746E2E2AE7C410938C5BC5DCA1C55FAFFD1DCA
3EAB3B7F5B837859558C7985A98A32FBEBE4F59AAC459F64F133445F9855305E
1C66A902060476B523E587A4AB6575757AD5C775A920B75393A91A42A60CE581
04228505EE8EB724917753088DCDF88A00E713D3DE8924475F94D55DA454D0EB
852493F7A89A4DF974AB2D341C70A2A97C918FF8BBA6E61D1FF0CBE776F34C21
215E77334FEC2D9C426F1101E75FCDBD54D8633CA00D9E9D312B1842D19530E3
C0D286CD94196DEDE0726E092EBC29A30A2AB3DA276898AA0B9F36F127590040
5025CD7BBCC85BFED75EF934813D5E23031F783A442321927F7BD42944C71AC0
3A7F26890AAAB50C4B3F48B9AFE0C62BFA3A43079B711F0F159527003808F960
E2E92A0AB8699E2A1BD9623AAE9B1A5DE804327AB1B760B4696B15B5E5C62332
58110FBCF4AB71BDBBE63A7C5AFC1570B5F7CCE5B766F5D2B487A03399B05E2E
EE4EF4BFA24A77F44489624F7D704DC33CD9009DD29C5C3D5DCD4E7009A99E80
49EE4CC280A7AE1453E06D048211D32F5F14AB5A63066D76ACB1EC6488E3781B
1FEC0FA77A4F9D4A077B526599D1775C4EB13BA3B2D60152864BE7E8FA4A3535
AA673AE15F560DDFF08EA7AC108872A2DFDA6B00149092F09A63C6815369CF06
70EEB54CE201E61862259BC077A76A3C2BD4561BF6079CFB0B6B56D3100372E3
D46F3F98D6432D12EA66BAE4085C237309FEDA1CFE48A602015C439C16EDCAF8
0B93D7305278789D0F37931005401D2A36C02F79A36662058C3D006BB070F413
E9465984E58EAB7F011897CDE24DB93D8CADD372D2B4645F512244D32C36E05C
CCDBD90115792BDB95658A2575B87F83282A3E56C8439B53255718FC6877AAE3
ED1C511F48686A04D6FE87EE2A2A486B12C1B738A41B2049FC72147EDE32F730
6FD53780BBA8202D430910F4DD05B8EB4B11D5406993E3480505679AE68898EA
D58C01DF56EB0E8BC41368F9627EE4D312082BB86036B10FAF06FF03E8779117
BFF9846CCB19AFF0716A26690DAAC07255973B2423BF5A5403BB713FAFA4FB84
C5ED4271BC2BECE063B15EACBF7CA3A30CB08809D82785B93B66D044DE372A9D
20E691C5AA4825C2A788EAE1DE8EF99678F4D92A89AEC36DF3B202B9DBF9AB7A
AAC862913243AD4745F076526531E7F6739A1EB1FF6F953B2AF3D5E6F68CB3D5
2D76D902D5AACAEFD6021E95672E290117C783D9EBA11EBE3DA85923D165E73F
0099BEE013F674F5A302488044F2E9812E57F4F2D842D72DEF015DE467CBB9A2
A60A9EDD6833F4E48BAB1BAA7FFFAEDEE7979DF757694CB3ADED38F67ADD26AE
2A46535B40D7B63D2E7272DA16BD673D3A714DEA4F93E8614966D0A8E83827B3
159823407432F4865326D5710E2DA5FF22189B85782EE6195EF6ED3B683C7CDA
89C592AF2DE74008F2EAC8C34CBFB44B5C437CE2F6A4C4E5528F7CA7B20F2DE5
9B633D343AFE7B1556CD70D31F2B166B4D093A2C716D0E106BCBE42D82F098BB
7F45E5B3FC86E9738D251CE8ACCED62D59283E512BCBC66B0C88921005F70710
DF9C90939B95A5EB24F77E15540688334556AA31C44A4158613650E55D03BC67
9A219E5E15A5D0ECDB770E8510EC6E91B3D04DB26F791D69C0FB9A5D08257992
55C227DA8E3207E3D0161E90B8C7D900193CED0B6E1698FDB70AAB1711599503
56877A42D5AEE9022DB9FF98DB6C269417E327134F721BB71493E450ACC2338B
943718ACFFAF4410331B19995A392180C29648882481CB09448C46594839CDC4
504E1398C968A1C81ED12505FC95209E2DDF194582FA64B9C78C2E3816BCF34A
15826015B65B5F84FB38A055D1E1D175F000BFD3960880F2975074247ABDECB5
F6BF6A972896E02EF43ACCE53B289A0BBE709EFE223EBAB227391DB8359714B1
B10C36CC785E5929A0B95F2519C97D8C2B661535B47A3D6B279F8DA0E88FEF74
57F3B00FD80142398C8D2F1512FC7DAC050FCF5D207B10BE5120D4A91EF5A434
DDFE90F48728B9CDB069D665AD35F61E3736302AA150720EAEB2D088FBFCA081
9A978A9ED2D68B407D2D4DD4955D5E4BBF593AC980834D4B807EC8EF300BD2F7
8EA0D70A09F3F6CAE3567E23C83C7B7F71BFB68960B3505D81090C920148A9A1
D4688E802B747CBE4BB2B96F45B050AEBB808AD854FD94DF660BEB3E51CDBC9F
510B0631A45E2ECA0080E3BFF299B2BE7A48E4E98FACFE54EFD664C3D72D18B7
E58F74F797D9432ACF1B1CA8BD8F8E04AB2314DDD99A1917FEE5C2E241806257
080F5554408DCBAC485BED6DFEEDFF95340D380280BF94F3427571B1AF0B502A
026574C7758211F11935EE0C180356E80156BD13BE1949BEFB6F217F1B3A88B2
ACFDCFCFF2E1830DB69745E2D033E6BDCF62762B3EC3952E36E1CAF934CEAB20
5FD3A64AF38AB09060AC0315CD7B6CA2C6F5ADF918B22E12396C3D9B63F36EFF
953F72D58D63EDB251030757537471B8536EEBA2D548AB899AE4542E94BB285F
CDBAA507B010B029B2CD90172CA4E40E24AA825723E2EFAC9545CFF55893AACA
CF3F6082744C0E55F3B79C3CF4BE46721EA14FDABF2EB658C9601B180DC8B9A6
EFE22BB6A5A7B138BAA5C1AE5597E00964B92AAE2A3B65A2B7F4A857233CFACA
0F855F50FDF81813C617DA8ED22561BDAAB23A9A2AF7BD479826AEDDDFA72DCD
51A57A1D73364F9250D4DBD27AC481C3A6AE4BECF1D1DA5FF40B115C9EAF8E2A
883B416D2A12BD812327CF00E42F3E4D643724B37E95419FA71B38116A91DCDB
5B88FDF60B9AF0A420FBD0730A1FE86E3464D9E629555EFC2A970D9EE432AD08
402320BD0EB81D4BFDB92FC0C9CC53DCBBF75FDF18430BDFBD715BEC56712957
DF2EA12F80952F9AB67FC3ACA820AF568FE521B04E7C48DD824727EA380B1886
05ABC43B9858A943FF7212E05A6CC0866C7DEF58F883668653AC5BB9F1A51DB7
FCED1D563B048A783E1143AFE3123DDF28D02AB3C8968E07028D7EC3AF177AB7
0F544BB84FF5312C246106F2FD951CA730330E8E5C85A2EFE301569AD8284E05
876595EB05B4A6649005A4C2F551F5F19C0529939A8D55DE574C01EB0CB3CDF4
E1EAC8765E4AAD4AB3A9320D135EA3F7146278DE320AC43709428CBC2226F6B0
F8058406DBFBC1BC5D4F9165A3387EA104869ECFA0B2C2F12873504FBE334150
8CAB0DD6817CCC3F37FF14AD65057B0A5F6505560A56FBA0331A2C87A480157A
D6808341DA4368DF3F6337E0772DED55A9CBF65BCDF2CDB52ED72B60CFFFBE5C
FFDEE566C91DB8D96A24AAB262B2A8D351678A0E36524CA3CF26D9735501B34B
A2D0074D34D5E29B04EF5C5CF93CC131D360A0DD43DD1EB4C6941B28979FCF26
593EC778E77B4B77E90A29AC5610E357C693EA37C3BAC1222FFE89E595EFE336
BFFBC25C1B17212463B783AECB6930AEE00DEBF952F29A4CC55BC72A84F43342
99F59688FE38F94E400C60A419B383A2FA35B9DA1AF2E5ABD1FA2BD49ED6E866
4F4A1D6D62D1F75AB9A70566B75525045BBDB6463054AA468D5B9E2F27FC9232
493E0926088466782D3070232F9A314702511A7B2AB1C78633F58CC57E476B85
D558204EB9886405C43D164F3187195A7584FF11F6E9893DDAF035148F9C4311
D6EBF1391A8E79C96918A3950A6714B39891C72FB183D6640E6C3FCADD86D28A
E8E7D61E9CFFE3B3F12C4A6CDEBBF4F408B63E2B78DF6744AD8575A6593C8455
5D72CF9F497C40DCF35B4AC738CCBB171C7D0562A6A12E861FCB5CB54852E935
34AE8F06DB96DA41B902CBFED250F2962064984DA86B226227B451713C26FAEE
403B450C7DAB20E4BE76F135F34C654D327F0F6B622901E3E119AE2D364C6C32
FA31400A542670B91228EA78D42BB1F7B0CA1466DE306FD85ED60F1A85E3ED1D
6C628BAF3FF958F3F0D8B26A9A729B3C23693771CD6653BF5F0DFB900294EF68
7B8063EF64D16354CE865BEC73E45D6F9F227C845907CF6C07C48D2DA5DC5B1C
FE5424D6CA145FD7558035FC98D9DCE3D382DF3D6C2A9C2A4FA64C8E57518523
35859BCE10FBA0D7825372427E80AFC82A590EEFDE73E1416A8E72FCC748E129
16F236F97652DBF0AE89B1682FA8B0D8D39C426B5DC8CAF5AAA9AAB420C06E3C
D398ABE0EEFC7DFBBA40ACD4B814EEE59C760751A96E77BC8018ABBBE797D990
16E471B6CBCB0B6FA04FFD7BB6D3D5246C2F7135F4EA1C114BC5B292AEE82E91
4A8D5E007AD6AA151422BF91C39636659E22EE816CC66ED5D2B65CCACACFB49F
83E90153313AF9DE2F788CDFFE6C9A61CB5B854C8C1F1434E2784758AE38DFE8
87E16ED246223F4134B4587D199A2BABFB6BDD7D6FE386497D366E563EE74B55
732EAD46C525B7CD65204F3B5E924E8269D5807895A75616EAF70B95076BAC26
E711082D1085CDA2321D856155FAB18C195C6234CDE8204461D50DEC7AB70E66
0566F83A96A7925F9946607B6252F69DEBC33C493E5C844931017223D294916F
1BEB86692B98B5516A00A4645BD619DC03B6C5184D68CA75B905A7294615D203
D1254329DADB8FC3F803515BB8A5FB100E7DAE96B9906C36B01D4584F8107EEE
4ED01856CE00BCCFF2E59C4576D029B5A845EFA366707E9C2E5B835D76357071
C3B5E355BED38815F8DFA592139E5D831FACA7A7ADBD38B29A9B1EA9ACB28B4C
5C6E1AD09D3B9A70DB9ECCE093274288FF25A3728623B18AFF03C6FD6E4A8C41
F23A553D55B3FB7390DBB45E86B9F727E6039F309CDB6C7B4D285D6A7AED300D
7D9AF9320AC3BF341C89CAA4009A1E166F6C4ADC86E15849A6E41EACB52E269F
5DD7145A106E171D4E4CBC37B2AAB0F6B247C814E24CF0614E70431DA0505DFB
4684E695778764F8273864B0E6182085C90A7893BA320E6A27021AF6F8C79804
FD6DE6855B92FD315F4D65B0A7BE4FAAF799BA0B1918AA3F2C53E5445905962F
44A04A348EC9308546AD03F02B7531D5A978800190DD156F387016D4DA760307
D5BF81AA21C270730E8B6CBF8DC2955D493E8907C20509E425EDA3F6F5254820
BFCD00AF251497A9023D117CF5A04480C30675167057E62CEEC2AA2462EA7197
149EC804930381743A208FF13924C0D00C6FE0FAA0F50B257228A8908B823547
2209BD6620D7CB265F6B80FA6F2C3889E36A61B31558EBE547A418F96D1E1CFF
A19469A741B4C118D7ABBC49ABBBF8D0ABD7BA5F850D89F6A979C5F2EBBEBA89
5C88A82E63E25CAE0E6BEF743BABB9AA846FCE0D133EF6A4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSSI10
%!PS-AdobeFont-1.0: CMSSI10 003.002
%%Title: CMSSI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSI10 known{/CMSSI10 findfont dup/UniqueID known{dup
/UniqueID get 5000810 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSI10 def
/FontBBox {-97 -250 1077 759 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSI10.) readonly def
/FullName (CMSSI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 67 /C put
dup 70 /F put
dup 76 /L put
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7E94DF619E5D4CC604
78288A019B254A5A0A8E2D5ED465C9DB3CFEF0F444DA2A7DB2022495EA1B3FF8
BA3E769C503BAC77336BAAEFA8F7B4BCF9BD63253ABE621C7C696DDD22E0EDDE
ABDE1706338BB5F604B4F42356E2A96751B8EAF1112A1BE30B618E7F7BAA96CC
A264B5EA7138FD007E2CBE19B1F008AE13B47252D2956A06299FB28035624C39
08E9E5A4BC08DADE08861DB9940F6F0FA67E97E9A73C9F41525E865D0BF68F8B
6D48D1595EB69B3FF78F5F4B18470370BA219A010F9B5EA904289205DF20C7EC
91A2B866BA05251BD3D00FE5229CE2D2F220B6E25DA5B3C0EAC68979BB312E2C
532264814FF214CBD46C8B9C8E45878C9E28FF334C5CC7DF9D378EA5A37986DF
0450E2D5645371B8C577C28A008AB7A702E89FF337A17D05AFB0FDC55856AB3D
FFF997FF51AAD70FED81A5D307FFBE26E862070E361DDF6D162934B7852D2FC2
F3FE611F218E28CE0B964BE311E59D8729C7C0FC2B2D5781F73C87D64E6388D1
D7798FE70E74E76368174F5E055FB8CDA3809536768B0E6028826436C7E6454E
895EB7E435FF8AA342BDAD46A2C7BE5FEC83B8AD16F2C773F55F58870E70F2D4
FFCA12D89B06A706CC204383C0238C17EFD01E0118FA4CB77681CB7260BBACE8
30C8E7B16669700F884F234C36EE9694841EDD4FE5644949AA28AE2745FACFDC
CFEF1590F99B0DE494BB0851205DF4E7F2EB88CFF794DFA7958F6EC9197021DC
D4C3590B2729779345143AF6C349CBD2F17AEDDDC23AA8F0998C27170C44FE2F
163C1E2FC314C6CE27D6CB497C3A12F6D10B92D699E1578C23B5D9A907EEA297
4BF7D5C4ADFACA310E61EBE5655745FDCC48B661CC2D3EC016A87632AE410B69
C2B98B87D3F46491EE8611E31CE17843B05C05924FA42FBAD7687003C14599DB
08D72670855271EA55082BBF6AC146D452C1531338138D9AAC7E4D2F0CA1FDAD
11E4CB830A9F38A83999F6F0ED15D12FA631B8604D4E3018E625C8BABD8E1075
93F5E17CAD3CADA2210088E71C02CC6654DB4E12F8C2B6B7EADE37E52FAD3FD5
83E45B62FC9B573A6068EF3B43856CD4B6C3E096BA93728B05AEE2BB96C60AEF
58214FD24DEFA63E3FA299289B211A57E4B0CE9EB58414FB78E20151BCED3F4A
9AE6B1D7ED559B3B619385AA8496D6F56D2B353E4B1BCCFA0A50247E283B1540
4300E1119F710664ED5DECAAE9087B8C0CBA63F3FA09F217757B8448D13648BD
D16FEAB50D245C198EDF27C8628CC7BD02385EEB04AF8F4C76308BEF4D640C8D
6F2FDA7BED98F1498CEB1226F009BFAF6425265EC0D13FCACF4909B7495F4211
BA32B04A3B0BCBAC89D6A9088C47C47B4BAC36FB59D9B5D73B2E9E926A9DD183
1AE00AC58E9485379FC6DA119EEA3F6E478F22B60A464F192B2F43379407D4A8
795073B4309C27D8E945468055493D0204B4A57C39CFDC951A04E0288775FCFB
DE3993852671BE697999C9831A33CADEA75B369C179EB8A807CFEEA5CD97BC55
1B0EE49DCC4B6BF4137124123626A5C91603B01B4E0AC759526C129F6AC5BE74
B77B4E431B596E29C17BCCD1CE8279E9C00DF7557AB25770FC9B02762D7EF141
84FFB4730BB8451A485F784A34647741D9B8D2127D158283E01B38BDC39BFA8D
EAE249871ADB347827989E11FAC23F76C2389F8E883B01FFD1EA4968B44D1B1D
760A1FC8F79B50385D8327D6A6381923BE9A2FB8AB0CC6ACAAF5C7701C8F7BDC
81424F63D2CB312235AADD050FC4B71448EE02B7B25C82B6BFB070261919DC1E
32F5E6DD4C38691581D472C254BAF83D7F568016B5AFAEC895187E88AA4D05C8
FEBB3AEBC348AAB84907BC4D85C1F888ECAA5ED2714598384D7369F5FBA0B92B
ACA0B6BCD2D22F9F10B27FBF11A8AF204794CED402A3597D2D469A99CE64BF1C
9242867251B8EFEC0001A1ED0F470A4346BCD9DA22C005A079EE1DE3E33970FE
56620C318D2FD3DD9DFBB773B4FEA7FEECEA9FA1923AD4B2F49DAFEF48E1C529
DBE9EC77299E02DEA39C7B91F9E4F6D68EB224F4555F53E66CD00326CCB5FBAE
70243CDD407BE63DF7BB85E70A99F8B58BEC1562C290D8E50666E1E4EAA484DD
487C567B7BBFEED34A65A6407E3D8925E3C667AF40DB0EFBAE2C07EBE60A83DD
C1A02842861C994C4D314A87986CC94EE74DD4E29AA9E70F393CF956D3BE586B
AC618055571DE00541BA60D022DB49CB62C13FFCB3932DFBFD2D52C8F0C72F1E
9337D95767E376B80AB35264405CC5C385ED6DC9F95535E00C5252DE66961AFC
BC7C83ABFCFD5E0A055E37E7D261A19039D47EE792CA30EA673F80C48C0EEB20
DB21686ABD169A45DB94E35FF086C9946F51409E9E0836041081B04F861838C1
87157DB76A983928BB4122798551318EEB70A32C11A412FD56B7805BDA93AFCD
B11D35FE799224AE30C3BD09D971AC651D06184FCE45D898D09685009DA35EC9
CAB63751F8241297562AE2FEB577AB074D36381B0E5FC0DD5572E3A3079B166F
56C42FBE6147FBDC7EC2ECF6380A70F87D1E44CFD02A70BB3AF4BD9D350C7B21
5DDFD4FE288F0D9EB2FF4C24612FA759B41D0854C04163DC973570B974BAD7B7
BF766AD59D543E808E8F56F831472ECFEECFA7BEA74CBCCB025AB04079AE0838
75852BDC83E1D723824761459DA6A8920A27282043C38BDDB43157A70D552072
400E84CED5FDFDA0F09DF94431956F304F6E92F3DE5F99874F995B467E2038A3
B9C787E650C4A31B2FEFF078BCAC93ACA5816F5DC3FCE322C9DDB15E34856182
BA15F2D56FF4E91573BD2D8B34767974BE928F10EDB3525C2B259F320DF99B88
87801826F2B6AAB2C178270B27730496C44CC83C8036EE6D7D33D6D4C0D871A3
62B7BBC8D8A4E86AEB2CAE76CC7B091B7DF5516EEF043C7D2727FE569B2E28FF
F6BCC6FD3696A85CF5ED26571BFD346494CD6C0974BDE257EDD4A2C53C70FA89
C81F9D32F5CCBAB39A7C00A1BE116FA1254F291AD26C1DE4CBA27BC03C5E5561
8E960A7169F86C0DF884419ECAC607FA82B00CE0B41F7696B2C384582AF6A986
5A9FF800D3A1F4B6C2524F1A4300B9FCDAE2C2050B9882BE4F512FF539FA6BE4
C9577484EB323E7BFA5BDF628875A3634214B14947F7C16541CCE359F72A0E27
C0DB4CCD1653693F7D0BA68D02D5A61AB516173E794BBE4C2C3F34ED9C33BE3C
4A9E20A687498DA1DF7BCB1F6C595B90A5730A10070A54180318A1BD01844585
E78C6EA28EEACCDCB49F1CAF1D21EE97B1DF74523291FCE2ABFE2C000E8F061A
7CAEA494183B9261307CEAC6CD13B362130AE56A651DFACBBE7A6F6747CB61BF
F94BF393769F2A1BD493E1E6502A3507416984FE0F7E509D901A106B857E2448
7284E7ECC2D316EC1C54EE4FD7DC9972DE33B46356E414C92CF8DF9E472F7FE6
7404362C8DFF6BE223B8886503A83A83348F7E9F88726CE068C904D45496494C
641E4443D9474344508ABACF3FF3424383D79A8BDFE6E9D9138E660EB3FFCDCF
8F4E01B24B3070E8B480064D946D0D200F4468EDDF7BDE9D3DAFF03B6D8165F4
0CCB584D542D40DC72554A7597A19EFF3BD72B8520EA71A51048F15E2CA53F3B
C3432278CC19751B38AEB52534BE6CD9BBD489444D313F8C78C2C252AB25AE6A
5EC7D05F3FC21202C4B30A7FF9E1BDC6AE3F6B39B1E09F65E95292FBB1915D20
44D7212A60408FC0F5A2E957BCEBE93DDDAD35D05D23F7E58A3602FB3FC1D431
754A3A21F181C437437D7A22C402DC82275DE903E256979985B6E794B459FEFB
393317FE573DAA5416AC52AED36AE9E79040097E2BAF6A0C6CB68C346E4EB059
5E8A6AA1C751CA4A4094257C39ED48FE4414BE73B4E0BF6394FAC05CEEFD1C3A
F5F5233CEB4625752057789ADF113E1E2F77F5B471A0AAA761AEB46CF37C2360
E701B0DCAE13D4583D8DA516BE2E264230DEEE5053AED15368B6CD81DB761A49
9987A07FC48E1EC246D04D80D86B32F7A093AA23B769B0DBC554EE48DA202C28
55847E3D36D80B7C8E779DFE6EAFE3EB35811A1EF80DC639195D5810D90B4DB9
6BABF8F4468AD92939567DEB43BB00CADB46964B73AE13ECC82C3A57A63A23A9
92A46206C70B027CE34FB81E6919828462F8C2166AEBE9663259CE5D4CD8084A
8BA479CDB203F1B0C3579B3E0B8B8E7AA616D798970A11423C391C25EAD95351
A46A856512518A92C7693B42BE92C2E375047E9DF8620B624AF8DCF2836FB1BA
801C822472AAF5AAA719038D3B53D0AE481753F2EC689394CFF9A911C42BE535
C5B4A187712D487C63A0C8607D67D1DBD0EE766B526184768A93416366B2CCF6
364F2D24B44021D0935CAEA289B120A613378399B53E2B50C11F67B7DC4BB1E5
861D745B7FA3C7906AD591765884FA7D746A19EF86C30309DE0F43D4747EA290
8E3C68BAF4D5F4C0C4E08DCA301E46AE3A0141A58074BA2EBBAD8B3F326C240E
ABE33FA5AC689444E7E04B78C29E49D3A128567D08E712C5EC42EC1BD3D95E19
5A7337B8AB2AA410EF1C0EB31D5766575340016CE477CBA3478FB68A98362C60
18CDC9BA410A545AB339B2AAA2934222DA734F6A1AED9942B43B18BAF77FB63A
71059FA66EE04B76730B499FA022A52139BEFF9CA6CE3F9855C7706E3F804F6D
D622A6929D049F921079DF979F31828C31A73CA0238C0D2F11BE2FD68F2228EF
BDE9837348C10E9F08477F754F6343A39736386912D6BC865BE30D1862BACA23
0DF2061049CDF9F894D73A549C10E7BE7790043F9A642E4676F9DE2B934A7F8A
7B0917DDF3255E6FE122D88DBD80252D0C1C8047A13F835E3FCFBFC0AA1D92CD
F1CAB8D1C673EBDC5601B84615F513E4D9FE1F8CBF2337C9FFCDDAC85B6922E0
0BCB0DEF0FA647E6828DED2F5B20F227AF3A792C0C63AD888D7AF39B10171FB1
A24840EDC55158FF3D8513C89F666A2DECB4AA4A1D46503919A4CFD911977DAE
4779F23271C23BDF14F4EF8352D9C66A7C24100C28CAD7BCD89E6E344EEE173F
CF8BD462E1C67F06D73A9085A2AD1EA3DFCD19EB5FE217406771B80C8A3EE798
A4CBFAB9AA93672B8FC9D02014F7076FBB477A777867C6A6AF2E6FFE3CBF3917
1E4F68BCED22EC345F87A92480F4568006BAC16A2DAB940CB9F3462D254614B7
78ECD86F7C3B3A7DAF06DA2D790F353D9254133C38D668C38082D0CC1BDC226B
4A7EBB1460735A5CB04BCA4D71995483CDDC9EA7D3E070C00D5EA6DD4AB539E7
E5C8E436656C99F30B3B464E5BA6CF7025E098C1FDED8B76260ACF62D1A08DB1
F126517B05C47376D20C999565399B06CC686A817B226101AEE3644A706F3767
372117607576BC2B9AD2637DD13C76F9CF2A356F1B9101496868EA8875C94C3B
D181936A02D5387D1C3C285F2DBEEA25457F6A74FF7E00449FA41878776C0DF7
C58FE07009574AE6B457F3BDE448E71CD04AC7E3C22E0CC8AF56B8B5611C4014
3CC20A39A5FA3D9F6A5599495BA0457109823CE71BAC2B7057AF826DC623213E
A6738E640DAECF08E69FE365741CFF8858337131B53A0AF9E49C3655F62E367E
DE824A37A5DA853E1DD5970EC07D3594A59DA1AA85D4FFE3E9E7745FA7FC7F2F
AFD4B9405C7907F383A5149D4DEACA083B457151CDCE3BA5F0C350945E8B92A1
635239241B8FAF7704E3013EE5D21F421254F23194B537C36F8B673E70073189
8B2DE6C30159232A2D054AB8254A450759ACE9C0B94DE035D9D6E5024E8AB56B
644A5C3EF00A5B2EAC0F89C5FE8D7DEB9BC817EF1F87C2BBD956AFE4DD4B50C3
A3BA4931A32827E612DC3059E97069D3894234BAC0E9AA1DB7B7EEE7F97C648E
0B7E7012CA4977258733C72CE466A2EBA8F2B391BDB7652BC07C2343FC8A4B5F
7C6B926D1B751BFFC6FCFDFAB9CBFF6D630CFC8BF374DF4DFB4B0845237E1E0A
E2D044324B4F05C8C96970451C9348E8AA6F1153EAC8BA1C57FFA09B3A181CF1
3EACE89F204BDBA7884FF6F90D1D0CB578DE1CDE56F526AB11F9DEC4FC09642C
A68C8F1DD2EFC7BB301279F474967B1B10DD7FBA6B09B95E7B4D34F66CAAE07B
F792BFE7755882FC790961FAD109A7C35258021DE25BB14410828F9122E01428
D72EDC917C835553A30FBCAE5D067266A205DDD3AF3A4734371426968A7BF7C7
9F48A5D91B596D765E15356F388E74D100B2243D230BFB33147BBCB298320930
000670CB15B7EE9C787EC751621851C3BD5EA6E70FDE66C9834189A9B0D796C4
1FA4179D594B7E8A39987A3DB806F337945A02DDD2B33D43F1E39FD20F41CA25
BA3B5ECD3B32F961F4A98BE40604BF61732690F3C8B247C6E381AED4F277788E
223F8EBECE8CBA7F48801118966E39D4EEEE3F04B254A87EB21C2E4B00F15AE6
F1E2E59DA6353A45BD0A5BF4B822D86E0E7237809C1F0129B83BA2DF82D5D54A
522697FD78DC73D8A75DC6BEE09FC523E5DDEA837BEDD90DEFCF214640DFD4E5
477FD73B86A08885AC44CEE72F0E27AA63A901F2DCC7C42EC261EDD9699A278B
507ABA7BE7101057297C6A3D67C37D61CA4015E7A46C30202617F3585D719309
7DFF48AF4FBDFC7DD9F66E9549B8B800DDFB2D8AD69B3C6D2C3410E982559191
93498926825E6A96A2CB12F8FD15F858AA28E4F9A9D1457D7B9AB16D9B9D4D45
8FD6853853DF5851C529D134CBE17C6B99A8286519535CC1368407909A5B3CF3
C75B4F86A40BD2EAB1918F03D93A283EB119A8F63E346E7502F0CFD12369B2B0
09A2AD610FD210E8CBAEF4C0498B0E53BF4EE1A00B0C067C113F88E5E000E6F4
FACE37B09D72B4242CD320E4F72F5E123E5578ACC48F604124A0A45559E1DCD9
B58D9EE14F3BC6B4452B9236F6A3CAD7FB7E7D5C949DF2875CE44537DBA8B1D4
C7ECEB76F55EA06D56209E0BAC984AD37A459B6C45B4D7F8B84CA66BF274F1D8
02BF247751733715BDCAFBD55854B0F436BCC787F66B44784838F56AA29F83B7
7D46F0D88835E45159413BEDFEC525BDEDE44291003D313CD2268E240C2388DC
37380A430557D988332DF505B16CE488AF68C8F8626B7EA790121D6ACB87D94C
83418919E0CAF58E41A3E036DF13D13C6B107500902A747CD7D7BF12235A766C
00539129C31EA3E738733C4E443698673AAF4E9588AFAFBD00577721011A12BA
D556591A82E2739AC4234917DD7A850C05F595BD87E0F7719D42DCBD9D724C85
520006A9069E1CB2557D2F97D7A0C54AB564DC62759F793D60A4760854AFB05B
AE445CB9131D0C14B6A6ADFE12DB225684D8254EFD295E7542031CCADC4B27E4
F579C84F35DC502F17DAD24C1775F15F505888F0C3E0FD42357ED07FB5076E78
E862016F7E5835CD5BAF87CECAC4BC92375B426E9512928E748E0328947B1844
E251F3A6E99BAA5B97045D1ACA798296D0CCEC2044E59F32075BB7CB7C636BDE
755916CB59C802761A99B211EEB550EF9BC14AADC70818D0053993C9F299B3D5
AB1427B463A4D76459385F036A95770A8157D225FB75B2C92CA39D1AE7411AD7
19AB8DEAABDE9A2F7530B474CC7119E4335AE12A9CE84BA7FA92AD46D6A7AD54
A676EF1B2B0F3A73E6FB24B20F9702ED522DB7BC30DD2212ED63C88128ED1FA3
7B05D70B0BD95BC58F1330343EAD91AED48EB425231D1398AF187A1D7F8EBF75
7A4DD02BDE06BE1592DF2A0F063CB341867EEBE16DEA775264A2241A0A163910
8E9350B3AF1F9B1E9716FE44553E4CAC6BAA8F264F70046B44BCD7AEFD14FB9E
03BD6D4EDD0F0A4EA594116E4FB1CEC55DCE0C9013DAD8E90216B044810A668F
1D6928EDE57A8E65B9F6722F990B9E8FD174DBD1094C5617818C9AA085B3B5A8
7A04282C152610C6DF152CD381573C00E3309342340AFDD4DF9670E52D7342AD
CA5148BAD63AB7EEDDA82BED4ED34928A75B9381A5D08125AB4115BA0D3E5B30
21F45F8A0543C96DBECFBC65634981932FA284C574DB986E0854588F56026D2E
A613A7915E433C7C48B50875E3687849BB1458982DF825049F1DDE53A51ED73C
710827CA098CC0D38BCC757481362149FCE38666C86735DE0E17F14C650A0785
E6C37630AE1F32E2A525DFC79E73D451BB0BBF2F4F35D225204981DC0A45B3AC
6D232CD259333C332D0B8E9A40959CEB8D6A06E1389D82560EA185D49173D7D8
E2A87969A306DD280CE720C49C4D84588F16C047A979E62F0E114EA4C767E0BF
58118DBD6EA276C9AC4437AE94EA56C39C3A2C4E1EBCE7743A1AF9C0CD9A56B3
9E1D3ADCDBB5936867E070739498613079F687527DC7AC7594A964AD9F7C21FA
62944AB0766F94AF8FF33F5D3CC8526F62C500A38597F520CB4C8C066B7339F7
083617DA4B3D462B959B875E27DAA97910BAA4B9435F922440CF08EBC6C91E60
34167E2EA20C07927AC1A7AAF788465103EDA4E45B610EDC8684BD49FF97E68C
A6583FB0032F7842A9A248EC58E14A38529B4CC6F09819A8799F5C9A95A77CA4
A02F36C06FA7B262DA0C5E7EABB1D6DDE0C1F5F32C142E84DFFEB2944A299F1F
DB64464B3787EB7B3196CE52364156AA18E029F0CF2E03069658F2D878048B07
CFE453C807EBF5E184BEFE2BA0040AB51466F6C68CAA005B0DC11C6B71FF816E
7AC65B2C4333A345DB7E89A98A857A382D796FB1D7A58C5A0E12D53AA79B4503
8432B537F6026B3958E214DD3C133E34408DA2E2BCC8B0DFEEC2B050BE2E146E
CBDD164131C764CB52D6BB474157B015E7D79D3AB795167A233414159C1ECA99
7E19FF37644811EB96850F28B2C9EA342E4A79F088796BB35EA296800415CA79
CCA273663789622C0A607A97D999098FE0EEDADF930674E5982791CEE1685BF1
D34EF7B6082E6AA28DCBF3BAE8006B5E98D17D2D0A4E93EF8ED45021538FAE3D
24072D4AB8CB2CB3CF0FFA28E40C7FED36B8A1DA517793279DA5B2DAC64066C7
8A8ABAC0A6AE83297BF13FBC120F0D3397382ECC823F9402496A0562AF895C12
43DEF4019699C7DB2B584BEE0718ADF0C0973CA918B3F8F61C3933D7A67C4191
91E2D086765407A0D6C91537BB979B6A41DAE717CEC2843351AA93C45368E0F7
AAE4A9D1779A74A804804BEF3D78F7C5110F698A6BD460DB63FBF590E8A72119
9843244DEA29681129BE1873F49A0E522D976CF8BF300046628E8E1E2248AF1D
BEE40F81C9640BD957F241B2EE16606BD1B38A7177A8662783C28C9E0BE3C546
6CCAAF4723DE674B88AF610C5F4A5E171683C850C04BC1F7AD97C248D75D2FCC
A3394C246B6BDBCD271B78FA34D77D5385795932E9E921E28AA10C4C755F4E65
45A08B3E586C99F42A8BD71424214A9124E49DA515D1C956D19A6E8AAED4A849
B29FB0B903DB0201700A6526CB12E64BDD220AEF170495FC898FF1321196984F
0975576B870CFE9C52777FFD68483A79D0823CCACAD7EAFD4FFD27180403CA39
F74784BDCD84843142D5B14EE9197C267EE86AFB748A3A6911B9774020C9D1F8
19B4BFB77657A3B140FB93C678C62AF3DE7362326593092000C28582FB1FFBAD
D9352DDE53FFFBA51C1A9900675EC32C8575C30DEA2B8B3BA7C089CC0141576C
1105F9C381D84865715DDE1A2822FE584743740171099C8FBB757044DC5F6DC2
B28A050B5020748BD46B5DFB17D05DAFFDDCD68AF21CDEFA35C81A2DF53723AF
5A53BF8302196A76E2899F4D03058F8B0D9B0F3079788EACECAD6D8DEF13AC80
86E2BA8C9BBA8475A1B798FC9C7DE0ECC4111DBEEE9AFD6CF8AE64268BA3D218
2B87A442449989105E30E287A63E415D5144BFB879F4BBB88CE74E5AF53CCDC7
6D8C3F5504DAE42DD2D882C9AFD1773A41E9FFF5C0F143D44576EA2CFC1344EC
BF3E6BACD3AEA944B7997958AFF234573003BF6D18FD7671A89372E4C0D2DF8C
FF6ED77DC2B7D0D525451D2A86D36E629618765144F74CAC22E3F6D13A0103BF
BBD9A2141AE400B16D525E86E041A6DED96094A63B573697F7031E4905001697
DBC7DBF897090C1FD747C12510BB1806A212DFF4BEE97A9D3206F2163B9314C0
5095052548E2256E274D1277094875EE5AFC72DA73495BAFF9BED436007816B4
AF4D67B31A3F1A321303B89AA4C6128164F916E36636692E2AC7D2E3D3D67683
D604F83AF9CAEA739796E5295D0CFBEF5EE6B218B030E08CAB01C88A5E25458B
B564BE14B80DA4B1B2CA06FBF49BC85E61A9681E5376A6212F03FB82960B8DA2
19D7117F821812782C2632196052C268606700958F17D09D8B325EE385A910E3
6C9038B8DBF027C09323B9DCF53BE6545B7B2C9E3909BE64C02C295056038809
A8D68F77D9E5E2497E8116DD226B7ED84E395E53BA400FBB5F2F5BF08FCFD2E2
FCA7EA6F63883F99046437C40DAE9EEC760D12A3E89CF5426515F6C7847BDA4B
CB70A09A6BD209518E88E4A8761A376A8C02EB51E90837B3BC84AB39E227AB90
397C98813DD60F0803B762E8C47B17973D31148ADD2C1524CC261B7C468FCA4E
111F565130F380F5D1B6C63FD5ECCEBA1E29BB438117FA471667D091B3598989
C9EFC564A1A19FD3C39A0F16FB9B8E939C9443742C1D531D1F40BE5062159944
6F070D0D1B83488691EF21286FD18C77D7F2B99C8E256EEBCDA487EC95ED5A8D
A15379CA09AAF2653047323AE417FFC9376E53CB19129A8753DC770CB86AE063
3B6FDA0418DD9AF46E95C70D6D1044C990BCB17E13CCBC9CC1FD16D62C4719C6
A235E2190117364AA04AE9836D33BFC0E649B6A9AEB35E0C977DE80412586426
CFDA1B62FA4EFF164924C9030D3EE051880B74B5B70F1677F69A3B3907C096A4
92130ECBCF0B211774556B01C43487BF0B999642A44694F88BAE1A4614D9D921
E5F84ACC65B4A2ED4A5A8DB7953B55352E2AC9BAD755951974C9CF1F9F8F37B3
72F5FDA710322C504F9FB00EC9267FCAAEB1E1C3C7FDDCBF54A9513BE7F6F529
F696D2FF838C4E09E5343173087FF036F9D0285BC542DFDBCACDE6D294322EB0
0F3E374E7DB346D8BF38BA2CB078C5A3AA2957EDAE5594C6762B4E2B70EE8093
A7973159824D873FAFE94C70BD80B4A9F64F1863E6C37562E55CCEF7BB0303EE
E3CBD40FD6B286776AA109AC0EE284951E21BFBD207670CC04965E76077A8821
0B7A95371AAB9FC6EFC1401A3EA3414B61F9DB47069F26D62BB0E0E2A4554133
7F851F91D0BA6A52453FBC9A01BF169173BF6F2B1BF2656A4E3401ADCAD86D5B
20F53EBB1AD66ECB68FF4A2077045AF1D7F7DD108A782B8A4B904BA47CB50882
7A3493022E2A6E301FC7700F599784265F75F013F36DB053EBB67B9D376E9E14
3AA2769A455E800B38550B82F14E96BC284CD91141A82A562DE692598E48685E
7115E7803942A355F2DB86E70D7B003A7B31C575A5C45A01E13262B5178E90F9
C655EB666891579D60A4C2210C468018DD9A801858B709460F5A7042575CA36D
C47B55B718EB37BD873603D4132B788F5C9241C63C20ABC903C5243D2B7C2BE3
15423F9B7552894AE7815B55CDE9C4EC01D5B0167E08C3E9BE0416E7EC072720
ADE76855F62571D261EF3A235668
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS9
%!PS-AdobeFont-1.0: CMSS9 003.002
%%Title: CMSS9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS9 known{/CMSS9 findfont dup/UniqueID known{dup
/UniqueID get 5000802 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS9 def
/FontBBox {-63 -250 1027 760 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS9.) readonly def
/FullName (CMSS9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C5165C6545D6DD11
633CB01CF6EE3B37AA823D92F442576C06EA48520F0F737DD7E36EFF1436913D
7B55347D27E02EC93D8F98260A4CA0D41D684DC6D2CCA5746F13A862CA42419F
FC585050BB153883D3924F26A261CB59E945236BF818D1067BEB62B89F25B57A
C81D10844C89A1A648EFABD92B5C8FC1671A9361602E52B9EAEEB8A603C8945A
F8295D0706DA6CF8964B671F90DBB3949ACDDD20530134FBEFE9D1F1C429097B
2A8AF2818951D34F2798A46FE02C69BCE1A2B4C11DF1D8FE0610BD9FD2016D3A
ABFB483773ED4255C1B00B9484918BB10893DB86FABB84B063B0F287AB61C16D
6751C62EF5CDC87DD0A92D85A316BE8C707249B5FDD5B61C1906445E2B04C689
6A8E764A825A75424F14E0CD2BA99AC4746E8E0DF4C4C682F7A0900A2218135D
E5E58CA35D1ACB83255F683AAAEF8092CB082A8CB0D779673F065D7408FDA080
4E12BA4729806B39E930A9FF2280D603F9F2EF1067461193BF703BB5383FFD53
6F67E20F0A88A204DC683CBE272E7E8489AC886630624DC40BE31A47B8AB6484
0014D5A9F629CABF60681786A720D84713972B0D590F2E22A666756EC35876A2
37E893690099F6F9F0449187021D72A7B13E04B6FA937F7C2E840FB766EEC767
5BB4F23E26CBBC216F73770B50F992386A289574CD6F8F4C9B7588BBF8482DC2
3B33E5257C797790810BE889DEFA050B290D6381943A222F1D2560CD26B72FED
A2013E359EBD486CA5034784707060F17E257BDCC5798315E7699EE7EB576FE5
8D35505C808ED586C153AF420529F113ED9A05EF1C7F1F606F62BD2FE1303F82
3F483CB2EFEEA499D3EE8684DF5EC36B4E9035E56D5180211A849FE222D99210
8A3CCB004CC1457C3647FC73F64CBD2B02D692E0E9B7EABCF1A29740EF0DC8A2
CBBEFA563DB9D3BF920E504EEFDD56036217B61D8E08103405A9781A9CA6B9CB
FAF508A835E2D49BC7CE894F9D0B7B8E759660BD7D53492AA89CD26D603458C0
776258F3A478BDC8E4D9C55C92F38C0A336C8FA39D52533A4439945B045CED20
A2D9C64EA02D34FB4CD7B377BE5B4C8C110924DC0F71DC4E0C5ADFBA8D9BADBD
4EE8588E139E55570360D11E05A4B233DD8749DDA75E8D53DB3FB331B156D437
5D2BD10C724ECD919780AF578C696A53765533FD4D2527DD2DAC8FB7A3CA703D
B34003DD72E3D20DA315CE4B62018C685D071E9E866A224B2E72C4C417E62FAB
A678429808F95F98207C4A48621F6431DDCBDA2D137C43D765D02EC4A724C0D6
4DF9E07A9666A85DC95DA2D39DB3F90F69BA2A717796D1C87F5D1A22B7537740
63846E8CCB48F3250885A8D3F83BD9DF1A8C14AAEAA670D438D47420F6DCD38C
8884C761985EF58B8BE65C9FD1703F24BDAA827F7FFA56E5828E1DED1CAA75F9
6E00B8AE3127204BF420593221D6E7C35EDBDF8C1135A326A43CA14CFA2EB30F
A3D2AD65DB0E6E8F1D242F69D4B5B4A1DCC937A129923070CF0BCD8C016BAE0D
9CD293BE8446BD1E4C3627506E78A346E2B20107DB58F0696193A02F4C54603E
CBE96510F306101B5C3F86EB222743244573B84919C8683831F3034112CACDE4
6B9FD23FA96BF3BEBD96198B2F19D0622FCBA58AFE129420C374BF6EBCDDB1A9
99829124589CA5564BD5622BE33A1E3BF0FC7D1E6FB699A3D553D86CF2C3B748
CEC5E58E948537DB684BD8C57B1C5B6BE0BF32C1F958147792DE58A9CBD010B0
6F4FC27A1AB18C78A83926A627A8191DB14152B424A87AB752F8979DBDF02537
B6AEFEE65D271F9E3BFCC90C0B082C3D1F77D2E1AF27C1091ACB90FDADD69B21
7F8925C8232136784E63A90A5226D9C46DEEA7A7AD477BD3CC6BCC772A6A7CE9
DDDE578B6B71C73E60E3B588A76C4276A3B68C9E4FB771530139344ECE15CB77
048108E56E60C55781FF4D9B63E43E606187C430FF2CA43B35373556D060E693
628C9C33327DABF70C169CADDD89392636D1F6636692D1DD600D7DE98F73975A
9C3CF72D5552794EFA5210F3941D39A567352B083533E9CB9FFCB07304F60F05
38BC6E9B96B1381E84C3EDDD5DCEEF9B328B5CAA147BD686063B686856E77A2B
C7E29ABE94452AEB3B68C28DF3417A411DBB6FC328F182C1573CDA9AE2B53A94
2F964CFF55479F3AC5472D794B2AFE97F34FD09E487AEB96A5E643C9AF82F6BF
1FBF5305A7334A8E90DB30C3275FD3058E30C6B8C7B0473CD97D91C8451947B3
763E2998318E0C180AF566A836DCC5E4C22F18BEAAC6CCB9AA98B156B59265DE
661A3049AD676BDACC9E431E0C4C0A3F1C794570436D827D8B4AEE442DF6D9A0
EA4B7BCC5F0CA377A914C1B49B66707F2D37D5AAD8357B831A052B65901CA3AC
2D476E711D708860666413CDF348E496DC8373ADC3BB8B4A15F157D1E3E50A48
9235EE6CF156185E5FB4A8893138E97B4468E54B8E5CBE6E1541DF97558D27DE
902516C70F1298F7C17E5FD19D34F3E38169E1D6DAD860109CB3A116B13EE719
D9A6F56F92DA250D5912EBDBC64AAD62B6727539487816DB2C2CB1502BF67C55
4A22868F50CBA1CB020C2BBA91C327106DCFEF15A41511777B30EF6D9E830D33
5551A85BC5F175E1F1E4E6E7477D347A066A881E1AF8073163CECDA77AF62BC8
FC634137FEF052367138D6893B03CFB5D8BE8DD201C94375A2E2CC9898AFD52F
A98A7B235F743A9E5D3D7DA8779B032D42D30C8B685CF74241935CA8CF4E32D0
0AE9E91C4935D4C8F1D4B04731C6D325BB778A9661A42738DE1E63D85CAAC9EE
4C8F26FBB61365A8D1B3E9E4A2020A7302594E7C992C56E5D21F421254857807
293F58F42B00098741959B71A1F1E7FC98EBF7EF23DFB49096DBA6FC5A4704A2
81F71E86FBF54B08436BA1F55B3B9671F0490350411678A09CEE903A37720311
D10E6823DE99D94ACC54D6FF08BB079C36E667DA778D09574B027BB6FEC2105E
FE6A3DE580C763EEC8FC59FB9D6AB81BD0C64CAD73D9857A10E505ABCD075260
6A9F554864259B158FF14B6D5EB894AF5CB2593A4D443C5E2C5C99834F29C96C
4167148BA7CCE6BFA0A131763994D268CD2BE565DF6DCA3BED6E821C39004EE1
9E40EA741038E7A49B01A302A09F3C3E046A91A782DDBD82DF0474246D41BE12
3F301640DA56FFEE5CF6A605767E3036AADBD0867D0C630432955618784AABE2
A1E731E8B7FE85517C1FE08AC5FBF317144C734A8E4CDF19383CE61C8537AD84
F1D43F1DDE40B704EF8EB3512F2D002AE1EE8474BD0A12107B41A96DA9996F6B
AD780CBAE845CC2F4233B23BDC2C959003F997072F7456BDC5D0546A3191C924
66452283578E5035448686E7DE488E5E217F59A8FA2324F3A35FEC7A8AD8A26D
98A16BDA35F72B91B0F6ABC2400D99A88384AF8B832F91AC003FBDD76005E349
188CB97BD3CF741C01CA3129F113E0F79CD219700C4A3F84CEEE93C0BABACE19
A3501BBF66A5C20E8D2FDBAF482B96CA9678C3C353F65400A21EBF181984A8D8
62C1E3466594C967C45026E1362AF24965A0DABDDC3952FEC1B5C93C733E1617
4692A56563706A8C4EC7510D06C0D4543F5AB4C61B3D976B93AAEBF4897F9070
FB433CC9A67D862616CBB4DBABAA7A8FF4958094A6122360884BE9B9C5E73B6E
9A35415DD62FB25B7F1C188FCF933B6EF4993A4EB946941594655D7309E1E50D
836ACB570698265A59152511AA53EDCFD29D72A8632EBDEFED79F2F8E1D2BBAB
8DBCA5BF77C99CC911398867A0984CC649BA5EBD5323110AC8AD48FD0CD45C89
C5AE9DA169F2BFA676E2A9BDB5BF8A95ED2851E215304B2E4473B68AA7F2A9C2
910D865CE15D189BCA09436BA7570E56E67BBC702344F52E046987068FB853D2
2E45A6F483E27416C97EB8D72491D01C0955E10CA5C70359B8F90CAF67768B5E
61AB2612A5EBAC73029597E0AB924AEEE0240ECCA73949AB3722E8BEB2A16361
8497722FF6382C6978891680B6861DBCEF320E8DE457F4704A62ED2943DE2382
7E2BA30649030D92B3CEF2DE55AF4770FE275E57034C9D9D7112A1A0F8F2DDC3
6F391D18A15F6E0693B9DC7CA095C3209CCE0D13697CC084CE310BF499701BEC
1E1C13010A34C6FBCD44AC3BAC9FE70A2C065A1B5243E26755033E2DB0255D68
2431942FB598A96611B77A877F230B06AB3E28DC01A585DB605AC6C3044EF2D9
DCA7CECA07CBB4FA4718E57F26B520291C46A9A8AA8D3BB7394111096D932741
495A858901BD8674A21208E163160F727F122D4BC5632D2B30C9EF10AB2F4A42
72E9E62AC44CD0CCB50B25E30EC2B90D9A46CB8CC749EDA7A5F5A1C1734AC556
3DB253D56657EAC24097E94045A4BC969BD5ADFB577F5A5005F742CD2615DA9F
6E5F65A02FA47A8A36CBBFAF2442C01B42EF9950D02E05EC3CA855569FB13389
90ECF476259754C8BDE5B1E7816C64288352EAEDD488ACB3D0219C14C457F665
C5947F08EC99F8DFD2DEBA6E6972D4125E2EBF88AEF6DF06C5996E48D52DCA99
365E2040D066081368AB6D0D2429C2FCBBCF6FE387A01B7BF00C66E6D21FF951
EDA6893B597C4B2278C8B4EFBA21B34DCF3D866A7536BD9874FBFE52E77339B5
28B291E1D519938578FFBF2B9FCF7948449BA8EC6E99714BA5CEF7E6BEABEF7D
B5D4475631CE1C48A51D7EAE0F048C6118882586B04DAEBF9C7D319ADF3CEC6D
FF712845E670BEC0DE8D506183CD8A9D26435247C1CDF5FC50A8C6EE8DD2ED26
27EA1B6EFDB91C272C5CB7444F11D655E6D745BF3A9DB8CA1B3441C142F1507C
0CA0CB1C2CE663FB337E7DDCED1F42C76119CA71E372B57818CEDE3D151C91BE
E09644B62EB1064630EBE55F55F99B68C746D3D053B6F4CD8D96E3D6C4092ED1
A9C1D3B79C611520BF8C1163528E3E446E72762A625C1C3FF4B7391D6031EBCE
FD5B5C4B08C0A3124FBC40DB6908828CCFDECF732182B953913EB2B12134F1BB
2843FB7FA3EB1945FEF24587799BDE5C6FF70FB819C49B42A3FC2B18AB885A91
2ADCD162D466095C7439BAC2733937729D26209ACC1264DE0F3EF0AFF7F5069E
74B80B63D79F6FBF2FE45DCD7C69B7EE9CCAB68F0BD33DA003F11EB930861A56
A5188E014E40B9F8D4026C7B1888A966D1B229C037C1DC3D5D575D62D4A885E1
9DA31DF09746BB0FDE16EFAC1A801B110852EF0EEFE8E5B592366A05544D46EA
8B0F2D661DDC5B400A37DFF7848E75E9EAB21BD4A65241B72EEB2E59B0A96924
D633132043F78A3B53E348E34681382BE6BA2F91615563FD3C01F33C37F75792
0BCE0D9AECDF7478E1920355F207F039B7CCB5B8300693E1433DE4511D10D8F1
CA0776F16F3DEAB2B501B702A52A7B428E584DF52222F0AAF87CD854422E2099
BAE68FEE0D7C5CF7E98748862699A80B721273F3C62BF79CCC1A162F056FFA4C
32E7E588AC0A41B5579E799FF6616583C368DC0088DEC148036B41B30AC6D7D2
F0F299DC247A23A22E0BAED4C0CDE249D3785A1FED11292D09DC9474E7461531
F015D902341361EFA48B3E3B467D06937BB604CBFC1EE38C9F6935026ECF3DA3
9F13CB250618CD5AC65CA27C30B7924DE91138AAC8BD82859696DC7F5A91BD5F
851D954C8FA91DD27611532070464DF076DED556A3546C08C5F8459407A667C6
499E8B616A72D295FB1C390DAC790EE4FEFDF9B896440B1E137CBB99967897E5
1C9D327E5E5497DB6ADD53A27C34CAAD56DBDAAA095A74467227777094D0341D
4DCED59A5B00BA39CA41EAD203FB02143EBD9D0DF7844F20C0D82477B39218F7
B04926DD29415B50892EB3A39F8C89D2CD0399DE3BB46D8386BC7D94FC0A8C3D
C26618B0FA59E3D37CB50A89C9D9BF211EAE4D2C10082D8AAA8FB3FF63D7B066
107BD3135521EE8A81DFB2C9DDB74772994414D00CC15D933E0B6BBCA75EE095
EC676ACC85BE5189EA312B5EBC6127BF225AA9CC77004DE668139276DEEC76D4
C2C0C036B504DD0F24D968FE18E2F6ACFF15D4966BFFF45D22DF3013A7B88382
1C627E439603EA4A13B176CAE39192489CBAF53A53E726A584D0A1C0864E32E2
8C0E6A93BBA2A17119301AA7F819AEB987821914ED04B7C18B6611D4B2255292
0C55279D75A15A6531F56D2DF3FA26CD795C9F39F000BE8BE5064F5F57F57167
50621D833DA20AC483DE71ED28B1D258A7F18381CFDBB3D2C3D6F8142CB50870
8BC52CACE65295C5CF87E242C83E3967DE730C1CFC11FDCAF71826620E4D8983
621FFE03D497B51EE2DB2CB803666619A32D417BCB8A95964E9BBD0C6D444BC8
C1FB896901ABF6E6EFF1C1F3573C36520EF22D159C66F150049B64F008B06150
75350FEF34634EF2FACEEBA06182D06CC5683874117179913942ABB12FF3F371
BF6FF699E5A1476752AFF326B068F8B6129CBB1571A0C8C3D5F95336D6DA1496
7D34B965420BAAEBAB6978043D37588E9183CB12DB4C45852F56B21C8BE60EEB
D3D9082BC2990BDDA7E64763F1763BD63EE91F59E81E22D1AD5D9914EB8C876D
B851CC304A5DD190A21220802F815EEE957803C06B822C9518649C5DB417B103
0CF11737BB3CB1E73E38D2626FDABE3246B40D1DF0EF74BE428CE04EDD6410CA
38D760A23FEF9B8018191F92562D5AF172B3D6945AACE4F7E54F588CEB27CF5C
7F934CB1FEA1FF69D758ABCC1B316D1C432858CD8A2111A96799DFDF62F63F87
0D259021FDA53AE71FCE676578F27D1F0D90C0C51CFAFDA3BC017F504CB17D9A
D52ED77876B204AC36B7EA59CDF9C5C401BDFF97FC2A3A942ADADE2C969341B9
2216FE4C4E501EEAB32131F64BA99002BE4869B50FCF99BDE45C1091DAABB160
3AE7F32CE9FE116A1DDBF7BFED23F8F6FA29F1411F1366D5A11EAB224EFE2425
8D3D30124A9150D9BCC9A8008ECBA81E69F230EBA9206584F5E02E245C65C9CE
88C0936B2FF8918C970CEEFAC6208B48ED3E85B7A70E9ED3043725A1D96A949D
50C6B68E16C3496D5D32A9B2249087AE16101825C43CD992108A3C833EC6498B
FBBFC294E223A312B81020125942528F13F3B8CA23455DCA7D15A7D69F72BD94
60AB07097FC343C97BCA64C0B51B7FCE961A249AA0E882CE620DA64BBAA3317B
36CD2D983D2D9B9B928CFAEE346D92E922FA44B8E430EDFED946E408994747CD
63A0BA185784741890CF07EF9DE2E7255EF360948D16590CC44144CD4B5C9C7F
621CF194373879A0991C84EC2E6FD6321A158104E3BC2DE6DFE1AEF1A96F3D32
12E74B14DB1A6A96F81C47A049FE9BB5E89631F30E848D1AFE47D1D887C09EC8
0D2C2139EDF5B678C9F63CD57D169A0DF52CBCB3117627A075A39FC431128570
2C987DDEAE3945E9958A2C2E933FEE805DA7E2CC4085CA382CB2C9AD1C06F639
E12BD609B9E3484ED50F708C8D7E94441BDD49137A001C18CB2F644E9E7AB94D
5C03C56EA770A9DCB8B8D958CCA0EFFDE199BD4AD7957B1029301D2273AA4BE8
F2804EA60A603EDA3C4FCC3BDE1BF95EDACAC458CCDCFD7AA052BF8DD79CFF86
E57B0B07912D33CD236087BACAA8202D431703C9B96FCBA8308E19E19C1A99C5
738E554DAB1CD1F342E1EB86825002D131730148E2EB5564FE42D2E1AB86E7AF
3A0B8D60EA289A878B9F22F2EAB7B9A5642D142A3C3CF0FCCE0E75753C1D8373
F824AE7A60BA3B1B9C0456C3767D8768DEE153BF971E35DE1AEAA165AF023B67
37631A91A680833A0C7FFD06721A0A3200699F7CFEFEF365EF4A554986C30DCA
B51168EAFE470BC26A8A5234A8AC19BFD6F214B7AF4FC2F56904C2043540A061
BD737CFF6C1483C4521C7D72EFF375CC4D0754FBD4107B9AAA0D8751B368F37D
921C607FE783F964B97281BDDA295FCD800AF8519089FAC8B621DC8E5C53856A
E9D9B9E250F4A30874CD92D769B15E302C8A680BA9C84989F3B547B392A85543
9E5974AD510E58CAA7D129FF8677431AC93D48CAD0B37A97AE2A42C528746987
FDF9A416A1E91E55798E9C5B6606697DD635BCF737FFCABB230B1B705FA2A924
9B8BF10AEC03A8DEEECFD5AFC7CA19A606BDB418DF4BBAD41801AFC9D60A6552
A4EDD8FEBA4460BB41424BC7E4890B610256C44639FEA9CE2B788AF74855394D
3A68BFCB14EC8CA74F80D9B8AFDA53DF07FEBB9CDD49892965D8B2080CCC8F2E
EE9B3A7BD88572B54F0EB66FCB1D5AE59CE26B95CB5F420FE2B85ED37F0B1294

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFTT0900
%!FontType1-1.0: SFTT0900 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt0900, tctt0900, latt0900, lbtt0900, lctt0900, rxtt0900.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT0900 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-210 -359 1376 844}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1ED6A435B5950D136AD73C6971F428B426C43
EF6BA04718C56B3F4BBCDCB96EA318696C5D8219438F35CDE7EB43EA820F8071
ED3A1711AF5838D3BCFF9EBE45C1D0233E470FBE967365465526E1B356B5FA9B
EE60989352F1A6BA7384F7882FFB0FB2572BC58896CF6D5CC0FCCE614E95AF5B
661862F6A9EAE5501CFB34B95B833FC180273FD88D23FB68AD872E49FA25F76B
C922A11DB6F8C1C06897034CCCF52DF7199EC7D17771C8E640088AE27CF1454E
34B0DECFFADCACE80C197443563ABE34BC422AF9C65141D6A215839C521CDA04
DE75B43810A7E57954F25FB8514CF3F1A0996031F3CD9DC9D37A8BF28C7295AF
A8094842C0528401E61EAB53E4EEDF7820C74B5576C30A61A98D3657F7D40FBF
ECA60C44B6EACA558451A23F10AB2350E40216C1B074C0CEF3BB61505E9D3AFA
D0E54D16A6462AA90DB9EAD539D8CA243399DF4B1F0120D28B7133DB7D9E1FB6
3B9308A0B937FFE2140DF6725E4FA9F123A262F25401F4124B7B21B96144EA5B
B7804086A958A37F1AF271B4E42385864622093CD5982AB635B1D953DD5FCBEC
F9094062C3BE52EE0A67D1F14DC6447B613F66EABD8F648FA9EF53F7B4BEA58F
3D31E45BDC5B055072F09BEA14526CB74EAAC483E72C05CC9755B8BF267E9B67
B2251E029F1CFE2A74DCF00AA8D9C8D7F4D8AEF125AE50EDCCACF1BA212939E9
07A808C83BF4167A7530AACDF072F66CF3EE577AAB4EF84C8BF8B0A1D35D40B4
DE04B420BA107CAFAC0A94FB45C84B9029AE513F8C0EC1AD996BD83954023F61
9F993111F6B34C7AB6772535522D820F8285AD7373BA639DEA53F660C4DD4AD0
36E62BCF6C7A7289B899392B991C32ADC1F14912149084296142BF3CDAA3020E
575105FD19CA47291E67300F6EDE1663C0F306A0A88B3CC7F3A8931FA282852A
AB7D3CEC3E74898361D0311EF430CC2E112E3A6B3ACC40C5D4429B30DB5386C3
AB66AC84F396942EC4FFA5407A2832636ACD0C54BFEDD9E89D8EBBF50E741533
6F8B9304DCD695D4D556B02A8CF2CCE8B00C49BD671F40968182BE7D417309A4
7CE52AD6A5A62211F09695CEA60F260C0178B31B5529626241291093543FD2AD
11E3F4C56AE31FB70FC69E604233A25D5FEE21D873BF0BEC6A3E528E3F6CD6A7
FD8CB837ADA8DBC87E46809AE8E7CDA19CC33A31A525D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSX0900
%!FontType1-1.0: SFSX0900 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsx0900, tcsx0900, lasx0900, lbsx0900, lcsx0900, rxsx0900.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFSX0900 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-227 -338 1804 918}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B52D7EBFB48C5E039DD9BF5F65F8331
54B14B110E89972542A441C3F8FDFBA70D816C6BFF55AEEB0900B5AD22F73913
913DB03DFA1FF979B2F14A65FB9932AEB6EA6686C87980AACBA18845640658FE
59506DCA421E2804D0C2E6DF7E306BD8EAD8FC03F1081D2F7A7BB0EC3426FABF
61BD252A621BA1D5140885CADA5AE35E455C00E266D0824B65A795F758599EDB
409075974B02C48326345462F205B1CACD8FDC4B1D33FE496B99894E4421C4BC
C7E72523C00F41D86F9336304AA32119E98E0FB5A7D3DD108817CB54CA3FAC58
599BB897265BEF389773BA624C087F16AAB204260A53FB55DBEC1947522FB4EB
4D419EAE89DD4ACAC22D7A38C9492E0A657AC8809E175947F3ADB489F461121A
FF71CCFAFEEE6917614D2F931AF2BABB659D33C877F46939B6D84DAFD3ABB43C
45E3AFFB8F7788C6A1E6A908BDF3BB1B0A1D0D639CDF410BBE0B7F5BD3A1E4DA
BC123A09C99194FC4E16AC5E94ECBCAD9BC9847F8979C1ECA15AB4E6212D31AA
ECC60F32EFEDC15E91214047B316E60E919A1DF7C91A68D918DC84FE0F23610C
EF2D2424CB094C779B0636D6C8042C6DD071D03025A36F354D1CF29495655B3A
4D211618416C084CCE2A0CCC89BA9F92325D0C29B0CCC3463AF5BBFE24A5FA68
6C0BD917F7B8F78E1BEC91A97ABCE81E5C053DFFC67FCF13E3440AB73B42CA3C
E5FFE2322734D259DE281363B7DF2877C43CCD9942E6CE97E7D73CA1A507FC6A
EDB7951FF1F22DEF4C819398303C8701718A5760A04E017584C735F4E168E65C
EC8F039776AEF549FBA91D3983CDBA107F21F809CAEFC9FAD823479B1537F075
7DA5B22688404DF019F15175E6B614E7E8D90EDACEC0ECA5F4B1FC8DA0FDEFD0
9B9A6A98351094B5DC60AE14245ABAA2635F363BE5D35EEB4C69CE0D8D416AD0
FF1295394F4E28ACF7B03E2A8BA5EA2291547C4ADA22C0A8365ADEB440266A3E
CAF618D06546071A6D85EBCA5F44252B5C8AF363241D613C60875173ED3AD972
2275AC0B9A061F77129317A9408FA4D85B59FDB1AA03A9B5A93FF989115A0DBD
F30E56A5A69D99A0BBBFE3913E82452B592A08795C6E4A7F42405883CB0F18A3
BAEAC5D919143E8D648BF4907880134F6DDD8DAEC17C84EE43E34976DC33831D
413F68758CC19E81DAB955BB114FDF5F6888F822B765F110B015A5AE3E482FC5
A3EBFE671CA6DF05AE9AB7BD5BA6DF2F7EC8BFE19DE14E4AD592DA5A0E419838
B90928C6CD24E16D4B8C9E619156AA7825745E7D0C9177E52F6E9D309CC5C0E5
213C40872CF5A637FE2AA29AAA0E3A664DF9D89B715BB5BFA725A9917FD9DBDA
DEAA583D4F4CAD9445EF65D5D26F3C5557E4A0DAFEDCEB76672336CCE4069B1F
CA4F3635D55EE80B4A55611E04D9E5E28D504A6A673286816C7E2AA1707D3760
F039463AE8B4BA45C37A5E9239F450F94734583A1F0B038E4612C777124B81A2
269252F2640EC8D94D1BA7D1860345F16D978CFA7215188A8AF8BB2E6B5748C0
D34F14BB3C764288C408BE781DA16CD6316B1E8E9E981FF7E1B6A4E8CAE557ED
6632CC8306FA46FEF459314B406AD33743D34EFD499E4B7E6726BFFEE86744AF
31257052834C6FCD4B6F4420492F25CD6E1B7EB3C65D9BDA57B5CB7A6FB37D10
3EBFBF63344998E91AC9C177168F047E5937C83A9EA7C866F22045C6C6577EA6
EB40DD208506F2106101F5F27108D85BAA9BAE5AC0A254B859F1BC15A3580225
CE05322D8F5F513EF6415438E6F3D1E6E16D7CF715E41D18E51E16EA251C49EB
E850F956724239EA5AE88B7C73FAF13FF8DBE96981A468351E6CEDF444F45E4D
2B73DCA0A62D6D741B717175BB4D23F82F2E98D9F0B27AB78DCFEF4D55BC9D1A
36F537DCE5745418FF4EEE931CFB0A9DE45A2887C6F50BE00D29E9CC2EEC2487
B222638D9B5F0E2186E272DB781E5E437C21B9863BDE25B2E470769CB56BFF43
5FC20DB159F332DB422FB63E9A5F665DC05656716CA0EE1933384D556A03BA85
152BE016B3B8F14EF700A4683B9CBE917B07879FAC4D8DA0AFA6B585F3A9FE36
60ADAB6E2B7D05493DDB9D184247E6C405F5A7D956CBC6C5A5418D2B15788980
52C66F35C8FA8245CCEF39996D7AEE5FCC7E3EB2410E1735B3E157BD4709C3FC
1A13D0A465B9B507729B7D3B3CC1AFCDF3D293B63A01E6F90336EAB37B98B8D1
4FB1BC782D601B263FECD3EA1B5A6C6EF7F4529CE74CD87EE94A287C947E67DB
A703F937CDE8AA255D3EDA7ACB7EB397CB27884A3D597F3697B03A944C47E008
1BDF2921B4ADEEBEA1E478EBF5015DA904398E9026618F8303BFB755C8D5CDD1
37AC789B859CB3D3ED5CBD8B9CB8484AE4B0000E4E650385FB0397942EF158C0
B8D8CA312C847892F04FD3753587DB2DF74A9998050E503B19BA44C1F374A32C
4DD015CBB2DF624721816549DEDF781D4A968DFF297996C6637C885632132FBD
3B8F4596C256872DCF54C317438AC76DBDA29CFB6276FA464BE0B269A23E831B
FC86329534C5FB8C4CE6705CF14B4944F27A9E706965E71016AFE4CD49A71C70
404A79F998FACA6B856E8156DD12BBA280B8E74276E636C8145266F6BB667061
5D85935B8A2F065EEDD89F309FDBEE7B1B231FD51A1A293F59097005B997BE41
94776A5EC193EAC0DEEA16F65CC4582CC32D6DD74272FF09B0A0F7DD711C2169
9DE1FD7B19849EF3C2A7AF7B51DD2BF0B2A58DE5FDCAC27E3A463C748DD45948
133D3ABDBCC46C0DE782281BBE8AF5BF97F7627F5AE6E3A6FEA87C4685601485
496323631BF2BB54874F6206780CCDF81040EF0C04098B8EC04303657821DA8D
D7383A2930D08ECB7AA8A606D7E0721D9B238358438C69528D598C4ECC7D2F2B
08D6A4F3B357651436DAAD0331C628021C6F1C8D77327D880C97D7F863E2B69C
E5B2AA2E66029C4FB1A2AB32B7BB3775A6B718B3D5859FBE06922B232B0AC83B
FAFABFDD2401078154CA01C31989FD377E9546CA13A7578DF52933A72224F925
F3A8DCC080AEC232A74046CE139FA107EA9167B61EEED88558597895115C884A
71235FF03FFFE508295390AED32AAC9FD853767FE8A25C464C121D84A767C3F2
FDDCB49F839861AFC04A4473C1618DF34060043017B3ED91091979F5D3AAC7BC
4C4095C0B0A118F40A964FF5CE400B5E3DAF9CE29F5C56207133F2124AB5FE10
BF35D04A6E6C72519022732B758BF2934AA97CEBFCFAEC0A7568FCDBCE87D830
B53A27A4D686B8861527D71899B1A0EDA1387100AB891AA9F608A67602063030
AF12D1ECD718BE4E606081A106519BF3B15F8E5B5F42C1C211203ED6EB5A3357
167E9186331B3BF1298338F4E761FC7F18E2C8D0C213C56239E0EC3FB31CB7B4
79C4B9296D07B7877B352D5C29DDEFAFC5893F5A852D7621680EC064191CD6CA
8C29A27B8841126471D2BF79EDC5512B75228E7011B0B08FDC8293967738F6DF
0AF50B62E4E4539F507C35B2DE05725B80D85B0F740A5273C1659DB86DF10F16
C46736B3D0F2C4A75370005EE7C57E4C4C6F050BFCF9BAAB997726F84F220D02
7382ADB29308107E3B151C584529C26ED6D63BCBFF1CE76B4B0965171181529A
7FCA0A820AE847681812E3B051033A5F6C1D44D7A44409CE5DEB8FF37E88F4D9
F91E7CFB5D2C397F9349E3AD8C23653B5FA9E6022C7C01FBB26859B0E65791F0
5206F73B91A2ED426944B879E23DDA5BE9F5385BFF7C1FA58CE568964C974F08
D82119ABFD5A2DC80C0424FDECDB17E15F2ADFBD353B5D223DCDA69ABA635AFB
AB5970EFE1EA6A530543C55C8693B835B72F954F7DEFC2E2C12731EA9E30FAA2
B3B5DF5C4E688B2E3CF2BDD4F50B589B05CA7C0B29FD66F86C637590B1B02BCD
1F6E49A1AD47FDF4BFB63646393A215DC017928672AF8E79A5DD44166B817C58
903C14BF6D64E9C259A96E39379F95AA1F0D6E8E16878F50F7F16ACB66423A04
35189F31DEA82E2D45D45FD3BA591D38117F6D671D61C836F31EDEEA26E65A9F
0B2A969EF886B2ABAE9C4E28C5C1CE5C7824C90A26342FDB0DD55434CC91C4E0
CE6903348CF7B4F906A88362C060598ADE93FAF8487F909BEE2C332184637C6F
D0B95C4D78922CB04E2521E4F9E3D89D6DB57A00FC0B930DCF4897D8FB134A21
534AC7F9F8895D6518ED6736B0E319F1E98BBDF6D05FA0EE86EF5D8E3BD7F1D0
D679917A7FD6D5F0B587742A716083BF5D808D320712CE072220360EEB4FD6D5
1A4B3291F21F25033FA5C7BDCF99E5C68A9EBBABB3D619B10A649B42CB63A3EE
E8A4A1D30E8B43279979464D6EEE29D1C95ACC05C55B6413AFDA70ABE3BF2D66
FA7EAD71625AFA29921EB9564795031C2883E274A3C1207D5DA207906FB3925E
74AD9764A9705ADBF51F3DFAC0F3BF34AE2B430F5E544640681AEA50C4A70369
B0CC233DCEC2AED884DC7088B6E37D5A00E27093AA1B41B4C10010D295904D2C
0F6DDD22C12A50C31564BBE1B4C581A77254EC232D476FA1085CDD0D66BC78DB
58179E6EE548A507D73158928E265C9FA4CEAEC1AA90BBCB572FB2C042A412CD
417BCBCDF7A3B2C1D801A8EA2A6F546025251CAF79928FC5A0DE3557923F75AB
5E706E5EB5DC3CA48998CD6AFBCB532920513461CCA12AACAF675C93440CEDF1
17E571FB0750BF0AE177F80E8303D12FEAB7D1BEE3678468BD242BD53F50E208
174A038228603C991F8CA46665FEF3AE88E3A4D078136D61A9BD3A22E3395F65
6AD995121C250F9B6C1E27716A95FEB3E236FF802E255845CE5281554509BE57
D97B173218FC9C4DF5EC040F37FE0BDEFB52A6A181E1010CFF41E45F6073E15D
7D0D12CAF0BE60326D821BEFA38DFED273DD6C9A899394FF19037D8A673AA442
E2C5A3719C0EB7BEF2A39BB166C4CD50983CF38957776005239632C4C41BC1DF
F133D0DCE6966A446A8E4E9D35609CA323FA1232A96C7417468813F3C80D58B9
9A15CD4056FC610A54A0915340F2DB41C31FC2ABAEDBBEBD23DB383FF3A155AC
5E6F068CF20755C155BC13E4D466B67B5FF354B99536DB48A20BCF8594E66ED3
7EB6FB4E5E6E11F7FEAA11DF13C16593C6FA8AE384E2E27B58A932B525A5AC13
4FDE9E4C9685E975670A1B562554322A9E0E720837B785241C98F9EA8AA19205
441FFBFC4704E4C7DB807BBF0B8B5736427531B2C7789EFFC553ECFABB761FCC
78A2102C26D2E3DC0DD2F3FF5C4D6106AD9E23B7FD37FF7B9EF95468CD1EC3F2
2C020E5938625AD353D4DA1FCD9013BE7513F75E8D83DAE9C5436C392137548D
A79B11EA1310768FC3E362C5F6D78F7F3A39CC025F9847900918832730A55806
7D2FC35509CF7566A0F166BD693295286B0C5DBD96A8252B63FA9CB7FE20C6A6
C652186D61E926DBF1E507F6D8F511C83745164220E3FECE441EE35F2477EB0D
D6E60C5A52EF7A2AA39440902D0983B4EA885CD9DF1211028A6EBFB7046AD72E
AF402688366F92ADDAB1A44F198FE674525D8BBBD61B2BB33D71E2837D65C7FB
93E43A7914297DB82A1C7F8F0C71C8B6FFEEE628574E0CA9436FD812BC59AD5D
B15A73B6C77622DB1BC66DBC4B0C5D1044680F62F7D9BF246114F4032A084D02
50E3B9ED16596CAABB2CB8CA3E598CA4CECF19F51A76E58BDAA87993D2CDE423
F467F65492F7550C8187AC6FAD645CE653621D456FB1E0686A2C291D3E054934
D4F86BC6F76EACD8C4E9231CE4E511C95D4B6295FF3F454E745574255A02CD28
BA9E87A797598D8184AA8E08CA293E07BC5711AF753A393C704AA03DE8B811E0
81D3B0B0BBD819EFB6FF7D706B3F9638D7F632F92F872169BD353CA13A2C739C
B4AD2DC01679D8FB189AF64C6B0E32CD73CFDA3F825A8C956EC1C755DD462149
36AA3E2E33939F289D75599192A77146805768F0570F59266719A2877427B653
A4D9DA37C70EB1B00C5F181DD386D0EBC91D6B2CE57FDAB9365F7366138D08DF
04E86B1797B6F81CB076D4861E83F0F2D17E524C96C5CBF2A8053108EEA895F3
DF12115CD3DAB1FC6FD1C795EE6B7C39A46DF013FFC7ECB706F5F7963748164D
A118180FAD9B0193A8A00951818F48E683560D2DEFAC36AC8CD449BB6245B857
2E9CE88FECF91C9907A396DBBEF785AF8D9080EFA36D9B8E17B8ECF398DF335F
66E7F073AA00125F7ED680C722C70477DF10EC1F059AC6DC2B4EB1AE2D1DA724
6F68C306ABE14707522539CB573167B82B1A9CCC6587F9A75AABE30CF047D8FA
2CAA269D7D3D73DE3FA69F433044CDE2689ECBDF01ED106305D53DBF6BFCACEC
F7634F4FC1AFBAA48EE80A27876CAA9A3CF37414B4D9521A19117A0F584C0B7B
D6D0648443478AB13A3E53D1F363D1A435297F0243F6A200FA9D0FEB17D39B3F
94AB2CF8E045325977460EA23FCBD04C170571B85C41E6A7A9BB7E8B5AD928F0
08CF465699CA1D5EF527BF0D0E1BFDCF3E29B93E916E5AD8A519FA207A01863D
4DB9B4705287FABFF1D557E8339F14916D8DDA03ED27882F01C8AEEB1A846128
28DED34F88479514FB01D9A8B9D88B03341F4D587A626E6A620331C5B7284570
E3532C2BFC64EE4CD74AE9E73F9BA34FA2BC017BC0B32A2435B21351C8BF7281
2C5E1F1B68A3A5272115EEEFD011E29C5DE4988C85E461210548B0DBA514BEB2
688C2ADC65F610B00B534192B38C6F6674B9D510E96F6FBBC63A7441D42801A8
0A2EC6A7ADFFAE61F254E9356FA910B501DBDEBBFD0FFE6E87144F70BE28A18F
A8766D132335B2A4940D4037B8125C38793F83BDEB9E061A26DA0247C9FB6C67
DE6BC1D19C5D19F43DD81BFFF224FF752A97B1D097F7A4252F04FD9774116C99
FC93077DEAA3A6443DA5B830E93BBF431A5615CBA9B33189CED6D603E8942FB1
04B117A41F7643D7504665DE7B0555964D0D808F21D66B705C9E57DFC14760B6
02535D1A87F85C43A03596E15ABA3DA7C883B8E7606DEDABAD4C111A01616F21
DA48981BB0F88B5143F3F87740C01DCC3A870D125837CA2BD99732F5AB8111BA
12D6ED54BBA43B136C2342D1B901D961880B44F59080BF793662E9B4AF996320
83D35FA687DF7DC3B76EEE57A16EFB1AB9BE4F26227E2CFE033772439AEC1527
B9070A0181DB95FDFE11D1801055802BF2042E8835311074EAE9ED878D078DF6
C3D41953D73B192BF64B04088C5EFCDE407823B12E0FFE8E1D5959490FD9016E
46F0D3E5D466E8226C7EC9B0B2C42BBE5952721D6C07A83A5EF321A8281A2A33
1FD69894F4742BD8EFB6A8D5CDABA0F78067D1309141FD3835B952C090B360E4
3610FC37823DFA6B6F5ADFFD90CF72ACB1484FBC1CA049BFA0F166A34B9CBD18
4F0E5C23806B7DE6046C3F84AAC35B02D4035E51371E4AC52045950461448F3D
A9EB1A47F2AB39A2C6B1A939E1FB405D3B523314368C4447A22C4946A167EDDF
D66AD97E73F91C3DC87129F7FB3B9F9825FDA489C63C45C0CC72D9122E41A4F1
6555D9F30AD6E402433ED368D42B0270398288706F7D9513F1BBF8A7B2CEA043
C4142FACF80F1249C3D953D33B678B1EA76EE4C1E67E7198B66C9857B8186CFD
5AB42C5C2D1ACBF7AA88E0740F8195CC861EC9999731E298C36F2D71D4F4AFF8
425F3DE9CF16CAF6AD6988F4912AD08CC15C1B030C799E2A6195092D169AFB83
A41C45907666BD82B10C3EFD73CB4F5491C011CB759D7F1EE63F8E8D9DA97B55
11FDBE6AFCE33B61C45F16A0507BA401006CCFEBD0E31C31C1FDD1D014DD0A7B
38EE62296357FB695BA66EE5256C9FAA7A79C2F4209D4106BE7082023F6B53E7
6007F6F08731634F36F4886CAB1BB06220DD9E53F92CEEE279D6346D174557C1
FF3545CB42066F2C8957F1B96C1FAF6D70C0C20680E64C3EF29948A09CD2E067
AC65BC00514DF19A62E23446FC1D1BC1B3F46FB2A1B27CF25A80C4C8B98AEF07
C3547D6D62AE15A692EBC69CABCDD80CAC42BA8394E797A5585C55198A667893
98F9C0C0817E5180EEA1722D77FF400C7B6B2B82E0D180777B8E3825F5CE6D50
AFE899909BE984C6E3E239F98B59A938C2A6485282663671C428A8C099CC764D
E0045F25241A84835C1CB5E3BB4BB0A4C81748D36246B324935D13DB39D57761
76204AFF41F0CFB565EA5A71E2048548074BDC4EB26DF0C39227C85D99135F7D
C66858D3738EA8247059FB775299BFAE57D76B4780C64CE32F9D003680604A25
E7C54450D5622A67C4F4EF741507AE3AD1E179B5FA7475BC144DA6FC6F654DB9
D15B3E64876B327A49AAB861E1659480F12F1DA6AFACC63A0C38E38CCA9635E2
9332EEE4E3948315AF02693C47AAEB16593D02CBCE416CA1482250018126962E
14DA379A035A33AEFCB5F468223E890E542C964A30F7E73F7F0B938357D4DC05
2610EEBAB6D334ECD79A47DB76AD12743DCF53204ED9DCE3E7E23FB72C269204
1C4FF5D6B6AA15DA799A6033B4D1E3A2543F9794634D8960E221269D5D560CB3
BCDCC053DF36900F24C43B8E7D0AEB4E770E9DED1AB39C56A9CFE98CB28540C2
86265666F059FE0E460EA75B223F0431F9D8AC61F328BC0523C51DA7F632D9FE
BED96C69A06007D982E4C108E2DED6C96B3458E2210EA1EAAF36E3026AC1D2E0
4AE492C9609E21115B51A1BEE550809569A75472B021791A5346DFB61814190C
DEE6AC380DBCB7C2B6B0B8E516E0569782272BC40443608FD6F73A5B46F48537
EE470B65E2393A3EACD52109B4D0063A2FB3D8C0D40401820FC5A914353F9B50
E4E2BF9FB0EBF59B3B0D75F7809F3C7776B3357DFA42B60DA8882817F68EEA18
E6E2C01DAE5B2CE953823012F0BDDDA4E87A9C6374C38F3C55A5DF090549142F
E8D1300CB6830C10B9FBA427A226E5404B71839F988E3F0A6C3BC1222154D0C6
5B70E06CE96AB8C0E3331F077EF71245D6A1C17D3FDCDE3C782B9359AFB5A96A
0BE5BA264829CBBD22331A6063BA0E864A73FA19856345A9C173B97065AA3F4A
C00B0383F67832F8939A26FC10D8E09B6D34DD377C4DF0B029523EBB45D02A4A
F6F20A2E7578F783FE3E4B35DCA6B0415D03C4A8B5653C985EDFFA7828DE1774
718AD1FD1859110612CAC388A0C2FB7838704DCD37822B66FD58535F8DF45FA3
CFACE5F6A072F168B075148D4C3ED2C2AD48760A5F757937A08C217375B95EC1
4D2704809440D2631E0F71EF0386A643B9036DFFF37070A78B1D530706B3533D
CA6D51ECDF74B5F5716D80F59C271A0299984D58B3E361D47EAFBF102C227A65
0181E23BC9C4DB26CD9BB1048F884DDA573133B8CC1AC59BC7A8438B81BCD9C1
CCD5B823CD6A404D6FBA9C089855E764C4E473A9C71796A6D0055625EEAEC315
0BC98DEBC4C4EBD6F75803D72302B8F94264318FC0572F13A5A4169093817387
E1008E89241DEF32245349BCCE336236447471F3CD34554B7A51DDC506001A53
3D0CCB166490D6C8B22B497F5084A69443484AC18A3E2DBF09CA2BA555E5826F
CF7A259C5132533233A4B6C81B3DFD7E6D70A68F67D0958F7B6763D281D68BD9
323A740B21C572D7B128095B9CBBDA9449749ECAD88307A980645FBD42F195F7
5853C7E0744B501200A6A00B19EED864F1B747B3DD7BED1C5FFFCBB8C6FE4041
206F8F2DA9F42B5A2186DFBE9E8F8C025D7C70D0C2AEAD277DE63AC5BACF55AB
37EC2FAABD1A1CD1A307847003FD3E3D1982209E9DB258DCA99050B1E62C1B9E
AEA382D8EBA66BA455145FCDC66816BC8B6939ACF17034C748E65B9F466E3941
757E98B199BD156464C42010D379912B8F4BC49D67DD7EA54C5BDBCD7D4C41EA
1754A222802E54162EED974347396ABB3B6076EF2450FDBF741863A5FCDC34B2
42128B907F82CA9CA946E84E8391865A3ED60E4BFCCD31EC2AB0D7FAF7914074
662EC34D3A39B68646389A89C4155F34879C7A380E36AE45F2E5F10F3AC45F63
D1854592B5D812332F4650FA123C4813ED03225C62E41C5A37A6B1AAAA261A7E
9E44B47132B7791FBE0619AAA5D187E73F791D92180A51DF8017BA63096272B3
0D4982435AB6AB79A280EB9980C16445149F2A1B8CA53F3FB0DBC80FD2A854E4
ED473FEBC4F181CB893F2B6B2C5D6E4B3281145BE61D1F75CF6FB0857BFC16F3
0531FFC2D3463B82033CB6603682EA6997F2AB23F0AA866D2969FCD26A142C85
824A38C3760AD42D773505029507DFA77E597DC8355A010405CD72D836D90159
28243B9E13FE68AEE2F5C10C120FCF6DE3C486E0235B061F7B4B1CBF8F3D9EA2
370EEDE4F471DA6BF0B52E647555DC25A61F6ACFD1E222CDFE7FD1FD37996C6D
2C43CC82355D942A7CCAB32DC10AEC6FD65F147A03A68F6059B64A27F6EBA00E
BA508C96EF1007E502B073EBD44FB08AFB198940F7DF8AC6A6DA34EC67A258CE
ABC579ADD874C294EC522138816EB455639AB72C02137BC35CF4152C2972E268
9525BD879F684820D9BC779C8F875ECDC7645516FDB1EBA5F18AB2B39A00DE9E
F2C0573B375CF758937E7D0760DDA666A65CA0D6EE1B33BBF7515D11BEBBF41A
A58E5A3DB1A794168CD21B522C294DE76165174F2A9C64B22F4466F84CA8C140
E7085A248C48DD46D9E3EFF1B1A21958FDE0508F604DE275E7981C6BFDBD4F48
248312F74CC65298CA2D81A942C37E17855F3ECAFDC1ED9915A591AA3CD97B84
5A056AC7FC91FDBF0E876A37F59EFE38DD71FD550EA3F638B6DB8A95ED91541B
45715A9E3FE39167F836909824421ED6047FFCEA46826034D47C94F21491FC19
1896A0F0F12752ACDEDB217369EFA3348F9E2973D7F74084E8328724D6A0F20E
2676CAC461FD91F2F3B948EAAE22DD8340656D93D618D869D50A7CEF4FCCE3CF
A69EBD674FA7533149D4B8BFB71D48A40F623E2050CF509C9821AB43254E2F2B
858DBC35ADD9A09418FEEFF513AE93EDBF5C1D21A728BDD2FB603429274901B4
FDEBAB1AF06F3AA19E84C107EDF439FA2662EE346F698186DF6558A2EA6946EB
445638BABD2ECB23102B682023D8AE26A37B440D0A65A6C56CC5D185F48A8B21
4567392AECBD0B990D4A94887DC1FC9315CCAA6A92DA04E548E2DAABD9BCE6C4
B57A3DF9D2442F9AECF3DDC1ECA9B83CE390794C41EA1754A222802E54162EED
97447EC9F1FB7EE5411C8E41C38A43EEAC6048A79DE76952236B772C473D69B1
6ABD7E4D5FEEDCF3DB602F93F2AD9F14E00604EA03132F9555EBDAD6FD9C3964
A0320DA6B8962EBDFB7855280348DFB19002589DFAE6B1514E724C54D5051D76
1F3A68D361EB443ACD0649F67156972835AE1547CF3FCB3A779E2891949BF461
81AE32B386AB3787C9DCA591B99CFC312D3E34443C43EFD019FD2E7E33B61EF3
4C70CC8808D23DBB18715AF6BB55EBC9629405F03C9D4A63D976949A4DA510F5
0982F535515222237E7B6657CEE524C8F9D76636A7317EBA27511B4CF0FF6FB2
8BCAD9F72CD90698E5C75D7DAEC7FF5C32FCF5F5EE9648134F344D719E1D3195
F2A05B2839BC0CA280C45F9861902FD93DBD3F0073B3713F0BA12FDFFB63E0F9
026E2C714323EEEB0C930A43CF37F45591DFC3BA8513D783D4BA20263CEC2B29
DA7693BF3A83F8013E430C636119506F3AB94FDAA26B69120F0F77C47FA7B028
BDC59E5BF9E79618F78C6BCF67649BB8A610C6792459C05175064F85857E56E0
7441710DB5622919CFF8042921654FF33BE61CA7707EDED071FE92BB0A068F0A
CA36910F6C2E9DFC0045FC41C228EA9EAAD051713194ECF42FA5581EC92F9551
E24A024EA37936B9F7EB033018092E74A2D00963D2FBCC4E399E3BBB19433882
9290DF2B7694F0AA3E385D1EC21D1F9D7182B34610E4CE877C4DE85FAFD0906B
8A60CA440C48B5F23DD02B83352A92D6180192D4DD60FA9FCAE24E521A61D6A0
273F9193899E9C8C0D176490212365604372518B54DBB86D2867D234230FD4D3
FE4C3290601E39672291AA1C6D7030C370B51C17E4F637DB89C4892DD310965D
3F3A00A3687200EC82524C575AFDABB364DFB521FD1534C79CA7D4E739C9818D
6DD30C92CA794AFAC3AEC4AE780BBE824682F67BF746E85C1DD6455E7B9B9EEB
E0F4D1CEB599C47DE9C9258D7D358460EC9951BB0D319DE62226FC632F8B8541
5B03C51A5E027D58C187468D0C057834545294455AE610339A30E9D1DA899D2D
ACA4147BB87D81B3CA5B558C2CC3B31FD6C6BE66ACD20C960395395CDA08831A
4A0C22DD61FA45C9D6AD9C4DE8EEAB729ABCC19030A1329D807AD24DAAC81D82
ACDE4D2F5E4D6D0578D958AC590D680C5E9C6C90E2E087BD3B657417B1B0BB31
66E27AE1CB774D85B9A23B087DBB192976164199C76150E9AC0D78CF9DD52DB0
D2C9E86FD17747BBE797030A3FAA5ECA86A3BEBF3DD93C45261B370FBC9BFB0C
4F03A47E29FB0F648CAB61AB535883FC887EF5576EDAEB54BD966446052A40AE
DEE2FAD548E3AEE8B60EA6D4BEFF9A3B8AB09D71704FB871BC46F2CB0C0A4ABC
2B46C072933060E9CAE54FF8EDD61ED6DAC34342591548E9CF01B27631D27026
3E5C6F0FF8510BAFA7FF189A7B7ED52C0F838F5ED80556704EE82559C1B51A3E
8A0CE8DE1F408884FE98C1383EDD3DFD66BFEA8164EB837F213701705929B129
66B9A57F05DF767CAA1AF01DFD8ABEE45F9833AE840838D84349481FD63B6921
51705326FD64AC6443BAB2441659F3B636DFD5C15E95E85446CC93169AA043DC
9DC3A1966F7E2AE45D2C9863D25FA6C32DD4739F3321A7FBC9BDCCA77310F991
81551CF0D1D325AD5E9C03BC9388ABF345AA5422721E3AD19BE24C1F8C3544E0
C4724D95B3F43EC47978E4A3CF248DC5653C772D06D80F724BC3B2B4E0B4C4C3
268E819CDD399D83998C02E35D9E88694DADE5A4270E576D84C6ADE12A8F4218
B4A46BF85716558079225EA73C98BCCC4A0E79294A55CFB8F0E10624C23FB00F
52D03EFA876CCA56FA55F2F55F456C04F4493168B136FA3E1FC9EE13BB62935F
E25FB98512F623FCEC960B719C2782BB516950B732914D25ECBE37E0E37118C5
C266FE80B44B3F03E5A4745D1E0010118D30CE474D0E647468EF85D0B3DCFDE6
91BC897249DAF91D18D83AF7BC148498F04F23FBC07F1C70005D3A54F04B4D34
4F2B8EDE68B14106414120CB0A82FC6D739D3BBC75D286DC24405824B936281E
11C47E51E1E4C927BC30058472CAF5760191AF5997397772D38E95DEF66B69FE
6A83CEA33128D8DF344ECE244EC3509E7B2A8ADC462AA8FA3A04A8FD81DE5D25
8A6A29EFDF588852F1808C45B1222DEA596B555980832FDDEBA8A244EBF44338
FB5EA3EFC6B3579C8FEE1DBFD47F7CE629716E0A09091B6BBDE8B927C96CED4B
ABD4574456EB2118A7C04EB2B195D9AA5B945130FEF539D23D8D3415FF25D97C
55A7F4ABE208F744A8C5BF58C7A5B25E25CAF6A586928D3AA58A2C0944530CED
9C723349880DB427F855381D284754B4DFC046CE18C3988C8BE67C3C94D3E1CA
82599F6526A618AC33E5DCBD080456E579D180B5D058875BC82555D9FF1D7136
9FF755905EC9C0E3B25AA9EAB377DF383379A7B2263538A4055219689B22D3B8
EBB904BB928CB1E6701BDD4746ACD37D7AD7E5A98A1B998037565D2EDC1E8482
0428A9D307CF356EDF82647EC28AA2479964AB6A0B37B61CB5FD95EB9A73D03F
F3863EC8FEE76891B6C4DB377240FBCD72AFA257B92EF40580FFC7D49BEF5656
F35E902FD0BB89B5E469FDBC4831ED96B42460A2C761DCC7554B61DEA090CC07
C79CA174D8A84F5D696D871D7C735170E119AB99C50CA17B7D076C6009475F81
CDC0B425FFEA7A4A1C1C52D3D7433EF36C4D4F86008D9328EA498CCEBB896AC0
54E9AA4E01EBCA618F023B03A4E504180EB98040FFFA2F1BF6D16323ACEE55F1
FA62CF9AC0CDB36FB360978B090F1E73124B3F8196C3AEE34C6B12A850C0B880
86C8B2BDB0B3CE84FCEEF843EF3D67703D38F1C1190AF61B7096DCFE3A1B4411
106895AA84AC2CFF3C2D7ADEC7378ED7125F7C45671FB5B4F0460A695B5E7DD3
71B5F750F19F31A6EA21B519A3A640960B74701EA0311EF73D27215F9A15E90E
8853B4E83842417FB91C66ECA1AC489ABBD7AB4C8E56B08EFBA820D03FFBBB2B
728459FF7EE65D583AB5B329346A5FDAB88EA9F71BD2C5B15B89EFC6E5F571A5
40E455A32386036775E6D9FA948BE41E7CE74C54FA4DE9E4F6F5435799D3F208
79DF110D146B9DB4AE330BFF9360D93A26BD00C127698753BCCF9D7EC9683B21
90989A831F19C843255405F7423523088C72AF4B9FF339D08E7201A7E498C72B
59FC8B724D77DC9DEF006362003FFC561F3F3C91C1AC68C60600F44679F38060
29031BB14D7743D972591D4704C62901112C2196C827C610872624740C65F699
9FA3227269364CCA16643E70487AC9E5C4ACF086042D102C3BE5C3B3621E12BD
6A4EC1DA2ED68FC894A1527C8FF145B4474E27AE9DA486678B60C24B7833C4EF
4F74CC7F0592283E57C49887C1D62EA8BB412019B9BFAAC5D56F0C7274518150
8FBDF289A18D943BA437DCC64F9446C35625BAE3D2DF5C20801CEE5AA846EB86
60B6CAFD6043CDE343509AC18AEF6FD2B82E5949644DD758A9F294DA4BB30A97
96DFC3EE7CEF25D3CC1D6A8325B0878B29F707E619CD5852593C997CF959E004
69F192A288CDFFFADC2932DDBB65530229694A84795BBE0A085BD8F72C24AD78
257B8244155F5D401D84A92D716C8D84E82DCECC967C95F2196A710D8C1016BB
7ED124C0672AE7E8BFC08F891193FED983CAAA9DC7A08708A3D6B6DCD83140F5
7CCA586970E048F92986F512B6164470A4EBA259E9C0242E77F9848F8977356C
F02B469CE9F2C4C82CE70C1765101AA5126A6472EF9222912123D72E780E299D
4F6066128D5CE30D05991852D4DA8028A6C3732771684619EC8E2D95998E840E
F62BE076CF888FD3CA450A46961FCEBB3B3646F828B6ED342AF400984DABACAA
4D944565FCF14F92DDDDF27B0F00D431CCD4C616D1553E6D9851611B1DACAA91
1CE05E832DB6EE7224E66D6241D713E467DCD30806980497115BF7D1094C5617
8195C9F43FECB1AE1DFAF08BAF8DB57AA51739A6CB9BCDA06406E41256013931
4E0E1C793D306AAFB5B33324FA64E5F80F5808E9189DC00CA98D9F0AE1873CB9
50DED8E8F716420F672BB0C3CF07EC85B33AEC147B3C57272F918565B490D899
25D13990FFCDB07850881D09D51DABC24D733D65CAC4A7A359E5CD0E4AA20472
D4B4971A8C06E45AC2647E0AFCAA1030503742C21D38F2EA585A2B9842D37EA9
FB1F568D8508C412D1709B72BFE0A556AB6FA71D6747595CCD064AAA8F386AEF
3A87A3AF742352FEFADB83DB682DDF569DD717F518B8906C40383C9D965F986D
564B052B0CCE2200BF059FC37FDDAAC00502CA9C94DF682FAE64D2EFAC8D2CC0
E35DB5D584BB6986C40DE1FDE76C4A7E71F1E9506E9B93D99B3C45D305C63C25
AD84C2F3F13DB76AA5CE13CFFF18705295AA7037E4B89514C3E1A90B40B2337B
D16D60038218955C54B0A0B1EE05531834BFA8B62AA11636351CFA99DB19267C
E6484AF6EEC99BC139A498F35C5E2EEE45A9F3FEF6B8BB2B4DA4B2C0F747F2EB
76CA2268CFE94C0F761CF5D7B571D85E101B158DB7B747DB4AF5BD9089EDD9D9
E9C4C2F81B812A11DD5578A442E8DB7B16895F005D0FBA343D16CB4F2FD6DAA5
47F7EDFBA5C3EC49D94E6CE7E065C0FB8DD572B72C8295EF6E789537EB5DEEF9
0E9D14C02FFC9C138C55F58EE212109E6266022F0BF90C53BC22695E06FD1D78
A23AE303663C5075978196223BB8128A164A0080790EA91FB71660AABF17EC2A
000DB8BEE7FB9B958CA4056CF63C5DF50C0FA85DBCCC38090EB4A33A4BBBB1AD
73C524FD8584D71035D2F5C5ECAC8E55DAC8203A8B019ACF3E18A8BA532BD69A
AA75EAA55ECF3E31C1B2412A4D1634035FA6C7B7628B421A3386BCDF80AB5898
BC2950BF5ECE883C93AD7F4AC9D34DCF5C41C774F76D2D287032798CB5A7E6E9
9FEF1AB1D3E191F8E845D8BA250670E5CF73B0780533FD8782832D7946D67A12
AA8660868049AFD568E9CB26DFACE554AA63C61DC847519246DEEA4634F086ED
6593632B5ABCF9F440CDD19B1C56761D99504182F03FBB1B774C30D4E268A56B
0158B0EF8738F65C347E47EBAC920ECD3FAB2C3F50192D2E01AEBF584CC69454
6D483D807126DEB7E0C94CAF9E01ECB565ED13BCEB2BA021BC0F0ACD46A068C6
D974B0B7EC4B1474B07041A32A2CD4E56E8AFB6B21B364A0BCA57DE8B90414D8
0A936F0C9A053B23A0D909A764837C4A9602F164C96A0A0B1E2840248DE27195
11F6240E77C71602C0F777E462C8929FFC1FEA0D518D99CFFBEA5C549DEBD1A3
3C04ACFDA11C29E0F9A0BF651E7E8E6251748D3A5C566C6851C3ADBCC2080B1E
C5F49AF2051EBD9D4D81E6C476A6425F257F4A154E2B04059A663656D1F3A2A2
3B4FD3B127700DFE740073DA8AC9017EA92B1E130FCCE5F790619D45E0BA34DC
8B7C43DF46169951A878D3ACA83C459E44397D91B75D7569ECED521C863DD8F9
1F4149195C4C0FA45C5EB8C4C98690473D5BA7706F7A6DDDFC73B49906D8D725
726D201916D583BCDE2D21E2C2BED78F7E461F63CEE3357E6B66F8B04DB5CFFD
368C3C49590DD6AF7B1B9CB25F5F8AA0D989C21B50442E1D185BC7B7EB89B0BE
25E3C964093CAC02EF741669117308DB418E6BE0638A37D3DEBAFAF68DAAEA19
A2D965A7833FB499D29E2B3B259C581BA64842BA7ABB7969E8860F3E420E1770
DD151E01EA0F5E2E15E27A974693FADD40E8FE2C0B3F56D1A90DB787E8F12507
F7B8971FDC4E6E63BF5F34BAF939BD5A4E8EBF98755417A2C2365E56E5ECF304
3AC351B7BE69D2B6F60779BB39F9628ABA30E92F44F9913CBEFDDBD1FA9327E1
1F4488D13D4217AD82C65D7CBC04145EF3E344A7A20CB27D67C5807A44F4A67B
58B154AF854339C59370DA9C9AEECDF5DF3B533ED76DA24FEC64AA1A5B3C7360
3DF2EE4C8F1E100E06330D8AE19B6AE237DCEFB94C0024CE2B31A24FF1964DD1
4DB1A24A33EA97791801084A3246BAFCD57B2B7CB90DCF68649F094CCF0F75E8
935FD4DC5072F75B401344B63212DFF11182E789B4E8307A9B4830F4995FC33D
5D6E29CA10C579B3C9A36EFA989959B0038A308187A23BDE2441D92F6F4304E4
FC1A7D06D5972B5A889745BD75C013C063605F5B24AE8BC05A628D9756BE4513
1FA55A8396EFEC282EFD71FEB03DFA072C05EFE42BBB16B64D80BEE5ADBD2A6C
AA32C910EF599E7195F5FA1F92473B6351AF83C810EE322303F2F23DC4101EF0
8F815DA9FC81DB308E78F05DBF2E606151B37DB086DE5EBD43D5F8211C96377B
1E183E53D96F591B548B049CCD0F29E0E2209EA0A42CF06C204732B5003F5D1A
646A2C585C3ADDC812E011AC9D14E753A162C498604B29286261F305D2C995E0
1EA4D05B22F4DC34F799807C4EF44D186BDDCC6138DFE5726FD5FB18EFEDF3CB
B8FBFB7D2ED5C2B03AA915CE26FCE2419E228481673FC9687A5AF695D44D846F
3526B5BCF13EDAE5705A3DE32D75A6F8C76929BF569868CF84784F095CC3FB17
BFC2DB8AF0E5CF8EECD1239A550A850DBF632156B71515982DF9732F313FAEA8
D93845CD2AA8A1CBCDD0767D3BA08D495F874C2CC4D846DAE64D930544558677
39963C97BC8435ED0119A05824317109EBC9CBE6FDB0F9B92B62F1651ADACF3C
04EE145CD2C4652DC518141E6BF04656D75E43BCD4F4EF315C84854A1EB6374E
A0A59479138F0A4EC6C6AE763CA422D3E5DF9BA2E1760F73F58522EC6FD339BA
61320E07FFB1B5B1FCC94F9921E06B4A2EDE1F28CE44FC7042A9F6C69595485C
E83DD7A51ECD542959F98DA33394EFCAD3A6D831D4928B0BE4AA2722A2768A6A
32D8509F3B91C03C092BB584AF6CB40AFA2E54560FD81B3871D49922CD7C270A
13F0B82B98CA9FBC749CE5C835CFADCD363C8A29A53C6F2C46F5E2E73B3A0286
B45B18D71DABD43C47E9E1A3BD7E207A3A407D9D83EDF89D009DA911BF46B81C
B362B87BB87E9552402C310CB9A654CAFCE39B301A78FCE233A82D9B0FD48E75
FAEA5DB0ED85C3971BD1FE386A17B664F3437AC57469BC42FC201FE269C13D01
F1EA911595464747883CBB183FEF6B0C79BA37B7B500DAD1B6BCE260A08980D2
00AA156BE4C2E1A8EFD9A5DDCB6281B49763FB4D55442C55FED27EB5DC8F7DC8
7CDD444E63CA51ADEB90A95DE5C9F334426B3D1A66B36350F6405A643AFA5FA5
4A1BD6846CD700986321FD677FFC7ECB78A2F6903C4A0B21D656D38440DE4290
FC54BB19612C2F101E222983B1C6280D69DD7A6C6B173FE29E1866A5C19C8279
B1B71728E12C225CC2F05F1A2EA3FBCCA69B9E1C90975F74DB209152E9AB28F5
0A22FD753F63F8659F56F07EFD27F6D4652F874078A37FAC420C7F7414FA22C8
FE583A087E9FB56A541927DA48B774821303E35BA0ECAA9D264092B31F0AE942
A62844220A3F9572E2A90BF14431333619D38D067C7369BD25DE0BB4DCAE743C
F430C217896BA7187757D085229CD7C37E90C0EEE9B02FE9038BC8621836C082
349125E742D3EC21A464E65B1A3374FD4E5749808C81858EE388F39005291772
6393188178D802C348D37C26899FD2187BC906EBA656B8E91DBD0424ED4D682D
6B2E5E44766F9E1C52BA70AEF080929BC7064D39ED413CE3435597D29E126914
572F7F77A71914FEA907A2FD1D1076FB2C42C86CEA1DBD6B4FC8D52E0212CEF6
C326E198C82E2A9F4A90421EEB20715A0647DB52992DE617DE4DA0915A9153BC
784C4DF00F8A3AF8A96329A257909217A2CAC6C73E1BB4ADA65A01B5E80711E1
D5442E711A6C1EB0741C67B0A071A3C53893AFFBAE8BCDAF2AE53000DBB00A24
2B021CC5B7C0EF4F31E3C78A0AAF784FCCA0DEE7EDB63358DDD7FF85285CFE4D
EA8AE9042701C5D21607C137AA64ABBF57BBCDAADE06B13BD0178A924D5FD86A
6DB1B258812E7D0817220FB50C7ADAB8965EF38DA3FD01F9794DC890BABD08F0
29E68717FB6D09383D81DD3904D85C32AF4018D635DD7DD5A068F6A42402BA39
67B10B0CCD4D0DAEA1A9E5EB376EA8FBD382CE9E7C4BD058D01827B7DE2E0371
680A2C71EEBF9EEBF707B0AF3303959A339F11AC22ACE46B4ED7307BA9331F83
788C4551F0DAEA24C808D242C04CD7051F02476B11213DC74828CFB165BA9FC1
7A9DFABD5B1657FD6F3A111FFD863FFB0840D678C9B9BCED2C48785635F22263
1BF2BB54874F6206780CCDF8104E10FD7A8F697A832BC2B4EBB6EB1C817BBAEB
82A4A3A27B8DDC60166CD8F39F442BDF53C3B614F75CD751A3768B7158110E3D
106D83C5F19BCD68839750E4F49F2E536C2F877F25CE5150CE64CE5E60197663
36E62CC603BDAC26BE128ED06B45C669C5EC403331A7DA10A8E6DF74732E3574
C7969784706D826BEF469DAC32CDCCAF2BF9D3B95755410363BF09E1B97A0B6E
3F9B32C83267C0E4EA30CCC66990D1AF888FF0D78EAB67EF74436A9878FEDF22
C881E7A48C246A0802E4A468E908E7C91A9243E565F3BF81EA68606C35C97B16
54A105DD84A54DD0385F354AE3472C488F18629CA7FDB4E72EDA18914A51FA4F
21287FAEA2FB22ADDC2F49417A2496773BC80B8A216503032AD8BB9DAC4FF621
D1268D14CBAB5564C89DE944C25FE62B4542E31CE8702B9F902524C4BC96A185
5C4BE7A87FFEE2BE932510FE68DE87995EB5D32D6602D34EACF9377BE8BD5D23
81424FECE39A2859FAE9333A6C139E32A3C82E65B3914685C8AD1BB0D1345780
7BFA0B9639F5385807CF1B6EA201CB89840D2BC04158A06B1D9822CE586EAD14
38FBF0BD10A19AC58009C107EC24E410DAA89F9D6EE680AC8A36B7BE5236373E
FB505346F0D5E3DBABF0B1AC7BE543E18D96DA7D361BF47CEC18C057F353D506
79C639F308E018AB315219C625D787C530D9546201953AE7D54E243972DB165B
BD4FFBCD0CFBC0D6BB31A7218E3FE38DC2E21C2C7EBEB6A6D4E7C9DDE0FE9F76
7DAF1100F5B4FBCD902C53053C296F2A6F8FCB4C69B80B9C6D1A29705AC41943
B7FBAC53BE474AC51FBF19F93F61B943827F24A7387548E5BD50E3EC120210CA
195FA340674AB560ED0E258DE2ACB8E3A590657B607631CAAB9AD5C6995D1971
CD1643A230FF01F731DDC573AF3EE82DDC0BC62712E0EE232B1F2D551B141D9C
CFC489CCBFCAEBC2E2C12731EA9E30FAA2B3B5DF5C4787B5D68ACB9C59A17689
88AB4BB2CEC3D161CE822B026F99EAAE55AFFF21A6D13DE315F2B238CDD35FF4
05301400D471BB00CD3DCAB913F1E0FC9EDD73CF405215F6A4DA5A652F6DB5FA
DA0C6E56FE7518EC1912C2677C0621DDB1EA6ED1891A2DB20B0C8085656047C6
4975875527129BAC144B55EBB2CE7FC66C90D862E37F25C54A336717062DF607
338F0E2E2FBB0524FE084222262641CE36CA9CD00616B52F78245AB388220325
68334FC6366EC4C081AF2E0955E1D3C7D3B7932900990A1F03633FD3F9453F98
FF1495A8B05C2ED4A5F7BD5CAFA9135CC196950FD00768412E1E81CA1433691B
46FD11AA50123384DE6ED387C051B641383D1E6377D3813CFB0A8845ADB02479
586AD4366A7FCD3978C3F38938DDB124C54B17CA4177064B21344530011A6C99
8BFFA39145743096FFF505FD7B0A8DBD28331C7D53A843660BDDA5049220B1E8
37EBE0CD98602BE9D95DC6E1CAAE7447071FB87E6B14F7CF503D8DDF5DC95328
76F34DED1DE9CBF812D3F52B48D51824FFA141A0168B74005BF2911E61F5B9FC
548E3309889DFA4E2CCF9361593AF867488099609475F605FD9690C2AFC60724
11596807F95839ECD72FE53D80C30B3C0A29CA8773758D8D9C2872A401DB454B
C6E3B9222F21CFC855C83EC59C447C35DFD94B6095FEB3E236FF802E255845CE
52815C233CC45837F1704338154E478FF7256CE25C66B6C7DC555EC34CE8862F
D9ECA512F08FD31857FA517F990F0E0662DA183B41614EEBF513AE93EDBF5C1D
21A728BDD2FB6C870FD9C5C6BA8358972E8167DEA1649F59487C1E4609E99B07
11D94D7EDB931969D8420630F37517879D3909306F969288B1C3D69DFC5A8153
006042E52532B2ACB83E63A0777BCE15E722B95F322DB5BFDE965C7887DBB8CE
D1204462682E89D7C9A8DD9085571E57B2A33BFE7C3239DA92FB22F192D873D9
6BC0509571EB2F465BE4EB59F3F56584A725FB013F65382B549EA4606DE4260B
B42F60071A4F9F9DD7B96D56DFE0D78349A24CE164A67B93CB69ECC1C3F5056B
DA9F78DDA079162D372C160F48A5822CE377673B2E54E828F95CF1D5CF047F27
E958AFEE85765235DCF9BEFB1040AD6CCE4299CE5BF0DC7BD390505C2E3429CF
3BB1B746FF7A6D1B069DC2595C8E1A9E9062ECCE310D8739098E8C768AAEBC7B
C580E41E72B21E9AD75BF232396F976ACF8DB24571C466AF1652B9F3E5D1863B
6C651B99165C8DDEF2548E8B3794AD57A7150C01559F6EB6B3CF229CFA4053A2
DAEC61D79DBED8E55AADAE6CDCCF4A14E33E0FCB8CB7B0CB38B77BBF87BA5492
ED93421A4AE8700845C5EFF77DCD4C2D7BC16C2ADC5117F025EE75EF233DFDC1
BD031CF34E3FCA07EFE58034363F4C5628138C1B8256CE65253EAA542CC2D5F3
E33CEB1E9B93726E9A90A703353A540FEE6AE54F73A811C217D4349511F04F81
A4AB3FCB2CB9E91C59E9A1F0E850F5F297CDEE34607E8A6BD1AC40266BF611A5
968AE062D06F7FFD27F6D4652F874078A37FAC420C7018D3F1F3C78FF7AC4DA6
2989DB373F4DB2B95B6128DA858D558BC52779A8EF9AFDCB5E7EEF9D4B5AD624
1D50BF2E8505934C988BA89086347F56E1901533695655EE42BF41D5D2FE6F89
11CC1809E9BC2F0A068C7915027706594EB37388CE24284BCF2CBBAFB9020CC0
42DA8D1EAA673D5D3418D0B1BA5B76DA16B1218A62496EAB5581BB6D3D2A40D9
D4899F348052C533497388FBA3BBCD0BA7F76ADE85C10F5B7F42080BA9C52B9A
601B6FEDAEC3BDFF6CD5B57F9804D526E1E63D635A3FFEA2626A80F5317A8B11
8849D795F2F7F18E568AB4F3575157972226FFAC83136F1C61880F943AD1837A
0F86107FDAE3110651BB74D209EFA1FF6165865ABE1A8D5B7092D3688126A701
134C15FED5B83078AC06B95BA4EC267F1300BD2F30E9099B233A2FFCA87F72B4
0F0570A5A03E382FC293D4927E098BCDDD43F93B3CA52668265ED52674CC143E
594D733EF7F59979E4A39C8E3E49FC5EE0883138F89321BB6823F6C47631664F
AE5AA18C55909C8163D6EDCC5E94F5C8CF20BF45301FB7F60ED95FA678A21FC9
AD09547F9CB108CB1AE64C215206DF2115ECA62BBFD7961720F23FF5258180B7
7C08F7B10D5F1199B19FF2DA9977CB1FEC3DFD690724F4302DEC6AA592DE474B
2D1EBD5EDA9A3C5BFAB7F67896C8536F3176578F52EDB6DA550B9834605ECD6A
6866ADBDC73B1324ED90084ECE2831CFC0619054C9FED37D83BC59C6856B1455
1CE77C28094824E0E6AE4A4F093B58775AD234DA9E7EDD2C0D5C96ECB7A561B8
D1BFA29CC0BAE36BDC4E7C8C3B2DD882E0786F0A787B2C3C9CAFDC78C5C885AB
EC5884D3FD12981CC33C7EBCC9FF646B17A66668470F1FB14E11E9DEAD67B978
7ED9BD9C3F840EA46E9FA9BB65742A9F6C89378ABF2DE5276673E7BA91CC9B5E
12CC1FEA9B9276881F31B06BC9CA1918B5C0D939478BCF37C371A2C32CE3F3C8
17B4045059C898F343EF703ED371F68006CD4D4CBCE9F92543749C117902A6D0
FC6AA159BA5A9EAA05814CFF965E90B79FD9923D6A81BA91B5E04ED6340E86FA
A579B84B4A56F5EFBFA712CD09ABBFA9643E1EFBEF0CD46FC33CB7829A5BE068
ACF2E7864281F1565035A54D82DA370801C1CD3306E6F16110416D8ED4297105
24082963EF3AC3F8C371F151A3E265B18E3415708BA2391B1829ABD9B8EC3A36
C1FE79F418B3C92AE0848BFD2D89B7847DECF89E6A3132B0CB351CFDF7DCF418
38470CD2A0C0255B173BD84C4EFA77114F7115C1380A33996666FEA4ABB59487
E6AB35C4CB26FBB79A8A5771491F77C7554E7C9B1834F1FFBB22FD33116A3220
78873813AC6F2F8D1C1B17461AFD945A34BAB5AFAFE18BE857D54C0F27913BC5
661032D413972D96565C0761C5B1D1458764D3A1F3EFB2A2EE203B3F0340EFE9
C1425CCD05DA216197A50323650C30B23F3A8EC49F4EC94C963893090F09F5D1
C86894CB4758B72EDA49D3E198B78F1D40FE4942203D1AFF6B19307C0B7D0058
3C0895ED4167A9597D1097E706FD6CC306F2CF4378C200ABDF4AA91EAE2F25F9
C79CD092B9E8529F7A23837EF0683FD03F1AAAFD19D0D7762FF7EC8B8C3ED2D3
35F634C8142AEA37BE8531CDC6CA1F439EC2F8D60E1D9F1757EE9B77890F712D
95688DFED7A44FE301F7AEBDFE4BE7463E924B61370C1663EFC7F47DF45B85FA
714D61EB9C493BE8210E653659049DF81EF756388EE8BB789709761C1C3F1B8C
175FC209E9603F1A0E2FD309E6D33EC52B91823E2B01414E68C2D229EDFA1634
23006101EDC2788E9EFD79D6EDFE78404FDBC8E96BCC2F5FA3FDAFE23CFBB670
70FAE12D280FF30DCBE9E751E70B9CF7D5097CCA24220C60CBD8C9421885C20E
73D282E94D864EF3C3EFFA34EF95209CFBEA34714688390184962FACAA4232A7
A174084FE664B4FB3C73B75D9F6F649C60171965FA603B4AA90D02C333B58A46
3FDB30DCD312B4E9591800FE884A36185CCA2F39751B25790B7DCD27CB9BD65B
828FC511CCCE1B2E6E60568B2A8694069E8FAEBD02F3518D2AFF6464281C9D3C
C63AC835BE3CC5E837A8545CE274248A66FBA6B3FECEAA91115AE73CEF273013
8F17EE9E3AA45706EE8AC1DF0F965574C10CA716EC1CAB7E735E248FBA19B135
B1F6C8AB3D993BDB5A530EB2F1F7597015AE78431A38FE2691174E34AF897F7A
02D9E3B324F2F8DF310AB8F16DB146EDCAE361E740A6D57F82B137BF0EB5922A
B0FC86CD4927F977FB9AC95C137EA40E6E0A6E31028B82454B2CFD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSS0900
%!FontType1-1.0: SFSS0900 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss0900, tcss0900, lass0900, lbss0900, lcss0900, rxss0900.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS0900 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-209 -321 1528 907}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B507C15D01A48CEA1B39561EFDC256C
5FB45057A54480A0B2F8EA705C884B2BAD426156445992C03D7C9EDD5CBA2322
7445EBF42B99561B111A2FEAF0270F82F2D1888A340C6B27130B764396FAC49A
E525A0972590D8C963728C8C8DC427489CBD83371D357A87DD07EBD71627DAC1
A13D2398C591F9D869661B8069F3BACCA9B3CF6F202A12DCB2BA563924AE5FD0
DD40E412D8F90A8DA4CFBFADA63F48A504F75E1DBE685B708F61E3DD7C8613E8
BC7A623D7E9A9DB0C57D538D6E5AD77165BF4E1C8E56DF1D5E809264C051ED46
49D407DA6AB0CB7CDAD6EF63161653BA0D4B65853C526703878C907C82A23191
601B75C3CEC0844B5433467732B64F4E9302EB585AE595266395759ACBC132E0
BC10F0AF8D24DA5F4058D6A19233B3A89F30BBA72744F69B5F3984825E78590C
8DFB3F5A5FA2CE4B728B5FA2477E68DE373964BF7B09DC803519221A80391CFF
916BE5655C26293C30215165D731198DACFC66DD5AB418C0EC3514C48D96466E
0D48A521885FBA0391054575B8E6F829987FFC32802C8B3945F620EE51228F1F
B6F4F1C0296BD8FF18A07E3852AB1189D4CFAB335B14A7BD52FB4E16727D43E0
51EB0055FCA6E538D916E2677C6C79BEA58EC3C20BCBDA1C5E2A8ED9A460C2ED
90619D2CEF8746D9C6838E4639F9CB21F656D85FA3FF222AB769600F2EDEDC0A
75AA798540DFB939F8F013F5B64969DE3EB35A3B6AF2286E21E07319733165F0
7D86EC04033C26BB33F77B6748129E8EA2E57F742EC8DD05F16943E966B98CB9
8BCAC7C6886E5A19E8D9AD2F896A111B89C2205A24B234B72ABCC2B8B3D56BB0
58314AF80AE4C679368A13C6477E31978CEB2E24EC8EFB6F2BD05FF521C40018
7EFB5737467AA8B28B73D53F872A5FCBF8EF6BEF8F3292950495C8AA9050F307
7109AF1EBF0C4026FFED9AF9C3E089B07B4D9208383EEAF0BADBC51037DDD271
CA81513269AA3DCD7B3B2A0F8130FFECDA4E041CD6C6C0B29CBE640B989E0752
A84CB136F9633DEAE9CB386A900C1CFD1FCD4D690A01F044C379DD1EAE2BCEF2
1BA42AE6863E2CBC2530816D0088780E87FBCAB3D34FDE93E95E824821FE060E
59E1F62677F4FEB7F5DF7EB0093FF36C008CEB5031624A248C26519058625F9B
E81DE69BA65DBE9B3680EF0FC47281BA7C76D2AAA41583525D6D9C9F3B820BA7
435024D48916E6A19FB998F518A075AC7F0CCF44018D6F607603C23FCE4DDA34
4F508C055E57C2FB2E1B43B981A9798BC43C88D28F580DD78AD06DC1E54CDD8A
7B08A4CB7CACB6A822FF706460832D64B6BE0F8D906FBF7421CC7D762078DD3E
5018FF052D11E5A12FFBD12A674BCC38AA87ADF9426DD6B63D259A918CEA4AD8
DA1874A699B690FBDEF840106D97741D9FE5FDFF435DCDDB876051DB23A8F721
B06623B4670BBFDE5A850CB4A138CD5AED4267096D6F5B59E434833A89074E8E
B7AE95EB52EF994980B921C47EF74592B6FA0C9073746B8C18D9E2F5B41A4BF1
D716D67A246656438AE69E93B1997469D73BE829DDB7BD974001F9357A68A158
BCE4AF3226433159BD59249552FF9A88ACE586100BBB3BF729C2B6B24C0CD147
63A3169181822EB234408EC343D683908221C629994E37BC2DB86E5487C9BDB5
03D34358394703D21364929D4747369E037E8198D27394AF7F5F27FB6EF7A00B
678192B99E415473B4BEB3114F7C6C1C8CA14B8BB7A286078BCEBC6D07A2A386
20215298FAF5E9129EA14BA8FBEDDFD0712384E734D208957ADFC7DEF83F5E5F
4EDB351DC26BB050BE17C460EEC693C16B0542592ED9167A5AA41B2D29A6E2AA
2B1269FF7BFE1F8C0DB136501C69BCC4C6E8641E138B4D5522B2157B9068F1BE
B925836A24CB08929FB4A43A75A5D45FC8B9C52101ADD20399EB6F2622FD2F44
F72C571BEF9E153A956D5B252A337AF57456E9DE9629F2CFEE7B8852C4C86D6F
D37C5F0AB3CE68642CE6C07888B890196AC9A81DE2280888EB37F59B8B90C463
CFD7F9711B0FC094123A06D04576A763849C3EB885280CD0728B5E7C12E76973
C9A662D38917CAF5511820BCB2E11A6248C0756184319E202B57F237F21C09F6
1DFC9FD34C706AC27CFDE15D9E907FECF47F5ED5A61AFCC8EC3338F70DCE66DB
A7DE8C8EA3C60575219104394AB80C5A40BEC2B83AF3D62EF1C530875138D6E4
ABAC4242E7D82B72DD8725B9138695EED5900EB8F57F1825974FBE0C17422B71
F1FCD7A0D9281DB363A45BC38D2D4339EF9B2387C777AC73620B6602B27D88CE
83FEF6584B03E3312C109EE5E868EBEEAA1C39BDB8082C1132AEFD99A022A2EC
E49FEBEF1C7ACC0D84D67D21BAB7AD3B0F954F8729BA682F26DC1906CC507052
4D1E60F045862F313CB6D8DE936E063A86DA6CAFD68B8E32E60C749802BF674E
3EE182ADB7EABC054CCA05B51212FC3C15A2E238F79E02DF55DD190619E0BD11
3AF96A2BCF82346B957F7C590021AA644B7F3A9A0151A25A15344E93FE87E3B4
D7A7A7804330004ECC5E7607EC75EC3DD9766FF4EA8F994E54FB3169DA2D3A10
A63A19C2DA0DD7EA52678321C6A5CD8C1BF8E53ACA2E51B9B33866AB214C1081
8B3AE853316002B4885791CA91048469BC43853B83886F115E57BCF79A312041
1A8B15FCA918613FC076EDA0A940DA3730F390F61C28B4BA46BCEB1E9E0436DA
0F2BD80378AFA69E24DECF644DF92D8B8F52F5BED9E09AECA851AA1A7A7519E3
43C0DA13BC3526A7961496AD20749D58D428EEFAC440EAD6EC6737949FFAFFC5
B4DA51026F064598347DEAA7F60CFF85EB4042D652111D4EBDF7E0C87841CC99
58BB44D6204A5144E1F34B481428336BB887A4546020FBD608AC12BF6325CF2A
1023D0E037DCF90962F96C215CE9B0DB5076103D55BCB99FED4DD2914F5AAE6D
6DBD7B725C804C8038310EAD5F4268604A45B3255A254A95E5C1D602FACEC94B
27E3F46EBB39E55DAFC1C94CF72D16E67673D0641D883DBBF22EB53BC8ECABC3
DE478B07CEA2E78EC53B2848E0AFB5D74BFF42EF404AE00836828999710B974A
0CDD161BEDB622A841EF73E59F2CA466BA0C061E8509A1B57B3F8174447A9777
CDC9C4D9CB1C5EFEE8DE9629F2CFEE7B8852C4C86D6FD3780010399868C99D30
E2010D1ADADF1135C69265488099609475F605FD9690C2AFC60E8C051053517F
3348A94380C39AB210921BAE4A70AA4A2CA44A6B898ED798EE0972FFC24E1AF8
566A58B62F7740A9F04D7B3A3B4B66839BF3A7B2BB5CAD740FEDC3E27F14268F
B10F586A5EF2F3E5A74743FE781F1756CDE5D4148A1651E46B86F75FE172D9B2
6A3F4D1119104B8C9C295586F4932783C61473719233F3E815B4DEE832214A31
72F3F13153527AC2FDAFE6979CEB210E41CD5334171F1E7DAD437A201A6E0DE4
57EE415D0163CED17D9A124232E894752B7DA94D3E4B6A878410A0FFD1FF8879
D537D25FB79FD116F8BDF57AFFC3621062398BB6CC8ED05DBA6D32B177EAC39E
3881138AD5B484A28AD1A541F29C163DD4A6FCA9D574718B9BB26D8D65DCB198
029969E7E6683FADB4A550118AC728A1DD434F06C029F590EE85785A0FB48B6B
F3DC2DF69EE874DF3C2D253A93E9733812FAFAC971AA607A9CF032A8B094C1A1
3C6E697602FCF0DA3B4FC19AC4852DD08477920F918509452B0FFB5095F90A64
753C9F9A46B04078D23572F83B2966D43E3C18F9D95A5174F5856DB02D336DEF
A83F44C1A8474F38B234B38FA876EDBE856AF3E130AC157149FE33054339C0B5
9D107D19D013BC3526A7961496AD20749D58D42058275294214481C13BB3EBB7
CF6357CCABF806295563DDAB4619F6DD76A9C55F64CCC6870FF07329372A93F3
5E5CABF73E2B931F2FDA98B0E7F904534CBC8C49FC0FCBC50FC7FA6F9E72C238
A7BD0E5FD2E9D3B5C3729DC47A79E7B97B627C01ACC5658C9190CB037F84E841
C65ABCF7345C51D692405CC9916BE64E01A4EC94702850D1453A1CC3F96D310C
BA86F8710A00232636239BFCE6955FA74ADEABE6ACA9EAD96CF2C11B51CE7465
DA56CAE271F4DC09F71F2B4C1EC7EFCC33EF732B69E3A51D690ED747B1608857
9101F08D1EDEA2AC078B18E50243714D42F90FEBDDF80DB2ED16F5D7B33C8C25
E7A22853B717ECB74A6D17529A61AAF8CBB8B8EE5F0FD59D0CEF562C47E88BD4
C45996AC2938222B75ACB063D5A462B38B72F9F01D9569049031B0CB8959C87A
2AA52B99975AE86BF915273C68361A90D641ABC065F1ADE9DC4C9888AD0E72EB
E5B1B674A6437BF9CEBC34D15E5DF29520FBE34743B3DE5124EA15EDCBCCDF3C
1C736F2F38F273936579A5423586327553E389C83FF8AE10EE5DF064498636F2
E3097CE26E093BAA6332F7CE1D26346B09FC6A4A54D3235288DD4BD7F33CCDBB
D4971901AC8FDF6F518C25A5F058FD1FC76133074C563BC3301DD958F079D152
ED7195DEE9E8FAE9DEC924E2694422BB6AB465E68F0751BA0C7EC69C249EC0E6
EC885C0B9D3C86AF5DAD319B72F2B1D7EB2A680D55E7E28CCBF42DFA829A4AAC
D811B9B1D1BC2B47072E05864A3B623EE6308B33F865E8C78B03968BBDEF2665
73BAD759588B3A47FFFB9D67B8EA0E88E1EDB27CEFC507626F0B4DF1B7028B51
57B8FA240A33ABB06ECB9CF4F2386F77BEF1800BA0386FBE0FB721B2B9C0C46A
5F71375D722DF6ADBEA3E9F50D35EC6D1D463D49582982FDE4EBA45699E4BB76
60CC8A938AEE2340AA12BB786CDD7FAF7FDE25222EB7D1B85B203D71DC802866
F884E753A2A0FEA464ED04E8C7CF7643E89D5BE373C48E9327862E9C661AB681
AEAA9A670586F9ADED6DE71B653E1B5F49E9CCC94270E49529011A9EC366AD4A
745A6BCBE22DA1E5D4695BD0ED514DCEC1C0B3C7D589B1CA0D10DA32EA97C42C
C132FE55FBECA07BE6F152F1DDAB700B6CC69B9A1B63AC5634E056C0F79EEE9D
91071D0413F4FCAEE18AF239FA9A4337A44F0D79447E9C5ED2573FD9DE75A1E4
D7B0CF43B5B28255712F2E5C5D0F68D1B18A4445F192668A0F4AB8C27EF1DED7
4EE602FA579323C5E59E09A4F10ABADCAB7204AE358E7DDFC645A619BC423F77
E4C7DB510BDC32FCE3B34EB4DFC3D2A1790D49EB6412C2618C640AA60E3E1C40
57B07496F619A02E659CA508BFB7697284F9D5F89E5798997FCB661211C72C55
3CFB252C7EFE330EEF63D68123F899F1164FAB22A392B1E463EE135D9D9C902B
17B51AAC0CB2528AECE9DED5CD729608CE8AAF3A48C72C78E9693F6829E3381E
DCA87B9DD51F01AFAC344014375F62BFD0CFBB4C097DE0CF3BF39C25138064E4
6C5E5A503C8F0D77EBB70150A2C54CD77EE5F902FFDF896FB2B71F3F05B60DD1
51712ECD1C0A710040E77E88BCA0EE694D1BC7F57292ABA161F72C87504E3630
6E6B4631CCE454AC5F434DFBD7B60180DAE6860EBDF62FE4F7FE74ACA3475F26
B881B3477407C51F4EF185AEFAAE39BC6BB6BEFF9DECE02DF429857C99EDB3FA
DC61CDBE7899028FEFF33502ADD820721F4A9F4F3D1B004ADF1427E6C0F5AE2F
E329B5943DC9707A148E3290DDB9615950B45A6155C135EA3C1D5B0DACC1788B
9E62CC545779F10D74A025DA1E80A0027CB712C1049870990916AE96BBA480BB
4472260A0C808F5548E521FA2B2AE66D02C9F77ABE35B2D3E42BC4F78EA0D70A
F5622677AABE0D00ED84DD9AE6CCFF29BA1BC76D2F7046CE91019DBF7E3CBAB4
858A8F8FE58CADB350E8DF27054C58CC28847CBF75FFEFEB0AE280268077AD69
21B2EB47AAB8935CA45728E9274C30CD314A0CB19068AEF9BE96DA47CE48D42A
86BD329594513D3B51EB39E1C7E54F6D2DA734A66C7C7C4999A09D5AD428839B
B42E80AC975D0AAADC2FA9ECE0C669C03862B148F3377DD8F3C7E469B37CE1EB
1D136DE65975EC709FE01CF1BA2F9F78AAA5220ED89892C5455639BDC87A6DB0
C15641C102CD98CACC15DA6F5A9C5E0ADD9E18FD29BD416DCB71A60908B2C8CA
51964E43988F1228E6378B76607E94F04D1B7B354AE32CE9CD9E0FAC6D53394E
AC35534343E38278362E4283E3BA371CEAD2B03E19E8142BC849944458D1F05A
DEDAA5C794D4436925DC546CF3221A83A203F432A6F170A5FD7DC3DB131503F3
7269C656CB98E1B528A19A2DA43005EA5790FEC72ECAC30C35FD17808020DA2A
56666CEF8E2A03C9F6674DA843530025DE573C98B0598354CE9DBFE1AE36DCF2
B06C0B7350D1C02721E5913F1D146B293C225980348E17FCAA33467C0DA4A116
B4DA164AE9FDB41FCC4DD6D4ADB581103341B9D6C0CCF494D01487E6A39FC097
1734B8DCEE00905E767530464F17C7E38B333C7CD9D9F3A9ABB5AD0567AC878E
C44A72154E8B22B5434486BFC17AED02353B48627891C743F561843A78AF3AB8
1148597A0D1D2F45BA37A214CC774A649F4C91EF1E08F8AD1FFF87D163E10389
55DBAE6B680DCD927D039D7503F6D2E4A09B4F6303D038DAFC2CD74E8A8B75A0
4A77201B07EA6EAE2B2162E069A5D6DF420120F10414695EED42E02F7CB76423
0B69AF170706C57240284F138C5361904F939D2ED8069FB6107BFEB293772473
36ABED49AE68424435D44F5D565E3C5BEE9525ED9ACCE050CC75AEF32776B3A2
9543F526B873419158282486B1E158A0214124A76F92D5B03C8D77EE7E98E27E
A724A2484036872F8737C2C5511D90BEB9D192FF7B00CE0BA185D23E7057104E
B02036FA8CC986D793B005CAF3CF37E576E8D7DE90883487CA36C3A595BE053D
A38E53D23F15A776E257919F3AE7F7D60B2E1433CA696136B6AD2D692572FEB2
749F87C9FD6583B83A9E85CE3C5D0D0710BD682DEF41E608C31C68A7AE9747C0
F9A2E61F9BD44C03668456F7004A92D1CE4D4424D5D2050F696756036A7143F6
5B7F3DF9D2442F9AECF3DDC1ECA9B83CE576B824320A9C9CC538791A5582E4B1
87B09CD8F18E61F20E2DC1311A4F0DB54129574D8068BE84FCFF2E18FFFC1D8A
D4E0F0027C41B729D21F809903705BE9CF0FA1E09FCF98406FC1A28D9ACED8C5
E9BAFE9E1DA8437F8E54BB5AC76134EB4BEBD86676AF13EEF42207EC2D06741E
99BA17F983A5853B53CDFB2A7F81702433F8F63B1559BBA4795F70142AF45C86
41C4316AE6537F776BC7A055E611DB5F6B5762438C3416D0DF55164637C73FF8
FDB977A6A9BB2D9C19FB99A95B62D089A65A1F1825E2CEA774CA60D8F666AB9A
3E646A1D81045FE3FF53C23B0C30C618A81BCFC6CB54AD5D3613DCA21512CEDC
E78F364EA6518C3C77EE962B78D05376DB5CB9DEEF15DCEF749D2CD508B81DDD
F2A5E49AFAA6FD8316FD7C3669E792093D1835C33365EE10144B168042FE9D02
470FA51266AD804CBDF5DB951054DF1E8A68FD34AFE6A52385E8A0D50E496DF7
F6EEDAD25630FF60110680663343C5E0CA4A16FFE88B347EB1F1D576FE5878DB
A009D2A3EB8966F573098325E268681BF3334AEC22074469BE6AABE87E09901B
7E90DF442EE12E1998A0D0154465AFC6F1B57EBEA4299653008A5E922543100F
6A6661F05AAA40C583DAC7E8B7A6225040B8EEA065E216B421FE7093709013FE
9B11ED5A5F2EEAC14E0C831B20574851989D2353288388477FE3FC83B588E6C1
03CA9BB08BB6C8F392A0971EE623A0CB8591B4584F2DA7D9A9BF2178D252686E
1BE5CF14B9ABB43E407B209C984618D8081A95A534A787D0F87AF30D4D765140
2D5DA6825FFF26DCE67BD2A8745F829065A21F97978652490A31EFB184F78138
7785659AC12D15E3FCAFE19C5C6397437092DD7CBE4331D2E70CF9A8E0B034DB
BDA5157CBAA8A0E1E9DF4262D5A5A93CB1B9D35C6D37F714D910AD4D791FA37B
AFE98231807317CC0272D993F2EF232795AEF0D6A65B67F36B8AF208F085D02D
4753F758128E2C348C02002ED810AA2EB948C4E076417268C53460485FA9316A
F3DD093D94D8F9A6F044CCC49267259C8AE7F0B94C9085B97D74A2910DA2AF63
8074E8B4ACDEE4C232CDCE87348C3F3812B7772ECA428BF9BFF91D9D898C2A55
01DE2BB53290AB46B939B110E435A6C80FACB08F768B2F085A779A3755279D43
8A2FD7DDDB9562137F6AE9614C558A8EFA9F576440D83E3C1EDD7925C6A36622
D2316942418D6E0AFB268EDBD12F4B3007E7EE693951500ED1E3934434D395B0
943188A24F17172A5D003C9D6245FA24CC8621F060AB0FC825CD9E4AA94E1B04
0AA5438D123D7AF767B86C3CB9513069F46C7F73E379263E1CAA6EEF29081802
7B6E06E42DA6F30F3EC5CB2E2CB67F40DB12EF2309333F55CA8B8F6EDA68E5F5
7642E36E4BE60E8943FBB26662A2A488490FD6FB6935D2C7AA6ABC0D936588C2
3992D096623F0F6E128D5447FD7A6981056CF8DE86ADC40A618D072934C2ECB4
B404D0AB4CD84D4B02ED34BB5B321F1296999BAE252286E0B15AF3A786792854
C747297A0D4AAE6A67C0D9E81CA419250EA6744883DCEE0D136DBA16CD01B03C
93E948C730FD295F3ECFA03DFB3BD40E49D84C1AE7C151C33FC197B8BAC2C49B
2E949179CC5E4F76C6669C09B26AE281557BEAD949023C73A7B43ECC1F0FE78D
91A7C247DAE8ED01C0D8C433D8B60DF4903627AD0713C5712F2BC6E9BFD7227E
35B23306E68D4A9176E9EC7676CCA5FEC8E1DE1C434D75A2A5063130B3485C9A
FE881A810B53262DA6B9DA0B531086AF9E6EF65F4117777899C085BFA4583D9C
584325784D9F49E3E478BAD39F673B24520FCE80EA408EAA7782BD1DCB766000
E3F3A33796BA7336B32560301684F4FF2CE1B601A7A4334B93F4C42D01EFD8E6
B81E8B115444DAB95E6341AC59D13EC0976742E3E8A606942DF58A17C5719C86
8F302096486793E8A43705C15C85EC1B113B39C9BC1DDCB58F9064C2EEB92C82
2C76DB77EF3EA42A2FF438414AA20EB71CCCD7BE43731607C0D866EB60D9938B
CE3B48BBB13D251B1F1A8A6EB96E4CD1881BA440CB81E3BB3998C0D38314029B
D07EE9E1874BB9753132C830B248647EFE120782FB7ADA580E6C9BC2D38C1BA1
4119F5DF57FA90C2CA869890F120348FF2EA0F004C315B906D3E92597C8E59F9
558671C3B9848FDA938F425682CA4551C1B2B910BE863F9CDD44C0F8603F3BB4
8975E2946F972A70609E16DE98C9D07691109DAC07DADC2C026320F7D6B8AB59
BDA746EB6E26B2C32415491FE2F281A93754FBC976F75A8E4787CAC74D09263F
AA685A202DA0FB8D547F8D93950B2D5E573C89D913862C599B18D018B1121EEE
930D283D5BA57C991FFFD357B9F2E38D643A673C271C0DD19E85358708DD17F8
B6F028758079C66B9E41D8F3EC28C0F3E7A6E58E955285373F20141850CB9592
ECBBBFA7B7D1C8E059C5EEE67B4B1DB7DEAB6F1D1116D3EAF828814D17D560E9
C8A6EB756040CCD7FADB69B294F2FB55A5DBE347001FAF61BEB7EF52DB229B20
B088DABD8C44B035DE7B514B466854E3294305F708C469BCEFBE62370E3D394F
531174C5BDB724B9CC7714D6D35BBCD0F954D48F11AB76C2ADBA8C2AC4C3C981
3FDDB32E6D817E7651E161401842B570D790745B387172591641F17294C762EA
07033558C8AC3E25C13512ADC61B20E28BEA5E6BFA94438028A3DB31C4F647B2
48607075247981EE9114A61B7576440292AF74DC18B155FEF9BB26DBB6D7FB2A
957B1878E81B355B22DA76A066B7BFA8C23AF473A600D7871287DF88B84DB8DE
9D86066A381CABA4F9DA27CDCDB01C3249528F4A3DBC07F7142B061C2841A6F3
D4A7715B9787E5DFE5D9C3028D1C6D468D9D7D244138D17D59B8F4EC10241D62
A1D6EA8DED07BE89CC2D1981F6CC8EE7ECAB54E484549C022889BC0FAF4A9184
EA5E165A083AB88FF2D39FC4780491CEB68069B422739B94B942FB3E101A4A41
EF40F09AC2D16E29EA02E2CB166CACFE2DCEDDCCABFE88A9180D03171A1C758E
D5DADE941E42D6DAC34B3D1B8AB058FC5E45D8FD3608B7B917F19C3CCB8FA62E
D1B67A3CD5A4554188130134379F74673215E3C6D27C70DA3B0AB86E690F0B29
6BA6696EB3DC4ED391D8EDE68DD4A8E959A4D36C296E6681E89F9B8761FFB007
3195CB848CD2368FD5FC7FC8F909BF0AE0FCBE9FF7DEB2208E9F8A996F4CD3A4
F90ED2FA6E1D559395FCA6CD20BD8B55E5473FEBC4FE68CE487FB43B3FCFDABC
2F9124A655C65D456ED76F94AC6D0B59D4C2F51D32B1EC41FFB187F6F59F47B6
17277C6882F54F1707D293FD69C17B3C5897
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 8 /circleplus put
dup 33 /arrowright put
dup 55 /mapsto put
dup 96 /turnstileleft put
dup 104 /angbracketleft put
dup 105 /angbracketright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC55D261
F5A316D606B7C7EBBE81AF9C778E1A6ABEEB389E2DF05AC830998C473308C21E
D32E1C0A4FDACD3B0BD6AC45600B28E6DE6DD5638732FBFA71A3D374AB25B33C
D03B5CCD11311744B77AEBA5E718A07411618AF2A19313E987E21DD7C45456CB
361F3E4DFC92F8E22872CF885EE565C0D66A993ABAF34BB243BC19DE3909DA11
3262B84EB2BC2D37CC885DBD8FCD82704F64753BB3CEAB8E76A44DDDB0F5E05E
68FFF895430533036E20692FB97A0DD77737F84F944EE4F182641F05198CAA00
411D4359B3AC5E1A129D34E4E1DB2ADED17FCFC537E0EF728A401986C5F103B3
81DB13575A218EAB87C4921A8F807ACF55117FE711B912AC1D0EC0632A119832
3861088E0511E804A37ADBC4DD7B85719CF5E3DFF5F7BB385F2A7A68228E886D
FC32E061EDE08A5E111C99258ADEAB0F4469990626B958B59FCC3A525E467DF8
744A0BDECAEDFD7C6395F69315E984FD7402960C5A066A6BFF9302454FC951E4
319ACBB599B23BC3DE3241DCC13D8FB0AD6A2C79C07006E70A109484441987FC
B794F90D423CFD54AD5133668D2A2A5C495D2496644BE3EF1314A31C7CFAE994
528CD04C3BF28C87E58E36DF09134044AA974C3FAFEB0F7B8D6A7C90FDE49882
3CE84A5D2E93775C454B0854B1BAF2B0A0B2C46CA003571F3F514C9F4EC322A4
3B29536DCB6D816B537BAE41690947E0D68287AD6D9E34438FDAC4E3958A365C
C4F793ADA23CFDCF7130A9B56B7D6E8D1313CEAF319EB09BD331DF72A1BE077C
19218EF814F7798A16C0B6E1DB0D204C24771CB4F187BA62A6235F645A741A69
4646EF767B1FDB85900113A17BD3026509F21B7CD5DE9867EE2CF0CCFEB64070
E80D80AEA33CBBC14A9019D632647758277C31C57B8C936D48FCEDD60CD61FE5
5FC54915119AE14E5BCB36170FAD21D5C02FF5BC4BD35DE960C5CA2776AC079C
52D07BA5C8AAC18084C4F02DC6C5B146E34C921CAAACD446210D149103FBDF1B
4DA7CEE4AD6B7D985252F3474A8FAA93A9B549A89402E678BAF4DA11062602D0
A775E77C96103598214A78C2C72AE68EB6051DE43A6BF50650F53C1DC2D9AE50
9E5F6FF1E32386AB2AC449A17C418657952530BD728A277C7629625B7A91E603
F12241E2EBAE669992246710FAD4FF1C6D790751714E8F907C6CA23D95BB7A4C
98D2845BCF1B5B8DA5B7EF4C78165862F234B7F05484E3D420C67320F03688D1
E9B454D54297BE207D9971EC0D753FAE2467C2AA2684D6E6818FA1A212C27B7D
F0BD810C8E61081B3B96E6D586958B257643F01DDB3FB6798BE78AFB10AB7C2A
18DA4B154A0781FC8953C88C8780C507DE80F84AF7A67A5290E717C80D4AF33D
75862843292FFF91F2BCE88668959A542DB1DC50AB5EF0A3622C66066BB2895F
5EAC7D2958DEAE2210151390F3861B66E1547ACD29FC012A480D3342C5845C75
A213AC9DD37CA5C64335343D3B37B62301578EFC775800AB3778B35C3C72E6EF
4D9594C70EF2F54B3E1D450DB5A396A308A6F2BB6D08628AE5E8DC0A65F25682
295BE604EE050EFFDD6386FE629A826816F1D51EDEB31B0C4DA033C3A49341D1
14EE4D8B0FB12B020D4614D3BF13319BEF3A9B40BB2942F00307148D3F4C040B
32213C416D7657B37857B1AB6D21FB91D68010
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFSX0800
%!FontType1-1.0: SFSX0800 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsx0800, tcsx0800, lasx0800, lbsx0800, lcsx0800, rxsx0800.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFSX0800 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-244 -335 2002 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F08AE5AE9316CF67B8AEFE1BC94E1C120A82E49E
0EDCF7060C39A64CB876784CCB9A3D11FC2880C840707010EAB92005CA01BC27
2438B1F53B53E3185F968CA5CDED681E5E4126D437BD00E3A0AE08A04953B32B
85F2682D8FACE298FC178163DB60300720A7E4BE22A11EE8F24768F96B7E9E77
D2E7CBA57E14A537DD35ACB2B88D12FF76F1940DC4A9F78AA83C8D14B21D1B0F
2473F61E781480043F3277733D78260508062670B51549E52716240EA36A01E2
735B9D794B36596B6F298F0446B0AD5B39A7452AB9CE211DDDD12A745F606387
5FAEAFA2F19D44B0086157E3F867D86DC92AE55A64F8B612B6CE1989DFFA0AF8
67CAFBD9A8D0F3B759DF774D692AEF2D2C65E71D2DD8061E8664AEA4E1E425C8
EB7AA6050A5A6F4FC03935258FECE50E2077CC53790E2097ED41AD5C93B06AB6
DB2715F1E1EC4BE1958F62B9EB09082C1807FCD621CA2DFC2F9B205192258511
D695771CE7142C6AA832873A2F9604AA729DC1CA51CDF25121896B34423FBF16
1558360E01E4FFEDEFEC45E0CABF97201E5E3C48CBF6B8263E6681000E326C74
70B7DA49BB8D4FA019FEB4B54AB9B149700691743D024A4E959160103980A4AA
64203E4E84AD8A20AAAA29213D4BC8867C2A538C515D7FAB82D34C15F3675118
1D6AD55E14B3D06CB8E5CEF668E0FB1654EB213AD919A3D530BF36A9CBBBDE14
3674EEB98FCE91F417856F1C6FC872A346E80075386C8F118517976AEC2A6AF3
DC23EC2B1FEA0094A55D39F71C303C0E4049E3A1185B8159AE6E498EA9F69A5E
5657C8B3DB98850AC56681FBB6E9C850608A067D2EC81DE93D1A3B5E5DC9C3A8
588440F9DF56D327DA01637CEEE3D2F778F54C835E1D22C34592289E87F58F52
0028865720A58C52BA94D85A760274C777EA01886FE5FB6F899C31306FEC495B
CE04690664A1FA91CC00302630D121C51BB9C186D59148324E7918E932993977
5A755AF37BEB2428FC662365535B6399552A92B7D92D3BE4E77CEBE1F5E38E2A
84081166327F296E625D4DE8817D8B7DB8AC8F315F3441B03AC32DBF2D883C49
E6DAE639C467502382EFEA89421C7862C6E11D3942089E218EF4011977C4F4FC
48D900347A6854C768BC18B431882627F9AE3E7E279FCECD3C4940D749E60131
5FAACED8BB6D14D462C6B163990B75F1179EB01F35336696BA06740EE9008DBA
35D1BE96ABE7D709200B0E6D0A3FDE5B518FD143DDE55E91EB124A65B14F32FA
7114B6A0E9F69477C81A9D8C354D5FE8946BE2BEC59D678580073AA200113265
55EF804A6913C95B13957F2BC39C21D0DAC017324C261B59B85A7835AC11C09A
4ECEC0DC0649677554FF35E1B400F441B627C895947416A78AED0340D2FE4D44
28E388229D7325DEB5AD169C2A883F9169ACB97BB0F9A0AAE6A9F93AAE46D82F
1ECD6E4B0CAE7CF1C95DAC61183B06B12F9E0DA766F8D6703E299CBDF9EB35D2
FC00A0D94702D2F9D1A0068F46D39318DBC755F89AC21FC387EB03C27977B83A
F9B0EFB20FAF538F8838E903905C09DF3782F0A1B69CE8FD6E2ECA86E735082D
3911BD471DE194DB09E1D945741FCF13FF1AA2A96963D5BC3B8BBCC7D6013A51
1139864066685144EA49B2C583BB6C2BBE75C0B371EF1D05A87011F697F9E39B
A6925BCE4FE4A96A8CFA6D3010B3BBC7D8E4F16448A2E37BAB20E3AC43246ADB
E690C52365BEBD55BE691F41924FAB1A539C6BB3408B6FB0408C453B77FFB0D7
A5AABDBA6E65A7C94A8D0ED2D9A540B2C3898FE6E5178D6E02C77A70D856D3D6
F9D10E1C74C825AFE8B523661BA38CCED72DE4F5B72B0340F5AC915CE0AB7BE3
B19DF0F8BD6849BD36D44A05373D8359F079840D3F413E14651DB7D8C10B5F0A
A94546AB9EBFE2E5DC3D45BA59A0422AB6EC3FAA5702779FF2ED07A1F8B1B6AD
F56F13BD3B5581A0EE502C6DB9B5C63F50644ECB46C1915B6A7483FDD59E1982
CEA0684169412B72CC0135D46FE609764C1EE288A3A49D63DC0521336B2EC04E
12217797A80092B2A70A29339AF0C748650DDD36352BEEFD6F0CEAEBF2962B8C
EB673749C86A6AFC2A7785FF584841E420EB974A671D66EB451F453BC7F38F4F
15C155FAC20C095B5A13621BB46B30E7F81D2E542A22718D4EE977A802373172
2762C57875318E1A50D2B2A57AC8BF4B02534DA7D2AA4BE6827F3B2EE45A8336
0AD7470E9F4027E09BF90CD972CC8D7F4D698594121EC2C5D4A22D35BEB5B435
2360C578381BA3ACDDBA25097E5F9DA482AFB2D1E1A0E97003611CFD8014B4A6
F0520589EC5FFFE4A314D31E66132420A37FB98F940B773F20E04EA1D07C600A
F607E4FE42BF0ADACC4677756E944F71742C964995273E193C837195F4C42DFF
4D83E81A21CFE03CFFAEBF9752E4B15956A171AD001BCAACD3EA7B4166C8DD6B
727B5F77F1414AA87E124D68E05C186D1C28D16084556C0476BA1A24EFDE8BA1
7A027EEE40E5DD1E46D24D519A61F9A2F505E28030059F04637C5E059D10CDEC
CB55473605B4DC73008DADFDED35FEFACCA51967BEB2771D9E83B689CAB0BD41
5D04EBA0AE1E9BB5F52EFFCA909E51811AB88EA5B505B5F326E1A546A71AA8E3
D186FA40713C2AE046A280DF51FBC45BE43685B0144AFDC37E4A7F6A7418ABDA
378324D093D273C16FD5BBFEAC04B2822AA51E8ECB6B4E498A76A18711D79A2C
C3702DA3BACF1E5FFBE05E2E7A9CE3521343CA5AA2D18DA69F9E4C162534E827
50938543066F7E025550E87D8DE3DB4C880791D8482E9D97738E249910F0482A
C9426E20E6369C638E61C403C6DFE72D7759C8995C7031555A4FE902E71ED78C
3F33FEB6121118428CEE373E28660653E1202A07C5BBE976434D797AD44673B6
D157388E57448B557E0588CCFB383781EB3CE00E031F5F170F90E994B8129D73
742D17BEF718017CD2EA888E0727F002BA7F8297B080F552C36E0A5AE2E44508
8619B043BFC174D395D66EAA59E4694D7484E62FEAC06AB90DF171E2882097A9
90A068E8BBD19229AC326E37B0061E2E1CF04290EA00D40078848CD9B6279E81
06FBAB4F5C4C8A7AF34EACFD2A71A11B4B7ECAEB8172BE08C65426022112C058
122FC80B0DE8CE8587B259D373C12201BCFCE3AE828500753B2E5302904D0CA4
B21D27EFDF315F5EC708BBCDEAAED12881433FC04A42EED92BA76B8EB5E1AE77
B2AEAB96A29B1C2274D5C4E09D5EF58E253DC0FDC33147B08405E167718E6724
5758ACE06873EF99519F544FF258B084EB2A7B29AC77989AEB53706C8EE07835
D4A69FE06471A2C37082077C3E28CCB6C7363FA5FD95D94CCEDFCD77EB6DE015
4777DC8C1356CE76973137154DD0366B94538087D6EAC332B9BD59E022D24C8D
A18BEC0A790ED8BD50E7E33E7A7618067769C9F677AF37B384E23D03FBB973A6
8CDAD9E7BCCDA0533E943977A597829028E6257337737208445C7C712CC5C077
E8AEBEF8B3EF99A287DD00DDC69414EECFAF4214F3361BCDBD50944ADB0582A2
344F35815509891419337E8B9FF55B57B489935C15BE73F5BE65225C38E0B9D9
C7AB2911622A11E5561B3B27A8DAB963F5213144B12309230CD3D27AFAB14DE1
87F45F8C7199B56118C8785F8C3792689724B63246F5E8177A00E2B22593F7ED
ADA3A7DD72A1DC01A4284528580B99D6C01BC079E837DF1E2A505C783B12A558
5A5264C964559851F3B26FEAF9F625623232376C465AC9FCF64CE60F172C7429
021B4EA191A19A2C08904A5992B8133437349EFCC4CB67BC77FF01E4F95062A8
A3828F73A1A4494C1B514EA34AF6B0E36F8EA7B84AD7BBFE1B129C727B94B133
16A49218DADAA7435FC2D898DF5FA1EAB1C467CDE5B7D1E2FFB85160322A183D
C2F392CB8534D70129208909B1597C84249940304564A628C870C2B625B9FC64
5E4861141516B7EDCB56C83FCA0947C42378EDCB4F7908B848A0B6381D85D22C
F2EC2934DAC5FE84137017B69288443ABFF10E7683EBFE8551354605820D48BA
0B2EEE00A5D30EF33AB0C1F78526E27C88BA1C774F96B3D17B1E35CAA83AE6AA
32067DB113812C1269458CCF339D3CC4882932BDEA2B646E6E728A9C1711C649
87F435CA0D9FA5DA0F7CB42E32F7915B44887471A0CED5D721596593C601F34D
F1C5462DFEA5984EAF9D2A939A6A8859A162869701D8CB9C39E511C31425765B
6D63AF63741979196DF6FB2F28DF9996317D435F733D362AD9789127D2DD7521
19A34B5D22055679008716CE9AB3E73C70D993F2EF232795AEF0D6A65B67F369
28B1092E12CC710ED052F618A72D101387580F63BF09E1B97A0B6E3F9B32C832
67C6869B36EC80F2EA98312A5C98E09AD2608F77DCCD77EB6DE0154777DC8C13
56CE769735045F66BFFA791E17E1FAEA0CF0B00E30603E0083858C1BC243F451
CC78F25D7C54E312E044E936CE0269AC33D2FC5D972E122FD65FA03BD6C6DCA0
844F3E2B85300040074E2E930A6CF10EE9E7C35B751D3B44C8C6D6146BE410C0
0CD6C4D210DE7B57D143E1FE58FA3B94681F9FE0EA0855979B402B81EE116A65
563C720B8177BA68FB0D443B70D6FB21C434FE2DF3A4781AC711EC68B798D4B1
92A0014E80BF9F9FEB27C2D8530FF76C8CBDE18106AF545301BAED4B5C07452A
E284ADC874DD7355176468330F7D9D1E0FDE33C705033FFB2AA3337303A2EF44
8FC23A6582AA1B0868385BEF66E60C18416E25EF2D994B575BD9F2D6A6486E8B
BD8926A42C3699EA6B166EACB61A11D8A4E6025A3DEA8587CAB53EAF8BCDFAFE
770FD2E543F4A70AD72D7B0BBE6995ABA0F82B0BEE9033473D4D158BE14FCCFD
E6084B9F14026D95A7FAEE3A845A1C9040D6F16668DAEAC6BDCA1B227993FF22
07059DC0BD55AC360D2F6C9DA7DD0EF8EA89875F1BA72CAF5507C35F0F672BB0
C3CF07EC85B33AEC147B3BA117AE5F357991951BCE11B2DB259B0E27D3A52D71
620C15ED37A68F4EB5A6A8B1C6F48ACE63C3448BF5C2A651BA10469159C13C48
F705C5C4FA63BEEC03A321C96B32DF44A6AE0AAB0BF85B190D2DCCB4FAFD84E2
1E0B032222B2EA6C5DD9DC1EEFE33E368B1BA2E77D79E47029E40C4B5B596817
F23527E1CCB2DE1E59874E2F702F00CAA693F1935DB2D405F95A71BBCE369CC6
6B827E1CB61A3B1B4E12B61BB4DAA4B1C2B92F34A1B84BF017BA8CC06CE2B1D1
330D163CF0F79A331B8D7B52EE6ED6B96C4AA9861BFED9431D91CE8CE57ADE11
B56D5462F2538DA618BA4CEAFFE39F1D27530DDDF56FEC0F58092BFA53D98B9C
A7ED65267139B77AA4880E928650C5D143A28BAFDACF01CDF9B99753D8B9F7B6
EF8C41FE60543A50546B12D2F2FBD89DEE9F59A13B50B76D005F2D6E3DF9AA11
705575254CD6BE941653699D768B737F2830D0DD6DF169E43AE197A2535592A2
8BB9862A8EC3BE25C0C12810C5CB192E685AC342D92C71C52CC9DF06BA9A14F1
0AF08036E8C4217335F84A671893F0338489663B9867FFD53B43FB97A6DF0774
49CCC63ACC48DF60F8D7B1FFA5136753451F75F062374043839C772B9E0F1C77
AEF7EFBFC36318B2E6A89F75F3E090F96003095CB6A7CE9E0F24121885AA8426
EEDF2D8A778070BE62637273F1B5DE55E0AAE6AE747AD18B5EC65CAAECFE622E
2B35E5AC3DA919BD9E18DBEA55F6EF21A37F6B14CC43C354FB48E885893C9249
5C26A3A8D2ADA9B1E9383BD0D72CDFED2C855B2BC2E470CB8616261363C78B31
DF5AA0FFD5B9BE66F059426072111309CD503B0B124CB24761D37AD7EE873168
EC55F4A683ED47A5946B07F3BAAF56D67D08A5B457AAF17C0B903C55D1075B6A
478985937A76DE9A17C93C1493975ECB1F4FFEEFE561C7CE31197EF488D6C101
B6CC3BE928E5204DDD6F895D9FC9D4EEDFE9B9C174E29CAC26292CA2238570B6
89A7AB37DC8165C1D540E617F980A0486D974A71CAD4A2A954C8B70615EE9227
6E5655214FF23D450BA8A0AD8FB6CDE3815F5E4EEA8D229246E83015E76D4DD5
3CAF39ED63CF34CD7ED11901B91FFB59677118270F9AEB92A89074338AD18ECA
1E5F71D9E4D2BF86741C4F41555531C1CDD48C64600D48329329AEE4721CC034
3D4B6B1C77A023BED9086425C0CB58BF17A95E611B52E4F699187671DBD37A7C
2C9DA70B8D47EF7A5512D6EC950B10EC6A18E8C57D7005CC92B836A8F7E7C2A8
99A860795468A5D504D3A891F7C4EB8DF755D27A96A36D90C6FC517EA536BC89
57399D871C89A59B4A0299620DB951517599898198D1BDF5E625DCCC0BC47761
7E266C8703C11C46EB5B300E5010C87F94ABAD0867254AE889EF801ABF8140B7
5CF243EEB5D5DB8837D471B49CB239B1BF4C4D4D952433E56E093BAA6332F7CE
1D26346B09FC6985546CB201DA5D81A902583B3754A3A2F05265E927EBCC47A0
405CC7FBE5464EF414EBF4C16E18A3950AB2B9212A6340553EFC4DDEDDD88F70
564DCD8D03F8905BAA1B6A883EE1B67833CD25D4EAD6C07D2DA7DECA141F2B0D
4C38BD0C67A88D069043F4BD5798A3A1DDE3795A58EA414EA4A822910D7C71F2
B8C7DB2260675F6C03DA7C9EFCDC6981944F03FE04A62528116239C6C5BE8EDC
C58898A3B2DA975E68EB2FD1CA8CD756A08E63F400D801D7286F6337CEB228F0
B38BCBDDF3C513C5ADCC3827ADFBEF9762C42AE2178E83FB9D37641FFF4EDCDF
CAE93B9B84988BD7C6C3FB2F07A3843D9CB2C1B401C128928EAACCFE6E69CE96
63C19FE126071A41E520792075672344DCEE4F9F1687F302935549CECBDF7BDF
C6FA4F7B74BEE2016173136FA03D799029CE01D0CC0E22DE1197560C879FDDCF
096473E51EF41B8178DF7C666453E9EFCE8D0203D05AF8E86B2E0129B821814A
21992AAD8E99923E3B9FCB408BF996852DD5275F405DAAC5369650A067B3B7A2
9D7438C4A02CEA00006DA31157A08C533237E371CBD214054BA9FC6F3B6DA519
FF9DF5E66E8CA74ABCFB9F4A745A14F638FAC602A80BF9C4885A3EDD1B17A8E6
AE5D97CE7B19B22A877D6A812016384F6546C6378D0F5F78F5D188F8247C0A40
8651B130D0C9BD100725793C642CBE80A48A2B1BF172B09D91F40DD679773312
28E2108036EA98AAE6FA6A38ACF4C2500D5E50634A486C7ABE238D10CFD3612A
94E1E5F139C5C130875154FF8FEC5DFF59923C54FDC1061C2A39E2DF93E57E48
80C21B0B5ACB813FE8E9F1AF563C993125ABD8289D0E9A984A2A9A51EBC79D08
A0398B53952E236864F84D85510E7165EC5F38C70EC606501B0FC533918AF22C
C9B63AA8291D791A8B29CCFE9CD7FED00396ABFC831632EE8A70D205D41A6B9F
33B876B56C61BDB9D077F1D7F6CF6FF10965F73F55A4B607774F608A121B7AAF
81A94C087238C5C9362B4670EFC0FBF28A6877262FDF02735CB83A90D681246D
5BD654F140562AA3AA092FAA20A211D4684B7403F90B3D2BA9BCFC6E40DC39A2
4FD0F3193C0F0684781D9875EB0E6FCF572883143628DA081374BDFD3EE818C3
16B7D3FA7B5CA296BF7DD5CDAE7AA0E94BE88FC69A1212726FA50B328B951327
E7A4A16012044DC2112525C027ECC9FA892205E0834456AA8030011A820B299B
B4E8922006A7DCD556D23901E26526EA49DA7AA844666ADC003C509499B590D9
3EFC06062BEDBCFE82D329D008FC49C8BF48398C2BD3295A425583E667D746FE
D3A6F47397210C899E84A773A3DDCE55BCA530CF6C7A33BCABA8689139753D9A
2C1DCAE2B9E9A4905A34EED26B3A0F91A94E3533269ECDC99B60755D87C2F5FE
DD244554C86B662485354DA8E555FDC1F94A1AF4324634C8E1FCDB70CEE954B7
D91BCA19FE2E598E31423DA1FC053D7AFCA6D3D2465B96A23166E5931F7E464B
288F4E357066A562A92B968DEE000405AAF9B80ECC6D4B5D70DF178A67A0BEA8
293F44EFDFEA946D275B088E90EC172D1297E55F421B6845899FE9ED29C0FED8
5B591DB8E50C195D002C3B339F2D6419C881CFCB2EE057ECFDEE006F398849B0
4D2120E528DFEA7D363CCC1CE8CAAE26F2C9B2B78672D323718C729554DE536B
11AE9DCEAD87AB0AC5F00FCEA74201770E1A22AB3EACA520A1B83D37D270DE39
E8D28E6B18EFA8208BBDB2C711E3B14E398F22F385439E40CB3C14CD74242AB0
2851DFA6C76C5EF6BF5F08A5373C30B5E2014F63CBD2543EF88AF21BAC2E7C2B
34D351120D88E2F134251B960AACC2011E842FC4FB8DE2F4244465DD080CA9C0
4B43955A93A530BEB817644060772BA2A21D43EBD4FADEFB8F019980FD561E5B
80B06EF63A07DFD46B705C9E57DFC14760B602535D1A86321DCD542959F98DA3
3394EFCAD3A6D8352CA141F1C47C6E7DDC8F276C19D8F511D713AE0C27CC6D2E
1B9FE2678DD9CE727EBBBEE8659192BA8D3B048A3B47917E6A9F23FA56785B6C
1FC1C9313B560BABC81D749B10397A18032A418AE49BE762A5E2AB06A2C4A3C7
A13F953AAE3FF6294185A035D11AC232F5038F5A68A6F1D95126261240598A1B
8BE6D8D0B709F15E70470AA5B281ECA4092C9A06109FE8002E8949FF0CFACD9B
D1051AD5ECCAD1927B94F2C93F2661518DABF0386B97827B8A3293A13C44123D
05F17699F777419FF97A7BFE63B5C591975E184E3985BED3ED7AF5D06C23A7B1
C0E16F3CA9BEB6E7C2F07C7B805922CDF57BED0818A5B9A068E908E7C91A9243
E565F3BF81EA6CA104416088FE17CE277D5667AA5644EAF87696FBCE7C280BF7
9FCE3F6461B27E1D636C5E5DB0DBB928E45ACA61F6B0E24465256354ABB8EF34
5623DF51BC89E953E1E2F6EA0A731E48D16AC13303743F315AB8C249622E3086
17C5B22DE40ACF9023E2C046AEA1102327A911FCAA68088B63669EF26D654012
0058F4AA7F45E145313766A2414005604E0894152427FA059E8EE2A34BEB5AC3
946F11B24859D5CB4DD7B8596F0639ABB1F43287AEC95E407DC63640E04FEC25
75888BF4DAA0D7AC972469F57F244EEF2BB5B82231A515DEEE3C4C0804657893
80E1912C2E336F85CF5CC88A63867C765A9D4B4946C5BC8AF7D162A220172623
7804FB3371960028CA882917EA0D2DA5F894941B64CD9AFAC878A8C1D239AD11
EBF80D988B018FD6FD2B76276EDF119658F8ED5325D93A4474126CBBFDF5E95D
B261C8D808BF16665982CA446FB13C9073DFC883AF025004585BA3DB5D392304
34930F349F1448EAA347734C3BF7438567598FCB74E357AD910B4226229A99D5
69F285F1DFE0E4B0DE8F23699C429BC84E1E4F262C883A7354373459669913D8
05CFA96436A09A66A92692ECB8564958BE90C9153EE2B300E8C944848EA6901A
D830890B82A22191BBE5C1638CFA5B1303F678D9E73ECEE5C370A97A78A6DFDC
872743712FC8B0E9551CB7A461A3B5746CCE8AE4C2F0450F45951D4CD3369847
457E0C03FDC105210BA8FE7DD8001A209ED6B4B91132C6D821178C01EF837D6C
FE167352E6BA2C249B6D6BEC4AA1CD878A13D9B3A0E8776F7BDE4BD32BFEA552
FD39474A4BD034E3F92FE9376A1D98FDF0CFA2BDF3A5BE51B3A5CA2CC5EF6697
53D6EC627B4EB802422BDAC1D8C90C16785E0F24B3E70E8959857A5CDFB0DE03
3268B0DBB7E4CAAD1F7D9D6AE1A085A7D4E739C9818D6DD30C92CA794AFD683E
471F62EA8EB5A0A609729AC7B539B5852380DCD9066B7C40E884AAA0F61F3B74
F60A69E293EFD4C57F4DE9D9EDD0C81B66AC3DA542F52F23545A02DB6BCD1E0D
8FA3C52AE712901AD838AF2D840055E57D34FA59EA13EEFC0623F8517213544E
8CA05E5E69A6E600BB4523668FAF2A465267C2E85DD089537AFCD7FC3E5B0CDF
CEFC68FD0881515796A6EE772ED594203FC37D2D5497769B9F2C4C78927E2948
5223F85A6100CA4FF99A767DFCD4B4BA66A5E2DFC2A6B3B71ED2B2C7D6013A51
1139864066685144EA4EB2D1AECE652A8E228796299F7BBC7ECEFAC398AB7484
94E74A1A74A66CC0A5B1420F461E5D47387816D8F0D50CEB1EDF35AE40A199D0
1FE8BA34BBA41EDF15817CF8D7E778F13528B820BF23BE40CD7A4D9F18FE04C3
E760FFB93D7160C10111C318C66E25AE4A6529585DAD3EA6E62AC3B6250ABAC1
6EA7A49E5F06EE8D5BCB224844AFF9AA7F739C873AA74F0471B6C6F5ADEAAAEB
4173E3C0CAD249E9E128A3AD06A18B2C6BBB0762BFF6E09EE530BA1D9FE09883
E39712D0209AF5E360E94A50FD447DED77E902195DB4D72E0BE2DB85DF80747E
74F9F242AE84AE2CEC6E0279EF48C1367EE1021775651CD7B04D1D2D1A76E3AE
FDF16CB8DD548160E0864853EFEA2B87DC3C3EB09C1EE7DC5CB62F41A2607D18
260063013705AB6F7A67DE0A56F5C5125253A6EA9D0A5E2F2BC44422931393B8
13E1584C17F386892FC8E6E9E47117DCBFE173414D2B1800DD59871A304B1271
CB02A5A8CB75C7CA81B09536AE22A59D72F96B70BEFAEDF86F81D389BFC649D8
83A6A313E8C1EB5EB5B970F2D9F0F492A4FB94E3DD0F1C7C2131045E14960AC4
ED70B90727EFDC4203173246B58EF4993A3F7B569C941B70AF65B693777DC5D0
FAF6B63CBB847B108B4CD4568A91AE4294DF01174BB6D897B4548B76B14E972A
BAB31B7C647D7F5FAC90B982B1C6FD67F83B1100ACFB26E59B5E88A9E462427A
868A2D337FCD128BC82EA1201C1E9D065BAD269F7FBB61505B15CD4F7C43F158
E7D42E1401A8BF70A3C50512C2DEC91750EAD42D83AFF3FC3E99EBCBB5412659
D3D47528D9E831C893607DFDD7AFAB76099FE5A54C778DA40488A92FD631C0D0
76DB09B6A1E2BE35B8A18D4135AC5017B9B98CB6F655A52DD8BCC269C84753CD
27765A393F1789ED8D4A043F44D1AF3456534790C6FC92D81582086981537724
4CEEF48EBE56A4D8B12D850572CAAC14E86CEF117644DA36BF7F2DB559C222FB
F9C9285EDA8F50FF89DD99BFE8B84B7B713B63DC3674EFCC0C14EEC5165D7223
8FBA0F2771511DE10CF28F4FA31BFE6503DC094F76F85716374229FC2A974E4A
E44563320D69DF6735FF00760E855DAF0C6395884B3DA5B867D71B86C7DA1F31
F69B3DD05DDD24B51E3707DCD911281E726311462763AAD673C9D539BD09C34F
638D8221772B3893392703BC9AC00D2A004A159113B7F3098535D75D4A675649
CEB53C2A31F106FED25998FA6110AE2F463715757CA99983272EAB35BE201EEE
C2E07D23C39ADEF64D071868A4CE3FABAF9CA559F4CE96B77A74FF302C10135D
DDB4F28AA5219012CA953BF21FBA716EAE6CF9693334463CD7A10952ADC3FA5A
495CEEFA520AA51E86D4AA3CB2C5C1CE3671972F9D2156B9DFF9F54061C376B6
8F6328A6F1F27508684BF4106268AE7214AB88C4252CE2AADB190332B9F2F339
21912308EE97701E9BCE86AAD8C09488F146266867598529F0DE7FBEED1A5D99
9CF279BF9451CBB6DE745A1CB6B949BD8641106CB321F959191EB014B6F412E7
ADD6268E0896B346FCDBFBAA7D610BCE9FB544638888E512ED42BC6D0D3D8B3E
D2CFA5454956C1381B400710E78FADB2FAAC4F5FEC368AACA8DC227D00865C61
2A5F8CC904BC33F23D4C65A18316DCAB21384C28631A43B722839B5D76C73980
FFD86D1EFD996D6C56FC42B85256FD8414648E409491C3D3CC2105E167AB5A5F
7E13B2E0A3D271B505D59536D2FFBDC88285B676103F60A11C8227669C1D758D
8C883A55C290E966930B9CF95633C51AEC6B7D40176A228AB71FAA49B8E0E640
85A38D7B0CD5D6F6D6336534F49E4FB3BA34DD2E6469817296EF15EAE9B43735
95B8317E4E50FB3D7ED805BB4AB09068FB3EF383F82F86CCCC9E39FC5C1AEA0E
84B3C22D2F3EB9248957D60FE28C4BD453EA9222492F7617EAEED90B57B1A055
86301AC07E7B68541A03126F3E3EF850791DDF81662D8BA0B9143D14EA52FC35
5E51EC38408C465D903B6D5C79625F2A0CCC8930AE3B3A6977D6C20414E9DBAB
5DA03C3A4C7E8197C3FC78ED0A500BE0DF0457EEBB0B78D8D60A180F4035419E
E446ABD710B357D5C666129D166FE9AF677120947B5C4D6B3D136FCDC2AEEE19
11EA60DAD6BA02ED8D5E381B0E3ED8525202C4CE7DA2DF671C74B269778B7044
767539C7A81223F50FE08F7F53FC804BBAC5FA2796D017882FAD8826BE77C35F
C465D725223F934D25F0D17F0AA5EBAC0A4962BB7653575A14350A32DF82A23F
0A1A479E7D64EEB7396E9A95C90FD14DB51EEBF226D020096BD0228ADBCF5339
94B3BFE2854107F555F5FC5C20EEED756798AFBCD54422115A756D4457E2577F
E988887B638FD046DE70ECC7B0E96BA02C0512FF541A16FBDEDFC1AE74EB7FF2
7CA40E258A1FDE70C0ED8D059CD0394604ABF82BD903F8E63B58A378BBED7924
6A169D1D02B7DBE1B514EAD5C8185DB53AF5E9D30E9BA2F10E2310FF111F801E
36EDF53C179241CC92E9BE321DBAEEB2506DBA0DEC9F84A4CA17F3C690C6272A
F549BABF0E916BCC846FCEDD445FAD9F901D26B5EE954C04B66F6F3D43B24645
877CF940CCE66BA11A2C7BB9C05E8C9FDC96111549ECAF41B69C0C09A047D681
917454D7C4A196285200E7ADA71974E12ABCB895E01839558F7851AD06FB20E0
2969AF99B1453DFBE94FC3AE685F7131B04C23ABCA88D3E224C831233CC1B244
4C04CA2BBA3B85BB230DFEBA432552AD23625E9F0C7268CEF3416A082EC27F78
6C51FCD611C8A5779169F00628453970FA97FD6C2007076529679EF111D3FF46
AD5B7AB0FBB5F001BB5D1CD5E70D00DF4BF23FEEF91E61761DBDD78F7634C7FC
ACFA49C7BCEA1A0C120A1C8B44C75D9E7B9A77D78B4B0CB143AD0342C66EF6FB
E2FC0735B137CA80207D88867A43A9D4FDDEEAA4668E5E6A8741A5FF072551E4
920AA689DDB168B14E9B37D3464A3ACF26E00CD638BED68B92A7A54E325E9CAE
FE4F8D74710D348C39E9361274CF2D37B0E20556C47A83A9B5F92685589F36F1
5BA84639C5C1AAB16A3E71D79F2C3381DEEEC6913AE1C757630872098325E268
681BF3334AEC2207446EBF04368510F6B3EBDD8FD5A25B6D22FDF1BEFA2CD53E
4C58BE4551DDA39E0E690276E6F896387341436E4E6C5484EB7CB454266166B1
FD09AAB51962884A54DD7AD692702FE1C9B220B5E6B8FEDF0C4A956DF880520E
9C9729D5FC36FE292191E55D7579042AC90EFFC0824277CDE7890A421AB1F43F
6F9783B329618C3B80B4ED3B0BECE87FD511BD16FEFF5772DFA677FA57BBBA0E
10BB4EA258F40983DE82A2CC16FE187136E1E88D3D412FF0BD0CA1A4BD9761E7
64FFA72EFDE292F5239AA639312E6DF18600E51B9CB0D8E96C613ECFC6D45F18
FB7FFAF275CFB0CB297C9C4DD6FDCC15D7D6D7860592710090402835C09E8235
CDCA3224261089F5EDD61AFFD59DE618859702BC64841BC9B7B58EA0F613AD8F
6BA804575B420C20FAB4B40DB2FD1227FCD8D8EE63589387577D67DC3160988E
0ECE01CD420F320697FCEDC5B4F916B618F059CAB10ACBDAB35155314A35C12A
234C4DC6EEEE3198742A31DC6783050F3A7FB137C704D3BCE7BF7E63432A5BC5
384C800E78086C37800919F6B3E401E0B5943A9D543CB0E0598324D4264B34CE
1083A95ADFB2991EF85F2BD6317212EE6809E10BEE185978E759D5E2C94E6710
C9D72BA9BA7472925CF6AA8F487600CB5DCC06B191F548CD33BEDBC3948CF526
AB2A3F3F97C7DB7E1FB6FE430449150316EB0D0798B638CF6C497D0D1E75DA0D
D648A764BD152786EE78CD8F9970D8961FA4C3229B21841A73E0083658152AD8
06535CC136845E28A7BF7614E76EA86B408D51CB492A28985BD61E9656BFC60C
D543C96380CC5FD12ADFC5757DFD38424FAFA277F3BE382D95F8E16E1CACB672
261524625EDC0414187852E1BD00EB686CED5693741D4685A1B6CAC68B0E9DBC
BA92C77BD6D6A99BEE23DAA95813716AA817CE3DAB393984BFEE7C64ED526523
B7C7DC07EBCD2FEE45FAE986C0FAA0F6D04295078D084563AABA0045D422907C
7843398C0478B42E778F947D6F524816906DC375788080388BD3F177CB73C7BD
B048C0343DCFDCF5774FBF8EA4A910FD6C3E141CA8CB9BCDA06406E412560139
314E0E1F81777F5CDD209FD878F4F7970B76BE54F51F0CBE881F3D9BD11EB7E5
77EC66869BDB48845FFEF20F2A5F459ADFF08FC9D7279D9E626607C97B6CF535
5EA327F0CB185D010E2E795AEAA75DF43B15FCD672EB3B04BE59BD8026C66100
10D4FF0DAE9CE1E7A230AAD8E2DA57359590620136FE32AA1E5301BAEB6BA3E4
D147A89E853DDACF5438897411EAE39DE065FE3F407A3DB2390B732BE24C228D
0BE333FCA587ACCD8EE39082BF824928440DC1F6C50A8C72FA194A5CE794146C
00F1E756DC1A61705EE6D40DD4CAE2EEB8300A82A30ADE8C4E9ECEBA2EC06F3F
0F4D340977A960F5B134B33C511CEB1DBE4DBCA5BD8E129363F2F130DA97A0F0
43F08BBE86E82EE2D639FC50ED087DF4FBD194F814C84BBD7557603595CB2CF8
F1692EE007A6EE5E2917276ED538474AAF3390E3FBCDE16489DCD31A7309E8B6
5FBCAAFC7EA12340D9E5BB65A0F2410A5BFB98C6556C6E95AEE9A5529369A03D
501AC6601146907D8223A49FD62A998F77CBBC1D6C481FA61C434A62197DF62B
DA1EF2338528553E7F0FD020F79E1E1739488801D3305D2AFC986B0B1B5EB06A
95E0B419610741A413A1873C02F36B2C5B1453D337EC660906AF548EAF465585
9E15292506226BF88DD99F332378694DDEBAD574F94416BE4FF9BA5338BFD582
7B262A299B8ED5DD6686814543FF4C33F53008BBF4FD6D8B04082A6B53739794
24F1CC457DA7FAA30B8BC3857B6FB299C35E812CD9A467F05E48EC19D506A32C
A53FD08FCE9272D51AB671328AB0BD5FAF4F3F2C3F336F3D412185E38553655D
B2C39CA75F0382001D344D5CA01024B33261751AE62138D76A1FDFAF358D61F4
37CD03834356A676CE1CCFDDB01997CD5DF4AF124740AE8536067BF0F4BD32E5
729F38823FCD7FF41BA15E09AD6A977FCBB3DDD04F411D2BB7F9B6E785A92AB9
F75DBC32A6890252808F6AEA956B19CEA197904BFF0081CD17E1B1862C6ABCE7
C0B95AC12560C3B0D3EA733EB518809F1940A6718753AC6AB86D0C2F54961F0B
0BD972CC8D7F4D698594121EC2C5D4A22A98B4B4E0BBB266445A4870EB8BD397
5AB8F8F9B1CEBE18C60DACA03D96F2BAFCE203C90FE8BEBEE0DA64D317FBDDFB
74A181C9B1FA05C4AD68138531D6EF259737F278A7FDAABA736E08D2BFA662FD
CD3B7435B3FA4FA96C1FB3FB67089F1E3CC89CF70586E84FB8001BE32A9996D9
74D88D55F4B2AD712BDC007B6A166E717D41646D83D4055E3C76946BBD7D0593
5588A8A71C114A56242680D2515DFE2A487A75646D4AD48D6DB642EA7803A790
578B162CE3720449E215CB4CCE2352FC2EF078D6666FC4C17FF6E0A31668B6C2
9F864B0B956379062972DE5B5293957E571F66D1F0F3341EF1FF45323265B367
223C0790C77D1FC7724F9739E9BF74F96F682C44CAE1AEF37C80118812C9BB0B
61FBA17A18188961F6EC9AB28D6C2918A40B85C83E84864CAF98B45C6EA676E3
B3242F3F148C0C52FCD5BA6766481372B38705B5369DB1C94389DF02CAC58C1B
EF50462A00529A64F8C61C3368DCDC18A9E14590A7B18F319EAC27AA25982F10
592D5283541393D25EF578F48063C9AE8909DA38268750334AD8739CF9744D3A
C324DE1424D2420E1DA5D6270B08D42741A67A4F22C2D72A7E23AB391257080F
6684C90F828A19AE931698A87549CA07417E5EF3C41E23B770F5B00DF2C9E568
68A62B3DDCF692FDADFD2B6A1E1E49287EBF18C72A0FE7EFFCF06FE0F26B6FC6
56B2BBC0806CCE9A67D4504FC1BD06051F081E310FB89A64B8615907FDCC8F9F
CDC12EEA5EF98ECFEE6A8B6322EF1EDB64B5BEE15493F60A237F18DD502A5A78
CFDAA937DA1CADABBBEF72842C8A882CF26F72F56F764CED2A7CD21AE8FFBC6D
F0094654FFC16F99AA81B81C00CE15EB4853B5FA5DDE3CEA37754832EDEA7351
D06628004C1C44B9789CFDBC872D903F0BEE573BDBE2034FE1329F2A60B9C237
26113ACEAE5A6DFD05A9C24261DA7A42ECC9337359272C8E732CDF1E836B7AF9
EAA4CDDD997DB4E2B17B04E59567342AF2B182282AC372524BC49907F272A81E
85ABA0FA3DD4905717A1EE0F9E9A8B903750E67AE65EA617F8935141044440DE
315C15B52EF7B0247901EBA8C099063CC4ECB93EB10E687C00BB2C95BA0313F6
6FC305532FE4948231F321F1FD66903454460311FC7BE6B59373586CA15BCFDD
C30A2E0688353ADE6C40E334CF9BA5D7AB9EED2427A80D7A54643E3E6F221BA9
AD0DC2FC346AAC688A25225752B7BF8F0316553C263CDF080C1E78A36EFC9D1A
AF7BD674B95FC23916BEB031A7CF17FE688D3C21C21C089600606CEBD60FC992
0B77A2AA58EF9E7D262BD5FDB7F7E772DA03589D4D8066AB596C0185500890E5
1945B5B66DF4C5865EFF641CA807B2598C3BD7A706F7F2104B0B0A9F2983107A
59B83B29BE85D1DF560900A67ACF97F2903ED99ABF3605E9AFFFFAB0D11FF394
AFFB601F0E1003A8BE0F7763DECEA46D300EED52D7EE14948F3C1F7E3E5E3B7B
D5C6118E30484E2971044E7021EB4F1B8F480BD4A37763C007B3538E15B9C51F
9FB590D93EFC06062BEDBCFE82D329D45D8D3F2BDD6541439A16C20887878625
0F13D31C11081F76E9E4E0BC466167D1AB73E0768B4452EA785ADB0F611333DB
A8FDAF6DF454F1D17E880B3856C0E035BB6FFA544D8626D9FE3D0A47E0C2F5C8
B747F6047167C64049B6D4D0CD90B75D3BC68B8C8464AE3ACB4B809397E0AFB7
F8F252EC70527D7F78FD27F6D4652F874078A37FAC420C7E4ED7CE85ECF6D3A8
5565617ACE96E533B7E7A7F4ACE5EEFD0D302587BA00319CCBF7BACDD5FAB1B7
78472A2919763AA895506C785C2836C37C6F591B11725547E88021B46E93B358
231F2BD6408ACAE74BE7E3358F690B8A6266C4D546B964067BE20500304A2735
A43BDCA91978ADE41EECDF1DF61284B9CF3CD559C3C51782A7A7D594AFF8C598
3F83237DE995FDEF702185718AB74E76FB244AB5A179CBBC900DEB535A10B6E3
F942DF00181D8B20B3FCCB5245749E13E6748B2B47E64CD0E044A8CEC78095E1
C12DF3F7BD23FA841F4D27BD543CD05F1762444C51675E38C92C6A29E9037EEE
92220832FB041483744060805DA8D0C56491E6ADF40B932F1C50F6DF95F3FFAC
EADE336F1994F81629F2A612648D05E8AB1B8937E9C871617C2289BB0C4C393E
987D77319964639CAB6B56F07A6E431B730A159303ABD13F17C5CE68792BC023
287E0596E8C7021CADA860FA903E3A3AD9CEF95966F0ABBA9923561D91579FDE
A980EE67A683F0A2D2A9A049F8D29D47DA2CBB3D7005220E5131EA5D4BF669BC
120D8854983D0B931BEDCDC17BBF1B9AF7CCFC06B8E84D93FDA5120EE98A018E
FFAF22A2EC0062420DDAB752790F22CFA005B7C1DA7584972FA19B4FAED72293
4E2A1C00106AA56A3D39C88D48B1C18D063618B11F74EC6A529276BA8085E5D0
CA8F2F54C316B376DA89313D6A83343298F34461B133F90301EEA316F0447E33
0C92BBFA9867B5BF0569E4CAB1F6556AF49420037A908ABB1654B3330D7C06EE
B941600716E17F683401EE545AF1B4C5522B15A07E9ECF4FE4010A43B05B2B85
301E6EEF72E59492369309673BC48C36157589C80CAAB1CC02537311AA65CF7C
1CDDA077DC936BE934C223F5AEEE9FDD48615BB5FF6E7E78A099D21B332835DB
37848E1E216E173C3D40DE6AB73E6B65060997BFB209A00230C4DAB3A3EE6996
894548569782AE69AB42E8535B3AC49BB53AFC711C12A60DC09BC0A75E0E4DD9
95D40E88BD40791DEAA0D486BFEE84EF32C059895643D6B882B2210148D8237F
C68CAB8F0C1D843227E33B2032864B71CD533AFD217C987203F81BF6768C945D
3D3FE047C729119602F6C9FA63FA79703D06D9E42E1BD57BBE76A5870CF50F46
0615774EC5D2A53359B68CAC41419555F92E08EE7C8370B7ABDCA5515185F636
AA7D6477341D7433EDF07F7727B6E19D3F215C8D81410F813119C5591F504619
9F3D5A6770348B73332A47C1F58F6712F79255530CFC97724E745DA739ED6C3B
DF0910A04F5F90E3593CD86F51031B12A9A597EE59FB37107BE00E1DB0091D5A
BABB1EA21871D3F5A2074249BA9ACCE92C1F08BF0293B8B5B3C8782521314697
A85DB47B8EE78251337FED0002DA888DE0382FF625187F254232B9ECFDD0C112
21AA228860231609D120055505D8B537D15C66B3BDCCD16EB37C370007FD788E
29F5307470A09C8C354D5FE8946BE2BEC59D6785800234918EB8A3E9D4B610D6
EC4895627F0057545A2EC80C166B4A30536A5171289E0B434EFEA302488044F2
E9812E57F4F2D842D1707AE65B38DA08FA3DCA1FB98C74B154228579C106B509
850FC71815DD87A8CB6D227907C5AB3DCD4A3D172B4A8AC5DE573D54B4D27FDF
B3ABB04769D61DD08B3B506F8D4A700653E4C7AA6F48FBF0F90853ACE507C7C2
39A6CF9548159784A8A5A74282463E5642835196B4CE6A0E0E05468E12CA2456
1914005DE4BA3600067C76724B62BB0C1EAEC5FB2D38CC7A99DEF731B340CCEC
2DD841483C5338670011232DB3D648918F1CEE144B8A3D138E5F331E6D52502B
D71B3688E19C6CAF8A0C46F2EAF55693F60E383D2E5F29FE5E7B9845BB0DE14E
1429142CD2ACD767D415EA0F8A7195870F17B34E09C285B370005F68598EEF2D
404FC089CE1074CA869D1001BF0858C1C93F5F80478B53FA2533E2EA6950A71C
D12B2FDAE60FF70CBD8FA2A48AF3A24AB83FDCD4DD8BEF1136AFBADE9532F2F2
5A07BCF0A1D31E83E1FA20A373252D245D43A64F5D8D379965445DC50D2A3C09
77A960F5B134B33C511CEB1DBE4F1E5459F68C25740F232E444BFE08C9D31EED
D124F7933A1C545B83DC94CDAF1D7AAC858B941284296E678343888C8BFCB4BA
480A4FA80E6AB44D715069A72E8E763415D05777335FBEE89C1E42349C5E7DAB
444167C9FA520B2692F52DF89CCC70DC8FCED3EFB16F093D2D96932A798FF49D
4FA6EAAF656AA2187F7C3699464592574758249035E672EEB8938FD810B89E20
EB80FB8F7314681E650A1476E8BAE8620AA247412123951740AAEF42CEC44FBE
A1958D2A5C83C65E5128FB085C1EF041B4ACDF21353F370B35862FE24E4F1343
BD815921E958F4A959459A49FA5D93D65F140BF764EE9A671F03219185FEE6C3
72D43FED6178BD9C785DCF0184F7B4BFDD5BFE2BF1966F45C3DE3397E5EB58B0
4E54C2748EE8C006ED7A42A296FD74E7E04D2145888A08D411812885076AFE17
EDDDEE41CBB53D533B337A1CCC9FFFBCC2614E85D45EE8561E683218CA143066
E1057986DB926FBC2C5D63B24176C9184F8DAAFC8549DFD2E340EF4BCABA71B9
D519C1D9AC49F9888ECEC6D3335DBBC359E34822322BBE8FAFEB9B135E507C16
AF01749ADCFAE111F664FEF3F95C06EF37427FC2343D5E95138C4BC529B7C62F
3F399B6C371950D2ECC65FBD40DAF2115FD5990A2E0882EF01DD76A03B6BD9FC
027A19D4181FA2DA8EB0104E65B01C9C4626A42DD8620AAD09E1635263317160
B133134778C0391B579C16BA10F02A3206D8E5CFAC05BEA9799B23B51C8DCD87
C3BBD6EFB2EC02F29908C3FD76A2B03A6253EAF0BD4CF05075622499F26C0D07
711B19CEFD61D47EB54B2BD99C914059E6EDFFE1C0DDCA2804BED3C7C78C8BAB
8E85F7E9D5933191D690D7F98E1678249528E626CA3DBF9397E0AFB7F8F252EC
70527C437850EDB59D53B7B581953CE53A6F20F259A81D478BF53F4450824CE8
58F76C4FC8535DF953DAEC243FE25DC85F44E84ED067DFD0AE63E0FEBC84F94D
C037AB594D2A143A89AEDF853C4B6AF02851DF4D7C82732DEAFD0A93C31C9BD4
BFA49B6707443F7F8278168B20BF43F28BFA7066E5293A605A53EAA692DC7348
0762C5FB6D70BFFA487346DAF584D3E9B76D2E9DD9254D6DE405CA1463DA65CA
4F6574BB1E01B3ED95D736691447A91599EFFD658CD428542E66F4D60EC269F7
5B2ACFBD1D9BA68AA4AC702CD6EB5B213FA5156B8344F1CCDE84A46AB2CC7F03
B6B38D8B737B9C528E4F5670871E4B60D50031A7C23A828F88D0FD8536F5629D
17E7F041614AB8246A3CAD6014C0FECC1C4BEA386E698E4F9B036DC83BAE7D58
32D112A35F89E47C785D2D0C5ADE074A3B1FF677505EBE29FBD8880364B66CED
1B9C93596B273DF3ACEC480AF72C8444E9D86ECE6AE49227083C77A3AC62FA6E
5D45F1FBC0D5CE3A049ED1AD98449B2D44F35D2B02C9BD028417F5ED439B11BC
39D5708EE2768821BC4F8A93DC964915352E9CA1EB2277B8382A83C143DDEBA4
98F99E9BA89DA9EBE17C573CEE8B5C802C1688EEC45F1A4683962D8680644BB4
46D7EF5ABEA0E40063D93A46914FEF826558C0BC954ECB341DADA531EE2C6684
3180A5BDA2F25089F3D6A7F6CA10459063EA13C1AD1FB7672803701FE46D60F2
6FFA3576748A966CAC0C884E4BD77175CFFC669DE3BA8FA582C2AC4E03E4FF65
1BDB08B10FFFF6240D7F7572BFBCA4C58489AB6294B87CB7AD5748A5AB3ADCE3
DA013C9BA1147297F3F7E3EED06DCA35027B481B1CF01DB9CE302DE4128E7B4D
F7837023CA3FF53CA3A0BE19E57798FDF7F29AE894D6A503B7895288445E8BE0
315F8B4A00287C728734528DEB6FB6D416DA70E5F39DA25BACB7C66969C9D121
8CAD3AC79B0D260703DEF3AAFE666F7579CCEC6B4743E00290D312B79EB714DD
3D93ED1B76C213E54CBF2AAC98F8CA5CC7EFAB316E5D18735B7441AA61FA7856
121EC7E70DD92B0AB51D7FAC584FEA7FD06018FC1883A251CFD26E4780B8EB59
B866A167D160BB1F62737850E7FEC7EA1794C9034A65EE8CB09482E436DA3F47
E1771946B116F7BC1CBA62086AC8EF39F4B1C9358DE72557BFD6703926D6BABB
5314563D41D45623A8057161BE6DDADD3390C4439CC0917AD315769E99672314
8682D87BCAAE20FD4B19C27967BE8D62BF81344571D9CD555C736BF53D0C0B5B
2E291DAD087A719F1778157867434C132E7AF4BF3AEE99EE0B6488D682341074
DB71E36CCBB0A0ADC27A6D8E2F9ADB4468C959B196C8F96F11CC5199B155E5AC
720968A379F0CBB44814A1853DE343CE4601EE37
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899D895A80024BD92EAD4A757BEDCD0045
6D3D3D70D739E1C2B1E98F74E7040EF287705F8015B05CBC0F386E6976027CC1
7C4F913CDACF1B88468AA28ED7BBA71B91626F1D6A33B1441A8253397233E10A
6C56AB09D10788A7AADE771B54A9A2E0C408791EB73DEC123DCE4EBE815CDEB5
3DFB09682E9F8E5EA9E9A9087559EDEBA25D1BF21F42263ED0179643893F29E6
24F2ABF054B8C35BB87DA2B8F0E49F8B0CEB4DD458DAC1CE89B91C686A6E231F
48A54326393AB1BDCB8CF4657BDD74D7483E820221D0C09F9B714AC3FDCFEBD1
D9A5C34BE3FECFBF56C7742D493D55A4C325DCEF4E053C9A36A8462242DEF5C0
2C91F04834B8BD5415002E3086A46DFE514E21DEF08811C66BD07AFD22C6637D
0221DCE95F0E420DCEA46383C9FE4603A7CF49D8D111C5CA3DD244B6CC4EF2FA
B76AA8EF1CBAE9775E4BEACAAFA88A9E9D01DD34B03254F3561A580F9C2E4BB6
CD58B85E9355B1CA091C2C2FAADE11879DCE89B9ACDFD83095F57CF80CFB18FE
333314B973859DB9C3A7274F32660C66B053CD109762348E65672613AF828486
4EFB428F9B251E1060619CD1A6AA50111B90408B221CFBE92AAC15F1B1615CBB
4B65D22DB17B0EBC48E92573FA964AAFB8B83F6DEE93515ABB899EDAED3AD5CB
3F07FE63DFA87C42ACA6BBEAA3CB60D79E339C6665D98AF2785CA5942FCA9B0F
E66748BA5C397AF1B7F23DA9BFB1063B0609ABBFD78FC3C4F9445AEF50B5AA35
89953C1AFBD8CE3FC59118ABFD0D697B6365AE4DAFC3A88E05EF29D5E117C266
5FB96C8D5ADCE25EF35155F02FD084BFC2D1FBC4CB356B5B756BA77B58B154AF
854339C59370DA9C9AEBB9F000DA9CB220AAE72FD4653F41FCC009E406AF1FA6
DF09F8FC63B1BB851609953497B58E38DEDD9F37AAEE8A0237BAC9F2E98D5225
F06A669152FC3A58E650E0C85969BE5AC5245A0270CD53E72377DE2B4F32220F
1B21972CE96B85A35128729AAF572C4998A01B280870B95BAE5EF7CAC51DBB38
8102E674C972E3A3DDEB5710F666492E81D87DCD7843842B2B78890E35B2EF8E
C566BEAF52F586DE03A47EB90AC97E3A9BADB8E3F7A3E022256BB63A0674B7EA
6FFD445AD9D9A73EF32C222E021A9C4702E3DD3984F1896B5F95CEBABE3DACE2
F7F3E24776985E7B9D056C5DE7927AB3D571C835C60C0CDED945B6B1012EA7F7
A3D878A66E3D04FE29E2FB5396A4C8671BDF104AEFA17D7535B1D30B269932DC
5ABB716BCB10F893048F33410D104F4B31C2636287654006B36E95D6F0B4A320
7812AB6A1C609C8D47E5D84BD32BFEA552FD39474A4BD034E3FFD9AB3F935229
A89547785D57AB4B9C46F647413A073397BCB233DEA7E93EE59B8544477DB73F
8989D22073756CCDAEA8402C427DC7C43DFEA873FA4F3241FE1CB015922DC613
1FE395D089E6F7488905B7291B35C7E287D5ACBDAFBF8433523277CEE6DB7552
99321EBD85BD17E8FB9E21D202145C62805724E909FF5EEB4E8BF8F0AFEE25C1
A759DA7778FFDC3100468C938B22F0FD149CFDAEA36F9FC00D0BE506D5F840E8
970BE0144BC8E1BDAB9051979E384D8BFAE56EE7E3080F67CB15F6CC153C6706
0034367F90382826228B301D73F8BC5F26AD901614682E0D7434EA2FD0B22069
F34156B5D5F33DADC3D9775ED92A4AE54C9CBC34921FD978D5418A5812C803FA
8DAC277F3583821D40C529A18E59169C9858F625993A92B66325E3D7AC0C3B70
01667B6EB66361134910124F6E9CF4617488D9CBDB97A5A756C66C556E4B4DC1
DC7774D4126AE35689EED532EA4BA48413832BC77E20E79BB89B37D514682080
72BD861CA3EA8185BCF0BA5540D64F052D9223943787C54A6131B05FF1BC2B95
76132EA53A7AAE17395A3EBAAB24862F05BA793DB31D5E979F39F872A5D71C3C
19E8D1CC31014776B3E48EF0A2395B64F0A35AD590FF78C7D0B2508E2F1CBC8B
19908F90B5DFC3257B96D37D57AD926DE198853E338CA388A3A8C6427F516B8A
9729BCFF47D5FF7EA0C2543C80CFED9CAE49E91BF3298ECC4D6FBEDC9D5E2B4D
3F5C4435FFA48AF001C1A36B4BE3A70F44B0746A5C16D857EEE57499038A7EA6
4707D85EB606A8923D7EFD65C45D9A595D0D9CBC916924BEAA0513E5AAC597C3
D514037CAF2D9B1753BF02BB29CFF35076683AA718EE09AF09D838179D1C3E90
C0B1DFCF8FC52F40EEB0F0B6F30ADAB249B3A82F7BB0667F038A7EBB4088A41B
ADA4B5D72F904B8BD5F2269195DE0E39FBE222AF54A7FF439064B4DD1892F262
1DEFC6EBBF874677718EA54135155D5992BEEEA2402D427F9AFD331FB0580A26
F4188C5A4A3F6DB1AD579352733753D07A6D33A06981A48F6C338ED5A8BDE22B
8D896EC5C10FAFC57B40E043F71241F644FD3DD682441C89C8706C51B1579FFE
8819F845EFE8ACA58CB0EA93889B47EAEB0F53B54E0755ECDA476C47813B9999
F5D91FE19A1EBF646026B79869933AFA98EB5C2B964F3FFB3D16DFE9CA2612D2
A34F428D218C4593CFBB281C64737CC1B92BB4C2C7507D556474ACF720E7B545
37431971CC1252F85404960BCF92D1BB2775A9D078BE67C4BCAE036EB9C3A8F5
AA597D0A36BBDEC9366477DE9A3D4A923602295449DB9B2B1EF2D1A73B854EFC
5C662FBA31E568568DB4471DD4FC4C9AD14403E79AC545582B8F86DFF05035A5
067A0739347F8E0F960741A0A2CC3D72D84002BFE9D4FA1155F19952BC16BB45
F04BC377244D666E624CF113A91D500DB015CDEEDD08B7079E92AFC19AF1B61F
7856A7A3B1630069E8CBEDF76253C3AB1C003BD90304FA34AA419692F5FF09BB
A86FB35C48F3BC7C4EE88148424AB1484BE85CB1BA9668FD859C3BB88FDB15D1
893343FDAADAD20BE284C1D4573B2BB83956E4496997EC18B2DE9F12030582D9
8F18D7BE6B5D39EED673205D639BE3CD63086B934D13215A9C28C3E7C70C5BE6
1FEAA5148D423DAAD29C838021398DC4781ED80B20A182166F24ECC29660AAB0
42A715D2F8606410321AECB3825610DFF39D40E538E51DC8F98AB2E692F7213B
4AB0A41C0A3DC54CF4525D69A53A1F68C2F8254C6A96C93162065D1CBB582885
F6A0FA151AAF6DC3AE74FF2CA6CCEE0306AEEE862E58211AA922E2D75E02F62D
19FC04C5B0B4E4DB29CE3750579B1F41B430190DEFF29AC3C1E929E71A3BB35C
B449DC80729EDA4C7ADB440D197D45BDD0BFD344B31D034AF26161A1A5B180B5
C8D20DD4F1AA1938D67E06512F2B7D59FA00C87F5670793EC0BFEC871DF7D162
D7C96236DC96AE9D3BECFBE7DB95D7A202C08A9FCC86757B538D9A035E54FB79
6078A47A3D2CC7177BA6460B822B3EF8782824945E982987AFDE25F2683C800F
0F63B0135093B667F5DAE34AE93CD2F9E2D1D1C03337BE5168DEE3F6FD902677
0D9FC1E3DE6020615BE730A4EB408CEE4E83CB50C4421E482360C87E589AE817
773B2E19863949F272F1757CFF243BD7FBE25EBE9296319D3912EC278C08BB7C
BA9400593E2627169DE33129DD36D68A041E2E1D061F348D9AB21A51ABB20DB6
48DB190830FA681BA6950EF36D3AAE7FCFD7FAED1182C6BCDACBBCC1555FF459
D25A33B308532E98D28D215540E7EF32B9CEC2E0746A3A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF0F096DC5DB0696208F8543514A437E397416E28B11F692521A6C01140D481
213BF1E96355950EA688F3F0081931619751AB0288F6BB8CF10D8B4FD6608CD9
4CE466C1FC3E002D429418F428B01C521DA489AFC7C23783FC013769C8918503
7C0C63C85F2B5F5174F88C649E94E0BD97E8EC69EFDB2FEC111FFAA5F615DAE5
2FECFE6FB1FDEBA6CF0661C65FD2307A733089FDBE5122C356246B185792056F
00DD4709BD6E5CD6A8042579518EEEFFB272F380D690CB0EF415FC54CE7E0948
AF102361141606BF67BFD15D563296251B7342FB18FBD2026A758101FAA90BB6
93FE9630AB9126C5D9AEFE758BEDEC920A937E67963800FFAD0A367BE4277073
4B55359E48199263D1629CEA9428BC5CA2048F76D3C4B030A8D01F2D300EAC00
6A775C7F091EAF9A1434FAB2CBCDA24DF35DBBEC6AB0763B0B752B8F28BE93A9
67653DC2F86FEEFEDBB916B415B6AA94EC62FFC039C23E96B40FC1B5FD12F0D5
2757CC5274018C1418AB9FBDBAD3C2C01B855EEB2F41249CC5A3B30B64046E62
2FA7C43F1722EC810E236F0E00E8304B6067F232844B8B7620DB501AAC8A9F78
F44477D0F7C84FF7ED306CB5E8AA52146A180ECFEECC72BC2EAC01E919C589D7
AE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFSS0800
%!FontType1-1.0: SFSS0800 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss0800, tcss0800, lass0800, lbss0800, lcss0800, rxss0800.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS0800 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-215 -320 1577 913}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839D875E6595527D9B85DCE60B5189AF2
F7BCA6A71BE65ECC42B50D7AE3C6478D8B0B257DB87B2A953DB647F64762B5BF
F50F44739462CCE73BE67FB00A94DC4B6962E4463850CB8914951ABA8AF0D7E7
54565A27E24786FE346DC2F674D6B6CFEC89AFA98B1A77B6F8603E8B5D1DC764
28FD49B3E478B33C4CFF194887C486567FDC527665F80932AF9F1C541E62A31C
42E4B218880C05BB3C776E50757F5606CA69EC1AFD08242D985FACC1E949C2F0
DA0EF90851CC70E1A4378D9C8BDF4943F4E61FB03557438A16A2A0C3A4CBFAB9
AA9351323EDB23C870A3E81A98ADF8488A5FE97BBD2C7677EBA7FBBEBAEAD263
D2C1771804D97A062812848C7A81D2D4BB826E837E2AF35CFC4F419F698DB0C4
3E9F9CB0FB628AC9A3CBE9B1FF4A0670572F611ACF6435450CCB7C7AD4155AB3
9E748E663DF711803A92BACF19E0F40EB95F43FBDBFEABF356D645C4A8293FC4
B39AF3C806EF9CA11F36E0454E1AE359EEBC3856A6271472482145CB6D3334D5
EE04C7956EE9377EE2224C375AB7885ACDF391BE9C8A253927AF9AB3B90BD002
2C323C3F5ADDCEDE93365968A11D538F59649A46FA772D296B889B79580B67BE
4AAA0A2AFDBD6BF1B9C33D2E4F01EAD604568024B87A02361934B15A2FD54295
703037FFC3D976A25F943FB54C8DCB3A7776111FBF753F7412948C839E2CAA20
DE904D7D1456BBA372D2B6D574E639D8C1BAC7C86CEDB9803827326F4147A6D3
921B9F535260D4EA5FFAC24F0C4F45038E59CAB7AD12F48254753EF9ACF595B0
34B718CE13B2A0E953A1E006684EC236A4274889DDD479D99745A93A475EB908
8373851A0855F6C418B2525AB9B5833A5F6B2ECA633300787DE06908B4776393
C75219832783FDC16ACC018DBD473BD8927F834B10CF9143F3A1A86052B8F596
7E64343A0BEC9FA8BABB00B18BBAFE72CDB6C6535DF22D8F98CB5CFDFA1B8220
2EF71E78FE5F9262B46719FC75CC8DCA6129023704D721A6C54687CF8F5A7A6C
F5FA927F701A5445C72EF24412B0D81470F4532578D6798584C0D1FD75CC7FBA
6B929E0F7E4E76C171150A2920E4FB4699C8A7E5286A37159372E676CEA6BC21
52A52F5531BA7412D4FE382A8CE8340758AEDCC24EA63876BB37AE29B59CA1F4
C216ECE1DEEF5C791A335C1E1A82001ADE6015DB6792A8B7932540F1A47A3335
6ABAF6DB08B36631F00593A04BBC3D5E61630B40A69C00999EA6FD4B3D0AFFF2
9617F11994892A6F6B368D3AB8A6E5AC96D967F64D7B272AF8383736D82ED856
47591803200FCC0A3434316C38983BE32BBE8A4A77D9EF542CE695ADFB7CAA10
7669EEA5C46E34CFB698AC0255083FF3F42AB3879F9B098B2BA2F0DBD6740197
EB95D3FF126D0AFA8A12EDE5C1E4E8F85C95571926E345896163B5CB8F1BD255
3F6FC92DA11F5285BCB265139170DC8FB4294B006D793FDACCAF0BFDBC5041DA
B88D1F1B777A09731E48D16AC13303743F315AB8C24965A7406FAC1D7F0E1809
A5FBD84954BDA9D1DD616D6B47916329122C3B92BB93F32B2A511A96F0BFF12B
D9AA37DA5DDF55D022C783FA7F0DEAE1312F6DB11FF67B0C4B9E9239435E914B
BE9E89290415BCF25EED1F71B28E57195F02135882F8CFF602371738D83D859C
06AD907D9AC9FCE3280D61DFC5263756C50C19BAC31E9E0C08E1890406AECDD9
AEA6AAA8C780CA25CEF919FDA2BFD79F8F38EBD00FC97DEC96ECF55A5AA37BA1
D1CEA46D9E69D16EB9366483B8C867AF2D6EF8E73C4A53C193A3E1729921C790
177F1C47D431E9502241F61F5148791C6FB0E587A01273C71907C59CFEE3C564
2BD021688023B4B5B33BE92A0310DD612A2CEE9988D4BAD5BFE04AB8779A077E
276649F755B02FEE62E0B0450FAA7CB9B704B8BCDBC1AC8F48F1A46F19035AF1
BB31F76574B9CB3955AE18C510C3EC9DADBECAF085D96D3D0FD2D5E9B7BFA639
49C6C3F6ACDB5B52BBF4C15739916855ACE75D72BD92E6CEB11E04A32D687A3D
E4528C9E61C9F6B21D1FEDA48B197B121CFA00032C1C4606DCD7C73E9635980F
0EBB0B04647E765BF95032D8373A90851A4E4075CF3985E7D75B1682500AC8BC
83C39405CB29E408AE5B6D4315AF193EB08FFB2407FB95EBC5B6B21A54214A5D
DE0B23DFF34F9523DB2CAD26CCD71D343C898C5F12F17BF76BDA258485514546
14AF83486A34CEE1C17DF2CA6FA4F62601F29EA58CC3FCFD947D9A160CC3E68F
48B3085A05262EC60AB4867BE2F7800368CCF435AC4FE8C70889D2D76A351D15
9FCFC18662C3C1306D6E3FD78756177FA1A6CDDBDE5CD4F70CCA5E99CFE691D7
1BD29A6DDE8802BBD40CEF42D9AB37408D2A094ABB1A7C17767E60D7EAA6C3EB
913FB9819B3642F2B2DF7E3C81DD470B8C5FCBB746750A983A0973ED5734C4C3
906250C3B0C3EC1E4414EA007D2D0D01E9D44CD2351AF96906F6812778730ED1
86BA1B346DDC72A7269CF22E90CEDE5E43538A977C94968BD2F21B741042F311
138E6969E75BF0276A09383D81DD3904D85C32AF4018D635DCA1531812C1661E
7C7E90390C732F7214E650C8B1F7FE86ED46066A4DF35F891CDB5E34C661DBDA
A658097A0F3E30FFE1054DB5A32790ED8822EE69CD6499196E85ED76735DE0D9
B5D5AA9F42C1330293D1ADDF7AE531E1BF18499DF8C812FA9C077AE582525C41
20FF2ADDD4F13838104D19912E56D9FC3F52F1E843C3B7EA97874FD118F0483A
C7BB931494D07E5ED2FA95BF8D915F9527DC7B8E6F61A81BB2866DE57AA7A11C
37C60965C54F38ADC25742590ED2A819AB14396C6829C8D7CA8850C4CC8AC536
7B366EBC90C9E37CE760FD42B78EA146CCD4F08C6EAF9959029302599A09A9B6
58BABBDAF34C425F822BF5FD6C097D80179D2EFD2936C1BEB264F5BBB64CC76B
F1EA05FE1895D3045B34097D008029BFB0B1255C71D033E686840831A6C7BAC9
2416E972393DC268C52FDBE2170632444BD2A8CCC94C032AF44E1097B815DBC2
18C43E418B529E9BEDCE3B38F9072EB86D70EAEFF2DCF00F16CFD9F44C776360
BE5D268088C01940092DF7F235E65B2D6F60D76AEFDBE92E6B2244B1E6A9E363
0D1188C4B82075C60AA8FE0DC576BDDA3663F22FF707957C96CE54380CF414B2
06850B3B8C0280FC67A306D210D11D0A563FA108DC818DCDAD47578430FF4C3A
E67D9136A6B029A171517DA1634157D0048968A0F0FD99FF2651A9D83D24A5D1
0160C166EA8C304EFF8519398751D8E0852BE5C13B41FCBB6523F5726CF2A49D
41A179F9CA81D2A44AA6C260EFDA321359F954650F7F8F1D2603033FF0572969
86480C6C16BD70620D97B5169579361BBA8D8DD59C70CB09DA720658AD5BB99E
E5B4C8D474F099CDBC8C67873863539C7D3A95B8EC050B7F063E32BCE84B753E
9B91158E1FB4F92F76FAF9A7C0D65E1C4668265EFE6485F58C56589E8BC97D73
6A3E996ED314ADCB543B720FC2CE22C34CF790551D1C46AFE2BF610467CA4FD6
FCF0CE21B44220443B8459EEA4DD2F71DF17D2ECB26B273704AF5EF8A1AC2CE2
658B8527745C6FD19050DA58F69F9662C35CB0F6544EDF40EAF94CF4BA23CF31
8DD050700C91715E326B513BF95DD8E503E71C8C0A7926AA5643A7F091A006D4
97D3B89E41EAD591C03DE559CDB7A45A9F196401D6FF57DD76F6041A5BF89C5B
67918307C8BA583DD9A279FB94D21D943D332B9228A7809D249DE4DF24BCBCC9
5E85894A81F1DC2679967B4FBC0B255203545C01B0BA4B5ABC1004DD62587DF7
29A99B4DBC1EB2FF7274C6725DE06E8716B41E835231B01ED13840A391D296B4
F65419D9F90D45142764C7E4E80F8B4DDC2A82D3FA80BF1304E4F413B6F57603
FF47FF88A439A7AEA4946991AC6FD5C0568235505B90A7AA4CF7F6E3414CE500
8F36EC17D6ECFFBFCCF21DFD5747609C95B9977E2A7B3B8ED36221E23DDD0777
0E1A22AB3EACA520A1B83D37D272BF790A2EC458E20DFF453FE2BF2E1C37EBA8
99BC61C69033C9B057D72A796201976C65304FC86EC15CFA7AF146B60F049863
F6AA29CD6B7B87EB33292FD989E393DA2AC81A5F78276DFBBC8362E48FF5B340
63E50CFB9CA4A221710F245C7DF4DAA1C5F2AF786952A5765A068C5F247BD874
72592808C088D967028B96B1B0660663FAE2E26DC36BC84E5DEDD25907CB5FAB
AFF5B0E3183925680A35758B3B9AF230B1C2226397F98EE3335263AEE91D1DB8
3CDEBC0D0847C53F2F8D57967370A7D562EB02A302BA4A00DF72DDE37F75E52C
3778B5130371A0A5B53E6C45991F873823DF9FF8D21330BA776B0D6BFDDAD0D9
F36822E3CAC81BF76C29622F9044A3AF979E544F00DD5551A98F338822A9ABBC
E7C1ED9E8E1C67C3029DA91CDD1586DE304C642F210E02A3AE9284B599C63F2C
3403D9770AE380B7F7E40C88CE49DBBCCDAB9F55474A63A4A0213F3D420B4B56
C7F51D96F6EA8EB5F9410D24FB6CBA16B7A866796D6D72DFCFC9B06F37462C3D
C344DD33CB5EE5801DA9BEEE782EE369DB3775827E86B2F3B44391699810348D
D73C1D3D50E299852BEC1A10DE7101F1C68576FB44E62BC757322B1835B33091
4174E893EC0B4C04FA5A82CA24A5F74B981853C84DAB15CC8995DEF66B69FE6A
83CEA33128D8DF3075300FB78671CEAE242496CB70660CF17067A0AA4FCC3D5C
AEA4B4ECD9BDB91E3921969B9CC14EAC1987147A55594F1CA14637BFA604619A
6B73A5C98CC86D69E5D786236DC0EFD5428E480ADAC6FBA4F43B8C4BBD6218F9
C20A254C224CA0688B6C93A1602F58C3FCB4FA1EC300519A36DF86031250077B
0E876E5B62CD35A5CA39882C6B0E22118F5C2CF0BF7446B17C513209E4044F8B
28FEA39B4C6439A262E4CBB1A8C9A7838F8DE1A0330593FDA6856D38528D9F41
97E13DCF52EA76697253686190B60EC5D7D0C44E159650EB5F0C8A7B7BA4E1D3
54F8148CE1526CFC7290DE41FEBA409EABD7034520C985BB93CE582C78D45CE5
4C8B1F526B44B446BDDF7F9BF8237387DCCCD01E6898426962A45CA739E00B18
30FFB01A9B9E36F1715E32A162F15593442E0A5D2662F1C0B865CF8B7DDE664F
040B07BB5F52359B7076D5C3C4C9A3430CD703E0B8E51D23F48E6C18F24F8469
091160DFD4A979E023CEE0205B591711112E7A4517FE097700D1FFA3031B3979
2B869AB71AABE3CBF3AB8F76AFA0DA33C0AC62AC54735AC334C086C55FAB18C6
9A0ED9F341FA07DF46AF8930115F832D6BDAB2A74B7DB07ADDE076D093E30A6B
2860BA5973A19EB312118BFF51FFDD1EC483F53475A174E0FD15E95317F827D4
4BFB77F112CB8F8B6686EFB56CA992E7C20B3B56F47006006225A0F1E398D0DA
666A06D078136D61A9BD340AEBA779CF0B02AE18784F23A623FC9935F5870473
AD9CF4AF827CC62A761566723D25EFDF315F5EC708BBCDEAAED1288143368041
44783C114D59D3CC302E4E863FE635E4B4D94115A80F331A7955A71AF0BF0B20
E1D00E487ACA07E20B5C42DE54D4A7B6A3015269DB1C8C0DEC6F2A9BD4FEFE2F
25D49E0C12F15270D171189099BA03C2C94D3D2F8DAB7E47A69E934E18396ED7
711A93C1879417B483E218E0A33D637F18CE4FBFC072851521BD7422E81203C3
B278571FEF5E3BE1B4F3089932369CB542925FE084E33DD035FF17DCD7B8E9C4
685E4D9172E115DE33F5B292863F93A1B7072378B44CDF8870033A28222BC8D9
DA1909F3BD54BE382C60D69C9DE80285DA49DDFE44D420876DD8A2108B6453FF
DD4ACDD314D3D608E5832F5603C2896DABF517D838BC180F3EB689A131E3BE9D
7FE91346A5C0ADC0FB477E64F1AD9FDB31B4D4445CCB6533F9664E712644E130
9E321AC3767A901E5EEF08EB10191CDD9250F14FFF4451019C8718CD9810FE2E
D0CFD64287638856DEF2A3B20E68AFB63B5ABBC15FF191604BFBA8B295188798
5FFA1B7A279D43F1DCCFC967E956AC8EEB3811BE2BC948A926FBB8016966A2B4
03BE7078B7C1B18967E8E6D0F787A318A73D7D479AC6673150F5488A7DB82A67
D47AEB007AEC4364CEA3FF695D599E7734B3C357E365FF9A046D3582FA02F274
CFD9B5413AE6E0F6D34B98E9F793E6C86C674B821C22F49A1EF8AAFF201FAFEF
EF909F6290130FBA1AF83D858B2A9EEAB8D7BE7D17FA90596CAD531C8F26E0A5
7B695C72B40BC408FDF2EC6E72ADB62A2E9974E3774D362DF5A1EC53F38273FD
2989718F2B00991AEB70413E0EC1E7CAAF5472D97785E35112CDEFCE5E927498
05DBE1B0C05AC9507C47DA237B6439575C23953D5B8A1120F0D12089C2327F68
43D45E0661D09231264F14EF7665429A667391C0AD4D82A933ACFD1189ECF253
F1BD0924AB78BDDF177526D554873ECA772B865162FC33328E1974995E81F22C
C9B63AA8291D791A8B29CCFE9CD3B9C317861709411218B6875F63D920797763
0A1832B5DA52CCFB1F00652BEB5E6C1D9D62C1D788554CA7351753B9E8A4E788
DCDF8B645C2143FECFFF5C7774DB00EB915C3A3F04EC2C85E89347297578194E
C042275689C239B5DE093E154C1CDA2C40EF97EAB587F4A711B2F239A11365E6
034F7ABA39A0715F6F4E7C9A6176DAD382CF6312CFA909466D41C474462B6D8D
7079F3C9105DD6819D2452D01F393D464FCEBF55E896B518C26E10F395C72CF2
31995D77233DE90C2922682DD82B7D3D622DDFA16383BFCA8A3B3E47F0DD0A59
A8FDB7C56C4F1505B808041FAA80451A7B560BA88DB7FE3C545CEB6A46F3E5C4
489992EE1A42C19DA52E5B9499603DEB72620AE45F1C046E7B342ADD86F6B286
8653BA55BF55B6746E856EDCF8D0F9BA2D70F5FF9C3C823EB3F850F276870215
25BCB886B6CE9C0E4AC65CB5FDF9C2B3EE714F68C8EAFF2F6706A647595CCD06
4AAECD5850D5D20F26E78B8C80E92DDC5E0D54F6E2634147D267D5CB0D887241
1DD48297FF03F33E6C92D99BC2ECF2C47841C0666887A9776B0B6FEEB1C77982
ABB8EE6140B2703A88587B2B01C3654B195AE60787DB3DD42E8DDA3F06B60FD2
064B5F9DEF3A78505C414A7DC8699768873E869644CD1D850B4E56E7D903630C
768B0E8C25880635EFCFA11E175BB2CB02675D3A0056DB553FFCCB8EE4A9594E
0657052DADCD1E9F8D012D9ABA5B2424E93903C80EC33AF485700B184B91389A
2FA3AC852DF8F0748C75CB84F16684E0D805AD03CFEDBAF0E033DFD0E7362631
403529A1ECD9ECD66FC9D54FEFE2438E920074D7A7D21A022C12D9D8CDCA9C0F
E9FA976FF129EEB95EC9CAD2EF98F54AA5E59A51903070FFD4B14A93F868DD4C
63923F660A0A23533C84D7BD52C64E544959B43E5890B89FEDA87B3A963922A2
9E00BE8334ABE16694BDF9384546CD1455E98A7696168BF96BBE421D2EA0B2B9
0B9B8A38465533F263A722EFDDF91B4766FB91947CC743CD6637B2932900990A
1F03633FD3F9453F98FF1E8FFE895500FA51579F5F0D88CD5439E4D023856A27
847793C804BA8F97E9582090794B9F8876C1AB9E277ECEF046274CB397105C91
EE33CA9DDBB6106307D092DCC56A21D29903A1FC4949AC889851CA0782E78356
C5F6610A54A0915340F2DB41C31FC2ABAD23AD8FA8766D132335B2A4940D4037
B812511FAE2A6883FB82BB954BDDB7FF0678F1546D27BE18B22BE213AECB0851
A8F2833E3E887D34037936969466D99A6B5E670352666132CA4058BB3B12EF3C
1DE6C11079E7C6ABD40CC1F747A5282AB1539A899B48A029EC015CB0206A1CF8
EFF1BB9BAF9477467184AA06F2DE6C47C7644B50CB48A95CA77C402166582F91
CE7B8BB25B08ED32C2970F2232DEDB4C0C42336A3ECC10486C74A11AF10E9EB2
D08B264F93947EC13DF7B666F81C43166CE59817E0F166CD48F80B0D4E67173D
80CE8981BEE284DD61B29D1A448260F30155B96DA51F0F23C6A080503F9511B1
3F3A3B0D9FEB53FFED2994F529E8FF5696EBBAB707C50FF6708F4AB5B05C531C
BF144EE49434D575CF2EB8BA6D03BF5EC2A88AF491D2859E3C7F0AEA6ADA2C41
B5D25913F458FE0483AF93D9CB22452D028F4FCB80079600D37878DDEB98E3B9
33FB9303AC10F5C6D783019AFCC12020DC7A6C18D0F131652F3D26725AF64F82
EC77BFF8C37BE2435C76EE63372242D5516303032CCA7A8148EEE3C833794085
33479974517228E3E6CF1DA73CDDB01EA1C7DED45F128280E2DABF36BB667821
A435384B8D0CCA2920304B5BA84E8D3DB8F4AFE35CE5CE88D17D4C311CF925B6
E23403E118E84ACD5635E36FDBA51FCB4F7B3C625D0030CB226F6720890FD78C
E37980D6ECD2464AE8B35B07FCF17D90A8D6549557438B020598A301C4AEEEF1
7D6D719CE2534E466D92488CCDA44DB60FBCF35D961161E94A493616376CBC74
1F1A8B4F909D4791D52539B12287DFD0B90AC064A5B0415D03C4A8B5653C985E
DFFA7828DAD8AA70167C5BB5D2653B2701FDB0FFFBE2EF4BBBF1B07DCBD7D909
FE62C24ACF751F09EF30C49374364AF286DB39F36AC8B257C46BACD22A504DCD
40BEA70F6073CE586F07B0CB2988FFDA6C425FFF6966BD9320D6BA55F2D3F8E8
A7374AFE2BB1121234BEC98B9668C33A0D9172DF3B1B12AF2E7528DFED505186
DA8B2A0BA7745CACEF9C42627604EC3194131B54F4FA7FD45DD080DB53F5E50D
C1CCF79A359B81AA3F21359D297B940CDBF91C348448F45C90F7BAE63A8A6812
CED605C98932E6D2762D2331F145758436D13F1FFBF4AF353D88C1699ADDE69F
0A8684D31CE111F11189E64FE3F8BE1DDE1A7F5EA9602B8DC78428E144204B3B
AAD1943D2594C6A0DCB9E04BAE62AE56F9DB92C6A9EBE068AFCB0390B1CDF163
579EE3AA4C2861E0ED857BDA263C991B1B945FCACF7C516F54C844F50A509211
D3D8F5EE4DA72C00FF06A45F06BBC34E1885BA40DB68AFD94F0A0DD6C3EE678F
4DBFBDF802D33CEAFFD7122C974F7DEA177DEC4B0AF4E335169DE363FA936078
F7F925BAC437814651811A05135F5E65D31021B0FFB1499AFB6AFDA61A245FDA
07AF6F800B8432C37C6F59E86317F180CDDA0ACA29F3FC1C29181FC60C1DE768
D00C9667EC91D4795C349B347151AA9DCC7E066098A036460E23A51CA29293C5
433526A485413DF12BE2B2F16D6B9C220045767D5F7C9512F26AF81944670327
833A72A3FA999D271E5924B8DB4710038BAF68ABE6B23A7BD4E92D147AB4F42D
0439E6C5A749E1CEC2B3ED92F930F223A4A681FF29DC9901E50FB4DFBB30CF8A
2DA53BD04E67BC3BA2DE1249050AD4D21C8650D6E236C27603E37F13F86BC4AC
3CD25A80EE73DB4DF6A0B1893E6DD460DD5E894D400CBB40EBFC231CD9DEEDC8
3E1A0D999C66928BC07702EA88F839DDB21E66B080F9C8C4FB30A5B854DFB5E6
B81AAFF8A2691123CC4CF8CEDDC8845AA0D75CFDA259E04429E6045E18D47957
412D85A292AC134C8D39346B8C93260E0EA9D9E91B69C56AECDADDA74E3301D9
F24379486344930641280E7CB6A55BEF2D6AE8E0C06ABB924D2A299DC839B5BD
A0819D4CB25E64ED307059DF1EE5BF17ADFD5A263881CC025B3B1C627D1BBD5F
B4B994A4DB5FABC4D2BD349CD7A35456D3FC694FC1F7DE68BB0143DBA6B05D6D
D94FD0B0421269FF1E1113D2CC3B07B5A1E2BD7184E0AC7A6F5803DFAEA082F4
FFA443A3A8B5DE73DF3697D65B05BDE5DFC807A959EBF5173C82ACB08381CBA1
A58654726A4FDD14E7070DEFEEF00F399E2DFEE77FC9D4C073E734E33064E671
08B61A8B0B7E929FB3E9521302BA5DAEB35A54633DE3847CB8E97029420E5D4D
68B956A15C9768C2CD99940DD5F24D1573D83760A8AE506A80FE408233B67F07
CC3C1D76A704C87FB375A2E84C5C20BDAD34EABF1FBBB75AC70E7C6FF5D74ECC
12C767EDAAF70EE7CDE64B555903F7D77171068EBCB33DB6E632C9A09F92D02D
4BC63A7A60085141F0E5640854436835899CCBBAEF47D9D68ABB232D77FD65B1
44B09CA9614A6FA36E66843E1D4A82EC727679B976376821E4833AF1D469ED17
20BBF64396E3363FFCBCA87654ABE8DDD02BA09EEB89AC17C6C1DDEC94BD28A8
08986C8340B0D67371F33FF9F89CD3ED82A7CAE75FB0C1CEE8C1573C1141341F
5C08BEAA501D993164F37417DA64BA04FFC0A281168942F08E19DD329E718475
CEDD11886A3B96111B357DBD525387C484417E6F78F72670B3262B1DA15368A8
025923190F18F2E050DBB76E21A68A97435522F2CF679BBD4FDC839F521CD417
632FF34428FA5A9B4542C30D069ECE28837383F03B98EDBB0B95E0D22134DE8C
CF4E9D73837639668333CE1DF7A7865BDF6DFAA7E80138E6A61EA524D1520ED2
74677C39DFEDBEFCC4F2076F8FA8DFC9A12F3F51E2DB88FF4746ADF0BE1A3887
F98AB6ADFAAAFA61FA67329163B2A74A589582863D54F776739608A069DE3DAA
401B3EB77286D2BF1521625394AA78E1DA968788FCC1348EFE8A411E878882F0
4B89E8B0EA53E4C44B0CF2984A20D4AA6E56913A8F87AFF0D3F594B59B94F916
7C84D771851318501566FBE758BB3B30838D03751D8FF6CFED2CD634DDC6C7B2
3C8DE90FB4F8920DE5772A422EA41388F9AB65763B38C59B8E996CCCE040F211
B89962F60E00BA764E87043F636B31825335995B1FCB5D0B118E12B48C17756E
0799680F45E6B61ADC84B825C5DBDB8290FD9053617E62D044C12CE10DBD341C
DF45430CB14FC4281111FD2C117572D607AA1C2894F80733DFD9C91E0FE2F0A9
0AE71CEB029B0C859A1A8F4ACF466B1512AC8D183BE6B41CA9AE20184C4DF8E0
2C3F500F8C94B7762899519F19245A631D889D75D541DB18E25D72A7604EA940
7FABAD367879489CE1D5C4BAD26F6B634BDE139B9B128C23D65581F6E7613083
6A822649513F1FB647E013037E9F426CFEAB149F19B53FA7C68D8711D39380C8
1C2CF4D138D9254BA3F6C7D0EE608F698E8E928CB10FB3ABA4086EF533C88CF0
78AE1943E433A70E491FF6C8A6AEB17A0A3B0350ECA0BB5E3688DFBFDCEAABA1
406A2E94DF834114193A1DAF4B67B1402A26E575A833ECC9B8063949F6CB1A0E
64F89948439554E3962A6E63F571E089B708C689B02DAA6E90BD49CFBFB5A286
4580318F3DD65B64CA2C5A7F5718B0CACE56F2F2962BE28F17B05B4E07FB2A70
8706FBD3A8B9D1F1D4B31BB080629934B7CC7F09954BE6E21E3ADB886C2828B8
A8E8477936F622AB70CA0A1D647EC01CD2C3E9AA53A58C22ACFF2853AAF71494
D42FB0B79F5EDF542A7E1C9DBC6EF45BD0CF8480B36896C2ECA2BF1FD6125EF3
3D577F884A3B76C0EDC2592860D172CD7DB6F7C8301841F073B20CE5FFB8CF08
36940557A05C923012FCD0F05CE657182C642992FFAC540EE7D422529C1694AD
0506124756EF50C51AA045CA091C479013C2551C6BC549FEB7D61C688B28E1F6
BAEF8A961044099B45AA1062FF82F667CB64D1F4D58FB0D568D3825C181C3358
5D62AEF415EF67026942AD59EFC81AC6D310F7AF5F17BB86637B28925126EDC4
BE1400A3112A39E43408A6775A50E7F5FD5A8DBF1BF610B49B7D9B0FF8B3BC64
B3BD829620BCD4118D509AE324B21D645FE8380EC200FF81B7CBE8418C5C4B3B
5C9BD47A35D6740134DE728BF5B2E2E07D67F8D41AAE17F9C5D4C9FCDD447B4B
DE7234ABD89516F8B9C5716636902CF159171D658CB90750BB457D218257DAB6
D5C22D64EBCA4E52BC24A307E997D2F2ABAD2EE296A34C97303F89B1ACA3AE6C
BCF60E9D354C0752DE7305E8155CE707C59B29FD08F42402DDB642CAB62AC782
6DEFD31A3E6661EECF34C3C2C29D361619548BE10E0E8776082E3E0F3BDBE039
3BC2F1BA181930DA50FEEE961E07C694033D7D81D8BF9119C120385B260D590D
5E589E9726D6E00F80A50A3EEC42C34C1887C2B908CA7A06E296E133E2BE2A43
71B5F748397F818D3CB254E2599CE15413AB7C6BB0D76E0A4DE9572CE8DEE76D
16E9907EDCB85C17CD15897E7F4E05D9E8E065C2CAF24EA2C186B4D5E840DEDF
C69EFF95241BD44331687E47BEB5B97ABB44E4E70FC87F0DD7AB5AFA3545CD94
714924F7706E45F5CD51510E70853D0899E45569E67786BC890644555D4D4A37
35E36DDE2551298CE39A5E938E87FB06DF4E5534734E0C21FAA2696E90D90C08
E986B33C1114ED1841949F916A7E20A50E1270142CC74586F0C9C80611F595DE
9915C9DCBA50D5CED185B6143F1DA162DD8D1229504172831285AE14316DF6AF
614BEECE26AF5F2868C5BEE41423A3A0A6D1A2C9CB930F98466985E985C1AB0A
51EC526073949CB5A376DECCCEA1C4D121E072A520312CF8D96A148C14DFFA44
8FF892B4F29A95AD5A817E74C7A209766569D33AD99C8C21510C429B9C31FF07
A1FDF59B4C8E8485FBFA9DA63D98EB42B67A3BBFC96007DE23D385C6401FDA0F
48979D4F055BAF8A6A9513063116D9F14A9797A06DD5679C5FE7DCFE25F99982
D130EE90B7C8C082053B95AE3B6453837C168F0EF7598EA0CE51696A8A870F4B
E0A26B2EB968C4A3BC887F3D48031BC6DF683705513C76FD0C15ACA39DA598A2
EC6131B5FCCDA9AF0B2F5EE1BA01246FFEDAEC702CF53CE51388C5A094810880
9E4F329C661393BBD9CA4C5060C249C56D2B7BF43FD961F4F4A92F0B08D42795
7C409E732BB6E5DCC418CEBF30A1871D527E18F6F5C8ED3702F5F7DA7740E147
ECFCA38F7DC62352113DC09A02DE26B25070B2F9C57BFE8DFB7722167C9E29EE
41C3EDCE5D9993A94F54F0B30A73A84EF3623E3B192820B9CE112583018A1071
2AF8959B297CD1CB198B11213CEAFDA5DFF031ED858F5B2FC27D46D9948704E8
2F7722C962F85E9EED3B6DF35E4E289F640212809256D050689B61898A3C73B2
65A551F6E21B74A89A06DFA1F3B198A59B2A3B1154BCCC3DB56322DBFF9DDCAC
68031457950C3F4960A64B473F982FE5A622D3B877F3D3854B64AC9059396770
14679BE888A48A0FCD5FC9CA339015C1D8F48BD4F3E953A6D7074124D74EFC15
0A216ACDE6A455F55F8BAB2FED991305B32831904C37DB17136CC5A1BC2CAD85
15496977DE67CC32822C5205BCA53FEA6498399136F233D865D18CF11E15FDB0
ACC71EABEF00F49618E2404883313B4450AC8EC449DA7EE277DA24C7519C242A
E2704E0938C8B3873E1645BEFD23C775FFF76A1A27596B8B35C2675B233910C4
EE43F29F9573210985EAAE19F9CF46D3E8E5DA2A9EB137D455FF18F20A1F958D
6B386634F18BA64768A50B805F01E26F03A2FFA131F2358BAB6B6997B9104A29
3E316CF12C7C8E2F8DDC72EF55B679D65D2D8325401065B7E6CCDEA7BC72F70E
1F3B12E2FBF198D276A75B3A1B944854BC97BBFC7933C7B0EB1AE27EDF414BCA
A5E9612576F2C6847E11AD4B79ACF6371B8B3454B08453583DAE92DB3E5E195A
1C5174B7128BAC102A148E192D4E23A79CA03E94E47E3D237D4987975BECE584
DF795DBC16F63BAA6B242B411C05106E015D921276FC9D7A2EC6F927D547D524
DAE9047BABD6AC6108A2DBD84342583F30DA12DF7BECEECA87F9F98F72AC66E3
99694250C5185ADC45B1A5A0B86E0D90ECB3AA54EBC98F52CD6F10C38F47E946
E0A58C8356B870502C9F48E15AFA6E6FCC7D021573620EA561DFA6A4150653BF
5932C7C57A075BA092996FF24B4F02D7DC65004C9EDF3C0D2818E785512D2B8A
FA09C5ACE251FAB8C0EDFA863D0E489E654236BA9CE398230DA9A0EE37B6B191
64BC57DA13C6A837025F05D6B142DDF818E70B5233DCFDEC8A4493D0D81AAB5D
1077D1E2038B69D28B4CD3AA27698AFB402D7F23FACE1DC42C0F5CFA28148F24
513A30B3DE16DF4DBE27F2C2109E1712883100C0C23CADC1420A602E249F42B3
C802D2D9D2A424748CA62A204FC98531E80EDEB08C04C7D0926906A952F65D76
BFADE7E9921BE9ED84B3DDD36256FBEC0A5DBA29BD454EDAEB060B61875707D3
024BDEC85E91F91F8FB9482D637CDBAAA0CE2808E76D34B3C107D35991CA844C
E4D168A6081CA385DA799ECFEA91B568321DB3C6B725152D81DAE90B711885CF
EF6E43A988F7A2BFCC869D54198B0AC7DE1F53AA72A903C42C3444EBE89471EE
E5F5253ADB3075452153956C3C2B79B65D7617A4E6BEF34871406B35B74BFEF3
D2F591CEF5A91C3734B0F05230CF1D566B740E8A37E54C42F2ED3281A5476C11
75F9C007EA4FBBEDA4DC15D21B4D7F963F8183B90F225A419867AD3F9BD02792
F0FD57874E6B9A6FDEA2BACFE15293F1EE2FE444D9A1B451028E8BF450210E96
1195052678C9B832084C655FA90C2755C0DD34912F04D854D02687E7FC91F959
92D17428F251A871B01B1963FDCB6D540FAE0D1E612881690795B7B084A0B295
B036883E37AA6B6A3812CE6EAD1D61042604850EF192D82181508903EC9D1002
38973226981E7D7159C299C4EA61C773B622237ADBD409E2F6FC788CCC1473EF
0ED78785D641D6B04A66EFB7C026C547B4E3E5C9DE2A028C5BDB57585FDBFC17
FB3603E08A9E169D3B61A3AB8247396A8544B971FFB4FA2EDC598084BB61A05A
8B3F290B85D890FE26A725A2123AFD81AEECECB360E413BE8B6B97B493A04D0C
FAD6A791C69C64BCAED325724F6C72AF9E97D5F43E0C47FEC5876B203879F505
39D5A06A46384EFEEEF879D4FF70E224511E040A0943472A046AD7AAF6C48040
7C250247D8F227E27D802CC587600904B3C947042326564749A17F685F8CCE67
5B21F299AFCDC24F83B340138ECA1C3191C17E1CFC42BF8356CF669CBE693827
A54EA266A60C02C27F43D757108F6D6E871A2B87A0B244F15C9864AC6B341427
7667EA79D11142D2DBE2A0DD11838EFF5FE931115DAA608A5EE5446214C1B420
A67421FED22508ECBB2F21BE5C795287A772CA28FDF3F91F20EF7D72E4E74716
F19BE9BC488B0ECFE5B2DA642F2291C89D52C034B9359F0392CD0DE2EC080AC6
36014C4A40DD1DBAFE1E861654216A715D2D026927CD377901B5BCF4D7EC8611
7946825881206C8974A77776A20AEE7DF75C984B15151F05B9273B40E280080D
F8CD69CADEC105337E14155C168C26C0837782FFA981EE4ECFF286C1AF6C3229
AB98BF1CC2BA8AB8718B4D7D5620C181CB264BEF23C000E9239FB1F286549737
D1584FC345106789B173CA8803DE4E1CB913E8871087AD5C56384EA8A925
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSS0700
%!FontType1-1.0: SFSS0700 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss0700, tcss0700, lass0700, lbss0700, lcss0700, rxss0700.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS0700 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-225 -320 1645 923}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA81628BC4F6AA7779965511BE9B549C1DEB7EA13
07374F30EF0E69FF7B4A9164CC6D61E145AD47A03B52CFE93307B0087E85D56C
1AE4B63BE34DDAD3B78D8BF4B7475870A1A4A445A8573188DE2E739694EDD593
E8DFEDB6B56F7E5A4ED7A6383B63129994C25AA0509F5AC900676CADDC5C7240
818A46F156684EA78B530BDFB237E941A0340D0611DCEF083E4319A7986AFB29
901B2AC446608EBE8E1C277F59AB0E679868B1EB9CE8F8CC77FA2C8D2AD02922
C14C36EE298C89BD0A22E7B12F1164DA76689B6F0627B3DD2598CD71F9CA9EA3
A548DDCA2185616F25D6BA5A89539EE5779199C428DE3C0D670A4F2C375A34CD
A08C7D4FD027606F659AC719F8D8DBA05DC126E4D17E4279F68AFE669F56A35B
7F342993A9427D303D68723CFEF250BF177F45FA582E97CA4590A9F7780AE434
6324BB63C9A7FF75B51F70A4699B7D718A769EF8EC3241DD25D9622237BF94F5
B5C1202BEB7238692EAEE1F74C8452FFE1380E446AB457F3A33316095C27E937
B7228C7197AE6CA32321C54FDCBFEA0D2D87CDC1187B4D7CDD8D18A360099EBD
77E385878A7FA8D49B2E17A89013F146F9CA51FFD41A6CDD154675706BC97E19
63A6C27A70E70A3B70C8AE8D52DCAFCEC22E7B09D3C498D40139CCBC24A62773
F634E65BD8FE3302DD09ACC81C5BE3300264E3DAEFB1E35F833EF4517BE1E436
708A71FD430113C254758959FF99B314DF536A07F238E7B26A36ECDCA0763099
A22C784338583E1D059A62C4DDBA75ED200531441544AF31D851FB4F3860AEFD
D186DBED5AF1FB203F7F3F7632D062508526283973AB59B7E6CD36404D977863
D6B4DEDEBC54EFD5548C48E8086B6E3DE0473584728294101C4762D9E95B4746
BF23D613BDF67E57E3A9D007E32BF73F83820258E869FF3B2A4227916711A88E
09218A7C70E4EB6AD125C752AF7DD393558A441EC9EEC6B7BDE144040A4EB7E1
E4413A5C3071D204F98C85D0BB87589E8D30FE07B150D25BFB194E8F72F4F8A1
4CBF9157447AE6C7E5FB8748B48CB160EA6FF57DFDC72EDDF851430564D40960
BFD7C12014D47A363716B49EF4B1C639A1381991A4CB77CB2094B4A0447DB6BE
3D5FBCA2C323DC0D3D19D14D5B84323450678405729FA64B31B89D6BE54A92D6
3EBFBAB59869877BDE355812CA37225FC2F508A88CE2BD10913DF9B642100FB5
3A84A8DA1D3712FACEC079C74713ED37BF37536A07A7DC287182336B769CFD71
F3B73213FB0E63790DCD609AC790FB9EEFC002FB61AA0478A60D480F83213E52
BCC8A1DA627BC3064CE1AF8F79B5522C0493AEEC2F8945783A3EB7A8DE55BCC9
E99C2E7C903AE04590716A6D741730EDE2DEA3FDCA4CE35D25CBD364D080F19C
67936247A9F121A12E2AE587BCB1F246463812A24DBBBDA56596BBAF9B5A61D3
2621D5FAE49B3D8B81CC338ECCE4E7EFA1F79A5A43B5BAB4968AD7D5F36D3D3E
28BFB06651760842271E82966D005B6FFF950A4911CF4FE9B3F225440DC1F6C5
0A8C72FA194A5CE794128B2423ED45134756319FA22E72C0C522CE20233C1003
07218B1558184CF236FBD8BDE9CCFCE1A3065C314C27FF32A5D29034C7F7733B
15FEFE23CA179322EC338B352F7AFF5E77F97626828281C82373D836A8553712
A3A549E68CACDEFCAF9C9CF25DDA437ED56129B03468B177C20197903EC51852
72737D42832D92CB6632FEAB9965BF20769E671EB78F7531B73CBC11A562B579
A3F59615BB28B04F50B5909C7066F1629B49FDB893DBECF662081367712003EC
226147D06797C5E5249A91F3E9D90DFF048D05C2A2F21919F237566E5642E547
0B97D8DC1FC329D22DDEF90E9F33A4FEF8E63E60A9F5794FAB164AFD44A11872
2FEAB1315A1D7873601B64CE01A09DABDA27288924E4F3BEB89283B2CD1F56ED
14F9826F4AA8FF66FC0C6290C82743D049E9F2F513164AD228F29D1B7641843D
EEF86E9D2721E619A33BFAB920654F3D939468A1E3BCCE78BE901F66E59A3066
FF92CF20716B559A93FE67A964E7CDC3795E04A7B420DEC645045CC70024A354
D9F3571B3889F9FF0A036C0D49F4CE63A536CB52E18E31B1FE9D485A0A12CAA6
B97511F2E5ACBDBB4332DA8EC46DFFBA04194A5C08618C6D25A8D987D45D7133
E72A58E0FE79C07C7ED1A70B3078644C4EF58C1147CC8270B6B6B9064AFC211E
202ACABE394A95196DAA30D18DD46E7FDBA288DFAA294C00718FFA4FD80DD126
34FBCECA001D875718B421E100BE24568875AD119C33FCE5BF722A0B19659456
B35804A1881306BAA47B62A742F4CB95BF110410A07FADC306D7C5B1CF575CF4
FC73C22B27A4CA38A6CE1F08BE811F495C12D2AAF6DD985C40B1D309D13BE9F7
D4292AB27FDD13ADBB94FD6EEB7BAEECE62F49BBB48F381A17E6CC8949DD4107
1E9CA97A49EC7DE7DE0959E476C754EB95912C06B8B2769C12E67EBF1CDB30FA
735DD4B4E1AF689A22D9726511F5A7031E2C8CFBA9C9A44B329278447C98E915
7BA2EBC0A4FAE72F755FAF6BE64E01A4EC94702850D1453A1CCA43F65D8A739A
CC35A8556C09CB74B3E6C32EE1D31E06372CDA1C65BDD9097F252654197F24C1
A63D06208281FEEDE82E449E8956C1ADC998295066D5344986AAE861D5FF5611
A9E4259A7D68BAF10B9EA7F70FC1F4FE8070CFD8BA89C15EF8BEB0E46169F5A8
9E970A4B58083F708A7A73F96B70BEFAEDF86F81D389BFC649D440061383C467
CCF4736B7906B1BB466E3B16758FA9323061E3A4A43C54F30957B37763218E6E
04D79897CED74EB5CDAAA053D6D316246ABA2CFFC6423C5CF35AC3B77135D9BC
7A7B596B2FA6E37EFEFA0229532C3B2A018D073F27D1BACEB01BADAE09A7949E
371C682AEE776A4C6491817E5EA28CCF3322F45574FBE8689B6F34FB4627BAC9
5868EF73522A4ED633E2CFF9A4DD5C219CC0E991E8B6B9B0696FBF5E65BD79BD
C69C348FC2524EED6E49BA6FB1FD09AAB51962884A54DD7AD6927466A58710E3
38F800C14BF66EF5EB040C571FA27549CA07417E5EF3C41E23B770F5B7D44974
3456298366385C80DB394CBBC16C84490BC68D1813852C5D5FA5E86A17A41D46
B71F60D3260FABFE7593E11940EFF64F6069DC797F9282E015B6A1F5E401CBEB
5CFBBC7CE7694DC63D8D09B4A69BA804B9ADB9CF4049B6D4D0CD90B75D3BC68B
8C8463FBBCD32BC9B076B753C8E8EB4988B9CDA0AB6754A2862BE921407516A0
79E9B24F0C3A9C863F4C2FF3D886F5185BF970811A77A7B6E1CE74F64A01FB6B
EDDF2E6FF27F4D91415300F5C91F25A275F18D5D97E9EFF01E008092FC5DA011
40478958D7CAEED313A2D5048D244DE20202BF6071C66236E5318857C3F4D76F
FFAB96C605EEA3F8D8300BD506099904D0574661A7591494320449055712D84E
17043398D847B931D9857C3B14CB02B84445E85E8D8315D0A0E3E26DB6088683
04995477A27ECF26DC78A89DCEB956FAE8ED985DB2BD912A014C009449B6284B
97541BEDA607606D9EBA6E7D4554B341E30FA426D502AF7AB508F5A3FA7DC977
146C4886170931F569313F40A5FC47B9F74D791822137E0BCE9FB544638888E5
12ED42B9DF6DB3621CB3AA1784607195F60268762B383815179AC92118944BC3
D58FC08C1C182D2E1489D18806C15321387A388E68FFBAF99FCEC9D61B3D72D9
E9988925B43CD449FB324D436E3A3D6E1C289B9B87015A90D419F5B3408D4D54
C6BD051B660AA3F1F95607363051A34C38B351159F56CC2695CB22706B18D157
4188C5673F237095A3289150A300E2626E4DCBD091E959DD1D97765E4A627986
AF4B363D6BA80AE73FECD914946EEBF804507B26383C56D93280E20D97F5FABE
A3EADC89E061D6F15764162C8A789B79C0342B0759988C243A337AC3CF06A91C
4547E9A5554C5411AB2DD68EAD8EAE28413561B61DFBC0D983BCDA424008DA3B
7FC06F8EC743288F42C934483E9DC4879624730626750FC302F212E5AA29F00C
EB40DC2AC99B5596A469D9B3A69B4B1F862B102690C8332FE9681D4410342172
682B6DAAD517BF4AD4B83186AAD8C09488F146266867598020B5ED02A0833AC1
9C37EF92F6BD7B6E77DAB46C0B8140A92B6C9D37E4268D2ABD61D1767492318B
4A7FA996D089509DFFBE1CC821BE30F363D43C75287945B0DE47D1FCFE29BB6E
3D0FC052357EE0E668886402A5AD697F562AA3AA092FAA20A211D4684B7792D8
A6B6BA3CF72C62B408B3EDEBB76579F3A6AE0B9FEA6716F601BA31D8A0E1DB0D
25BA317E094D78893FAFA4E6ACBF73F691D37B2E73E6460AFBE8EDCDFADDFAF3
D591A84B9E273FA39DBA23FDC12E56C67571DB1BA58996645A84FAABB6177517
0FB57B1D26D142914BE14C6503F5F39D43D1BB9045C5785C82B7A9EEDC4CF00E
6EED52626EC568110BB5520F4825B34770906D222033295F4FA404BE2B9BB2A7
E8B1E47E52E36693DFD3B83186AAD8C09488F14626686759802213417462FC68
68A98D65F27FD72C7ECD06D1B8CF05F1CADDC217E08D86D95693B98274F38B25
50EB931E0A1E0F2E0F12001755985DADA3336F4A36124153ADC64547BE6D16A2
BA8675CA06C6770499060FC8F916F04D9A9D4080F6F02F35EB9FEE265DBB5A03
2C74D497FA2052A4AEE1131AC7EF914D2EBED8AF11C11BDAA5C395E558AAC41D
EDB18D06BC4BED2B581910D933D8A3E7CDB04E938C67140829411E43BE5494C1
5C81214345EE94536CDADC78A4074CC75114C0128F5926FE7A9137CFBA6BAAB5
078DB3DE917D3BE05B3C9EC6C206CD2B812AE22E17175B12AA30E81B533F8D08
23D0958CB514C051DFF730FF19C8CF6ADEA5DE2C91C9E4515C2DC39C62C3854E
358D3EED44A41A2D1CFF1DFB4B643B69ED7D8F45E68F2A60A84076E875A08E3D
C8812A58D617AE63E77446DD6030801508769DB910A0DBD662C2C2D9A079162D
372C160F48A5822CE3776E8BE194EC5EE4BCD8B462DC246C18C21CF38EA74782
1F4FEF4408E58C550F3962934CAE028828381D562D6820F7BB659C3C78502499
DC233FBDBC1AFCF94544AC9979EBB539381C071D2F011248F5E53226677F51BA
746CC8DC403422420076646C76AE7950F0877919C3EE361DAE300709027446B0
481EF8403175DB0B7EFB639776E6EF471BB8E2F15504A340883AA1399A9A55DB
AE33483986BF72E87320269C319BCC71B0CAD1E5427B3EC42DE5B0DF613D9C67
D2ECF30C6D99EE609C1E1850DA989E96374AEFDFEF230E4DD23E2273E6E96407
B11EDC7EA4CBCF5D8A57A2C6504A1700C8792DD0F08DA33F13CD8B829CF605D1
3B199DAD80396BA6046C26B7C175C9D28E742A8F04026A4E4AE68F2E298FF059
14D50EB0B4F84D0F83B6BF64276A15728A808C76ADE5B721AEC981009A75482E
958EF58893637397AE47CD1B4DA2F3F95D925554667246FB97721C2095CA98B2
7790AF3895E438123F9F58C2890599A3C64D4ACDAE74A3E89A76968DC8C50A59
E0EB4B34771107241DAC1CC3C79A0297F6D5C81925CB177FA2DD90858CA3A619
BAF5F735397407B2FF9D23B193235479F0D8437D5EBB49BBF294D1BDD3546C87
C041F4CB91165343A525E6038A71F00234920B956EA143394657CC787466CB62
29130061A6581B77B91328BDC9D872F9879644D6D06B280D928B87B671EFFBDA
6FC60D592261A181AF102402A341EC5660888068E3818EEE8F77F2D24418F03F
2D9F06194229D2F9F2FC88CB2B4709034E24DB6553A025F760169CBA1E4334D7
2374D4E8DAE4717F17B86B4C6DDE24623FB950B5AD36C5461FEC830E7075AC75
B812BE81BAE0196AA209D1CFA5C8254E03AA3BD8E5624366E6540FE896E01C68
371202ACFCEDA895E30FA0CF17E0FD80252AD76EA35541881381768E12BD428B
67BC897D8F00B2F80D65C960AC4D52164DEA4A010969B14DB7E2FF7B2215C3A8
2BFDB44DA4E54A8F84C92FC373B02284F9060C62A29DD19F7E425F4A71E0ABC5
1FCBA6005E7862DB9018BA8D8C8C771F3B74C0ACC8DDEA1982F0A6F59B670986
C6A81009D3C81A0BC8EC91091CB575ECBB38CBDCF48A1E0924E284DC8B48AC15
D0DA08BC6040842D63C7D87671326167A34CB960C26B64702F3F95C202C75FA9
D37FB26EB5EE5DD2EFAFC07E0370E3FAA1860073F3CCA3F0C3D790FC1982DAC7
6418CC75C59DB674B8684AA0C7CDD8A552F815906BAF60486820AD219033A8F7
C8DA92708053B92836CF854B1BBF8BA8C015686FABF7B8BB808537ECD6F22EAE
49EE6A3987451CC34E6B862E07570D513B0250645AE721572B7DFF5632B9F43E
42D7228A61CF7A97DA2D98DA493604037C11199B5ACEFB28FA9E324FDA701FD9
1D90392861A8291CD0D3A0BB041ACB65B9E6E655AFE53D20E4E73AD17C60343A
0D6983DF61299D256A7A727DA6AFDF0DC109E63E154A5957CD998D2E9B7F1455
11E28D768768D62E369E54EF876C67F7EA5B47910425E1C1A5524BDFE7207889
B1A7F1D86D759BBC27CBA2DF59907E26E783A7E139E8F89A5F4E07FC12A45A73
B44A62602FC06D7C37FFED36B3A1249A06109FE8002E8949FF0CFACD9BD0534F
A02847A4341F88CFC7672BDB5BA9A105C98F893A69874A3F0293D687F8117DA2
5D3C66FCB01DDF556244251C0A6701288589CFACE23E946F6907604A4AE4955F
76168F341065F40286D62E664D818DCDDD6A2AC22E259166D219A2ED688710B6
F9F83C58113EB16454B8827E91B67AAA0AE2654BA6F85AB2A27E9187C3BE89CF
CB303E06CB7548EB7573C1A40E6A47417D718C37C2FAA6792874076538200DDD
F125E9DF1C22D1E15A4F0ED8E1FF88240480E405FC436052C1BC4373DFC80D55
B6F8AF17DBBF27066BF090199C2BFCC7ED2059053B7D4B10EFC8388709040161
87EC0A2FA93CF65FE0F14DA80E080A417E78F9D6A10A365985F7D9A1C4B124F8
B04E98EE2D8B349142CD1675A9D31E01E1DBD900A74CBE104E972C5181D183CE
74AA89474AC1D8ABBA08627423F0B7F088438FD286E3584BB89F9F25253FEEE5
F0E6080027618E020AC137250A1D330CC17528FC0840FF2DFB499611EE3DBCA7
77AC4DDFEFB23F41C7C91EEC8A9EB136AD0292B6F005AA6D9F56CBD6D1C64969
1C3E5A6DD38F3366136A6E714073C911423B032503B9DE07683A74461E08A9B3
D7A3867399B34282BAEA718CAF3398F9A2612A8A1DD884B6E31BC9A983B09AB7
B99B06AD03B1CB79DC3DE6C212FBDA7D1D167B8138B31CD325A589F1EB540058
156AA44E2956AD3F3F2A58D12B0EADD3BD2658B5D2CC027F83FE7EFE7CB4B23D
2BC231005269DB1C8C0DEC6F2A9BD4FEFE2F25D3D90438009C4FFF5F0DC1E6A6
FCC1F86F87105EB392F28C39F30E19E89AF71192EEF7630CCF7751A240A61607
3A9F1E34262CAB4345F674E322692FAD8021BFB2DB4F01B6BF79076258BE9824
39823EE9281603440009C08F3E82DFBC1BC68973964AB81D07D73F71D79F2C33
81DEEEC6913AE1C757643F0D01ECDE8A2041AF07876F4FB6094903ACD0A46334
1F821DEE8DFFAD0E3F3F3A47912DBE33F96D3A42DE41AC4369FE71C39064BF0D
EA05050A50958B5274F8896687CBFCF171FD9C8B0E22D8A09E536CA59253CE6F
8D3433262D4593FA6A5BED03D63028C1574673DC1061EAA6DA798B26E5853FD3
68A66C1027CA9647EE2EB55AEE658C50AB2DBC8C030D558567A04393E462A675
AD5B452F4D973B793C63C6B74CEF1A41ED57E3232A2A4C6E9E3C43FB28EEFB52
1D7D4B3FC1FCF2826BB02C41DB634D91B70BCCC4F83C280C6887E5539F56544B
797A8A1652FFD87CB0D2CD42817660C7B26D6ACFD62C7DD3F600201199E18599
7C0225A1B9C4792EEB64BE224A0888F4BD7840EFB8F43907261D062052946E0B
69089D94BB83AB31CB4CDCE2C1339634DAB87319E9E3072D79559B33C72DC9AF
A8D9401521288B6F1FE944D5B937BC12815B3B5EE1C6164D3A869CE5E2465568
CC6B7CEB074443DA69CD4B58AF33A9D0FEF85749F5F76D18BA91DA8186563C7B
30FABF692EC3441D1AD42312C32FAE78D278EEC3C32B02C62C906E10075EA14B
305EE3AB319DF76873A6F616F06DCD6FD5D40AF38906ED5CBE949EFFC693152F
E8233BBE98F0385D37A007D3A0D79FE440B263D9A2A4D06FCC73ED32EBF5F0DE
E29BEC3089D3EF7E6AC93C1BDB4CF80D306801E39931F1865BD1EBC9CE56620C
5DC6DEF5691057A039164F9EDEB92E92D51871AEBC24CFF24A4D6D5B9153690C
89E91ECFF9B57EC47110A8181F1E7DAD437A201A6E0DE457EE415FFCCC57F58A
FE1596883AA307D2F736B37A98C3C6A9B7E683199CAD092D5611A196501AE2DE
CA274088C53479B8C9C818825440EC208F45D040E144DBF8C526A1042B12AEE6
CCE44D52EF405213E7B5F94CD0E6E138D53286B2B51157F3AA462C1663F0EE15
689471D39F7666CA5C352AAC8CECB597CFFE84D484A90C34E1BECD9D121ADB66
C6A31655498E17C5A19790317DAC4604A96808B72205D5B4C23D5B0A0CE31551
4CB1CF6E1D62D1A435297F0243F6A200FA9D0FEB17D2D3ADD1DD616D6B479163
29122C3B92BB93F59922E1B528FE211AA425C675E4537955C1A0C4C071F333BF
C723D1BC30EAF5F568B1523BDB4D474A840B488474EAE77412E93553FD2D3684
0A68398FB360A92364C425070834191C104A638B02C078B63B17C3477C9B62DF
ADBE3EFFF68A4A1AD726E0285EE4B12CFBEFA8AC8F4E9C51B74D745DF4F8C2DE
D3BB772D7CD0EAFA7DAC1353F7C1C18FA95E31BED5F2103319968B96989AD186
D2BA0C8C10A5C0649A5FBCD553D86CF2DF1385AB602AA9720407AD8891ABEB40
181CF1963601C5C677E9E5613064018190825164A083578807AD854346A7D6BC
657911886DAF3F556DB2D3EC30C2E710CA128E8B9EE7E90FE7C91FE0AB531D20
9B3B76B029D4B367DF0F65EF55031CD38EFC48EBD2582A9032819D78FD90E2F0
142AD2229CC525B394E3DB64B10DCF1BBDBD14877ECD01B3986D79EDF909FAA5
02CDB49AA6D22A71F09D3081478807C39E8716010F2E745677750D1CBFAF2CC6
2B552F750FC0A519E5CD165DF920F9B762703FA48D137C5C4FCC057E1324EDDE
B62A2083EAC81F225B813E6008EDE6C36FA11EFDB6A3A93973DB97B05B61C7E4
664C4F3D31E4FB0A07C5C732B2F2DCA9F0C9B5A25ECFABCC24E8C2A686C4E7EE
208BC6988E97616617508366F33A0E9213F606C0140CD2C9153107F076CFD55C
755AAD50560A23CDE15B8BEAB6DECA332B6243169272AECC661A2872ECA300B0
1CB34AE1B88B3C9428B1960BD27B4D01410430DA432AAE59CDF139C988B733BD
82D0D062D78B6EE34F211A9FAE476F7F3215E71F0B1CFDA60C969E5F9B346BC8
5AABCC185FC5C2D6BEBC809358B2299B1B5148AE838D83CBB54DBED2A69803D9
E95D1DBFA55AC00341D69FC432D3C5690BAEE45D4E8CE3EED99BF29C3B3B8A30
BB8B517EBB6D1BF9C5507872530AF82810D17015319E93A863CDEF18EB1617DF
FB5C0A3046F3B5D77DC577ADB5CD7ED8BB8675CA073D1EDD8A05B4F9E2582C2F
042C646E56C2D944AC95238AA1AC7BFFC8BA510FC1CF2988106BC0959F52412C
7ACD1B8F094A0987A78FC2D589AD520657748423326707C26A8E4FB4E4991B09
C451267B243AB1357270B224A5AECA35E0F100E1B5C40CC10223297C2DD1D0C0
34EE1928A5956D08EA9586416C21D434C7766C453EC182FAAECDDFE881AA019A
93E23A02B1592D8DF76EBA0960B0B1F99B111B9CF93AF9B4D5C589DE7E2E1C61
0F1752C34B86F4E288F3B93F878481AB44F1EC3515C3DA6190D44F7B3BA97CCD
E8112009FC0A63CA92C382208C8C4DC0D53BB37E06911FA0BE45FA56A98B67F3
C9CE2AB81766950B686CDA0DEFB2ACD465BB1003F9CF1E529BA7FB1DA4689A6F
520DC151FDF46AEFD293F67FA1FCB21C52C19DF5D37243C78709F3ACAFB1A39C
2DCEDDFE5A364E19B4462790712B3F084281BD8F27E7EF5C4A12BB097A1F4EDF
EB73DB4AE594EC4048A38426C57319E9930C749BC0AD9F157012E3176950C875
7E2E215066B19EF16A23D06AD3C9798D9D5BB493F807AD968D84C0FD8FD153D2
E05DFC97358E682E9F26775A914313E554675B439D29154ECC2B26ECF2AB5819
08E4DCC4863049F6018D7649F59BB17F0190A0F91BC9605A61810F6928C459DF
69FB7D6A0CCBF6D47B3E64D819597BB0F5C896A5E1EEF8C03D9BAA7069A6AF87
6BC1FAC82AF8055CC3134505F8B7B678AB7EE60EC23774458964AFC7CD4DB685
9F242E1ABE8CB223ADC276CF45F357D1322E7C0C78675F55FBE5F91637E2E8FD
8AC209694FD435577AD27742164E9338E1552B64774A62FD7A15475CAF8FECAF
4C6FD622EC50B606AB253F6BD1C515341CC55CB209300E2518C109D6D46A3429
67CF0FECA34593E5D74520E2A38D7878478018041C96CFD06EB3C87E983EF97E
91F5542FCB6C1020DD68A1BAB3D4AE0D5FC3F15D6BEDEFBADB7A3C6A61E3E76E
6D85EBD1BD8852739926A43BC5D2E0EE02726B657D70EA390006D3206CE07DD4
F5EE0E1FADEE1F23BC4B5723C7FF2FF5B10E2BDCE1F17AB0CB2ACA2FE91F8E3E
BCFAC29BA2E2C782938A65989F320CD4D466EC525D8F1BE975F5498690EC1B9B
D9E1C9C8912B9786092C48BB16A51B1BE75C17F81722374632F27AC82A42356E
17C86AE03C1CB6029723272CEE1E64D716BEBEE06C3E1E7C51D33B8392D02CAF
3B153A6D4DECE5A850ED0F6CED6F74BAD987B5B0B7CBDECB670A69FF2EEE9702
12F85FCEE3F82BBD5A7655BB578A289FD9F960005950F015378CF3DCA78C8425
2A45DCF67913EABBED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSO1000
%!FontType1-1.0: SFSO1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecso1000, tcso1000, laso1000, lbso1000, lcso1000, rxso1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Bold Extended Slanted) def
/FamilyName (Computer Modern) def
/ItalicAngle -12 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFSO1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-190 -336 1973 930}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B512ECA33884FFD40DBEEC079F328A1
22698FDB666DDD87E5C464BEEBE54C6722A9142B70FF92D0856D146AB8D8E631
F592B87CF35845C7428F01ED31CCBFADAB1BB87F2BD7E81A8F20AD8098FC56A0
A64D57DF37CC97349FD64A14B17629C1948340C37816A6D5CFB18A91410CE705
084CD57F09774B36B493ABC4AE35CAE6BC2448D6EAB12E16B211EEB50E96C8CB
FBB4AB07E72AC067B5E284F75B3043CFE790B99DD09EF4DD1030FB4C0447BAF5
68AFA8ABF9331B2DB47E563A98A41F6F0C34BD85CFF1A3B679BAE36417A36315
6EA7320851429EF69542C12FF8411776DD0AC2918B6E5A200BF0A80B181C9051
4F26F485F3A6B9B2DC148CC35D715B62AA94B4F7BFFB261969C2262DA9AC67DC
1EF0C7F00F0BA600F23722D57E0DB061C65E7CA76BDF811DEAD23F8C53EAD1BE
048C0810707051B17AD5155D27C4AB919190B51028F27ACE0634879FCCCC1C8C
FDEEEF420435404EF392E13489681AC53A8E90168278BDF68AD84DF059C4B26F
9BCCEECE19AFC53116D4AA3CFF9FA8B51FFBE32940C83CAF341F479D3F3F9028
1B3589744F33C3DC8CB342FDBC75F5EA43DE7EB717C4E059222142A7BC23698E
C1BE89117CB1C227B4E712C9C9C16B3000FF061A676336B13CB112FD49DA8204
DD3826B474246EEC6B9E6F8BBF3CE7126B5660586228DF170D003F416EFE2E5E
B5DB1DC77E3D60CE6EFE9F89790D4CE2BA81F878EF8FF5E5CF4103FF1F8A2A94
C2C5E8711285B001D05DC7E82660CE13B4FFB27B8C12BEF8C82DA0237B7534FB
7E32FDD56DCBEF94CACC440BD379447DB199E2FDD49A18D8FBD03026506C2CFF
BB6CC55A89C2529A4F261AD82C49A8C140E7085A248C48DD46D9E3EFF26FC939
B8A4BBE840BB1B2BFC9710A5B4EBE43B924370144C1C6FCD65027F2177F75E53
FBC32381C82B06160E7175881696F75A6DFF3BBD22D3D13C1BE4BF7CB9D1B9D4
A51BAF59C6667EB5AE7D7CDCDF044BA8612C7C6EB6DEE9D130BDD1F6DB237AEB
20EA1640E48266186158BE1DF6D0C8969C448853E0E41CE5C9F79E1F85B33BA1
0659F8EDACCF7936399DB2FE0CA9C368200149BCDC59354FBA985A5945100C6C
E889D66B44A281723CD3CD7042E7B5F2E05817100EEA6E6D9A06DACE85ECF6D3
A85565617ACE96E533B3A7AD2CED39189F321A791889A3D80A0F3CC5066539A1
0745D8F11E567F2853184BE009B85AC1731DA63CF4E2813868F09BCF23E1AF9F
53B51AA6A63C1AC13F5FC8A46D300EED52D7EE14948F3C1F7E3A1BB7CDCE9101
E9D2276CCACFB36B9EC69C48175DE40F3F1B5069FEF2432F102449C7085BC692
20AF241975A19CFFBD235807B31DE1AC38D3BE447FB2321C2CF000818A544B95
E6ED927116F8AEFE0523D89C6EF35FCF210876171868C5ED5B39CE4EEC35FE44
A402E06902887B4732C68FFC4627675EA3EFDC0531C2D35985FD2F770274B0A5
45833BD6986DDF098E45ECD3D12D77C3F262F6667DAA696C71C03271D855CF4C
6F0EFD2A1E172B686E904F0536BC0FEA04B877744EBFBA53E8DF4C9B46719971
3A12F020CE5552EDD594871AD9CD659EBA2CF1ABA5A5C7792D8E2FC1190CB6CD
C0F70BBE951E4A202AB1FF70F1AACD7FFA40D0192CDFA1107C410F5312CCB074
40C8E6E3573DB6FB5CF8FB349DA718C1BACAA51F9E04836A94728BBA13F1ADC6
F3FE9CD2BC37824CC08B05D5E80E91968667929F8FD7F4E03AD41FCB1EB7D69F
BEE9B214EB7E091123B08EE1F0A6092C917DD67FEE29D6495AFB5D424834BA1C
6DF455ED32F1F0507C8F2B533F7DE7BE5C979FF15CFAA56386D4962840559B84
B4558336C1768E8E0A863AAD7DBCA63C8D864FAB84A3BCE88C9C85439FF59204
4325036EF7F50AE117B7E385692A1F2EB16B2DA01A5B43EC159CB492BFD5D3AD
6497203AA20F102C82BEA2C4DF497307B468F57E196E99046205077D4FF8632B
DB64D22CAA5E73A63B50D4FD7703ED8C4255C064E1843D354DEBA3FEA9C9E884
D0ED35A71F00119286FAC5F488DE6C57A348CA0BDA0FBC55BD770C8780542A78
C7156878591C85D37B403BCCD00AD66AC16E7DE74F4DA0DCC64BE65E2ACD75AD
98810B800086F09BCE54E1CDC15FA1B111E4B0F21817D8A9D916F670504ED2B4
B6DA468475CE4A116798424DDFCF56B4E01B6C1FDF53752834D7017869D32AA1
EA1C10DD37A377615FC3293A52C5D6D0CC6BA144B40D4D871D7EE3F07CA5A1B5
C8A1ED8F550E96593382FF7EFBC25514072B3D6C1D14C90EB2DBF74024D6C2D2
58DE4B038DB988718ECA17683DE40ABDA63FFB517E6A23F0C585B45777718EA5
41C7688FDD0D863BC8A572C69E57856568B4771A6B5A94E01D41E74995F53EB1
26E94315E1CCFDAD6F79BAEC445466115842A4B302E7B4C69CAB94C0EEE9B02F
E9038BC8621836C0823493939E48F8732762B7688381ADD5A989B327C2AAC2A3
D87EB2987C9634D5865704CF74E52DB18DC8FCB26B3F8299146F2FE103844D52
478F6545177D6B1C7CEB7E4DBBF01924BC2D7187CD112D3ACD520AF7F9A87B91
93D2DD4FA34A791B132C3A350400E87A206BFA5526F6D8AD959DC95742590ED2
A819AB14396C6829C8D7C71C4A1342F161D41A3F8D450960AE5C8B9CCC010CC8
C274E96374977E6CD6D3A5ABD99337A09AD088367082ED1CF325739C116EB39E
30E38216CB5FA24E41C4D5E7F31B2CBAA487ADB13AA5AD4F5C8D29D3AE2197BA
3C3EF8F0FF4F82A8D7A50ABACB48C3233C1C65C9B8211CA8E1FD07308F101734
5791BE01187D075731477F0AF83B97B1B182DBE1EDF020EE04691D6ECBBED6EE
09D1D65F2C2BE666AA6E8AB0E5F425C51EEE7F3A13DF5E22169523F84C69C657
2B20044CB10D4F5E8E6701489B353DFFE840B688423C3ACC13E29AD864B38875
095F67D4B68E9063DE51D80DAD9B54FE5D214FCA3A0EA4A03A7412AA9E25FCDA
102A69A8360AB0D794F8908A07C68F9783FF987C5558A6DCD6B261095678567C
0ED428D80FB22206D9705E4E3D2C6161524D175157D159E798DD958F5123BE8F
AFEB9B135E507C16AF01749ADCFC4669E7BC67EFA76F4B319D7B32722B35CA6E
C79BC14FB0A31143CA083A64DDE6524D9CE1A854C998C7DCA106F24938EF1CA4
19375FF7EA8D51DE50F4094049F144628D0C494514BB31B30F9D55279A7C95AD
201803E1CD889CA582BD7A09B9063FB7DB71C5E8B41973139606D13A82A1958A
EE3C8F2FA43A13BC193039B3AA271DCDB6F3E640ACD20E8CF7AEDA5044E0D7B7
F1AFA9B3A1AA0ABCF07FD8F2F18C485AE448EAC69C588609A100E2626E4DCBD0
91E959DD1D97765E4A609A2D7818A95D058ABC884EE745F76035DDAD950B51C3
704FB89C3F5472030108C802D5BB91090A9DE98024D682C96D6EF8EFAC1CD9DA
17845068139130E6936AF27B3F6526F33776EC02C279DE025AEE9FFAE55852F6
2A836EFCC3DDCFB6636435D089AE6B0A76431CACC8B58B851DAFE348376C2356
A504B2B4E1D23D65682DF00E20B2B90D74B2B82A73E8DD1CE2AEE77FD88969A3
F3DFF3661BB55F93496D24B80EAF77C4678AA8952EAA65677C4837D578FAC846
D77AEEE7F4D1438C1DFA98C0E7DFBBABAB38C14A3AF33CF3CA85966225861275
A7E33DA0671CB404747B79E638420F987A5CAEA48390E97431C36120FB8B7436
070F4ECFE8B485CD78F5C3D4CC02C988E91FB39541B8757874D18AC0A8479DB3
4AD871026E83292D310FAC4EFAE2131C80261F040CF9D08057C9CB4D29F2DC77
FE8DF688F0523B9BC63324D9EC13293744BDA014E174A2A50B299341B9DEEF52
D70775F39CF127B912A2419CB005F9D53813D91746FA73C30FD30332D05E6A6F
CA345FBE5AC52A4F911FFFA39DB14BFE49C4D5FA64F0903F307B37C7E69DD5C4
7BE93728A47DB3F7AFB2992E6CB41957431BBD85D95D7F5ECBDCA5B4A2115190
5BB6D32B6F08918DED09167A655543E6B1F15FF1A8D43F1E7ACD8EBD29B554A2
026EC9F19E1423CB440B646100A76BA1EC5682F6460AEE5AF7E6D184BEE77BDA
BFA3CB703B62FCA63D7BA67AD044C61A5D1EC17FFB56DB5FA1F2D7721B05FC12
18B3A26323F36019D0C1939C725EC4C91E5FBE1D6E4A85FA54648910A48F8B6D
9A156E03AECCCD4B937C7DBF98E0ADCE6156337DEB8BA3152DEA4677C24A0F84
97EB926D3EBB770BAF00D0B109B3FD5E5E1928BE1AFD2D7426EAB926A05282F6
C6085C2B4F763AFA6FF5EA1F88493AF4158153CEA233F7C81F641A982BEE3EC9
3D4EE3E971FBC2B126973109E5F84F913A1C72EEA3BC8BC0DB84A3B303FB57D2
6FA089AE1D15C4083CFC552BDEAC629B3994695361621A729529B3BEB4F49A32
CB8A923AEE9114DAD478CA087947DF3E7E363122839580EA62DCB01FBDAB0736
A8B1F9F6B7409CA1DEBEABC635EACE73733ABBCA8FA903AE89E450CAFE5F521B
169A820E33508182CAB8B9974A804A2E22040209F6EDD77429E338D2E5D54A3C
67E34280C08495EF3198AC1B380BB2AFAD3A575B3FF85373A8733F91689C19E6
49571778AF3905B73C16EAEA3504B18B6D3BBF431217D2EA7D143DCC7C085DC2
38952A0CCD066C60BF5AD32880387C37014A0C4CFD2CD60E22B004DDC927339F
DA4B063BA5181AD9E02DF243B335B5B0335E54AC75F8CA210A788DA71A96F1A3
27988279AA37C11C3243C6C46734FF9C2698D9E70F16AAD2FDCA92BC85A23037
BD3215F939572C562073E76C8071C8CEDCEDEDDC6DCC10C68AB870DA50A5F2BE
36A84A818BC238B0DBC80FD2A854E4ED473FEBC4F183B8ABADFD0B21040E80F8
7A53D8F90EA0F63AFA14AFCE671A239BB45E96E0EE3EE6F8CD5CAC9428E88173
DBEA327228CF763A6A0C21798A2CF51A1943B8063CD10932FC7FA32445644128
081766929E63933D3E20E9360A458B19303E45AE8283292C8F30EC9CD3F57A3F
8259CF20B1959F884245656DE6274A66AA2B9547F077D36EE65D77FEA9859417
925EDA41B6BB8CEFBF4DBC586BB076E0018B5C3578109C2CA6E2DEEFA9099E54
CEA6F0015B108CAB1676C03EB1B58E4D443C65F8DDA6A8CA1A20A4B6AE0959BE
049EDEB0A1BFB62E0C1DDB533B8700E56D15B3A1A76D6CA26568543383E4CA56
302BF10FDC11DF1C4BB0531D4F530689167B7DCE26C593F00C0EF09EEA18E15A
4FCB9026A999ADD3F3A6F31CF09779C9CB7CF58D522F7BD6A7053CFC1235AF90
051CDB190E4D00430E08E5902A614D1AA8A270AB5CBB66B462D74082A2261964
92D919B6867B1C0322F3C1170F71D7976575E5E599ABB051053D4B893FDCE33D
B22C073CA16242DE1B24F8DD003D91AAF942B6BA35E22B7DEEE932B201342D04
FA846CCB1904421DA3242DF9092F2925894E4FFED1777C2187F5E1A2260C9C9A
523AB17B22F022D2333FDF501477E2C00742F8958111AB11B0B27C292C8F30EC
9F67B2C5314FD48771904ADA553610240BA62483E9B7A64B3FBABCAD5790A4F9
5E5402E700587CE35A63978EF82B8B17590D62EF2EFA61B89500C27591C967E6
82605CE4EFC753B97133901E18246096765099A86BD13493EFFF3B9A7F573A62
16948D67EA6A3EA1194018F2BADBAE8F8925393B950AAAF7DC9C7424B7D9EB0C
026B33B0D3A2166DAC0FE765954E4749A8CCC50A0F32987C3D98A3DA1189D307
E1D978F30CD463BC757AF848020101B0B2B04FF2515A3A522C2B09385BB6323D
232168981D7839452575C7B3F44D44FDF9A4B7DBAC147367B175F1BBD944E47D
49E194F29351CEFE78899CE46B900EF6C7D0A47493A8967A4B234EFBAAF7E6E6
53C5280B1792E66A173EBA374A4A48ACA2F68C79A8C0CEB7C38F4D8F3617B764
9220A8220EF96C8E56A8631EF5E2935768B183E742BD3AF0772C9EAE378FCC3A
8318A930242CCE404D1201CFAA4CEC65535AB32B2E77A28C79B79BD29A708A6D
BDF48E56E9376E8C537C341B8685A701C9F46491EE86573EADA40DB774F03B57
0D176879F7154DA64DA0BDF1740D3963F76D59A40A34BF6BDB007876EB29C2C6
71044AA55FB02F823B2CAC141B2E1E395397EBBD4F8CCE98A000C069304D1025
B630C12D4DFED870186012B7396E6F16619D164B17F46A25FBF274F37EB67251
AA00C9010D6719D3F0F2903EFF79E8BE81B0414A731B028784E1B8776C69FB0E
2FF7F5EDB2F4CE5A6CB34369AD260BA090D615F49E1DCA56F57A0F5920A92F4F
2F07D9536D49069FDD216819E3C86A6D4BC77D31D79F74EBB11CD2A431FE3103
AF0DAF95493C8FFB77803CFD7592DAF39988AE69DB07357354164DC008CDD674
A19F38BB8D81A142E88EB42E426A5AF202736E8164A254F753991D52A7C53CE8
95E27E5EB32D93E9888C6E0A09A1A27507A3BDA96A501D9950257B71782EC966
4CC92595CF6457CF08F70DCC958C7961EBC6B5CC1F6650249E81D2EDAD0AAC6F
1B527131E7274EEEAA28E14DACF0EC161CD2C4EC1561CD4EBC1CC4BE7BD117C8
AF5BEDA5B22C02F0E15DFECF39FC34771A8A899D8366122FA7C4D6C1C0082E48
88E6B24CDCC5AD670ED461E740FA8E8DC7956A3B16C00DF2988DDAF1C1C8B654
A735DF459777340D76C4F7F2F325F764F29865DCAD8A42C5305334FAAC6457B5
C52EA7DECCED9E14B908A5D6053506C391705ADD09B60F558AF4C9729EC16729
02C0442B2FBC1ED5C148CC24AE13513D6257B109EECEEC360F6F5C58D9F0D429
0877519219B3C99D117B85A993DDFD706BC832BA3D991F5B5B1EEF9C2D63AB04
558C40C14681BAD25312655BD339B6F99A90276FFF3953D09440B1F3E49D426E
35FA4CDDA6FE3EAEDC5D723269F333B8A0C411AEC9C185DB2E6093DB1B2EED06
6E68E5F4CE6EE5C47B6FB43240A5B2C5E790EB3F7D565A27CBA95D01014EB87D
C3A2540B73F0953331F59BF1C26D5FD2E0890839A4E3E075854AA0157967D949
E70E6AB442D39B9DC6B7EB5FF854E5788E348F29689D64FAA87FF208E0CE3392
177E2F20FB51428690C8FA3565ABFFB6F13E50EBDB6B25776E9D370B4C636ADF
062E944D1977D5CA86301D17E2DE86DF8660274AC7EBA497409CDCDA675601A4
80577C0B4B88C4877253324B87B4E813DDBB3CB3324AAC8AB017C09872153D7F
76235EAFD1ECFDFAF5284B85CEBC204F25220060FE23E1DC7E63547774DBCE4F
F97F9119649A69BDA5C0913E99583B58A5325CD60BCC95E3FEABE453127B8445
70BA810659F6E5AB21231BFB580BABA65FE065FD988E33B7D90D3BC34B0EBB54
62AAF8BDA883619E203D158FB518993C42985A0F7935765904652967C67EE7C2
AC19482CA68151B2A144319FBA9047E24F213491638FA5036128F4BAE7BC515C
9C447DD974A9546DF809ED64AA57C5E4516B2CD735A50BA9D0942398FEE159A7
BD1E740CA788154F9ACAB20C0F4B6E8B6A41A705FEC529286FEC7A54448BD2B1
3810A80BFB4FFBC37DE98AFFCDFC030E834CED6FA6F0EB4D3CD66CB775F3BEDE
D239416C879A22B7BFA7D861AA9E9199E7BD065BD7A4D70CDE8C8EAEB0EA6DB4
2646C1D3470F561C0A27C8B599C01126D45C4AF7930FEC73638FD4F90A76E2A7
D9CA8968EEC33E4C86719F2847B83B63BE731868D984D303709EDF5062D2C10F
025D415F266214259A48571D77DA10A9DE10BB7D7AD75EB71A4BBF6C60D38CB0
1408CF652612E409390142BEA3D340F184A122572B303C0B4F00C6382094340D
5C21C8A1219296728E67769C96DC63384B6A8D98591C649330FAC3A1CB71BC1C
FBD9538CA7826435CFB937E6CA5478991E343782EF4D3E69D77EDFC561F55E03
55AA33D6EDE2A199BA9096715AA377C0AC759564F2DC687C919880FC2AA37E46
D93E36A725F362461C1D7861EB94BE51B345F9EE10B0FC85C240E3F06FDD5756
63B2CCB36DD6AFA9FE78B6A8B09BE227DCE833CA1E5CA81962E49013081DAE4F
FEBC10DCA2BDBDBB7BE9F51162ED0FDA65893EE7802BC120A50D01AE3E7A3709
AD890F00732A592C27004921650047D28E14AA058A34FFA56E5DAE595ED09592
14C260B05D426EB29A6A415AE72BD4DAA84FF7C2AFA2ADF9BF6A01FCEF246AB9
064DB45F3A05EC8217D74CE950453302A273C2756180E0144279C901CDA70092
2A96D235F5AEC7BFB1B36017059030556BA7E81FF5CB70E6FCD8EDDCB9320664
BDD489EF376B9F5007B83530BFBE048CE142EE653A71A946B8DE0BB13734C9E7
22B70AC776C165683995EB4F3386442963466334F694FF95AD62B913E904C326
06A1183784842BEF834FD4A5833CFF2ACB26A3DDA7E5B2834BC1A743DB71A6F5
957CD2E6335839944189B3474F086F382F10C950B3DF19AD8E0F0CC321B20DCE
3F77295E1DAE16CB509914FE61BACDFBE1A0665EDBD986B1D435277AB68A56F5
880834F31179B83ED766137CBC5EFC31E269F9BB3662B4BE39F5EBC58947B1CB
9355EA7E49ACBEED919F4F11B8E9E519366827BF92AB47EDFEFF1A3EA9F8F24B
D6861D0B1DFF5FA599D67A4A3BAB2D9936E7F3DAF1920796F6674EACEC039D37
8168FCC77F677800FD3C3A6D3FD1BF868163010F9B3870E1A0848764B759DDC5
540CAD648AE1F1279DD0F4BFEE782247E5C1F492630665290B0827C18A5F6716
222179BC13065DBA3DF8A9CDF7EF2F950905A89319B39C8A3E8081CA24F2B384
A56AFA0948DB48EE3802A6BC8E8EC1DAECF928D104702E4AD8F90A74A212A9D8
1D31B4A97DD3D6B590D25835C68246BF07BF6765D3C2F1DFE0CB07DBE364A432
EDE2638FEF7064B5113F9597D1656150F1FE7109CCF3E7AE75FBCB622380ADE7
7A4756EA0543B6E40D3CE74A37AB90AD4A8D20B3AF0FEB4C4C59CA0161259393
FB35ECDD21C3DCA4E7A39AB615F9512410350A32DF82A23F0A1A479E7D64EEB0
683FA4362C8E0C3A310D141AA7D2DDD0ED3DF7D9FBE2AE1D7EB7B88E89F96062
D489E53A601E2F8ACB2AB8BC321229C67D5BBA259C72D3237158CE3B1DD769C1
9BA99343FAC08C5D6858C24F96C0FA9C3A91607ED7B78F8D46D5D8F49295E95F
CFBFD2C69572DDE713D2EBFC940CFA562C7DB8F3314CF7DC19E1BA33F836FBC4
1B7B9C53E67DE415671EB9B218D9080909A80CCCE3EBB841B1241DE579BF00C9
7CF775E1518EB67C27FB026515728A808C76ADE5B721AEC981009B2160DA520E
A2753FF836961013209625ED55947D9912992BEDC93477704F6E8C7C67E7F502
1D7411C3EDB94244B0CA3175A51651C718419B34AD6BFC134101D3EB5752CE92
D99C6EF35FCF210876171868C5ED5B39C95490640C827C098C73DECABAA2BB9F
74AD1B8E53B80B528870BD2117A94A65D60F861B4F3A50ED7B3E0DB87341A15D
8BBEC87E5D86942F0C26E8B0E203F77585F4A1A3DC808ED40B39AA924C980C2F
5363892C75D059948F9D4B7EB4E1570F53EEE2BE859BDFE5B95DCF7A42FB2FE1
965F4AE1D53FF0A5E371E4B878EDA120BDE573A8E3CA36B4B781FE61712FF47D
EFB7424D672452A43CD14C869E2B3C2A042D06CB38D0C557EC962648BA565ACC
08F03133CF9ADD6AB74B4DAFAD04AF662C585B89FFC998D19AC35D78DB2D1D7B
6F31B19308AD854674E8E633B37EED41EC4BA5059F9A8983D858523953FD3BCA
DF4B8BFB4E0890742331FA62393872603A6F51D03964DBDFE38C6ACC76A99D5E
89F4DB9DEC57E95D8F6F945E70E7A91F27699F019A5902FA8C87D190724EC6D5
03D0BD27DBF42029F90F4451DC84DEFF1E8EF8B40771790393BFCD8EB9786D46
5B4A494557D42BE0E1E4A12EDF3D3E6FF7A05EAE5AC87D77753704E4C39F6C46
ED173F8C4EECC5D6895E6D6675951C06D9D06F3DD650ACB5C5B614F75CD751A3
768B7158110E3D14AB298B5239480C7F6B6AD6AE0D448ECACC2317B7634DA556
EFEEC02A19B4D27AEA5403B9F1C15961D374DE25A7B0EDE87EF9D8DB9D9FD221
09BB7407BE820084387B52C412F66935B9FD25B70AA9F026D6851111023E8BE7
3197F2E345C1A7344ABEC0D139E1BF95E1854B086909BA7691B909A0B9A942D3
8E8ED1D017A68C7A9F57A11962E3CB7F643B94AB2CF8E045325977460EA23FCB
D17E2751BBA009DDB2BB8703FCD4DEF3DC9D5FF16B0A00ECC14BCA53DDA2F5CE
9E6EBDD3412E97C6ACEDC3CDFA8675CC72516F8AFFF88988CABB4D73CBBE9A52
8E67E90F58F272FE00844D07B311E7B480D4A8DB59D6E3536B58C94B6BEC5186
9171F44A2A99BE6273C2C378C1B0A69949A1E14670B744164C2469FCAED4CE4D
B02119C4DDAFB83D7438E975A04B5CA1B977C6B8F3DBC935163617CC006790D4
C85E7DC74CF522EE900DA8832E15B5F18C008702558898149099FA6037FF2B29
9B7BCC88580EA5EC51A2326F5B5E742532570C57ED6A693D547C54662D53E865
8FBD52307CD6FF84EAF1CD390F5DBEA6261E252F8D170CA31B2961DB4C9C60E3
66246831B0A322FD7439737BD2D74C3C67FA876FACD0AE095B4121E2F4935924
4D0E44C6FE8AC230B7CEB00731C5A8780B2773D6A2A8788FAD2E87ADACC4F377
028125088455B693DEC73B9965281C13A69E65112D96257C9C4DD6FDCC15D7D6
D7860592710140BF4C1D4DFB0BE50ABCB2FFF243628AA8ED9E42D73A7ADCA675
F7AB542C1FFFE3D5FECCFB2A7F81702433F8F63B1559BBA47F0F6493796542E5
3A964940BA79ED097432140DE04D553812A64548721482503D5D4E0C35CD7F63
B44A957310BFBDA2645D0FDE035F2913BDBC1A3E21DE66D0B05A9F13DFCFAD64
FBAED64BD22DE7552A219D478D96418B45A0E6ACA6E7AD62E7377CCDCF829830
FF8957776005239632C4C41BC1DFF136667490DF7A5E7B75BF8700A965F9970D
7E52F5999978F9940AB1381865B3C1540A2DCB7B0EE8CDB24330704DEC658E69
A52A6FDA48C5669E9DEE7EA799D03E1E056247EFD953812C06822DBEA4CF609A
ED4E13EEAD26AFCABE128184C7AB1FCD67C6CFB9A22269421EED1844C189A7F1
D1AFE72642854F384D552236D12C6C309CB775F27C0256E68044BD6BB45DBE9B
C4A5BC84DAA4E59973E3AEEAAAC234FF56C5BD5BA75A8CABB6F9DF4E0285FB83
C5EA4825225DCC23DF406ABF7F97C848C3D061C82E64F559D6AD28E52B74FFA8
9516E173855ADD5C92A6FBF7BB5D13E1BA33F836FBC41B7B9C53E67DE412D341
60CA539ABA4B651FDC7752052A37B4FC4F87FBDC3B872ADB914D50642DBF74FD
B150E9F3CC57300C19385BDD1CB32951C6CD1E7AD08B8AEAD9AF75A2A43084CC
E18A6B2D9A0B00EF0A7082AE4B7898B953E961FC29F2DDAA6C80418BFAA3AAD8
D28FA0ABF84892D3050E94603C1C42DE0C535B2293AF0278661B1E9E62B48838
A442E796E115B1E19D5C01C0F785F418BEF60466E3CEABAD3A3CA5CACE56D530
65153963FBBED86C0E8748B2071AAD22281329B7E996AC870FAEA86B19690AEB
1C1326D3E1A6AD802B49DB2308B88EFFE7526246EDD6DBC323F681E3B769A8A5
7A132DC7F086D8E99BA00091FACA0A82F0C9C806C474584A42B0FD92093EAF9C
A65C5A7892AC970B04A385C87363E67F4DBCF3FF312A9C5BCFA4959132D9C47D
0C9FF7692990A41A7C78A60A3676CE5D4B725AEDD4D4AD6737DEC1D3E4B4C930
7C16299F805C5234B353CA64927852E3D983F49E56BC5F46723D407C04496110
4DE93B02B6F40E423AE5846590D7D4A0844A8D953CE2318B544A14ED37F3CC89
56A36219A7C42277B96132081EC283B3B5D13A5E991D79433865EBB1AF794A1D
C026A07D761189F468E3E37E5BFC689B9104B00C6A7067BFC7B73B9170834984
45005470557B23B9D2E7850C106C342F852AE4F0E096C8A45D7BBD3A05BC4CF1
ADAEEDD3EB2748D94F470F180540D37FC0854F51A2923A12E486B6E04D03A970
17407A1DEA848F43A595982F0AAE816C7F47BA59E6A82696B5D82B422346ABBA
586E4820CEE6F2C77BDBDF65731F1E76AE10B501DBDEBBFD0FFE6E87144F70B8
71E79D403003971F3AA3883640ABAF6B70861FACD6DB9E784FB3A4EB6B2A404F
1C72BAB20835C443840C9227DF1B8DFB66FA81B0E026AFAECA83602B05915CA5
FE986AE1FB91ABC234EC1C90BD38CF875512A503C076E5E2A199BA9096715AA3
77C0AC759563CC80D1C9876F11EBBF01D058FDC990C3D8E44D5A08DB57D45E12
D0E2A9D21057958BE8FDEBF7863B4BDA7B29B8F1D86F8EC12B6731A2E55723BB
DD99B54127DD8B231EE20503BDAD19480FDFE8A173487DF644CC7163CDDDA38D
4EA22B3F912EB2DC12DAC3EA78E2804EE17DA33BDED9BBF86A457CA8400ED979
661A3A49E21EA63D1089F167B791709F445D0E1126EEF0FF5523957A15D1196E
C6320413925D0597E35D4F2018ABFABA7763CB7EFF897B1A83AE9F7754FE0829
2261FF1844FACFD2702AE2666D8ED3F6B44220443B845C730F7EC68E9FB3D1B5
2F3D5BB74FEAA567B681D37B5C6434FFEF6D68C2346EA74C0BDB32F9E8811906
5E528FF15AE3DA963B3936712A6903C26050EB3067677BEBFDDE9913BBF4ECFD
88A8AA1D5280985DB1FDFBBEC0ECBDA8320C0201EEA316F0447E330C92BBFA98
67B667E3545C75EE7FF473140370CC7E73AF16E7757194B869AAE4020D2784FA
A9A2DDD41D0A3D217057104EB02036FA8CC986D7951B792DFBEE44919FE6E8FA
877A8A8287731A85F6EFC7836B14DBFB3B898DDC9D2F1E4F74281CF76D337713
2BB6089C9D6E0AEEB1E135F40E1228003CE178CCD6AB8AB01F746D0DE70FC2D9
9D8BBFE289F63693F1D2EA5B39AA8091E5A9E297ED1F45860E74F64932936CC3
729826135291E4497A879C4BDC972C9ED8499D6CB39F59F5775CA3B06ABE5A87
63F78C3DC4448BA756E74EC71EEA9AFA66A05BD2C74F617F881273630E133900
8A3B00504FF8176C4B7BEDC38A9CB92C96236C04057CF094AE79594D5BDE7B8D
C4C5D865A3443C6ED6255DDCC1966CF2DF0109811DC802C278039076BAF32684
56D76B3DA2D839A68D25AD6BD21C09B50EA2E4C4E7A8CD205AE864140B729364
F831B26C86ABBABC555E3566F05FC9E5D7661DA8BB4E57728EA9B65241587A6D
D0500673C575E5270DFC379FC0BDA35807CBED45E1BC9C9BEF4E58110E7E79A1
F9E43D35B94FDCDED18D6B7C1CBDC348CC4C685CBB70D2E2CE7BBCBB7CC4146C
46A5DD890534331EF694E7568C19DF068541F9971D3E8C9C8AA316F936BE066D
34FB459435AA8AE78AA8D2ACFAA5791398ECA50CBB6D9AB9DF15F1DFBF541278
CB1E65ED7F447D701B48B81F59BD0FFF0FAEE97A20A63399B28E406FD90EA12E
C4F78EA0D70AF5622677AABE0D00EA7847F3FAFCFE05F84A44D47E5C18B4B4B9
4DAC3A0EEBBF4D835ED072AF971AE2D8A94127CB19F98B56A71484D78B5CBE3D
295E0E65F011878B66454AC75984BAB2DA260830C7EFA5F248289264F9156F9C
AF46C80F890A72253A95359B7CF4F5126D0A7A39C5FE876D57C4F0B4C145FC7A
03C8A0F37E55B5FF48BCF65FCD5C64EB83331A1D69E8B88C09A06D335B1565CC
E8AFB0BF8E4F105540B1BFD8AB72D2643ECE5CD33021157B3C296266D73365E9
4DBE0F6AFB913FA421FC97D46A16647D786D67CF83E72D7DAD09D7EA46CC8235
5D942A7CCAB32DC10AEC6FD70D9BDC8AB647E54BF6C99DECA94055123131F54E
6002A3D077035C6134DB94672EDEAEDF89BD8951D2F31F8CAACFF479239ED03A
6FCA1100129CA011735A563242DB06F6F19AA2F1F87919F84742F16AEBD2430F
31253B978E02090846B08A390AFA9294B6C973E26B49D2D2A71F01B3610E93FB
7771756E08D144D086CB753FC1B0C93492395E487D47D0E9415ACE4472115FB3
8F6D3A0C910E02FB4F4306D892FB63F7FC395A372EF115B8B185AA94E01ECF0A
8D8D3592C8F9529B9BA37245CE54AFDEBDA753088FF86A5AC1C86F26B75571BA
BE4CAC8097461684D14FE0ADF32F5905A4E16BDA39B955357C19FECFA1752684
E70DB5E36C2FA5A4EEE7C0F4CADB3E3F782102210A27F791AAE8262ACC1B2036
139A3D546091951A287200DBBE87E9A74C5A4A16E5A479134DCD0395B5E6E235
A58C64DB66AA966408DEFB2BB6BD6A7A98BB2A1B046566035A295D408B73A457
E7CE7E7206C3C28AB93B7417D2FF763B3B12FA17AB4687CE13D84E17043398D8
47B931D9857C3B10F77CAF0D63121449CD8F787B6F5E170EB8E9CA710C7464FC
C72CC846CCA3FD911D08F790874FD118F0483AC7BB931494D07E5333312E1A63
1F6C028D065B8B0570F2748796BCE6B627DF2E049D234AD8989A6B01131EAB2A
7FDCC3ECB5828BF1F7DE2072ADAB1F0463D102A96BF01EC16734B024B2778AEB
3A042D5F8D4B5FBCF3A578EFCE821DADA3FBCB6F38B45D104095B1E8AAE808C8
93CF391B8CF909690AA656952B903556C5B971B5E58B7BE02FFA388ECF7A4CBB
CB1EC6B3F9E391FA17FF0CDAB83615DB54D1C7D8107AAFBD9B336362705E314F
053CECAF36019B3E94A88F66957A4C0629418764E4E16C8829DB3439B125CDAF
BDA90E38E1552AF4F92083822F2CDBCA87A1533DB0EDA6453C3ACA6DC2814CAF
2D87CC65893DD1B99A10BAEDEE9C2DAE7E6D248BBFEF50AAAE963EE9245A2598
09ABFFF694220D7DE362D26CF11AA5CF9717130F86A3D4B669BC65CD9EB030E7
1186C8489E82DDB0AF793AF5AAFA4D53EF5D8334D3451676CCD188EDB296817B
0C32FBE96169D38F2640A68E4799E30D940DA02840DA7DE2CB621DA800226FFF
4B0735A61F76E0CE573A0BE83C5AB759DC2BB3460AFA3671CC88FB851F78252E
EF305E5908CBCC145975B2DA56F41806B7C3D10B2E54E9A9E01AFB83B53BFFA6
428294A1E761814076F1BBCC6C2652F8497F2B33F168D7E4105BCFA36EFF48EA
35036CF27FFFF79BA220CFCE5ADA1E6494FFF9E4D785C3271E873319150C6CFA
0C4EE73CAE558AC3F73FA3AD1227690288C9B435137D4D76FB50A976717B8EFA
FB552CC18E55CF8FACE7E1B3D5AC5B90FC438503492AC7CAE0A87F9894FDE805
0489C4093FECACC8C1B258E570604E656201B842F6A2B583A9780ACB7165D45D
9ABF62644B5D90E23DE7A67F96E4BA524C1992330FB703BB1C41E83EF250D916
1A622A5EA875525D7ED993DF24CA8DF15542A4E60CAB87F5CD5D7C13FB08C673
6E7C8E4BE0C4725FD7AF776933E36F80090A88E26AFC600D90AA5A596FD7D652
B330C2B5827C0D015F8783A4B3EE8AFD54D09FC984AFAAF71071D31F7D8FF2CE
8C6EB13DF5BD4F904F010A48EC241A2CE345F4074B66BC3EB6D74559E2CDFCCB
A8D2C8C672C0403E0DA5D3A407635C4262412E9A43CEC38E71530974493AF6DE
BC59D3ACBD8F0C5701F8575D7A4A42A713F9F3E2E33FE97E2E6CA8AEBC0F6982
183309AE025058D353944DAAE92656BFD9FF6C322892760054D0922E55FE6751
257E47D26E7AB3052DE2CAB82ACB5BDFCA3D338D87D5B02F851D4F3A9D500061
6EA065EEC0DFD78D5B74D93A62E46CC7133296A56762452E38AF285AC0B03C91
ECA5B1AB8ED241AD2F9E68517AF0F783584DCBC6B910D2342C13A68550B8F612
794B9E7199889FD2AEDDA5AE9107337A4846BC2665D2109A8642A9D79D6A5269
BB2E8E2F86C3BD08C61AB3E596E20AD5273D39D4204B6D246BC96A5C60833A37
DDE0273B009DC8440D9435B786CF4611F986D1F48360371D61A02E73CC011F38
E34C380282181D88EE9221101F17185E95A7C5FD064C58BFC92A306FD011BD67
682CA8BF474057DA7E536D754B2D59FE95759F01F2FA7D9E34B3A25534D40699
1B30154E150E29343DCC63FFB05EA6CE7E11FF41FAFEDDDA9D9C73DFCF7FAB7C
E21F0814C4FA99ADC1997FB06385777E2E37B10ED47D8BC757705EC1DA0E3B70
F3E1C4BE3D8E28FC591DF9079F26BDCBA08BEC57BEBCCF128F345AC805EE061C
B4F460AD9C333DDF5AEA2374DA8597497AD48C4E2FD413E6C8A51F12C0043762
54EE671FF73712F063E52A8313DE74841E79EBDFEAE5D3ABD54B73ACF1F7D546
2D8B830AB1841FD0EC4D6A053A193A199174338AD18ECA1E5F71D9E4D2BF8674
18776835AD9398D2286A7340AC83605B885B7BFEE15B3BBA7210546FB7F5422C
7025D3142DEF7A6FE31D566CAC82BB19B020FF7C98BC6082FABE2508EB3B634F
656E97438B5B0998895A84357FA5238974B92580179090BBD57E50F1B35D494F
C3D6B57700B11190551CCAE39D3EB838634B5098B616D5AD569F802CF965F690
13A2FF4C6727AACF154B4ABD37687BFD8DA0AF74097CDB6E280834AAAA1A9955
C4818EA1970ED1195074A724BC2F5A91404CF583B97F788A60AA13D6FBB0E55B
393FC4EE47A4B1895CBC66B7C51FC75CAB6D723CB9966244094D1FA85366BF60
2AB59C12EFDC4D7182F953CD07A63D0798BD29CE58364B4DF1F2C118119B1918
0855CC64C8DC9FD238973A84F095F8B4E6E58A9BD03A8A1E0D6FD61C7B1A017A
9BCF3FCB48DA2324379935E66ED2BF759505E2AFCDBF529B43E9F27F411DA3EA
D2EF7379B9211844D5693B5B5D78CDC8E075529DB16774BD9748059D5B3C66A8
814D8429F4E956581BEEAABAF185F4CB0E66A97DC3A56894F0A259576D59230F
B428CEE7220A24C3C3A89F06C0EF750E0067EF568466C9030D1E9B2FE09EF7AF
34103F9E3DC40386FD67434F66A8A6ED6C85DD6B40F38FC8562EE8334E326E69
19FF106697C698D6B7F1EE793598E0C842D6A9AEBCC2B96E2B74906DFE3DAB97
41C2283091AD196340D32CF19141ABB2F0B5DD3B86CEA518CED1B66B2150EAEB
FE86F8D76D82B93956C032CD7D3C7C2AE587214313EE32EA9EE34A122055DBC4
CF59F0537600333CC07438DA93DE407D800818B60553327B08DEC34AC1A2F3FD
F20CF77F4A7C4FF94778282D3F3822EB425F39634CB82ECF80B81C6F3D46B6E7
5E681929449993F61DA9BE399F69980BCA1870F9437DDB53A8D99640A3005508
39FB6356827BBAB8DC97B68C63381AA4EF5BB7493CAA6237646F3A101F02000B
E37CD874AD6CD39E4C6CC3F5E75440087569BC8CF6172098AA728CA6A1A62C09
596BB62A8B6E76A8BDD302B838D8267B6D62FC82334E92407673B4CCB0BCAC64
E5760DEEEEC10EB5F5B1AD9F62D33731F8E6DE1904FBDC5D5B5797EDAC55F5C3
45DF6113965E6F9D31B811384DE04A310AC961DCC125BD4A86E754EFDA16BCA5
4DCD9700D217F0459B96E06B2F7DABD24333F1F77ADCC220E8B1D65C8D082D9A
9FC80A80439AC53890FF32D0283C2B9B1397854A3649530F81871BDBE2AB0CC3
75A64D27B1C6020A9DA242BAB1C3A23B5301D2364821F44BB1024C5EAC9C7257
D7DFCFA10CE1966A4DD664CEE2D979748067DF9ADFAE77B2F5CAC3267AE9E99F
65A25977EB3D8814702E20F6148FDFD181CAED0AE0C9F80EC3616BDAF5A2346F
9A9129A645176E141350BC15E80ADB5493BFA396271E461C5432AD51886E1F1A
99784E96C1DE490362FAF9F1FEDF6704109924E3CE8575235F808BFBFF93FC7F
D973440AFC47C1ED0C5A1B5B3D573DF1575278475713BC9C8F5865B057F758E7
92BC30021797C9913A4D7D411C52FA68836E062BD9A18B1C3773AF4A752E5C0D
5195435227752D7D79AA1B89FA400DB6578588CEE03ED38DCED849B8B7121155
CC01828EDA8EC0B1D2011491149BAC47CD6E95256434D49C6F10F2BA6AA620A0
A4929782F542C08492F930ADDBB2A667C081821FB75F68B7BF0B392C6D0C89E9
AFB0EA7776154EE777E6F95C171CFC1EADE11004BE8FC6744DDEE5ED2C6D2B71
E5E844D33992B77FD174287D46C00224CDDCC3983756CE0D57AE5F42EC5E22E8
7DBC6924869FCFC7C1AA00CA2605D6FDD8032C07A41D1A7215A0BD4AC18748B4
7F563B1BC307D28F95F43B4B62424290CC5517CD9D127D676D481FF9A3F38910
7238A066649B4DB9EBB38BECE8BB0EB6E7AEC76E16022D2386EFC78E4A6BC9AB
8532698E9AE89A2AAE0F0DB0DEE85037F42FAB519EDD0669F82AA6DE178D997C
4BADBE52368E8BDF9C719F3966E88138CB39EDD8A662A92B968DEE000405AAF9
B80ECC697370F02A94D59AEC23193941E27EEB9789D6E445A8ABBAF0A9AE7685
35EC2DD30B9E4A4D639B90933AAA733CC8ECE6D689B0A54FADBBB706E1BBB1F1
8439136D44AB7574CF213CDE87B872129CFF76089F2CEE01CA96E3AF21ECB1F9
31B95F0AEC70B39B88847A23F1127DF818248592E463BA14FF3612534074375C
DB6AC5FF6A59BAA216CEE3C30EDACB25DB39B879EE46C5BA9C87712272B2E845
A99F1539B927C6CE1EFC903C8730D9493C3E9353AAA14C871A230401234B34D6
BF49B8393A4EB56E65FE6416C3F9BAF544511CCB641118036C34E481DEFE4AFA
5FF14E872BF2C0BFDFA083B6512F7954BFF00918CFD873458BF53DCEAE0EC853
38788606AADE0A293F6C4CA8C097227E90541B137B9AE52F64DC7405922C07C4
A0E37DE2D9EEB307D4770BBECF012E4F5BE88FDA3527F54A948AA018730B31A8
57E1887DC76021157AE95AB51E299D8D269904F072B85E88919D29BECA1E66C9
860CB5CC2DD64BDF021FCF78A6897BDF07BBAC1D017979602FD8479FB5AEAF2F
8ABBB041B5DE896F7F3E41296D9D779AB714AF58061E02D3D4F36FEDC34F171D
8C0536810ED16B94477FDF68D79C43D292CF4E35D6E574A7C52BBA9C508C34F2
40562AA3AA092FAA20A211D4684B71E452A2C3C8FD5D1DB151C504570286AF4F
F8202BD0C2AFE5538E4E72C770C8A621F06843D3F0B63E6E826992F8F56FDBB0
B23D76B01D2B22607E1F31C019C17D22DB84BC9EB088D2D84E8A9D3E479BBF54
177F19A3661B66E59A3066FF92CF20716B559A93FCF697B8A3FBD4B596ADC81D
3A9734D57909D6563238E7E4F0B9BF31243F791A848AD2A410A84ADD47CBBC42
18EEECA811C2AF6C665E9A7F1371490BC7A73A76C30FA433D816A392AB2D13A0
01779B67D3C039A064ED79156300E4A14A784DE5277A027A91E51A26313F07A5
1BB82EA7D1DEE101693C94613DE265C2D8931CDFFC3B0E77403C5DCEFA4BFD26
92DBBA76C83D678D597B2B23416371527E9D81C75E40C1F7D9C9914D5E90A14A
C096FB6F66C8D2ECC40D68107F97E7246C048BDC2C70FF81C001E437C3F5FF3D
6F7BAA552CF098CF4CA99CD23485602B65EE752F14FE13006F16BF3A69AA7AF5
C38D31DD399BA7DA1B85D97905EB207D7EC6DDAE73AFB8F1C151F5A60E3DBB1D
5165130FE6EC42F51E7F9603911E3C3E82E9A46051AD0DED8EAFC34CE91A8F9F
42D3331FAF1AA597DBFCFB3E6A891DCB30619DB747FDE117B3B2F90C8CDC220B
CA9B2BB5031E912442077E1F6963100446658FB51C4A2879079CDDFCC34B26A4
247C7D4E6C615C9BCB270F013C4E71DB8BE8FB2A50C71D8C96AEF1BAB889072A
09F4D183D62DDC8655C6B0A368465D89A4CF6067E7767AD64905183EF219341E
5BC19358B033C7A3A2E778ADB6096E81EF33D7BBBF3E3BE8169BAF9AD2AB05E4
D708DA8303864A1A4BFAB2B0A26DEA5EBAA191D91E3D443745B85D0B069FE96B
1DB2A9E13E6B12A56B1C3ABC9CF09B2618BA2F88F7FA3BECB94A27BBEE9FB67F
C76CB6C1320FB3E9A29F73A7C206282FAAFA9DABF8DB8E73BFD8EED5B2A0903F
230166A87962BEAB5C02A1C0A79A46C99A04C6A75057D76519127F836D9A82EC
870B56F9BCEB1DBEB6FC424D19100A45C836027679F8CABB7D1077BCA222B5A2
0246EB0082CB56D25FB0DE5DBA5D9F4148BF723188B8BE09CADEAD1C74E7CABF
354D5617D58C432854139B7E42E627C71566C21C003B05294E5BCE8DAB4542BF
9207811A06AC495CB7CAC00DF160FD5844F478A4F819EFC0992DC74E387A6763
C2965B64985F956F45E1EB6D8B30586C9FDDB581993581ED3691E4A359F34A25
429A8689E4121B1A0B07CB2FBBE8F6EB320607252035B0F65AB81E7867BB4549
6C3D0795E53D892A047C98C015ACD292AE5A4118F508E20B8AF91768C45C7C6E
F0BF96E867B4C877E838FA2B3835073BADC1465BBDA9C6773E3F66F70834E918
1CED6603D0B78F8FF8AEAD9D86771A4B543D9BF3CA5BF5D7823DDBB80D50943D
BB47C358D2CFF1DEFD79F2CEEF5A53804C530DE2813BBE8478CBFBF6991A6CC7
3FEFBF79195705FD129092F73C5D4218A59B97E77895036B838FBE18D4AAF7F0
47001682D9C37D20D7812FC0D97E93292ABAEB6AA6B92EE4542C5E0B2995E853
30092324D7562B07D979B3CD62D3D6920795503BD6BD3403A1DEC4F57C59CC65
53D3C2E19A21BABE31B337B5155164BFA4D19946A579ADD5B6AFFA072CC6717E
28405D852B50D131F154E2D12A2122B18B09B50BAED3776B726E645E49A6E403
E77BEED026B16898053C5F261DADE51885EB44400F875660DFBD26848551459D
0E963A98D8EC74F43E8A55343469323CAA4F1C162CF46C1B5A097EBF5036EB98
6DD454216DA874E9ABED6E72D1AD2F7AFBCE7DE2440198079C4BF8FC22FAE20D
295842EAE71B6C3FFFF2BCF54B5D982C15CF5727358938B37A68852A8BB06897
0B88B1FB41553E2130BA0E97BB689FBDEC8807009FC07EDD41B36AEF300AF341
ADBBEA6DE170226869F110AD8722EFF18B86D7DEAC3AC0F4164E552842CE5FAB
6FDFD6F55DED9DC0A89D8A37DA1B2830EEC27858773E066CE04BE824C8F45CD4
1486191AE0596B7322B4101BB0AB62038E434CF581F4ED9F1D51E3159F8B25D9
1F101C66204A5395F1B7F70BA0719916FD23483307887B57159AA192E3A49901
AAF52BB2275EC04B453025FFB7B89099BCA2BD6D72D2363EC81ABC6780C2E1B6
F600240E0035609C2C83CC47735FBE79A4334CF4FE5B42553EF909E7C74A763C
461B2732C635B83E16CD6D79DFC4FA61FF7AB1C60938B49FAC90BD1317D391B4
BBEA0A9FD2E194F5C6A3231AD905F62C2F0BBF84B2B5FDEA54E268429C036ECA
BFBE0A738A35543235F46FDFD1D2219DF1DD834B6F7AC2013CE1CDEE8532D1CD
94747BCBDDD7F6DF1BE6F6140536FD53CFC3527386A58631E2B8F3508A9B9404
6A95FA6C014225485FE0573550CA8342F3AA892CAEF8BD01346EE87E9AEC14CC
C8E0AB92B1C10595326526B8BE0E6390C421A2D1E10B6A4CAB1299630D73FA52
1AA5C20EDB2DB783E0788399ACE8BC1F382C494EF4EC174FF81FA701CFFD81BE
80679FE034AE9591DDAAC54BA5C7723A0398E14D92D3B9A5B168E754837B43D4
073BFDBA1F2192A1646B6A581814DAB8C0544CE574930A5B5007C07E9A6459A0
6FDA3E66980515E2ADED838D3CC8B41E4A0D0D26A50E98CE2D2C2375D05509FC
94FEC0B52C87F3E03B88449B6BA7AF133CD0D11C781CA1AA3E7538D061C7D026
4901E5FFB5FF3DE1B608299ED2296A8FF7A299B357510486D2C7A2455E33CA9A
DBAB71B9226DCA47093DD37E24C3E5510985D3861B1EED26732043BB79B3F7B1
6E3DA5CFC0B1D52452B0D106DE0159FADC980069062CAB938EDF92127CD56D7A
B880E3AC593A17DE6F0F56525DE3C2BFAC6E2F1AA69761E0C1DBF3EAAC5704AA
CA71E90C0F50A5C46FE70F8CCC0AEAB833C2293B53B498B1B0FA28AC53C6943A
9AAC3B2228010BDB7DCE67DD607A9C7FAD4F892A682087423E017BC5CF7FB086
8235AA2E20BFF77BA7AA4D2C5F31E1B417A0C3D4FF5927455804FB016942D651
93EA90257347647666D42CF653D5C43084872965F0F164D7AD4892FBF64ADA07
C6C81DC6BB584D1AF43FC69529BA042D91D8D0441DBB23BD98E6F4834C952004
093D122D5C6339E24A38F42E13778D5F68A31B11C7E37F469721030F96C5665B
404269842D2C479A51A86078B90E449CE9838CFCFE57C2E72FC9B2934598928C
72C9FDD7E3B2A3EAAD9F839B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFTT1095
%!FontType1-1.0: SFTT1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt1095, tctt1095, latt1095, lbtt1095, lctt1095, rxtt1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-204 -361 1351 830}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1ED6A435B5950D131BC48179F5BE3191944DD
8626DE76AAFD8EC4DC8241F2ED33E10698DC7741D6E45CF5A02FC6D2068AA205
EF3C4FDCDE803F4D1D4FF03A079CD4FC4BAB3C558A8FDDF53D34AABB7D89E4E0
CF76F77ECE57575C27718A8074CE275DDE4AD245220A8236400BE47BC76DE13A
9EDA4BD5744C71DB407BCA39DBC9D857122A1DA969E6D0915FDC1622AB8BB88A
93D2EE72E9A2FA73193D6CDF254252980674DB644EEB36A2036E04DB649F816E
E70C4C43E88609C8E8B8B84A920CA933FA00F41F2FC3C867825E2AC658FA0F7F
331323E22BD193A0A8030661C8431E3B2523298255BC9D1025ABD883154B590D
B97D5A1A90DCA9ED3940FC84C07E268269B69A7F878481471DC14E8E4BE55F46
AFC2CEC9A1EA6857F536F1914475C3D275EC8AEC2F4C83748B5C4A324D622969
FBAABBAA077F0E65CE50F2915D58797FCE55495C649123348787AF4AF9289601
D5695C7D0E49D54403BC216B0A916DB7C1F42955F1C0F02CEAFB2051AB338305
AD4A0A5D3591FA34D9C96A192826E4E6901C067E53965E2F6687AF76F8DDAD18
C70E0E85901AC23C7A16279A0140DA9B0DDB34945D99FED1D69A56230EA01481
C1E08528A0AEEEB8F932B3C2FADE2D30946C3B59101F85F1BF33DC4495F9F993
EE1F578EC06B032555A148928AAF95DD252EB0D606F78C7E295BB206E3823C7A
AD332759A030140E972EC011E458D64A6E2C50A69C2E985ABD0E331FEA843F7F
CB8DF4A3B5442AD53D127E1ED155A50AFB004EAD683BDF0910A04F5FCC0B3C92
67983747477E9D13EF8E2A5E65841E4A52593C9425390388B7001CC77E4A049F
7172499519BB1170B23F20E5D851282E256A98811184EE513702649578495B94
1BD639BCB56082FABE2508EB3B634F656E974384EA60571A9AA7E9A9FB36C018
E10B309571F6DBD0BBD0FE5598B4954AB97994C9FD7E4764A5CD84078C8BC5DF
D9C4796488FE16AA5AA744C61AE97D67897C675F4E9A632647C34479A90AC5A7
38B3CA0DFC91C23B8FE6B993CDE3133136F8BEEDEA3B4584439D2436226E55C2
3FC873574919205F68F70D1081284AF072BE982A178BF90BE63CDF5944C94CE1
86B47E752705D72210735BCEA5735DF316A68106A8B2FEDDC4ECC2F9A1632C60
EB44F2816A27847793C804BA8F97E9582090794D67849F13B9F872439F65D451
B1FB3EF7E6738B3B4879DAD8D22F960F9C8C5C51618A2439598381F437F24F80
D0975CF48D4709E948C0DF9D690162B7373CCCEB35E306BA11634B947AAF21CB
D08A2D0A2C80B41E2AF91D2D707E6F5C409DD1B6D0F87D4D6FF5C4AC67CC6B4D
451E2C6AC7154C219881ED6CCA71B402F789C9FB50685B8CC424792182264B38
A4205348E8818BBBB81149773D0DF63D5E2BDFD7BF3AEE0E5810424AEA349A80
30F02F3BFE22C51E6136B260C6135225157DBE27533C84D7BD52C64E544959B4
3E589168E0038556CC2E780C773C8D80983A655100150BAFCF7C2199AF5502C1
D7790E66EBAE7082C8380BC3822DDC41E023D0F8EFB359E1F0B73B5A0569868C
1976D12E58A7B401F6D79E043467B6EA2F20014C9A9D4080F6F02F35EB9FEE26
5DBB5F0D0A10BB20BEBA9AD6C126A72ADC4D9BA4BBB80A14E88942B5A6D9C1CC
B207909C02454DDD91B4F4FDDE9913BBF4ECFD82E6DB882C3A883C7A4E0A70BB
1321CA0F31B8840EBED276079C6A29B819615D7096EE9341D32AB3441765E123
8AC2BE801EC62679EDF0F9A17E47BD8261F39D0497908EF7044A56E227B55EC8
4C02CC1C3FDB52AA31F6BC1FF8A8FA256B8B0847390338DBB41A88963D79AE83
494E800D9EFD0DA74214A60CE4AF221470A79B7EE291B2DD6190A1CEA9DFC6BB
93724C09CEEB59F5B95286219372B526738B3E7E8741F1F45E07B6F94C1D2460
6BACC29A73D7DCF770B3D4B4C3067243399657F7FD8227DE2AA7F1796AD56BDF
9A35D10594991D94396B592C55DC1AAE337DAE898315CEE468F59BEE43224658
5290E0B93D4C6BCD6D6B8C089E81014E1D1F543B34BB6F072335CFB64ADBC748
9B47263A213680FA37B507DB3830F07F32EA637775BCC1B2C98083FDA302999F
1A393EBFC785759F33FAC88C33C8E2D8E23805FED20C07398B66E0B575E02B02
E5960AF9069ED5C3D7129850ACD990092546AF937F0BE8B41DB6D32A48895471
85E94D691EA52F310BF82FB782C360B179175F99F90508F5C9637AA1C9E4F23D
9A3AF81755E9BDA7ABD5F0C9D172B13E10EBFF55FA08C74EF586969FBA58F8B0
7823FE0926718FD372EF6E07B6A326B4A665E0EE1FB1F6773563AD50FD0DB780
9E8EA85193EBE4AE0CE3FC4D5A14D4326911F7055F9B7AC5B159558DECA4668D
F17E4EBA1573E6C3E4015937C13740C8F2BC15FD103B8659CCFC32E71173C0C2
D436EE3A608558756D258F40938D39493945CE36DDDD5D327FB994F3C19D8521
35C14D6605D8BDB4DBB514B9AD592071B5182ADC0AD0C2DB9201F08D1EDEA2AC
078B18E50243714D445E51CEADC025BC2EF2880E068D61F2B9BFAA1356912E36
ACF78CB2F20F09BD3004E7E6B631495125A070FA497E5760AC72ED4BBBAF0254
E356257BE600F6AEE67347DC1B49DA90151B669DC82D267222F909B90F3DF094
D84935F882B124BC018DD7A5A35D1BA55CA325C748FC43A096AC64FF6AE3CE2B
D98EECD179D8120F9478B8FEADF1FAC6D1ABD4D268877C3A32DDDDD91195DC88
F343C0D47AB267955C140D8B5A8AF99C90A66A6D4B7F29FC6E0F722771BF7B2C
B86E09B3ECF744CD584AB5D047E75DAEA53560FFC9EDDE8F99C551E0C08FA189
A4BAACB0B978A58ED042D5745333C40DF0232ACD8C2CE2CE9950F1DDAB700B6C
C69B9A1B63AC5634E8D2E1159AC855F8926163A346EC85078DCA039418845780
ED20697C67C54DC0879F33BDB34915CAD4568A1C29C1229C44E6E73B463FFE7F
67B7B94666906CB15B3122C4E5140FBE6F534C893D523EB78B7C5C803232690D
458768EF740B9C8922E284D81AB576C8C2FF615A7D58A46950F0266F3C1E97FD
ED2F37B215F1087A3B160299F164C1CE010E8C707D2B98701285BCA253651839
8B98EF97F1E7B59703CCC55E3A105F7ED680C722C70477DF10EC1F0599165C50
D7EF7F13DE96B43471D45AC57A834B47A76F7F46E12AC63CF869CEEF527395F5
2E2343BD6BB2DF7ED4846AF81104C1BFEEF4435B5246A224514B326ED8257826
FC020AC83845266E23D69BA86C458CBA5B9F238CD0E1F621A6EEECD29FF5E119
EBBCC46F88D87BA71B0D21BF4DBC586BB076E890EDA87B3A963922A29E00BE83
34ABE22E18366B9FE79815DFA2659CF5DBE572B6BC79FD5B02277BA53FFB06AA
8D65134C4B482D64954FA8D1AD3C72744D2618007F415DE87A5865FAA3CFC9E9
43CAD90C568433B94EF171F2B2F9E1E4E4B5FFFD3CD8871C98934FE4BC73F5CB
8455B5EAB7423DAA5558C5107B85FCFED21B7C2EF998D1C697496BD4C4360F15
6D1AB55CFCFCCA75F4FC891F8A65DBEFA5E50207FC94DD6E5B41F5D52027E9CA
665ED2BDD3072F45FA57D34BFB71EF2428ACA10B8CE89B9300E01DB6497645EB
2A6C37538AE31B6AA25AC885C2330BA7E9AC2E727754189AF4EC871967BD941E
B8C6F033BC5F8F19C0D2094DA63E3238A206781807AD83DFBC5571780A658A9C
A19FEB0264CC882063C82AC153A2702D5777EE707C1351CA0C88EDAA97B54138
E0F4E0A7C95DFC831B8BE5063E171B1EE40A46E235F6CAC4F19CD6EBADCB7D73
85C74B44F1E848ED7A2B286D25432148263A93FF5A9AA5FAD4CA69069757DB06
D6E011AD8D92F7626A2B25C32D9E237EE196BA66F539079845AEC2014785CBF6
AE954334D083A389BF54C1A2EE9BC7B7B45778DC84A513F352B248413C60BDD4
C9671CC48B89B1C8CA80962A9F13B075F5DD768AF5492220864EA8411BB9FC0A
C2D19D29B9830AE890EBC1CC7336CF3F8FF7CE836FBE1F7313572CCDA10E3EF3
8DB6261A861DE27CA2883616D318549077FAD4AC5B27073C16AA8B80A61DF255
2121E35817F8A13EC4313FE558E960C7BEA0B66672F6DACC3146345F86B498E2
3B5611D2969350AFB9FA5F74D61F187662B519F9CC9EA4A221710F245C7DF4DA
A1C5F2AF786954010FDA764DC3A82CA17353FBAFA30AEB2C0E179F916298A90B
79BC7372D1C0A009616481F48F4E3A74F611F7D337D1BD5A003AA24FABBDF232
71CE408C335B8BBA0E90818ED58DF141B5C8F475827A252CB81BA3E97A29A36A
B210F9D25F2326C35A3B1B5AD564A3360EF109006B7D788B4525A50B6B7B2179
7C419082A4CCB553642D6C2D2700D5EFBD082DDDFF0A83F38D5CB26E31B28783
F86C2659FBC4880DF998C749DF868EEA1586082F7E85AE417A3D0FF02FF54C1F
C76E8B2F1DD7DF94D7CC5AAD9D14395ED42F4D2240595F43DDB661F994C6B911
EBCB4C48BF0DBE4AB6CC3CE36DB461FB6C3A542987B402E2795BB389C7ED08E6
DC495622FDB73D1744B9588D8D8BF33FB94289E2A7994B5B99CA16D74355B2A7
37E1E6A5A3ED9525C7266EDCC8F1A91300222A02DF36EDE203DD61282D44B86C
61B9DF3CA75EFD6C356656FBCB21C1A4F4155E7337FD161710CEF3DF8DBEA02C
A07C37A12F60E741D6C451D68EC6A48041A3B6E9A6EBF25F1D023814589B2A89
03B0D202AD890E700B9A05B540154D46A86FCBCBA89A66B4D6560B31C71140DC
60F560DDD668D700614732F3FBAC457E0EB9FEC05CF95EDD202E744CC3B65837
80720DA7474138F847B46D021414BCA5F52CF7244F2E70E7DDDFC59BE732D651
8A5421266DC8C132C0D76EF7C273DB1BE1C6EACFAF1456973C2D67F18F577B7F
8EA6A3B5691D844077F9864701EED61439B1AC276B957F01DE403BB1DFD48C7B
D62F4D3D8AAA142329E03B424F7DABFB3165C98E4FCB31046249FF831571117C
CD7926BA328159192BFCAB50D8CE9DA0CAE9F1CE123DC8A0AA89FDA3D7AD103D
D6A87A4EB9E63BE5CD79F0E12D309A24545D7DF5E6D6F665336ABAE5F9EA7E0E
DB33951AAB8A19C1C03F5F7133426A76A8D9DD64D148F993B882B6156092E2E3
7FBF1F1E65FF2067BA679F0E255E2ADC1C4DF8C38E89CE919F2A837D1393E54D
42B511C82AE213FB08DE4D7FDBAC3C94D1E110EA5C329697E95864650A7F1E88
F6E59FC6FE94245215EDC46FA40B544AB6DA5E82D81CE2A83171CF2BD29C2307
4546B5ECC43ACB5569CEDF46D479F1361AF8C497163A8E7B5027769EB5912BC0
1221F7E3520DF96181E923263EA15C0663A852293BEB0B56F40AD8EBFE52A293
460051DA59D2DF547ADCFDDC4A585780D02177F2F088D5C7FB05FFB3FD21FFEF
9C7691424DFC32890249EB33CC19216DEADF6749F67164F0361AEA8D1C85E1DC
21A2776E06CEB751C69A85509E3C9D02D83EB34FFFE660F09D520E792553F11F
93B566794C06DF25F29002B5FDFF26C4E399F7B9BEB0B0192EA36BECCB4169D3
3AB48AF1205E426FD9D567ABBE7546E2E5013D3D4DEBF3377F906BA2ACDC4229
183D52C3EEFAB12A4B320D5971206D7590A7D87D4A147C8F7C56591BA554EF5D
72EC5A4C472AC78E697DF83922EB9FF7055097CB0B113B53DBA607DCA114ECD6
D83B37130E89D5DD1403575110C328177D4FFB016C188481D71578651FFE6A23
FC8529F41E69E91AAFBEA5F5208F539AFDF9361520D392CC121C5C767659481E
AA1F0371C24C704F54D3235288DD4BD7F33CCDBBD497190258ACD4A069DAF9A4
2B61D64E0EA83347DEBBC7BE7AD027D53C3B70A9597CB66F5CCC3072C7F842C7
1BDCED52905B409DF1132C96F2EE3B411724B861B7BABF1E3CD5279B97F6052C
DDD583BA27C5EA6D314A9A4AF8E424813AA067E59404F9851D7E4B1168F8119E
944BB3267F1CCCED849759409514686847B4F645A6FC7267CC23171BBEC63B9D
5B388525C023EBC75ABE184E2B3EB75F1BC5C0432658B880F98923E90E9529CC
B011139C8C62649C9BED4822772A24F02D5470489A8109C1F0B714BB1609BB93
17209E3016C45A552E619D0EACC094DFDB208F9A000F3A5808DCCEFF486F469D
3CE190839BC20C02440EC4067167F2E0CAFDEFE5BF32166208A06A7A6CE24B00
960111A1630CEF8E69CE9470B9A1A8866990838A8596254E90D34B0866FC8813
0338E890CD7D2CD30B6E2F1F9F8B8C86A177630EE6C0DAFBC40856FBCFED50B7
9342D9E9262BEBDBC6F9BC74ABCB459149B8DCD4277912FA2BF0762C911AEAFA
C9BD0312AECD3559A846990DF6F8909083F226681393B97AD5E9E77B6982E169
85EF48C164787248F97B7E38DE7C917B4DD0D94E1620DE8430115FEE34C3A4EF
0380D55429AB5C9DB45EB4190B5BAFEED95076EB100CBE4B30F37CFC7C83E9A0
0F23BB5532C6C2A77D5E12C4DFBD2BF4BFE16F05757FBCBCC5709771F9887AF1
4C267C1CB67E33367E06923C9C3889A0E5BB275660A7BB750C332FB91C70591A
71A951CC34EED047328917C9D6D6FB197062E3F50166F44774FD3549EB7DF7E6
9FB4AE9A0BD0C1FF5E12405ABC1004DD62587DF729A99B4DBC1D87BB71F028E6
01051F0857C29192867A13239506E2DF3B85F29E5096844429BD3B58468E6E4F
5C42DA2E1F3E64509C0E17D631CA0F5622E8BC078461D58F1AF1544E5A4C47D5
28B0A05AC886A7F399F4767FD1FDEBA41636351CFA99DB19267CE6484AF6EECD
D7FA13B87A7E6E2FBA6FEEE4CE7FF33F692935A67019DF1E665F6CB1CE9830EA
7A9C89AC9CA5E61C53503D3C34B5493D7E3503FAB10ABB45E24BFE3DBBC1B3C6
F00EF26967D82F0CBB3928BE6B9804BFD52FFB7F181562878544E4C5A3CD9752
20E75C2CC65A538462AF6BF5AF356F80734CB08B7DB3B9D00B977C5D57FCD859
57A0D594AFF8C59C74E0CB58E6FD10C5B3907117DCFD4885454D1EEA100A446F
A234185366058EB798DCA87F0A2A55DF63C1CE7C8C4871200746A05653EF8535
42A929240EA0CC3116319854A382720EAA252F6AE9EDCE065EA0CAA4C3AC7B07
4884574E969D16C7DFC8B36B5105CD4CB8EE8F495EAB058950420006CE3E9D5F
9AE9BD5A6A5EA5305A59C8D74928A386FA108B20BF43F28BFA7066E5293A605A
59876BF4ECC6A35ECD1D466873932308A1D453BB9C0B3FD910B9BAF43A993652
2382A3D889F133BB7A04B342ABA1ABBCD4488E8FF74268E05C186D1C28D16084
556C0476BF029ED4A8E0C35DD478F66CA400301BD2C5287BB8E1E5FF8DF7B4AC
C1573A530FEAD1E9435D1CB36C20AF8C5207E716A84D6135E4D60E56DA5C2360
BBC0A3454653B262CABDC5C54F7FE078095C319BFB87E2E004C6FD57F8766067
51608B0488C1F8B3B06D204C16CBE1AB7A61EA6FA70A99004BB7024E84D12A84
710F0225DA13A470781A325F3411BD15917727B4D51249CE322EFC487708A33C
763E032D8D18DA6369EA5C4EECC58BFDE66BA6DF8A279875C885CA303EB4FFF7
8AB81328BDC9D872F9879644D6D06B280D9BC9336236447471F3CD34554B7A51
DDC45A646A900ED0A44CEF60ADA5A18E98E9785171A4F5274DE0CBB73B7E768B
5F92C847A1C11C4AC6327CD4B666D6F915051533421B4A5884F19F5F9D223013
F8FD3EAF384304CBFFB579A56331CB134855B248FB866AE07961343D82D86463
F49F33132C65919BDA243E1151CBB4AE529A37FA8C1A43E63D19B893985558AE
AC697BCFFDBE3B65729C37C5D1506A63A81812A7D4D142D0E8D879AFC666F438
47C3FF0DFD29F397413DF96B8F7502959A938F231F53183AC0B6D436028AC7A0
C54E1F59886AC35C27648206F893F6F2C9E6DED5825ED68AFC03B2B28CB7AC9D
60C1D31764B442F0E40D94FC1EA500930E79A696FDA58A03B0C9ADE6A95B05E9
290F70FBD0A317729E8CA441D9A2628A0751F8ECF6BD04DBDD12A248FD0D9A40
08EA0693192B0D4C38BD0C67A88D069043F4BD56EE63A8EDBD05DDB0077B8C48
06C61442F9C6DD536859314C2D740BE6131B6EB15B4271CEB31EF4E7926ACA9D
C3AFB9C0229B52E9FE5753ABF5433C4AA1FD05EB976040B2A3E7A7AB8BA152E7
605569FB91EDB892C863ED6230405F4B4C7E2E37BC569396194DE5F0DBCCAE27
A9CA54C677132FD4C5CB875B34176EDD4E8FB0F8B35B4445CB9C354FE6084927
883801ACB656F25243426289B29D656A9245FAE9CFA2DDA4668FF3ED383513DD
800AB858FAE81766B23BB86BC0CFF335F7385BFF7C1FA58CE568964C974F08DA
9E1A18B0B2B0E8E8AD6232AE20D6FBE55A810FDB4862F20EE091971846BBB054
A5EF0D6CD3889676B49CECA4D18401DE1CFF63DC07854D9BEE5E8EA86B4C15D3
822CF6263D35D5F6F5EA589D23B1142501F2377EC25749FC6EA978942342296B
509DE2EAF31CC31B27E3E91241962A3E571630CA0BD02828D2084780235678B7
C9ACDABBEEB17413FC4943C05966166B0C0BA4C762262751C08FEF693F6829E3
381EDCA87B9DD51F01ADCBF884BF6B507C3958D993724C09CEEB5FAECC6EDC13
C11B8D1A9F741F1C40D357CDE1F97BEB994EF5BBC6F11E9AC04682962A205ADD
F063382245754FB9E2D79AC4B8DEDA937F0315F60325DB94AD20398E67E38563
EF7E144582777946A8F4EF5ACD55D679AABFC95BEC227566D416A8255758FF27
AC5C613F7BB8FD25C4280E02A528B388FB2A4417066DBFAB0B90AB1302558B51
0C0C2053E2F545755FF75BAB52FFE105A19D1B57C3A54F180EFFBEFC6FC1E6B8
E869C01D1FCB35BDBFBD3F3E9A863A421570F08B30801F47EEC5A4833F218E84
FD7CB5968A384AA4F4D7A066890F4DEBA482090FAFC229B8A22296FC7BF4D173
B067BBB6C512D0140D59906E149D153BF00C2064A8A1E8BB212846E36CCF2D72
FA9ED9B79C21B1667E274ABED641B79666A5BE883137B9BBE02BB8184D6D455E
11A0FF843C7CCBF8D73B13087CD7B9DA14D79E285BBF2DE14B097EE47C05908E
6634396DCFD1EEB5C4AC746436363F65DF22DC48BDA527A3A7EEF1C85E335DFE
0DFD122C7AFEDDEB7D90DE3838F8AA7E17021A62F9858653C76BF1EA05FE1895
D30E4B01F1E9DB7A953DED08B39FF2662369BA348DC7C968D4EAE0EBDDEBD3A9
A09C3F1835596DDE97A987F715808DC253D15626549924E029820CF07CCD254A
8E391ADE6CAF3A63C7E66D36F5A15B20077A78B66DD736DBAA347F880CF434E9
2DCFEB568F46CBE9A809EBA481CD267B46A847B5E077D703D132C3AE6D4F467D
FAB16F4343E83836A5EC8D5359F67FCB12539AB1FD60D28129A5D82B88C7C2A6
19436239200A06AE7022A336475E517C34AE54BBA0A2C5621D6315BF00E4663D
12558DF6520581C9DD9F83370A28BEFBD25C105ED983DBB22B6FFA59AF34852F
2AA09742182BD31CC1B0D0D9B84426F0EE68B84801670A0513DD920776126ECE
178E629A779CFCF066EFAE21CBB9CEC865DE14801862E93580DE45B4119BDD6B
39E629DA0EBC0019674E8560E04A6D8156FAA3F793CD372000729C3F9B6DD934
3D79F05E967EC73752C7521FC5E09DA9D992DBC6439F0CA52761950FE294072F
329F158AC88FCC68F4F82685EF306620C1A75970E62866D6C1B18A27345B1409
738DCFB5CB7A3713523133D7CFB6ACB5AA96C7E8251D2D384837DA4C74321F07
C98B884F57E93FBA3A396FE829AE3E102C67D59915DE021415355642A5F4EACC
5D48EDFD659CEC8F884225141529EADDBAA2850B92284B30DA6D6215BE2B0A9E
9A5DD2DBECD5E6F68CB3D52D76D90072A4C4C071F333BFC723D1BC30EAF5F568
B5AC37DDD4794B9501705B9C8ABD0E1D2F13A9BCC554093F5CA94F9EF405589F
151155885E87A57007B594B0BEB458BB6430889C70848D0B49375AC07EAAC1F3
9A8CDAC341C31B50363E452DD40BC1316BC6EEB5C6D92B625E5C3E24C6A3F1CC
8EB1F262505D4B3DE05B3C9EC6C206CD2B812AE22E1715F78D7723B233C0559A
B01A151C943E0EB606B99B2FC5F3FC381B2FE8997EC131EC9F3179E0E4445243
8863D588B306950873D836A3D012332821CEC4B51DB2701321F8DE9A215749CD
50F2269F21CF8EE1DB9B7103C992D4D9A42920F3D9813D2A2A095370B54B4CFE
73948428EE2605EB377F7EBD25E5D0E66BD2F364260C45D5914EB16EF5DE02CE
FD10A562CB14D466671B2B788F5C9DD59A8B2CEBD0135F611B05A0138FB4F7E2
F8DC632649029980B08BCC16D0F81A6BDBF194F989296C41EDF8BCDA576DE358
244C2D0A3F01FCFDC3A55959BD3BE5CA703C7E92EFEE206D1AEA39EE8F36A99F
21169642916BB42B6C371C8BE8CCBEE8C2A176E20AD548DFC9BCDC77CEAF40F8
E60F6D53CAB8AFE9B86A821942472421D7C24D4DF2FA84E1C3CA8946D757D623
86143C32E53BD00CF23E93FC8F00B52C0BF8E15EF7FB0206DFC64C8449AE0E61
EB82E072DA5CC2D919ABB2F32827E7A53EC4A1BBDF2898F79D701A95EB5B8509
B145CE1974AD1070F88ABCACF6D9F7AF867E4292F7ABC48A9F9FFED6FB30F468
89A650690EC1802D41AC83BDF394225B1691800124336EAB31789982D566148C
6C3A4012FF1B4BDD1B9B310B5232FF2FFD2C0CD8E940EC56AD4B5FCCB487FDEB
B3F4515CDDF1E423A158CCAA96429D488242797C9C7FEF51EA2D868070831A97
FE884BBB91F80FF96C7B4E224D21DDD473CDB0D16758A36C77D020457E53FD64
E457B500056D8963851E0FB188645BB24DA98DB4A6926375214C530D59450F52
6A84CC3FBCBA67499AA8E30CF047D8FA2CAA269D7D3D73DE398F470177FBCCEA
97DA4A1AB06A04B309EF4CC31D74FB02D446B8E39245AFFEE4A2339021533E09
DEFAD062AE48D82FF078B00F761CA81BCFC6CB54AD5D3613DCA21512C827729E
96BCD32004FEA42F797B611CDDF579E572C275B4F308AB8C838848058B25DD54
6DF74EEF409B918D7B6647869A64E63F09D05500F456BE47DDB0FE8DE9517C0A
69826B029C90903DF9E07EA5FD5B584A49F7AFE1B17779E029BE748CEF761582
31CA29E61ECF0A8D8D3592C8F9529B9BA37245CF1C31FA69EB60896A9B8F3C6B
BD771BA7489DBD2DA2F5289228C53E198DB2D4F72B54C1A72B3838F886A23C87
281744E40FB9CFC34B2240595F43DDB661F994C6B911EBCED7521C7939708676
79E74137C37865B91F2E7CED47FF824A9F0C86A27F05D2FCB1190061B84D7E9F
DBB5B983BEC15AC45C83A1E206A2054EB39A7894F49184B672F4AA17799C591E
3A936A061ACBB08CBCEF3798217E07C932503F52BDF41DE62C18ADA69B0C35E0
35136871F1151BE84B3AF40166011D59E2ECD18878E2E442BC9461950F9DE73B
B6AE1647DD403BFE9A7FB706EB44130268D3034F3BD194CDC5D8E7D0D7F73BDC
406BC1F8D4AF141270A4AC84494F3C24E9BC95C8A715CC6C4803F856AE5C62F3
6EBAE12F5478A084EB933191AE9A655F25DBBEDCF2C922CA3B3B0AF9B64D1292
11F46911B337802B3698B7F5975AA3233BC80CB800A295C10FC276BF0311527D
1BA07A5A482C1EE4896B660647A3341CE8D03B629855E0D8A9F5EB0519B72D11
33CA91F09A304FA60B5FF54C614504C33E73C64A11E8C856BCD301CAA53866EE
C0B930E8AED77C57E0A3DECF25E6E90F17906A065504F5EBE68622562F7245CA
4DF7197A5F8DB894642096B3D28D393287AF3DF0FB21AAE64B3BC84C902C0AAE
7CB06811AE523AA438C714B7D0A1013946A12E6DB6DE2F1F24CE5416C77AECA3
2AE46C27D3CAD458EDD9D2C645D8959C5D6CF183C91C34E0973C9089850F4911
52FEFA59C8211E820628D55BE970033F40ED720115D842914BE14C6503F5F39D
43D1BB9040D1D8D22F855D6049A58F8732006D7503601791C6E02DD3A6D02587
21C0675C45C27CF5CA5FD8A8921D3AD5767DDA940B4655CD646865487B4C9C3D
539E7B670228721A67B50D6B866260134116D47650F83C296A671D20C2A14F57
5FDED8A21BD43EC2C275EB10690CCF85417AAB7F663FEE630DB0A4D9E2E39D2E
3685D6350B12F94822CCEF7FB650AB62A5BC88CAD0C32EBB4139C440B18E32C9
2022BB9C2109A7D88274EE3FC78C99FD7A3D28B429CB5D524043AEFFCFBE7A89
12DFCE25DA868880F32324812A3F39074D9B3E38E57BAAA57A721CD5260E54AC
35157D01080CD156B453B314909C55B200F32EA9F5E2B9301AB476492AF87FC4
915ECA252326664C37CAAF5107842A5CBB51A3A16DEA55A02F0962E2E80E7660
A5B914E04456DC9A95D67EADF7F794DB426D84CA8E4DF60ACBC51B40F81D04F9
67FABF692C887C63B85ECA4C83717D5F8100991F74A8BE2E5C5F9E3C2F2813A3
E168C88A9959FCFE317B866F3EBF56A72088658E5AE6F63445CBEFF9FBF213B0
DB5D82D5FD913145C75C837C6E8C318064FB68D7430CD0F7156859F14F2730E9
7E2E6CA8AEBC0F6982183309AE00FCD2B8CF05F1CADDC217E08D86D95693BC27
88E60966020B1AD52D83F98DFC652FAB773E511A912D08A76D478714E973ECF6
FAF8938D4116498BF862A5DDBFA35BB75A309BC0C6A843D9F5EF02F936819545
76B527ED2CA2EB4A43B2B54F1622116BC5EB64FF5BF06A5E0A1C2C7BAA1BDB63
5E337E36790F3F9AEC0CAFCE607D0B9158617B4FAA8E6EFA155A44827022B8CF
1F69EF2AEF19227819262522B364135420ABC88DB06E31E54E2B7AE5E6B3272B
5700B2C73E29A912F198F3F9B1CEBE18C60DACA03D96F2BAFCE0AF4348F672BA
B2D8430BED15BD91491415851AA12C026CA39F4879044EC3CE8741D4A2167EDF
B48C71E19E43E7F971FEDE25E734638099BD3466C25ACF8800501A3B32353A97
6E1661D04C7638F7C3A6365ABB1589156C6F489A87C771CBCD432C32D769F363
9C11568A32E655F135A166F5584F6BCC094B82C5F3D297158E004EEA31CF85C3
0F467B9C0B66FA0C372FB66EA83264201C49B31A569393967C7C97C4A7384FD0
C9971F45C0B1DC9AE6168B55255D6240611505FAEDD3BA5CFC70229D53ABE5B3
7EF91967AF1B2ED01B89BFD4703B3EF8A52BFD2B0D73AF12AFD9520F86CABFE1
02F0047B3476CFB14A331D73F8BC5F26AD901614682E0D74364945DBB7B678ED
EFDD8D58BF8FEAC4F0A32DCE66423A0435189F31DEA82E2D45D45B9CFE0E9EB2
D08B264F93947EC13DF7B6618990E91A067473FED96DBF7A52B3D1546A030D47
BE7B46D402DED493C2E162FEB44B9AD2DA7940A0E9A9782826B5EC44C53F5E74
0B1F071B532146CC5D837B6A2D09BBB6438CBAE0635D875ED4D5CB2AACF9ACC4
3F944F85A5506B8A25F7B210205A57438F425E650A47BE5FD984C7922FD97A6E
EFEE6145854B16DA28297D290842C30EC7E3EB3CD73F8526C3819E9A62EDFB53
F14E7E4BAC46512D1EDFFA0A7B7FC7036812216BD5B754B02E31002947164EB1
1199D222F957C38DE15CA4F95E9DB332F9D9C8BD071C4E9E4F6D7E7FE1DC02D3
7787C16E30AC81F9D33F0FD06EB44056E9AEE33B5F3008EEF551C93A6223A80F
F746F1630431C286C900A9EBB813FADF9B021615315415D8BA1CB39BCA9652E9
AB28F50A22FD753F63F8659F5414857678BF001B4784BEA911ECD14AC326FC5D
5AD041A7782CBFAEE9DCBF776CB6B30E876A27847793C804BA8F97E95820907E
B7F397103EFD536D8A203EA72119D2484D4EFCDEAE7FAFBE34E52C8AF0D5B1E3
F86D60DB084780235678B7C9ACDABBEEB174155F2474D750219DE16ACA00CA1D
AD558C185857C8A834B6272EBBA49690631557257FFEC7508450D6039B6E8BA5
0560FD200359BC3783D52109069BDEF56A2536722E95F962D63E52B5ABB6833D
FEB0D64B4D9C60119365EBAE7082C8380BC3822DDC41E023D691564F2D6AC822
73F805A9FBECFB8364BBDAAAC257358A1A0972590B5990EBE5D70553787B929F
CE694F4A664B52D5436998372E89C5207C8127480BD8B8588BB2746018AB892D
C45098ECF638904B2DA7C5F38BB77804FF7212B8EF53FD38639989DB792F7473
65329AF01A263FB19A11FD16499C1DDD1101FBE6824AB447D9F39DBFE5034F88
4D02BFB634C136C7EF32B5B470A584F81C6A46695C8B6266D79E6D07F12D5EAE
1D794A584C66AA9EE009B340F669190010DE80F8FFAC11DE92721CAE624CFF36
C3B46D661DB349B273BDD7687E8E378C2C244650686B640935A8561B67237367
203424FF349C15BEBA9A35368D1BB649574B169BDC648AAE2EC92C76224C62B2
6779A77595A72DABEEF90FB9BE4B92204962993D239ED7D6C47C6AA9DAB1845B
E0D5B32B1F637A398B71BEB4EA3E543A525AFA0B07C773E6A0511F1AE07124D6
0727CB0CCB1AEC552DF07AE8D11BA00492939C1AF5BE6C9334A46C864A40FA8F
893D13DD009CC4A4D8E80FA3A1C5FD2982AEDCCCF1D604E058F25DDD14ADBE76
36D01AA97D7DC3057414513DDDDE40C2AD16C0E0805C1C6ACFC4B43AD08DF4EE
A40D22C43E8D75A11697B5771B7639B4216AC6D68214ABC525BA1393C916D669
7E53A43BFCDA1CFE48A602015C439C16EDCAF80B972B894A875A84EBE62B8D88
95EE75A168A0A71ACA21AD65C35718DCA98783B57BCE2DD8E58A1EFE5496CE78
08330CB7E9D9A8677CF40DA7E9AE6CC9EAFFA5DAE985DE0521FADAF1239C3DBD
5CC1B0A735E7F40E0256FA9261B6129F3AFF86ED91EAE32DD4672CDAD9E4402B
7BBADC0219F29636A134F639351EDFE675BF7899DD76280312AA0240DAEF0E0B
BAC30AB9EEA1E6EBC61A9DD8A586085B6DAD51718CAFD2697FA09AB66800389D
44D321CD80721B010683A4D824C9B2690B70D5034577FE59643BDE0B9F2C9BFA
672A0C92497DB78A5DAC89716577D1CFB71AA08A4112FFC4AB988D763E29D072
0F3473CFCD886E5A19E8D9AD7324AA50EABE80B6180C1F0BD7931D3BF10AD4BC
C0ED71AE3D934F1C31136B477450DAC59E47DE705EF9AFFDF9038DDE21B475A1
FA79846885DFF956BC3F8838929F0F9F45AF909939354ABEB327565175347CD8
723A536D53F76F30528277A729B7887A6A965B1EC6DA4ACA7363BCF0B924306D
53CB873F6999189390AAE43580CAE76D616C62D153BCE5FB549E72A21339E69A
07FD89E5D8C9B8B8BE14904BB943CBE9BC7AF0F4DA07254E19CB8E86D172ADD2
462550E9EFEB4A6C06AD5D3632AD7DAD5255E12F5A95C7D5B9C07EA67BF2F01E
A3247E4386A383EFC18AD3184B51DAE96F53EF57BC371F43C0519A560376C2E7
1623210D4868FF74E769954D78783F4570E3FA4289ACB47727CC34FCE075D753
777EA029F8E2BD84599D334E97D903438F3BC3948EF041AC4F72327B660D1BF7
4331CA2100D78E2AF74086A7EB069D896D1D114A0963E64C1260B501406238EC
DB963E3E020F3170F1DEAFC0CDBBCAE98A99E20E1CFC04C0EB0637FE9564DE41
0769B5C15D3972B2F5530BB154B5A9EF3841C00B2EAE7BF294202BDCA9E840ED
D7A7F38E89B02770BBF213F509FE1B9315946BEA6E4224FE51C7D95CC6F5F5F5
EE9648134F344D719E1D3195F0C97560A8F82A580A026DFB8A0C17BEC5FF6708
677BDCDD131B92433771D0BF879D12AEF7D89A36F3EE5178209E8AB8931F1C93
438CA17C9DB6991F69B23DCE13ABD5A5378C2F900DD9D9C621DAA3FF4F4564D2
88AC1EE50F49A5C29E05CD66BC2BF46D68C5D432F7C432539E4C1D48A1FCAC35
11A660FB233B47EEBE6FBC51D8DFC71FC9E98661DADAE1FC4CD980C48FE49886
C0858943DD35D6114830337DDA78CF77653E23B38B5C7CEB2044B84A8A56A6EF
DB6C68CD684517F4E7FC32E68F2E04EEB8C0ECE1688BBCADE8ED7BB0961C49DA
434AC921E2F2AC2B228F36D6ACFBD5971BCAD4E332C0C33662266DA973396F59
341AD378049CA544672A851A3FC0176799F7AB2F2AB38D60E6B246FC94DABAE5
58330DA51C6F72AD03F99E12BDC84F2D2CCD4A0E2E158AD7FD36CCE8B52E8D9F
C424FD8584D71035D2F5C5ECAC8E55DAC9E67CADED16D9C451DC4141BCA87F42
336160DF0EE41B4D101FA6F3C47FF9D123C6A18579ABB8C808A001AF504B8B18
2CBE2B69E206D4775932944E4B7D2240F0D3AB75EB262BD5F2000B1B2C8D8C03
31BB6CA785539920CA270D52DAA835C2F5AD4A686AD1BB27FD66305E92A7BBDB
E48869E2D53DBDC1CE8F5D672102DAD3B96831B7DFC926AF8CD2C9BF94EC9399
A01A445CBEB5DE33BF7B478726B47EFEEBB40EDBB451B5511504DC2D4C8097E4
4D43CD21060D35F24B66D6EF53D8BB744D1A2E50FE03BF04DECC8578039B2513
8064E46C5E5A503C8F0D77EBB0A73B2A5BA2DF004E1C9EE005F24BF94F48B9F1
C07680D1A9AD9007EB369B2A6B80ACFB1433373072F975D7E809E9A6A9F68CAA
1E869D8A0DC49221CBF868FCF0C4807961D1CB964682687D561D1A2C02385E5E
72804B5677ACBD405937690E9735BA8A48F2C4FFA3CEABE9AD26CA686BB81386
5BF0135A86E2A7760B1B2C2A9E5D45D698EEB767B6426A40D73B5F679F14435D
7ACC2B56CA550B1D7A1E362E36CFBAB8EF7B2439C06FD870EB41EDCCACF1BAA4
1E8DACAB3F519B354995361E8DD812EF7B876FFABF7CABD16F709C68D42D248B
449A15DF2E4F2275FE20052B07269B8992B8B0437D272DB7C1C5F51FD3A6E60A
62E18CBEC95D4F9B797B2669D16A35CBB2380FCA35A9EEA695930A1987792E67
A7A30FF2B378941C0C4A0A0099D7F5CE71BCEDBF4CA710C8A46B6C45605686A9
BEEDA0C4DFE275CF792CB4A48732764B95D1656150F1FE7109CCF3E7AE75FBCB
6729BF088326C6BDE9FE30D5C1524C164F2EA0FF55180A3B7278E957BAB8C4EA
EC254E1DFF7A8EE8E66C23A6E422973829FA620FD7AF79A280EB9980C1644514
9F2A1B8CA0CBDBBC5658872CA6420E9FA4671A4AF572E558F93F5C89FD5636AF
F9BEC1C0E35C4C94FF248FF2EA0F009B6D24AE9469A16EBEAAFDA3B35B8A9C7A
87028E6BF2F282BB94BA32B7CD0E1C1AE699936AA34947E30E0D18A599AE749A
FC5DA011CD12A535BF06081D7FEDF50471AD5DDE77BE0EFED0C03EFB23D033BF
4E51873E114C3D3EB1B82A8970B3D6C5C424E1B4C704581E4C2976D274C172BB
CA4246D2ADCA3134984B6823FD2C0C1AFD2E62DA267BDEEA31E7307C410DC9BF
5489F0C4F2E6D464201C57C3C6F9A8B5216B38967ED39DF17FC3F6988F4361D1
FFCF627EE7B0FDE346285FA3BEA661D6922E038503B238D13CECB02D64A80F0F
F82D718BC9D0CB23036F056015C1202E950ED2A092506A7479E1738E9A4A4D99
411A07EF9D22EBA8140A4AA0E3CC3C51F181D90992785B8D73B374D147B2124C
E24D677FA60B2B187AA89758D1EA958BB8AC0EB9574FC830F5415275274DFF8D
FF95672E2E467338DD7865821C37BB667821A435384B8D0CCA2920304EEFF5A0
D335E213A559DB5B148AE89168C6C331C360EC2A05BA730AFFDB80FFA13B5E59
81FECFAE27F49E6F0A52ACEFBCAC72D994E6B4772AF49A36803CBF556FA7685C
660169ABEC3ADA0E3676FB3A48BD39E1555A24952A7B60645B1535CF943BF286
2E7DA4D41BE1BDEC5AB02BD1D130AF04E8DB2C197CC1FCB4FA1EC300519A36DF
86031250009E0863BDD1BCA24B9CCAF92DE8ED88E993CC260992903D18E152E9
C5DAB2CE7AF6787184F83E6933DF3A2121E7D87891D43882FA16723D5092244E
49336B0C7009C3933A1E71C8A2024087ED442216EFE32083A766AF9AD04EA974
4C5C42A2361CA16F2E2F8EA3EE9235499B3200D6A7E161BDDA5F652EFE572ABE
C93519F85D5CCC07C07B6D305FE1336EABCD1F3032E4FA22AD62D56AD09C353B
1A7EF97A4F4A2BA777FC82B4A73B200AF0149534D4F442656553C296724A240C
65F8929B0FEB67171377A78B2DF2FE325DFD24AD760757753403E4F853802BE6
79D57D9A55144F730B6C8BA22B0031BBBFEE51034614B879155BAE75A53F5B8C
AA9F3EF760F264EC927F746722C239DE7285F1C1C10FA8AC82D23C32B3EC010E
730CC663CD9DB9369C5559EA83A9291C956ED1A9AC8C244239BF8E11780F77B1
599FCC348AC52F4BDF7849E194F29351CEFE78899CE46B900B6D9D9A8A5CF318
91A4684758787EBCCA95221C6226E260E93C0FBCB07A543364A9BD144F6A66B1
3240B7421B4E434B7002E64A62D23BF0DA1F8A8C01D0852A8251BE5674CE148B
8EFC588C6A985902C2DF16622A20EEEFB4A93E64C357AD5B6ECA38B6FA33E13E
256C5F7DC0347F1756CE9C161D1DFED15EE50093A4C5997610AA85446AD1B318
99DB60E87A73A7D4F9D7BF781CCD2694F09FB7B71565A4FFF93EEB4EFDBC96DB
C8C825515D676ABCCB56D3BC22F8C20EC662F277692A28DEBC35E0A305DBBD2E
87DDE05F2B3AF5B1DCBDAED2D84F778E1D0F909C5A804FC8345D461E3FF88AA5
D66BCC772A6A6440E3C9D3C50FD3D15E2662DB76DF56229C20D5F18FE2F530BD
BD2CFC21D684AF84AEFCC08C5D6858C24F96C0FA9C3A91607ED37BC289FB8D0F
8CF29131E2538F58048FA278C60EF2F9A800CE8D379374859197831C6D057586
81BB6B0BCCE0D508EF485539C1CE4FA0F9336E74CBDC1133B810916A7AE29BCE
EA3DBB2E5CC46FFC218085FA97FE69D7B4724A1D3384455430BAEA462C2031D6
547281283D2AF2AC1CE372984ECEA0E37939A66A8D96756DD0E585C51796B885
1761D0AC3D01B3DFAB38DFE99F8441B5B6FE9FD5F9A22743FD30822B66FD5853
5F8DF45B68CE154C9CF36171E8DA3FC6DE822ABE5B7B03ADCFE7313A8E7C573D
B473C0606C892224E4E37E04CFC879DABD78E652C2F30FF3E186439FAB51DD48
344E9DD19EC876C00CF651F088E2F530BD4EF94ACB0D44FFBA82597926A707B9
67F7DFFEDB3327BF64CE006790D4C85E7DC74CF522EE900DAB2BC20EF37A3FAB
3C9B6FA0C248F98C06718001341BE0426CB0F2F94439CD793871625F1B12EEFD
6A3EE8B992E936651BCD254CF6EC1FF44A49C4B603BC00F258F8A6D0B9B9B2AE
D11AC6FEDA6C90D32D8B1042DE5B4709977E950E619B490A054451808FB7ABDB
FB0FFA221A10977BBF4ABBEE79E19BF9D99488D94C622AB1762436E4276150B1
68AFB4CD1B2EF1232FA3151EBBFA361593C1EB5E845C461FB87ED755555037F1
47ACA67BA18712F2361E52733984468B25C4866F83F42BA2DC676DA84F3E8A68
50CC441803A073E268481869E5DBA56D2473FBE4942DDD93927327B574A881D4
4D98A31BC9FFEF7D9EBFF25E3D539E05CA55AB2D37B72E6CBF59913B37142924
8556F905CD7B6E8B20385CDF2ABAC6D68ECA562B19793B4E4D4E04D0F8744C42
B434EAEF126836570580670F8A698BDBC94418D962C3382EE998655EA4148568
EC96CA2888B7839DB93DAB3985F4A713A7107F22DAA866066FC8DDC13FD76ECE
0A2CA7C579EA6EFFEF461932183603526800FC8E127CCC3796C3E14C754E6A0A
0796E6FFA59FE7A1E8127C20DFB3ABA3D3529FEF16DEAE8D919C85E229EA458A
93E4E6348173F2D869B2B6F275AE5791E20C3E432BF9DC545FC28B003020AD8E
4CC7140A5DC56BEE34291027EBAC07A1F4AF5E70B13F6F6CA317C1A7351FD571
7864343B5A9E8CD91DFA03E1F13740B93DA0CDB5966117462F664EADC049DF79
AAC8F9F4980A11218E6AB23EEA2F5A6C8A7ED951BD9E3128227784D6BE9A703A
21EE09693DB9FF2E3660D108DA86E2117BCEDEC787D37B1E35CAA83AE6AA3206
7DB113812ABEEF987962E3780830752458B10DC043CA38E008FBF5E89112CA48
F6B92802C091E1DD9992A6F0F2DBD54846573CFB43CFEB5CDBFB25E62518994D
A1849A5F552E934293B27FF5AE244417758823FCE8A2B7076493AE4011E46BCB
A4ED21C38E3C0A137E4959F501ACA40EAE512023003CF3CF29553FE07A7853F5
C7629429C6891070014323A5ED11DAE5A3E601EF88B9D63C0291AF8BF87CDAC9
498B39E9361274CF2D37B0E20556C47A81C37E9545BFA2FAEF73176340616650
B24C7EC3339083ED6A042D2B62F81EC90A5D78E6B1EEDC5E99048CF805A946BA
D20B3C411DEE724A7881590E126CED7225C94F55752CF016C57EF0F4BD32E572
9F38823FCD7FF41BA33DE6733F876173A10E1BB40C2FE0ACB1C293145DF8B411
505C4752C387B9D95973156AD675DE45C25091E497EDFB7A553605C011F7C52F
CD575EC3FA19EE729C856E9AEFDD4560975B60A3E9481428336BB88914B940C6
5B7E7BF755988D4D8820F075B4DE9D0140D1F24A8ECC9BB23B6885F69A64B9D6
786D12C8E29D5F1135956DDDCF11381ACC69E996737C23FC740605CCC91C43A1
D1DFE68BADA1B3B0B645734348FF76BDD62413CE0F20F88235CAB622443A1BEE
09DF0E254693519CD28AFE8466EB82A4C58CE159A4FAF12CB653C9D33862063C
0BDE82F978B6A8B09BE227DCE833CA1E5CA8129D1FE3F0A59667F95373A54669
FF44C8B0B0385BBB0C9016E84FD89D639CA2A26D53F7E4B01F78849D80C722ED
035536E8F7D475D4060E09281B239B6719E0EA158B8AAB997765F07D9E5AC9E1
1B72B463666E080B0637E8D1D848C6ECCC6F2E9D0F7EE55799B38D5129ADDB0C
B28BCA4E8B6809C79D521B075D410413993ABE49395782E68839ADC831E806AD
809738068E7878898C64529C168A355CC4A6DB102BEAB1E67972EDD1D4CE841F
6E9C1710FA29B5A06700F4169D6A908586E6476040C93B13DE7AD5B634A97E0E
B613DA2B71C178859C87AC69A8C85A9A01617319A5B69335B80F92DD0354E754
8D2FE8A0192648D354AABCB4736E56082F43FFC02CD80E1DF6D624C683DAFF25
E93D8B27F14ED0BA6E8D5C90A5315253BCA608424238E47F9D2587664ECC8F9A
26D8A77E597D4FE6F40F235B2B881D816FF91435B29B0BDC40CB9AB169791B38
EDF2527768498EB88D22575E85F3E67E47AD5A8FC2F058B253D5D25484B3BA9D
B81560661AA96AD20D39E7D640105F3314DCEF0B0BA12912BA2341F0A81A5D74
D697D0309A3F923825181254DE754AF0AEDA25B0E463F75FFA331EF4A1862E59
79DB8F3CA3487637DE1DEB6C359271E4E377278A3EA5205B059892695645C44B
457992D931A5E88CBC4460552124179D015BD584035A523CA0510B0C94C54B1A
2A942B27D375490CA2C7C7495E97444065AC974779796CFFF55D013511A4F16C
844B0CEC700D7A1444DD567912CBF43CE6871A060D66067A79AAC0A1CABF2D6A
0645275808F9D734060F4C0508917FC11E85B41C636E8469DDF28B707537837A
6D261607E949DBD1B60EFE6C17DB6F06F83C94AAAB643C623AA10C126651F8DF
C6316C719AAB89A17B99278925FFF9B8267A8E10229D4ECBDB9EA5565875E9FD
F2829E8078CB5A6CC72198200D72175BC52303CFA73BAADA424A14664DBFB673
A701B0EE71478C3C49873BBCE6E4D0B665C5972DDD68635FBC339AEA0C8A3205
F259BBBD53086D10EC7EA6A576D1F082D7E51AEB583BDACCF00A77B30ED0A53B
7D44E35783BFD2CFB90FE4C8471F904BE747CE9276709F4A6BA4E313A646C97B
C507260CAC96C2CCFE59BCBC1B1A68417622B56F79FEFE9168F6525A1C6B2BF9
1F08FF470A62E3822F812CEF8C3FE11EF5BB81FB8871F86816C823CE47C2993D
5A34AAD137418CA33E3F1BD03811E2D7BAF6F8DC627B76F2F0D5999F6DFA2FBC
5583E132CB0122FFE55A49230AC191C0AFE53259A59D1A8AD7A499EE56C6709E
36EA47D403FAE9E71879CF838611A2FA3C16115ED8A79C83C7A90AE3391FABEF
CFFE2BB19CCC3CD528547BDB9245562DBBED6C9E6A3AECD886A7A550EFC78B50
5C33AF611BF4E002ADD3EC484AE662E06B43DFF95CB6CE6C61524A65B275F0F1
D250D7F2AB140EA51C09226882E8CF3C022BC1A94B98C9FE82972965D74DCEE3
125CC2F225715B08CA98D02160B9FE88A51D0B7A3A3361D0382EF7ECDFD54D76
AA179CB516D7274994442A1361E821476783690E94D43B3F4B11B82D8DC4BBB7
C6F4CA08528C5E62FFD72C653CB20F96589AAE9D903E384691941275747546AF
0D13DFA3FED671F7C74A3F701C0103E86A4492DC06444069FFF2FDED9DFFED7D
287D34A1CF9A6197941B1255362C8BD00990F89D301AA25497B4453DB714F19F
DD2F164E1B7DEBE50BF3DDF1175E327F763DB4C59E187B5A5622B8C417E0D363
DAA75BE6F637EFE0120385EF64E4FDB73552571D54A2BA5F53199AAA5E159A83
E20C16FC39E6A98A1054AB696B497F17CAB589A886481AC75EFDF0B2FA0A931C
D17E83707ACF0D990069B3856E4782CECF5A52336E2DD2A2B2E2F542BD26CC63
A0E0DFFC722D561C06443BCF044DAEE19B30A856C573291E6E5FC54CBE116AB8
95F807E23688932587B30B3217E1ED7BAFB806218CF966417E5C3804BF25D3AE
94E27CFF99FD5FDBA5C03B5BCF806DBE5C4AC2A078F97542D6C800EC832B5DFA
7993626FE71D3AF1B1902A8634AC043563040620E3E51D38EF3BF5F98526141D
738FA89E2617993DE3206FB8D35C1AF046242A3BE5797D7311718546A3B83C63
3E4C2C4462D3882B3BE0334D596E167FB5AF5F6631C84B810A2656D261F76007
46F71F38EE496500556792047D05869D915695F9B0EF2D22CCAA63F2D4F915B9
21AA70725757A01E958C327C2F486E4EFA892EBD69B33572A5074C2219785EBD
9CAAA657A126DE61A05232C80742E731088AF3D86AAC877DE2D361975FCB5A63
E52E57AF48DFB1AAE30E3E44A2B623BDD01077A880238A4B74A87E2080F32942
1570F08B308B3302F7FD7362FC6868371D22536A74B7E7CC85E412773B8E58D7
425AAC96FCE2A48BAF3C9DAC20653B4BA31A7768C9F70326181C72A6D1D6AC07
0A4AA5E59A5B8F06175EE7A652881F27D70CAFA80D4C6C90BADA1FF4B61C68B8
CDD1896E3E27D85150B5ADE97B3C894E6CD487FEED355EF32C1BF2152327F765
E094DB35B3D79444EC894729C10ABB26ED3FAB735FC84B268764EABBC24F63F4
07FD21A937B3D173502A069E3E67DE32757377EAF68DEDFBD6AC28F825367D02
7E7948576563AD2F51D22180A6E65B2B4380727AC12A0618065FCCC65149FB82
0D98F4EFEFF6C02E5BF05116349EC7A6B72D81C1624D48749B720C9938879324
FE9289BF3BAB92EBE58A4CA01F6E7C401116CFBE26F2871B3CD1B8AAFD45D419
A5F7B4C4AA2E1F10943FA7825ED97CAD35872E3EF093B23258CDE3317E6116E6
BF96C15627E1C049C92C931924A34A784DC7F4DF7EE54DA13ADAE4BA4566B465
CDBD6441A02A95D4DAB5CC9081864A19CE9D100A7A58D372D7246395884B3DA5
B5D934F8177AB085A88D31111988C95B96AA423AF53D0A401F96F39B1D4F52A7
FAF61DA83358C8A766B5D02EECC806217FE6A4EE5C9EE0C92E43E1E90D2053DC
CBB20B24E56DBB752A54F5AE17D25B0B556571DD7361327EFA5AAC7DAE049293
9C1AF5BE6C9334A46C864A4C49055878271A672257530213A33A4B1A660B9DA7
053D232E0B8E27323E3145578600AD2B06CE074D2ED1C866738F70D60AEE9B01
5A5F899C63E3C45599A3E1B0FE8490EE30A2B0F05553673D1D58476E18E6596B
922A7A6E81A0FBAC570AF3D551F199375EDEF540AD2A69E71605B0C7E599AEF8
2993AEA161D2AFA3E293365261CEDE87AA82D15AC4036DBC3C4B0FDEC34AC1A2
F3FDF20CF827258F11850F3F5EF2ED794E4F789CFE378906C932503F52BDF41D
E62C18ADA69B011559713B1A2C06275347E7FBAE8B109F4020ED03C160F9508A
BF3FBF5769918BA184B087C850BDD3275B848A5C65083A6524EC7389C8202EAB
3FBE0ED3E0175E5AB28264E109E04D553812A64548721482503D5D436DACE857
2E66E0B3A4B193A2C3AE4A82EFEA4F1340AA353DBAB3B83E85D6645237F88F2D
58A284AFA22FC46B3883938BB155475C3A008722EFC18474CA9828102A93E3B5
49E11F9D73867CA95800228FFFD7BB63F1AD1CD98C404F556DBFF17D0463FF2E
03DE7B8687B382ECCBD3267D0F21C3536E15C7F55556E2093CA07F60EBD6263D
FAC20989D71558196AE53A1C2CDA74DB0C4B3B3A4AFE5BE076D56E48647905DC
47D20FA5EA797C2BDDB7AEE1E8F45B35D595220631F8BF35304D35653A129C01
20B7722CCA9E0FDD80CB290624EE812DFE36E3E0052942F668DCA42CEE0631AB
B01C8ED26207557FB49EF5325A49C4D76A600914C44CE56AF3EF0A7E11FAFB25
76A0177FFC72B6D9FF4976F326C51893B1AFA56AC8AFE2AF93C5B3DCEB13CF4E
13CBA49C02DAA29726BD0724A622FF4F7B9885F292B5E72749013A9D79C538EE
56DCD42DE71311E9E85A5A3EFA5850FC5E565EB34A362DF5A1EC53F38273FD29
89718F2067294F316299CE2383D91A368B0530DA34323871A052575EB524DE3E
E8F0D3A6352DDDBE90C7AC53D3EFE3C2A9AF5873CCEB9778A23312E59C2E839A
61050F936B556C13952D6B15483ACC4016405B047768A44F1D31BDFAEB245D46
10671D3928A64A782230248831757D9168908F0B8E11C37A8FB56853C6F4557D
4A4C5D0355F8B5572D1A6B5305F02A5A73A2BAC866DB19F8464FC34CD5DC4304
36E9C815EA54E08AFD1846C7BD5F331FE39A79F72C444B2D791D68D621124EBF
C3B1F4FF5B128C54749533D2A86A3A3CBFED641534EE86AE1DA32E0383308649
AC36C359612881CF97617AFDA40162E0A8087DF237C9582217693A5E210E4538
AC52DF1DD4A95CB3A796EDAB7EA9BEDF7A32602128B00FB976E5CDFFAC3F9B4E
EDB81A05FD6DBFD96D75D6C3850D9EBAB7EDA0C4DFE275CF792CB4A487327644
C8F72392DDE3E686AFAF257293D1C9772B302FDF1E836B7AF9EAA4CDDD997DB4
E2BEFC26344634B5D97685581655F226FB911A2CFA7D516D8F22C8F7AB21C9BF
DD5FB6AB6675A117A5F6E8A36B9161FBC7D89A16E5204A225CAB1B0F800B9746
BF9282B91F52ABECD2F23B26AB4E37435BE59C2A1D11B6ED867A86BEBC65D22A
AD82BA0646F87A98CA176DA09E0CEFD76462F243C59E2F3872C364B9746E2E2A
E7C410938C5BC5DCA1CDD6519E3E61D95D83F191E82B4BD48C1128ACAB246F01
BC415C188C040143558358166D808A485B7ABE2048E5D6106E3980191206A100
0636539E4C1DCF3901C3875AB9E5870573DD19547D6BE185117A40E8CE7201B9
A16DAD8F1C576296E39B524343926BE3E0865918C2413F8BB1CE8E90BE788242
14EC77EB02B1CAF86F4757444D27B23E22C2A3870EBDA96CC52FE9DBC77A09CF
940508DB38FD4FB56FE607B8ECA12177CCCA7BFEE08C99FDF1EB77AEDEFEDAB1
8C60FB4C84485F3E75D68AAAFD65EA43C14065D14DF8617593AF2E03E83C630D
01C326D3D7C3487123E336C0070321F93E7B747BDE2806E0FFE0824D892C5AAC
0ECA286C2A4F370126F20789C06ADABC798BC87422F32C0AF4ABCAAB94EE2B10
9FC8CA5383C6EB876BA57CB5A281BC60D8CECDAC06A1EF467A150663D081D5F0
D8F714749A197A4731E04BE424F849D5B16C48FDBFFB4A0185E38DE5E0444D6F
015D4360755CA0606F69DF468637B857DD3FCE55392F3646BCA9E0AE0476263F
BC9C146F50766FFF3C0598C71A03EDB107DBEBE0AD120C5061D8900D17D96F87
160570375556076EE6076E5212A2A2FAFA49A68BCE7CC3F785BEF436C7B0C571
1B121CDE8E8272C4B9A21962EBD0E9D5EDA2260D0A417E78F9D6A10A365985F7
D9A1CF5C1E78CBDD6989CA491CE3DD9459D56F7B9F238CFF475DD2BE2AE834F0
1399328762725946B83C47134629A777A2CA9F4E9ADC30ACBCB80A179367F7DF
308F12BD9C984EE52E2F65595DA672834C4207FB1115A0B725EB72D8FE4D834F
CFFD11FD8DA623BFBD5571916E025BDFA48FB5F9333D89A50536251C4C16C932
4A7D79EF802A233EEF3A9C9682696B332358E98D4A90815C4D6C0C1F15A38887
ED50A7E762867D844A052AF3F25690A5D28CC034CBB557A72C3E0D4B868F9290
B436FC95D850C894B03646E53C916AC91CB92CB9AE8BA6D3F49A83C13363E37F
A05437A87358C6C1A92AA9C28E7CA8FE6A3D8C284F7447ECC0FD77806FC7DE62
3D351E534F10B20D84CD0AEAEB89E37CB1721C1210AB114584BDA42A8BF5D93C
4AB78D2D958FD9DC45C228A8DAF476A00A901A4765283104ED939ACCD519297F
71EB9CA7CDBB315E4D777BA1B20B2DC5E7492FC44758DFBD1A983E659D1B1E35
BCAF53C9CC1F0927DE9A5E0F963AC7313301E2304C204721E87D3BE639F37F1B
FE968F1428E8EF8D5806C641C4757A58C76577B025CC2EB4F94DB433419DAF55
98300BC4511EEC0E2670CC02A67AFFD0B0FCAB330045767D5FFCD4D8A702BF5F
DE5FA3F44E1F931B6681FCFFBDAA32D63BC149DE8E99B9805609459E7002DF03
B3835475F09A823C99CC41839F6D370152DD51838810E00110CEA40F3A2320EE
F035EFDA3B1C4E79B49841E17F3FACFED58772BDD4978BC0A27D0FD6B922DB89
2A6F9063F31D7F28BCBBE1FFF8996C9A3AFDCD77502147E871A19F97617B4620
050CA2BD8D5CF0D71FAF511946BB0240F44DFD5FAA03B5E47F691C2A8699E0D1
11D9EAC972DE404E6BA2649C34AEFBD15BD299DFB1A55474E862308ED0820E6B
CDAC8AAB91FD490DA1019ACDBF4552F0A0399B7E019EE8FC129FF4AF0FD0506B
4469B3F1835567AA05FA6E11B2F3030635C5A7A7B0C1C99F4E12E947B5159612
56C57BACC6348E7E59BBC6F426AC06727EDF66231840FB665731BF0A962E290E
4F108752E5E67A82CE6C2C4B87C4B93B734C1CA45C435EABB6B75DC3FB410364
5D5B24E1053E23F1DBD6BDFA03562E95AAAC55D15945B2E2FCF2AC49A697EC91
A267DEF938C0B41C1685D6260021DC4981C4900000C2A199D39C2CD83B823259
9613FCC511BD1E951FA5A78EE72D3CD5DDDE631E094A1B65C13AFB6272363D2A
FBF1B6A65886899F086EE523B271BA91799C8D10341094B5DC60AE14245ABAA2
635F3632B4C6655E7468EEDAF3C1737085955800D2C5DA0EA5D31232B19326BC
7B08F19182BA7A3CAC03F9D56AF5D4660BCDD4369882D4E5880D7BA836599510
1E4AC4654A35AE233197E722EC61E5379B6E0E3049CBD6AEBB0DFB8085211437
A9F31E61867385DCE99D5C075DA951FA5DAFEE33AADC9A30C85FFB9FE20FA7F8
17E4EEE52F9C41B26E9EBDCC1DED737B6553A15F5AE0535F88A8804752133465
1DB422E2CF38229BE20093A4C5997610AA85446AD1B3189FF0EA113FD845DE3F
3E9D278F179A4A5613C92295E4444BEB2FCF16D4AE84E928FDC815535DFC8600
7BB8FD25C4280E02A528B388FB28EAFAE73439663090AC624D90ABE51EBC2D7F
CAB49B3D0AE0E79FADFCBE930FE54A8E67BC1058916A8859A162869701D8CB9C
39E511C3119C4F28532D1F7F81B6EECDE51946FEBA8E043953AA5DB383E37471
79FD54E0955DF11AE4D091E30BEDE12E515F41D71C506F5A1C0AF50D8056DFBD
18BB8FB3D052E2E010146CB5EA7B54B1FB84A24A297990D84901AA672AF75180
10A84B5EDB688D20DF49616D8D3F749221F6EE7C901B613E57C772DE044DBD4B
92469487FE6983284256E76545589149E1D61A1C19A61F77BF14C9A9A4E3F160
D2EC4C5C58AEE7365A00E4A7B55D10B2689854C14B43489CFC2394E437DA62F7
E7BB4805034C886967777048FC5FEACB4AE8299DDDB492309217E4AB577F67B1
410F7B50A348BD2987A45AE742E8CB58BCBC7797D767663161D2860261A461DB
E3276C0C6C3AFCCCF206B2B60A271B585DF66D4C012922682DD82B7D3D622DDF
A16383BCA34A7AA4F57430349F3887D89C7240F00F52C01432617B6DBA627216
B81E8EDB34E681D17757B6B27D6B723D95DD86B5FBBA9D68F36654B3CE7FC598
625CDC95C3A4B89E5D79A8443A27BB3F3B096E6E9366AD6A1FB09B9B2CAD36FF
46FFCE2CD8EE5A583B4E98B9DC2F8C090F69B7ABBF6328C04C20B3E11CEE0FBE
CE6DEF36DF8F6CD11CED3BE0EA70B1D2189C21E3FDDAE61302808E9321D4ED81
0B0A7214FAFABA1D83865B4254BD6CEE29D40BCE62841432B9F1A38324405024
9506ADDACCF1CEEE6350F4EBE1F0AD698FD1B301BB23A99F4009138FD4006617
491392E10A8AB928797A8DD688A7C24B7885E0CE7774D56D14A7135D63DB1869
0DE9F6A70DB5F9D88AD477606B412ABEC730DD010C0FA6D94A42164FE5D6C797
559384A643C4A693640971F5CDCC254962C6CBB4895B23005FA294899E426D21
3012DDF7277EE291EB56DDEFB99A955AB8715574F61800FB46DBB56BBFEECE92
978188162F8EBAD35ED28FC47CA70F3F75789E0B3031A07D38A9E24821D89CC1
5090975471DE4D4BE914E42C9E9B2D346A017F4166C8DD6B727B5F77F1414AA8
7E14294569C04718B577718330EE8875B34AB84454ED055C393797B336899FF5
075B4D37B7863DA0308C46D63C82A7E0B87B022674455EBCD10B15434D706578
7374B4B471B9270510107B7AE8E2BF7079D74C8FD4A3ADBABA51B0722D068F59
BC1168F8121A68DBCFD6A49ACA9681C52278AF7495280A63EDFBAC9B5BF5782F
F484A3B8D401350EECA6246E4DC59853EDF259D2BBB7103A4F500E99D4F98C14
FD6E83DAF15B2DBA736A67F0E058A4B82E8421467F832337F18626C2BD7F32FE
0AD75D15E78F084DA265C608E1DAA30785F8BE8E3840473DFBA1F31F5C3EDACA
8BF882BAA1EA4D1C30B41007EEBC65562D652082AA55647E9B8EA55A03882486
02E4BAE4638263CAE24EDA66C9C1C9B1CC55D25500F456BE47DDB0FE8DE9517C
0A6C2A066B2BAFAB6B810C22FCDC5659BCB61EAE285A6433F372CAECB94E45BD
4B443071E9634F1F81391C54CE812BC0B26DA4724BC1E122D123FA6A2C428271
3DB21C6939909D5294C2F5E13C4237F9DC465369815091BF3116EE7BB2429210
B3BCB4D69A7648160EEBF1D6FF3F1A7148B1E36EAA5238216FBDE37BFBA6D070
38EB90C5573413F671A40513F7D25384B0D34176DB25BD16470AFB5BE1E99220
331D09268B4256DB1A16658030A9CEDF035A6AEE43925C55A05C18F9880E23C4
80A2CD0B107CB61A265EDFCC1FEBC7F9FA28EFDE3C7CC8F7E46178C3BF9089ED
D9D9E9C4C2F81B812A11DD52EEDDFE71185695C076BC50E39368F03D809A6276
B0A93860F09352255F29DFE999E95C196B2AACEA7D2AF8E1A183017D05D2463C
9E34742E371A9127806AEB347131EED784AF7749D814B11A4911173BEFB54022
C02B55274211EAF407D20BFF6D89CDBE75FEC3B7581BC955BD94D875AA474C42
A7733E97EE2065A7C30E8F715973D0DC0DFE9B699BB66E9AD21AD8DA0672344E
0B293F21B83127FC7673E221C8706A9418D2BC7CA561FA79BD81E5F16BE5F1CA
C5A32C599C061C2F8EDFDA9F95542D5E4649A311895DC8D84037FA6D0DB107CD
D357005967FE607F5A595BF4AB269B758AEA367A7DFCA86F5E9518B7D2509F71
0753C9AC13F612CEE32F8F7A5578440F8FF8B79F77C6BD16D11D72C90BE04D55
3812A64548721482503D5D4BE2F02258D5BF200E0186CB857A20E05E027F34F3
FD5F1B62E7C08FE64DBF2CBB674BEBA51316281FE59FD806894A7261C714D6D0
8320955591279D0B24D3BCB773D068EC79AF7D8937A92C097E5F9DA482AFB2D1
E1A0E97003661CD4E3E9710565DE42233EA6AD853268D738F1178E4E43201303
0605F7BED34BF377544FD3222CA452944DF5BD79C2277C7B67D8C7AAAB31ECE4
273BFF14BB6E61BAFB497EAAA779D5BB48642225DF28C8245885FEB908544B92
2A95BEDDF797FE68D98B9C96AC4411B5239532329525E2698279AD86998912BC
BBD6669F2D31C6DF4954D108F79DCCC296009E826E0F3FAAA939155D3A2EF8F7
5D2B074BE3AB5458A80D65A02791DBAADA26A7159562865AAA81C1F2588E2ADE
4ED9682F6127939404CE3F29F788410B7AE271C4BA3955DD501A1E6B6B303FD7
0C99E4963E6ACA131F5A67795B4D2921744DCB14534ED336D13DD46EE180E4B2
30734610B7FC39191954A6EEE713D22A147E3E46421A87832FFD2F70E8F9F3EB
231547157887116428238CEDDCA78E8314EDC6B44B38419853AA2B02A445008B
38619E6B853487B44A558277C28E939AED5C59459E230067967A1A30825A14E1
BF708CDFD2AD852E07E4A52B755B7F28F3436972E1A7DB4EF36F5ADE6E0E23B8
79D5C01AC6298A742CB9F041E04E084BBAC89EE6102DF5FB249A07431EAFE274
09C518350E43BDA1712B6862AB7675BF17FB58DA05268C115D06F73B91A2ED42
6944B879E23DDA5BEB557EF4B58EF85794BAAEE4BF03E66F3D8752F33AC3659C
56C59A0D58EA90EB13B8823D098739020A9DA242BAB1C3A23B5301D2364F8C7C
EBDC40EA140CDEC195884677488AADC0EA8D0258AA3B8A1EC03FBC5BA7E86AC4
896D4759511101BE279FDAF309F24B757895A22D923DFD1F592C3F727B5D756E
04CC485B2C6795F0B067535AC80C18F244ABE9F2A95589EBFEC1F9E0CFA91ED6
C8AE5AD609C29290665D47326BB6C360FEE676E9585380AB3606D02E175BE5F8
22C9C27F168D5FB6FFFC5B17C0E5ADC13215189E7D53064D95ADD723779B3785
014DEE635D5877F272C28FC98B80B7E29E117F3FC37A12C37A9C516294150AB0
E31839256D7C37F3CFC2A5D9DB539BC9D4148844453A20FBF5D770960289B32F
87CD81A612268EF302EC67DD89C47B1DDD78A31CFFAEDB24B15FF4F0B3BAF286
3A7FBAF66143E6FECDE716F9CBF1FFBEDB64CC1A137E221A968BE6D54D317598
93B104689BE439690CC84B129933E3FA02F6709CE159B8871109C98CCFA815C7
966DE2351A60D47FB341FA02A41E73A4A2B6C88D7603092C37351A04B0A2F95A
47E96D18D1EF97091CAFB7E9057FD562AAB9E5ECE5A08EDD16DA7DE1C201EF09
15E329DA37137F04DA2DFCF83FF4245041397A2C449226E3051FE2211B46B7FA
05C4AD68138531D6EF259737F27F0E953A925234A001971C0412E8CF0E20E7D2
CEE4E6512D6880B26FE9EA6D67A1A8C656DFAFDBA45076028EBB5B768DCC1410
75B747F32A121C19AA41435DEE3671E793382B7F1B2879A96AE4738D638A4585
F4357916C6CFD3E6CA5EF0E5E6B879B9C2674E7A36A8AF511CBF49EC8F9AF4B4
13CD4EDC2ACDA6915BA90063C61B8D2095250BD382187EFBD03026506C2894E8
2A5981B64619BED151131E1FA003F01AE7AF4E0895485AD0E8A471B2D72DD806
2C5E5DF0396F51D03964DBDFE38C6ACC76A99D5C134005B2E7291357F25378CD
7F65580F59FEE46B64A0541BF043EB89867B6EDE53822B4DE861644E92ECACF6
4E79F0ACC2E5A57DA12602544C5CF2816DFB0214A4CA30227E5F97C18D187A9F
42B371DA95FD16A2F2399E862A20F136A2AE0D63A121E2ADB3BBD9FDE103446C
EB588810BAB348947E9B286EFD9AAC09E009AA1F8BC0AB4D8F68C9BABC338BA1
9D607C517F41C947E3CCF89A383B8036C7B52C4C2233CB0B742F30BEDA350762
BBFE38C28CDCBBA3BEBA28C447163E8C083BDB0ECDC694C0A0B811460CF33DB6
F317B9F4AC0A9A99D550366B8D752B69F8F20BE3A067DFDDD557102050EDA754
D85B44408DFC7D5CF2322FAB047819D78534DC35B0FD0EB25D48CE4F478E134B
B128F0A4BE0008A794E9CBE589540AD1CED13527D1C547AFAEB3933DF9B52C52
AB892DB301557E3482C778F34562D23517693CF1F228BB2B410B2D05A2FEB469
84BC19BF6E34E5623D6887B6270C726A64A81C6C3C737A290008A59364598553
DD47059EB6D2D73C7132137A3149FCDEC0ED9E4F1C10281CCC98E0D1C4D5047D
4D1D991D1FB20805BF2431FBC95992607C9C5F4C2D1CD24A1B1BD794CA4E960A
AAF9E94F2EDF45D750BE1AE4819EA0BAFEA13CF75C49A8CDF645DF609994CF9D
7878E8D67D96A3707F23BC0882C32758A4E95431FCF4F3399636731FD878DD96
A3F30B1D25341EB5D5962E0F6DDD3016C879BB9BE2FEB0B2E850E5F512A15563
11C5FE4243E40DA792B74991892F81305A429769A3DE8E546A8C40A22214CA10
0965B15D5D979FA4716B48FCCEADE5511E8C9BF0287E526D14AAE11085D68EBB
0E203C9256E2A3F2A2144467894E5D17385FF70C7F828A1C29C1229C4C71773B
32A07FA325D9F5FAF4C871D9A5B92A1F7AF1B86415CA118A1F4C29591E994BBD
C65AAFD3D8220DD853AAF095EBFDFAE9DF7B8CE078CBF61B3ABDDBBF3CD8E8DD
4E83DD588B8F2AD88EF6235D679B17368F9CF2EB00C06820E7E428F8905194EF
7B937B78E32A1131518282CA34251C99D539285676EFF6B7F295D19F678A7FF2
688AB0364A185C8257AEB962FA8645B0FE1469A9D47EE616F7E41B153A9163EA
2ACC1B2036139E70DF3AC78502FC22682316825E677D1582E749EFA251BBF7CD
6980ECEA3F3CBF3A087F77B5F2B2AF925D795AE9C8560FED078C1F05B3D7C1E9
B002C412F59321C243D615423642F924F8395C7DD95AD97FAE1A985F19F55034
EC713A6D535961F41BD9E4609BC1C5BB7A6EC5858F8AF8E9201E03337A8088D4
626F170BC3E368A5ADDD6BAAB6584576B1FF5E607451D5E5C5D6112AE5694339
0E550CD56A8499E49D97426CF814ED52C4864BC5120896DE22C7B48E17BE9BCB
E36DE20918FFBD4BF63CA273DB425C1BD0D82D2B8400E271F13C1637D13A5123
2C67368E437D7FF3E2C92F96C3BEC8433637B023199A68CB670673BA9C1134CB
D9E2D176F7BB7AD33466B70DB75D96373D6C5DAD443E4E597890D53F696A07D0
40E967127CF0547B535F4E06E1F7E1083FA6BA13A2D7CC2BD6BEE37B008F7DD5
B994584418A3E9AA9DCA78C5F8E023BF183BF8D402A63DCDFDE47E5FAEE6BFE2
D81EA04B55DCE1AB3A812761E1F48AAEBA672FC87A3B1BC4D0C6BAA4E9115840
310EC2BF9DEB461B459019AD86D69348A90574C6B8524A6726395DCAE1504D4F
BAD2EA58625503C3DD69144D0B5778B7520DF2206906D8DB4135E62B7B1F2ED9
6FF822B24D71F8EA7DDECAB94BEC253F9DF2AAB13145B230A652986DFE670114
29D07AE417B8A91AC26A7F98E6F5486240D44A0DC1D93BBA1D6F1131FF9029CD
AECBB112C119C8C983752643202EAC65FE57F5DCC2F73C91E6725D887BDA9EBB
B7A338B6F8B4B4B04033F35EF4508B04814AAAEC563C3A27CC7082E25B3B051D
116192D4CC0F4DEF83F248E42D8880EE2ABCFFF5D4A89A56AC39BB706C60FEFA
B3F68E62AB2AD43DCDF549E5C7314BA6823E1187390C0117472ACE5F33ACDBF3
EB203D3AA2E5A1CA6C0974A9CEFE670C74F432C98E6FE713CDD759F3BD033A86
E5C87C3A3BCB887408FDB403B5B959C15323FE068A03256E6D800213F0268B89
ABDD9EF56370D49BFC980E2D709165996E65107F6596B1B2A2E1114D835C051B
D18E073F0AA2B8D4A56188C95004F347997A653BD7171C9EA38E6184FDCDD16E
F59334F3E8254CC884B662EE7707B34EA041BA53EBAB6C5470678D26C62F6F27
8EF1699588F1136DDFFB1568F991B5645B2C92E2B4268D36845586A5FAF8225F
97F37B187C986A8773DA7B6357A7971B0C7A8A2E5A0ACB1F56AB5267EEE13E41
462CA53E48447FF6B49CB93A63C7285316F95942F7A16615420661BC0DBA34E7
09A2A81B3B13AE9F8026B430A7C50B865ABEE17F2BCA5F095751A02D7487463C
802B18E7C81864C0B878FB46A8BEAE8E06838A4EE60998E2DB56A6146A02869E
74294C5C8A4AB4D8AAE5719BB50939A7F3CF1A9F25CA921EE08C32859312F3BA
04541224461BBBC9888548DC92150034384FFFCF3B19BD6D6468481C6818247D
4D8A0DACA915090EE616A078EE7A73FC25A0AF3195D7E716BF014605F64DB126
EF210E2F7B1DD7A39799A1C0DCF6A276EE5DC70498722698E039256254DA80BC
84D69548AFCE876B3069CD95FD50548C11CE4E9E71B89D81916DA381495EA802
75D78B5EED6F98A5B8CBD6FA93120DABFE99B8FDC285E343D3DB4F1E3BF721F4
3F7BF295CE7E0A013BA5F8282C7060710D984F1CC9339BC6BD26E5DCF5939A26
C94182C7955F3B55317280DE4A3A35A845A977FFE029FAA0ACBE2D5A66FD6B7F
75A569CF1B1D1F77F0360B3907814F8CC89B72770876F5EB94D772D4CAE9F3ED
36FA9A3DA58CCEBBEEBE85DA0F39771E42E60B3139AEF5D0F7AF4B4C1C3B113A
D336B9D7C84BE64E9145F9C6344976B1BEADE92848EC3FB7142EAC0315889FFF
D807C67846B635438E422FE61B607555157BC867DDB952E953C2E6849EC885DC
BA0CB7B746B4024F085CE11031BD2A67C7AA8DE9C36159D5983ABD1B75D9251D
7209FBACD55D7FB442FD6F74A57C8E1857F593CD33EFDE4D9D8E1ADEBE30AC26
FEB3711E3BE5617F8B37D31991407846FFD3D7DCF70FBA344925C894A7E78E2B
A70D8CF2BB6DFC5B328A46CBD863ABD381F2F28AB18FFC544430BDD56D5D8CAD
F1EB4DDBC43C103441793B1E6755BA1095E4F29148C0151B5F1D39FC3F0DA02C
5BF0207219B56E3EEEFCFA358CB3FDDFE0831C3B7365F9D15E56543C2F230B12
DEDAA8EE4141CB9276F99114F883A66E6FB0988682264A8F622C2BEC98C31F77
87FCD47CA60C293A996BC62F680CB65891185D8F7944C515691AAE5520A7AF72
0567103B9AB48FF758354E87B7F2F2730096A9D22D3979C11D3BB064F61FB845
1C1C2F176D42B537DA5AE4FF58CD1657154DF6203D9437DD7B7EDE35741233F7
D1E39F3AEA39B8E5F5A8BC8E8496C67EB9686D2B095A2AFA1BFE70AF80B38004
28070C5B795AD4C2522D48B18D902ED7CD099457EAB8792F35ADE2EB31200501
9FCE3382723386BB5D3E6D71A0C440AF509AB8BA4DE236C54DC54C83C6B865C5
44BFA69E78EEC2A09FB6395CED2B76E599F4E124D3AA5B2B55C2F5FE1CDEB968
27B7CA75BBF5DF0E4E787A99F70F9ADFC57246EF904FF11B89472FD4F8EF5B50
4E5D01DFA2717DC4982AD7EF61FE6D8BC04AAE19D9B0C85225EE7F5CCFD31E44
A9EDB1BF0B19199C4D8F0DDA3DAFA2893FF0C3CC48258B1E843D5D5866741F62
7CB3CA2C10DA22D2D66368580932AC29B1BDA1CFC7DA53ADFFE8FE047713735B
38495A3BCC0764FC59F4BB8DF0011E6D0F494D963298355594CC5259EA83A991
A023567BA981776808CFE53D1E74445E22709457E800241FCB632076AB1DE91E
D40CA8333D3264C5D0BBD6F577B91C46F9F711F04EC7D2D64C86D067332F4A1E
3FA098CE3F4D00388108880CDC40557BF200B3B2048D818DBE0F94896DD9055F
2C2B9F332E0098D21FF42EB83294750142CA72BBE6E1DF12AB13F65D1EB7E380
70710504495D70C3DF2921FE425FF01D1638D922ACBBBC31A843560FA698FE14
0843EC2A2714597C27D151D43FC3E800C4121990D9ABEE1ACEABBA3D439DAD1A
27BA3989CBB1BAFA3EEB1E2EF2D25A715A821C1D0527FA5BF535CC81FED1724C
4361B18F56C2A5EBCF5EEA5905A2A984B259AF06D80D682629153BC5DDAF1470
93F76118CB4840FF140501CC5F7391B83D17FA3E005292D99B75628C7D17960F
33F279C6C91B964558C964A9608BD42EC6B56995C286108BC72FCA409C43C970
19BF5A50E4DAE2BA8E79AE2DCCCF77F580B76055880773F03F639142B65895CD
3A6F065C5D8B0F9E1A2593F1CE0E28FF474AA7786F3323422F9F6D9E3854D66A
6993D280DCC70D260A2F6E191E5ACE5A2D10B05B0B42F5DD13F756CCDFEE35BE
7A139CFEC392B149E3D3A8218B7F9C2F7D77ED3E07165D9253BCA13DEEF8CECA
570EFCF51DA069913B2E85B089CDF8321B33A59A92D51E9203CDB73572FD7A1B
41D5DAD91D3F92565ED24A7A33A93E9517CBA75CE0F81C132831E3D99AE37A20
2CF69B3651C4FA0C2DD63450B4B791BCE6898082A831348CA5215D575124E141
53803DAE345D791F4C72B604C2430653E94329DE08497447B147906792A21389
3A8A903BAB0A447597BFD5CBAE99CCBC7F718B183780772AB1677166D17A0E00
1E59EE31DDE6EE6C73E63F72A9709D2313DD9F6B7CDDC18D30F714644600F3F0
C650410C0D08CE5E58D75ACC887A6E7AC09203CF160EEADA01769E93AC525BDA
9C74F95722D0FDEE20CD488C8552625EF1C0239059AACDF9D91BBAB0008B8762
ADB36CEBB1D9372E571FEACAB0F2E47AEDCB7AA261374359FAE01006D3D5F138
969591C2DDEF947115B0BB27EC89E378BFCFE2026EC8BDD852FA374DE775ABBF
CDF88206BD4487ED5E09150F3B13FBC07501C38C65A7A08D865E308FA68FD295
5C834596D3F8E86233ACBD17F9B25916504A7AE21DA6D66D571200AD7B076430
42D5371D758CDDBB38CF2A460E73768F45B8B256BE12D90736B18878F4A3167C
F507420AFF2C2D936FB8BFC6AF5A3C3469030F95CEEB43191490614B7EE8415C
B786DF3F8DA4BF2DCA96CCA16C7FACCB252E4C8A4FCFFD11344BE17C5EEB05C2
5BD1516BCB264B08B03103FC9372C29725DBC4260E763D130315A0C46EAD2DFA
E187A64B844E88D8B032EAEBD3F24EEFF22DD582FF99264F2B2B693021E9473B
6C7F6FFFDA5D88EC0320947ED35CAA2AC1878BD248427B4D296C5D096A2FF282
36C0146A609B2866834953F3D49BAA94534E07AD2C262C28397DBC003D6445DB
C0B96BD3C5C029B3C289EB119F2FC32095E717C6FB8653476B0D7EB14587B413
5BE04129800F8120D2652C20A6EF04C2F00D4A1818FBA70BCB9B621EC73A0C28
35C0EEF9A25ED875B725232E88C41EA1DE2E65DDC60B5836C6C2441D561F7681
361FC77069A49B934781DEF4F33BB0C0D8B1E3EAD0AFA1987D0EBFD5648DC316
D3D9188C568936728EBDDDB5D669A56B0D8B5E60BEDB4FE7F08160F6C6149D46
70F6ADB0280FAF8905E559AD40F5EE64AB72E7CE855FD71930158FB5D2549603
B6F06DCCFBC5EB103B4B1C62C262AE77BE79308639A543EF2E1ADCE6DE9D33E5
B65FEE0D72E795C2AFA34E6D63A61B1BF094948C2A18B57F702952B17AF4DC4B
E73576BE383A782850D63C34CFE9BB3BFD11F51DD2452B42CC0DEEBCFAC449C4
957E5EB52846560376386C00CA4B3F3F895A8305A9C1FA4B017B11FF8BC1A7FA
45300508A63C5B19655922AB977449A4DE26DEA7CF7C12E4BB67625399C770CF
D078710E8E02BB7F6F83527DCF1C43757A86FA160A285B06691FD00B0EE58727
48782B28F81ECD5B220F051FC699E1613D996F59C38558A127FF317AAA6D137F
051F69A2987F511A3805BB4675F9AE06992C39CE8EA0E9577A64D147835252FF
FBCB9E6A4CC4407CF70FB469DBA6A758D711D2182AC004E1B0CFA7D9D120ABC0
6548B73FB6E0A638899C75FEF83FF120F2F1D64B6B30FB0F3B93F57B7658450B
AE1E79FE47AAEFBC1F588554AC5DA4C3671996B2A19F18C95B2FEC6DFAFE01AC
02BCEAA1D7835518DAF9122011F765CD40A541F993F8A8D38EB18F924DE9B45C
69947853AA9BD2FAA5B665F65B488620E09175BC341E951E09E111B3FAAA0BDD
ABAF820520FB5A2E12428D05D2B30F7C03634F96933B6DE43E62C29E184145F1
72C619C7E92A3965DA1CFD507639B4562157333BAB0CFF5BAD46F61A304F160F
A03E718E7F3436B4F2859A8EA768C97A600FEB92FB13D5D2F5C651EF6AACBC4B
B7DFA8798CF22591C381F7223EA81CA0B4A1126BED12068DAD047889048648E5
5F559284DE37BDA8144FB61F3D0316DB23D2F0D01594B074007215999EE450DE
4C51128F0E322BE53450AE91C9EE7A1920C0FD54C9941EF9C3021CD411497764
B2E0A76396EBEFAE6CCF6D97AE5901A573F9C8B99A581BABE6D44B89A282D633
96865FEDF484F879497700FC14E69A426B7E90720658C66D60E9C46AD951C85E
3237646271CFB8C61B6361376DD94A6B58A64E34A0B88F13562D15F5356C90F1
60CE299F7D4D63D04489C03BB67EFBC35A44D69ADB0A58BC2D08A93E4CB5ED04
037568C980122ECCF479DE092A8AC99DF8DAAED3B23E44ADFEA3EADFE7A86ABA
A50636DA7AA8C05211DACE69222A09F19C3C8C72EC1F6F6322DA62E559181DB6
E0CBECC71D4F072A0F9578401768779E11290B513D951CAD4D4E9615F4F9D86B
CF04DBF3F0A132F194BED1AB3A93258B43E96D25F90B4A7871A02DC0712BE9B8
5F78C1673EDA9245173082FC1E13DA764D0EC19CD2EA69E895C64B26FC059F63
B08A5F1945B081A199823B58D5CC1721F0D332CAA3635AE47F939CE657A008A2
00FA16995FA443646885EC0312BE7171C6F88BAF9E85F9AADE15F6711E166473
176E892AEBC22D2EB5CAA9CED64E0D3A22FA0E73FBA1A8CEE055A6F1F22510CD
5F7E53F726C327BFA7D34D12096119AB38E963C3928443ED7803C3FA64D15733
6F4F1EF245E85DBF1CB4FA7742D4481FB699E58F9320AFDCC67723CC869EC3AC
F1F58A98FEC7177E027CEAD65C6DA8FC5516369453E596117B685383773A2A91
972BD325774AE7D40A8271749BBFE37CA8D42FC514512132D62F480239D95679
CD6664AFD0DF325690EEA33B7111E33539FFADFC57373D00D420D049AF8296DD
CF8F75D15EC7C9F38C971C426A74BFED38E363378F1B9E0387F5D4DEFD6EC63D
E9A6A1D2473BAE76977FEA4B3AF08E707970F72088D4B53FA7057FA2BF6D1EE0
D3EAC98C020B63B65731D65D338C9DB000A38EE3EBBC60F14F4BC61EACC6A73B
BD65FF5465A686D8D4ED923FC923776353090D55AF476DD7776DD6C06753D074
07886FEC545EB0C44EBD59A7DCEF383C21AED75B52BADF4B52340BDF68FAA8D4
0A10DBCFDE1370189852AB306768A9A927CD55428373787AA11A374A6B2B8075
61B377B0138F81E326BB9A8A2B41B8DE9D33926E0D084D7ED105C01DC1E5BF11
7AEFCB9222DF99CE6D22923A6B5F53E3D21C0263CD8FA2A48FB13F7979ED1BC9
29FB74BFD656AFBF66F726E870A2616872B04908D12A6EE1B69E32B7E55AA5AA
DE098C3A253519AC17B42956C05D88F0EB16234BAD9A7936275375BDE2AC6D3B
676572E4AF991238373E3CA3AF9388DF4E9D964E700E5A1FC822C8B9842133CC
1B0083DEB493304F764E59AD1F3EA604D4006B3F85E2EF811392777652002A93
8F7E4C82D127EE60B46C73F7BEBD0602120A39734502CDD4B830BF7D8987BA75
88C3EE53AA495540546CB98B645B78DE3F83AAF1442101BE96AF4F830F88C1A6
4AE322CFC872A1DB532909540B9DA9B96C99095A2DD6F8260EF41F8CB2DE09F1
CA420C4026F7613E270B57A28462DD14F24609EB9738F766E48CC33620B9AA36
51447785E39A39214F11464478D446136FB87EFC192A113616CAAD1D9510F1B8
9BDA3412F0CCDE599E3A822129119F31EBEE2DF062E689E96F559A48BEA34AAB
453CB13A740D38936F6A0C96776348D0C6B3CDB1AC036F921C37FC80C924E614
B039F57EEF1D8AAB5B04A67C6E9695E3E0B80B5A224A00DB9F47A877E8D8B0D6
BFC993264DBE6BFC0177C5EADD49F128EF6CAF913B62BC1B07D32DA2AEDF43E3
58CBFF955A1C4D5000EFAA1EB9D127654C461EAC6701EDF01BA0696E1CF25D5C
8C0DADBC851F042484604626207336CCD333CBBF95B08D6B00F7AFE5A8558076
8F76506DF75D9C8306AD4E7B863ADA4113205754C2F423D7027B33AD97F91402
C88A64A9B3637B7E2FB6AB3CB73488F39E1FA90E957ACE01FCA8A010908A15B8
BC69F6DA71D75BF269202AD491750ACDC4D36557279BB67E2A5171BE3CB1F6D0
9FA569055A4762FA7A16F8263F55AF2880888D805E8F315BB589F08FBFCC00AB
3BFBF765765B0721258F39A44934168CABD310ADCC627BC833C37F65A4E5A341
DF4227BC863B08A1DE2608F05622831FEC98870B5189E0C1C00977B52AB45F84
58A9B0F4BD4C6A64BBACDE8D60D7C2EBB3AACD8124D04F65D8944452F6A68A74
63A17449530CE212CDD8ABD3A35FC05BFC697DE4A1F2450390C8B5CA22152BA3
30969CDD45B552EFBF54796FB3CFF2F7C682D6B1E4697D2AE945C39AAB081149
29BA81A74E6E9840FCE348C8D905D91A8A25D7FAB3A3C4746D182118619B40F6
8AAE6A703B429117B7625F4E09DE59B96D0B740CDD16557673ABF125708821ED
468FC20E6DC8C49CC4628DA10D2F36E58FD06636BBE040960FCF88BA48CA90DF
0F71E8DEB65984C06446848ACBACF1CB017398F3CAC4393132737DC876ECFC63
BEB739458303C4E87869D26212092CCE52E79FFA03165A7000EBA9EDBB3E1601
0D2F752D9D61545C40D0A79878F1D65197467976DAA23EEEC37D44D3DDC7FDA7
205FD15E5657CC250971475A6DDDC10FFC177A1AD4870D59ED0513DE9DD3EA0D
C8BAEFF4F6BD02A96C2648A88FC8C35BE3A875CC573F32FFC44C06E6229A3A05
84A7C2FA01A0D0FAC741B0E05C7D9C1844CCA249C9CA141516FAAD9A0A74B98F
22FF0D47C523A0D3067B711F52F60EEDF0BE7802C1AFC521C49A45206E5AC46B
4A83686ABCA806FB20E0D5BA65A7EBA3BF240414C31D0157FFAB6761CAD23962
2C1C0C43A0169581DF680FE020967FB9D0D5604A94372C44865739F6F560F914
DDB4AD5A0FFF25A4C54F9BF7B8634F10E8E6A7FD3C3E78CB7809FD098BEBABF7
E0E89F3D2A36D569F6FE9570D4987B88B17B2FAFBC78A70880904C351BAF9FED
0FC0AB3B27B3711D07A3AD85FED27B9704490B9C58180E3C6E79AFB8D56B9AA8
CFAF39680D37ED625928A3CE666B39295E4F1F3BF698E32DA36CA749D1A679F9
D8FA900FD12275B7E88DC2ADAC8720175688E42D6E21524C8DEF0AE6F2B0CB9A
0A7DE61F85E27F4F1D76592253045A7B1EE3411875DA71A0E7D06C43436DCA58
F5248950B060E612AA53CF9A5865AE9F8316510A3DABA3E0BB0163D904158B9F
80E1A984338F0929042CBB25451557094387A73F748A1900CFC75BC78FA05A03
AE0FF9BF1AC73305B1B0C2DED10E6BAA7ABA1DCE3B6E7FFC540989D0B32EF65D
0FE337C8D2FA02D6E6505D241C8EC09914A3A40F1B619406C3563BB15E9C819B
16A445A118B05CE4987BC9F1E14E64A7AE3CF6CC83E40A59F62A964D61E97A50
40EFD6580357580AEED869BCED64148DE3A6CF359EEEA5031BC1015E37A0C83D
CD6A6B1AB92C159BC9C9EA957D82AFEDA9C56C31A992D3E6E1808915DCE53A68
5236823240455B1138E684B0693E166E13227ED5F20E61A6A0904779AF8ABFF4
5CCCE850DF43C0C3DC10670EECD7FC8B427F42915B9C08C01C45C556ECEC2CE1
0A73BE6FE50FBBA82FB0F426CF7B536FD7AB7C45B2F14396287420E1CF2A8AAB
937D9A40D947BA60F5EAAF9EC30745BE85CC02D414120175034E2AB1E3F5628D
B35A53ACA380DE77B3AC770A41B785B8C06BD13AE6435BF2D2840E3C64A5CB08
2E4D44D4968E0091A1C3899EE69E74A595755BED413DDDD36D92834C0CFFBD52
8227DF6E20B0232507096C96B1451D1B6A3610BAA67A0C73C5939F6ED6C50AF6
44447EEC75796E4A03D67606CF17A7889EFE8ED3729C105E79B70856AF40F345
1905960AF92A923088818C82E2069EAAE82445ACCDB4FAF8BFAFCF12B9291B41
B32C12580CC3DE09E5102CDDB56AE36A504379DFB4161D64B7D0CCBD441E1751
EE8FEC57B096465C54FA7B0C9F6AA6868A291A996FA9176882E020673A84CC2F
53ED6254574D388DA138C487B61325E64E0F4ADACAE076ABB19725FAF220C7AB
27AA73E9531E8284AD15CBBD1B94558A58569201072F6502808B921B4726C582
2E377B18334DC3AECFE5CC593CCA46732158CDCEFBF51E9286E5B659E672CC54
CA541AE8517BA444354E948D5E14B9CCF9176A1E9531848506303938B6328581
05EB36A61F5C3F7618074242075D5D7DB185AC03EB728D6B02857B8484E78F7E
13606CC2663E5EA539672B7D3A9D4B5F82F10005BBCAD1179C88DA190A0447AF
9E5A313B048BDF94FE5F33D31E01717F0619154B421E306DF21FA8EEB6825225
923CC2038FEB0834C04E36C71D34330D4A7A61162BB1103FC4E5165C977440F7
5ADE7EEC09A6588454D31E2E52A9A939FFC76969A214AB7B204E7F30D9AD04BE
505822E968B87A7E50276C9973F95B9C4FE7B1A7C0509B359B60D385991B1467
C42403D88F0561E6412D5B9A5C3E7993BA7989F22E5BD61317DECA993288A78B
36FAB8CF7CC5824DC621F9625AADEF684689B74C11BEF82C55B1FEE6C2E48142
44A090089B0C348508CAF38CFCDB5C248D565E7E5C9E79A4F1CF5E53A3603EC5
4C31D22B1653C32DD75B91882D0DD6F32E743819C0BF118168ABC159A9944443
AEFEB23209B451904ED3C2AC1479DAB0C46A8088585BEADA947F2D7A4C44FEC2
9150DCBC50955298D25BAE03B93F9A90D68A00E3E242D7C09D005F2DB1FCD04E
E264BBBD67733C3E28112A872E1FB53614340E83E052C7E335468D8A252D4E67
E84FE0A48179B35E56B38B9DB173495F452B76E3B044AAD221AE705678CEAD31
9970E71DF019E9382D9310ACF585331D291BA2477B9636436196FF75B7311A94
AB2D46A1E9AC2614A16BC518410EBD6A4896BC8E710C119C4E2D8FF8F6592CFC
63ECFA0443F992123C6EE5A7516FCBB7B3A588B37AA900167E30ECC14E887FF8
7AC4AE74FF63ADC6336DB999E8418A63A531A803AD7C2E91C8789409D9DD99DC
232D79FFF83351D9507188B1A648213B8E0174F2EE21D836C162C50B87786C7A
3803CE08B4C212090C8612031B564A3D0DF552F157EC9A1EA920DB602444BE15
DC9F18084F67A88AB57E42C228309118CA8F5964B2857C753EB87308FC137C42
C6A26C14F4A6520C9508249D2F7CBF255EBC183CE841AD8B13249DF7B02638D6
84F6BEE626DE3FDF3B7FA4457D9D796218170591C47A6A0ECD5F59D338B5CA25
3F1440C4EF3B7A64D99005105DA4E4475B8FBDCD8A70B7041DD76170BB53AE6B
9C9E7147962E41D7FCC966805ACA3015786889E45E757B7C02A7433629420063
3982159D9C43F1F640C1E8AED1689444408D4E494FB948E98FD872FEC7A24E0F
147540236395C14BD3D34939B692175D1DD43C4721675F731DD4AD4C9EEDEC07
2FB5AAE803E399F95BD9411ED48D3FB96248BF09522E30C41645015187ECBD96
51211B5D3AE57526F2DD2226B513FBDBB174710C787976F0D499922F7F86656F
27EEA58B4DCE4659DC9109BBC06D88FEA031AA5DFF19C2FE359A4647C846F0A9
EEE4B3E4704A80251AF9CBACD3D767938138011340577AB8E9BF87E8F125B945
4AB8F5E73A8E67A93D3C5B071FF90637C1394B0A62CEFF304156565AC673136C
B486C1B9E2189235D7C18CD2277BC2CD253D0AF0D5BD6A82C82B73AC542E018E
860E6FF1E52B2EC9CA4351F79B49142F84C9884EE17F0B64B8D3E1EF9336B313
E7FC9690CE8C50DD2C51BC9B2DC2F0A30A26C51387510309DF40792E5774F796
F5C2DE923ECCD8F9DDB14B61DE00FAE7F20FC1DA499569E4B108C680D3049404
7BF6B5C55D7BC91EFF25F568D14B3C0D33D97EA73B90B8D9E7BDF15343D93677
E4CFDE331EF59AA04B7B575869C07760C82C04F86E13EBE59909FED6F924503D
4FBB21A7486F6FFF3E05A0C15B3213964F86D27EB6D805B0798CB83515B55A64
4676AF42C21686EEF991768F8934001AF0AE9BE92F8C5C9629F9419187627520
09E5605829C9504B7EEF7FEC84F04347712033E2489534E81B933896433FFA2F
4BAFD746A1BCE33C5051AC489DFD1A4F36686E27F978AB9D430E952ADA199D29
E773EF16397DBF4DF00A935256EBFBD0F69E37EEB8B77C8B5DC1CAD275CE9CE7
D95611B054B93A2BDDD2969C74605229E61AA835C1196D4C34F28637F0E9DB0E
F67820A0EFA259B5326B56269DC0A158946FC1AB67947D30CF8C498057CA6989
ACB1D5350E4214FB7314FF7492C81941EE484482778D7CD030B44CE5841D508A
00B13719E580C9ABBA1C22172F75880747A0B97B89F0EF2CF157A223B4563C46
863FCC5EFB9E089728ED299B06762995C09512A22F7F64E83FC05EE5C226BCB0
11EF3C9DA3197B2E846821F2FF38CF225E8C8D627DE2671A7A0570685C191D74
EE78BA56C978CAD50FDA8C53968F29FFD49DA5375890391521E878DEE227F3B4
A2519D3A692BA09FEAB13B5415EE5E8A28E84EDC5A7963A8969EC9090F72127D
0EF22209CD228C4C49D6680D1EAC0F1979CC320FFE2FA271A43876E8FF875481
64B93C7616B3893AB88AE31293F67B750BA31F1B5FE479C1FB57EC636E9EA6BA
66C57C797466A64F1F6E21378B92D16D054B663A1FA2EAE28BEEACAE8C8E1F30
F29BAEBE08D39C7A7BC5E265C28DF8BE249C8B41608FC1A2111FE636759E5EAD
E67E1B138F1C7B27BF722673C3413084910BAB04EA1D51143DAA7F3A2A5CBD5C
CBA6B4DC9051EDC54423F0B1A972060FFFE5E610B27D2770EEA3929D266CE126
299C2854A43EA1AF36BBC091BCC50CB8427B26BD3981AD9171BC12C78B229BBA
9037FD7E222B9DD482CD45A324BA3083D25C9CC92BEE866E64834396A8D88E74
E733B7E69988133F10DCE34BDF197E4B824FFA05CD22BAA2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSI1000
%!FontType1-1.0: SFSI1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsi1000, tcsi1000, lasi1000, lbsi1000, lcsi1000, rxsi1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Slanted) def
/FamilyName (Computer Modern) def
/ItalicAngle -12 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSI1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-154 -321 1524 901}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B507C15D01A499CD662D5A9EEAB6301
A217D0C48E00C98B35E1F953911D6CEF5480C11C89667F1023929BF95E347271
E7703716BB7835635CF91C7F0798652537D81A3ED8525D134887FA02E29760D9
C5AA922B1300A22AFC7CDA0820BE8A7D66E8570EFF87D5CFB6F367A25D27B319
3A16CF1F7BC71C15AEC80C30BE8A10E11B7EE7B27CFACF21F4EB3D1E176AC392
9A862751AF08EF44C3DAAC593188EC83D7031353533C66DDCF632EB9E11C8D3A
67B2BE16550CD3A2209CB7FCEE83CE1849659C8038639AA7EC17EA477149B179
AB52FCEFC73F1ADE4C3EE509D337544D9C62E41B1C4C683A883144B848547C93
EE032BB03CB4A023986AB6333F9A4906C9406E00ED718782AE966EFC32EA1A1D
AE5B09D064CCAF55EE88CEE1391F75677B3BFCC8371F3298C539B942D9960CC9
21B01689EA7380EE55DF1F024EAB689FA861E390B7A87525F9984F8FD0219B3C
EED364F62D2E45E82D2D6702791F330A89B0445C9688A06CC7BBEB947CF6D0CC
0D14255285C8E52BD70835295D1F5EF299B3E339BA2843F4AE224CB11293F7A9
6AB08F942A6518E5C65E332F500A8BCC49192FCC6951489B1C0310851C1A2E4C
441AB5A7F60D3873613C18582CA31749C10ACF6DDDD4A3E5B7183DB2E7039BC3
D7F1B4996CB2CF18396578946CEDE37FA4E0E05D8CEA8FCFEAB23276DC109F3A
0A40AE06FF50A6370C7939708676FCDDC523201916A992D606B04FEC726E5D59
5AD4BAA8BDD7098998885FE732258313446288E67E05482170E03BA3AEEEA3FA
E09F250D7835D5548FC8D4B9015A6817A5732F97163335F934C61487820D363A
4D0C7F398DA906BE8BD7C96597FC936605DADFDE29BBC4708AD640107935D5CD
CAD4A6DC434AAD5762C8D5AA3BCE2872CF885EE95FB98512F623FCEC960B719C
2782B7064884E525CA3D66A9AC72E524ACA65A18DD8A1AD441D014DCD8AF161D
0E0DE276CF9A1EC0A02F6DF1D34537CE2D959D1E79386CFC1944F05CDE073A17
C2694A24C75CB605EB4B1A15DF82CB5F80C25F20A1089D1EFAD7BE9460ECCFB2
06B89AEC1A05DDAF3E1CD6EF9FBE586A54E6E776CEA6BC2152A52F5531BA7412
D4FE371CE86973B852C7821848F4BBFCD659CAF395D1B75BDC9288ED9FBE0F93
390CACB1EBE66039838630F35F0AF5D89449A0F0015B108CAB1676C03EB1B58E
4D475EAC61AA4FD6DAC0A4DA6CF1EDD53C5D7AD72BB9058DBC0C1FFEB58F8B14
0D46AAA40AFFDF928EEA4F332BA294679C8D5C713A988B0833D77D22C6A4E93F
0E05A4CE904E413BB2FBE9E0B18E93BC17C084330BB50E1ABF29B38C451922BC
2204561D55725B5F206DB3276A13CBC0EB3DE8B7BB128280C049B07B07032333
B21D6D67608076C2482A283694578C408CEA5443D7ECC67F1800D41B514E8E77
CFB06EE6409C198377608A108ACBD7FE39F512E96719D178A8DD653534500BD0
1EDE465A0F4F99B972832F0A626ADE85A21997975DD4039952891221452EE669
0A886BEEAD6A269573732F1921CF9765A456BED329441AF1A2421014CA44199F
828DF153C768D6B239281D78FF32AB9F4CCECE52DD4758093E8D0906B278A809
9E2B78C05FFBBE7774226092CFA8DB75819833A3DEE5A4105D2A404AFDD6947B
83EBDECB4308D51DF97F2FC9AE710302645D71CA2D5396BD982447922072126C
498AD97E0316DB86174973F9FD1EC1C2840D2D75CF2814505DDE3A9324B5BC87
9E74D005E525A96E000A3077768E0D7738E18DCE3200980020F083A04A68B733
40A434B884F47F0C269B6552554390F2712677A3362D93C505682962C509FB9D
3F1EB3D29F774A1EE15168BC2A430D06DEE3ADB2925F5802EAFF63B51729C579
2E13FE318AD221C5CE49CC80967B02ED9D850B07E0E724F14F6785E8CE8B3101
38909352198E4F23B71694E0692DF7B71EAAA6D5CA8823A4E7A3ED885FE96683
3B2822F5ECC66C5FD2C667ABD7922E56CD832115E288871EFE935178BC732186
07863BD6739D10729D35561B8BAA0E7564DDEA96536669217B479CA0430F807D
13C5ECC902A790A25F29FD7177607237A69AD644E88D53A6EA12289A220F4A84
B86C54F7ECC50843131BE8F85C95571926E784FF583A510C4873472D8E00965D
EFC2F888CCE8ABA657A6ADFE822D40E023A040C04F8FA29DB907284324FD7D81
18F790FC5FFECB34911D895F050F420D81EEC45A57650B14414414AE673CC00C
8D3A4FD5C5C9C740F645106B063D892E77A9F464ED14800A6686BEAA8E5D449C
B25AEFEB45D64D88A870B9935FBA7CFC2157CEB8886345E0B9A9547A32743157
DFEB1C97C3D6AAC538A4476872BFE5E7A4BD47547AAE0CFDBFF7523CAF67B7E6
59EF3C8C128ADA8897283BF696C5C43CC63AB045E29AFD732A02B6F4849A7CE0
81068A0B53E167799A3558E34D412DF23AB31A789B9A97D64F2FD32F3598C8F0
95B726339AF0C748650DDD36352BEEFD6F0E487F414C09344DC0202727D9E1AA
2D9C87BD15269B50D3BE2475906FFBBB859272F747ABCE7A979667738E9CAB0E
678CD7B3E89F899799A6D881690F8976A6786DFBD8687DC93083763D0264E4B8
239A108E827A9A0D610D6DF54ED07F5F983479F7E5CE75ACBC7A447FBB1EED9C
43553C544C09EDE2B2B98457A95E71219605B7140B6B2BA83E1D5763BD5E7ABC
C77716F7F17E3155B8735820452FDADCA2282D4F6024698D82747D904C448106
07B5FCD493023AA37C87090A6554331231D7390E2A05CF14D61977508824D328
7220D01F4552398D636F2041F6EE049BC3735A196617559C5402452EAB30E0F9
C566F1ED91193B161D0A359E80D3B07ED077B584199E7CD2BA6E629E9471B2C7
A7AA464B880F42F3E62EC84725604B266B874C2DB9082F59B6FD5F9CDF76D2B3
1613824B1563A903AF578943B752A97233768CB3279DF1E4EB1D91315F66AA86
8C2362E89A9737A689D91FC2688632BA024AEE9A543D05AB30F61D7C7D7533F5
EF81BCA585775273CD3F3249810A9190CD7B60EA4D2468807109F38D7E0D59F2
A114F7BFAB31C2D4323CB97617B6DFCD0A5FE74E64961406C38248A8833E00CC
40DE0D37A82F010625FFECB23D23F12093EF21DAC4222BAE3A02AA6D9F56CBD6
D1C649691C3E5A6DD07D99D4A8E0C35DD478F66CA400301BD2C6DE9EF4C74A58
5A0EC8237CE52286E6F70B15B90D1D200E4A1BD0EFF80FD505A1343D32E702E6
2A742A1ECF70C1AB4699BBEA9C0BF2161B08F39756E710899846364CD8E95144
D4EBC786E72D26C0C23406C35EF72CD783DF9EA0A42CF06C204732B5003F5D1D
F97AA8EE73246ED62575CDCE914272A8F6391A3632A426DB77A36FE7E234C13F
17FB007DFCCBF38DD290A75F015150434EF2908403B43A032F0A9D572910AE98
FA9E1A765342AAF4A235E8607AD153091804325EDBBF8DEF4A455ECF9317CE64
426805353EB5F50C13332BA7F24353F9D50078D11D6C0011CE56644E79D3210E
34B853353B32E93A0311925EDA41B6BB8CEFBF4DBC586BB076EA77F99DEADB50
3252B1BEB48B3DD05D0EDE12B85B98E795BAFEDE2899CAAA419F561F920F24C4
3B8E7D0AEB4E770E9DED1AB1239E03D0CB3894B66CAFE23E790522806BA0821B
9461F55B4A9D3F708B3EE7855978345D73A09A4830012C86E87CB9D61C5F594B
420EA9DF8BA01EB2D2192FBDE6EB1E0CC997FAD8DB9FFA16A04320FD73B51A92
E60D757C5F25481982F05E0F0DC6E93A7777A85C27AD7721A51147863B452491
7B7565B4DEFB5D87909D8BEF8DF8459F1AFCF286FADA7A42531D96010EEB9E7B
32CFC272BD7E8DC58EBAAF03B07C9F5B68D68B27DA27EF46BD6BB45DBE9BC4A5
BC84DAA4E599760F4F2778AA4A0EB5F9E4BFE3B43605F4D77A49F65C0949E59B
60EA999477C368E359D0D7D6BB76BAB7392E8E711483348AAAAF51B8EF56A8CA
2C617B51DC4A2BEE307B928BF22C09906F674153FB9D69D7BEB425186BDA0127
AE3E19FBFDC80E6752B21D219B71C3B2587127654A325616A4EF021B9518A3EB
6407CA92FF940D5C2EA0707CEABD8D4889ADB2ADE8FAB00EB7DB84D22F4AEA48
05BA0C8AD936B82867F4EF2718F3A219175FF4C433D55785D38DE64D6E79F42F
69D7260A31ED0426F9B00D35A35777E2D1412C58326CF079DA9C6EFF3ADA40E8
39B75FEA0DE8DEC924E2694422BB6AB465E68F0751B941A02C0370254844C2D7
E4D6F739C66D04375A8EEB465AA1770AFC3ACD2FADCF10E8F74699C0123B5EFC
D5BC53C58C8DE2A289A2D5C8038529CB897DDD5B686826B5EA77C511570C24D2
A0C36363A3B14E0B3AB867CBA3719C0EB7BEF2A39BB166C4CD50983E504FFBD0
CE5A8C61823F5DC53DFACA07F6871F3D44A1BA2AA9D22313A772ABD2F3A98A53
AC833F4251F04D159DA667468781C34DF0E6634198310891849D932E55F14CAD
078DC1338AC897DD84ED9D41199B130BAFB33F6DD049F1C3C391460CACA7DC16
114C1C5DF302525D56A72F565DFD196AC2709A495DBD4203CD40479811F28486
07637BC882D0E6D90DAD8B82225BC778405F3A8FEAC566F7F1217F1BA032B749
AEB06A762864235D8D59108DD41805F007949849C1ED240EEC3194131B54F4FA
7FD45DD080DB511D4C2C5E9C193030D383093B7EE7F8EB6F555DE95CECED055E
EC363FD8C384449A71FECA66423A0435189F31DEA82E2D45D45FD02DD735A50B
A9D0942398FEE159A7BD1D49C23CB6EB81A52EDCB91E890D0E956FCDE33035B4
B9843187A2C3461DE2884E34EBA963BE5F50CC074C98C189C334C577F7894943
B08A390AFA9294B6C973E26B49D2D6FAB538315FC594A3F3DD4BFBCFA2CC9AF6
2F1F55AF2DC345796AEDA5C96057B34087FA8771FE52AA9E27033A14BC5CAC9A
B89C12504F2D6AC82273F805A9FBECFB8364BF1015F9C48EB2ADF3F46BE339A3
2316087F8CA6C7A13F953AAE3FF6294185A035D1186B9C7B1344BBD5BF86326F
013011F770976967AC7B454F398E73A28F9E859BE6FB98E1446FB0BB1D32B7A9
555EEF08BC5570B46E42301DDA2FB93B10EDC7B2ECF6C2B3F8D3B7F23DB6068A
DEB41E347F87C989B838A4FE19F98BB2AF77028D97121D3B83F8F83F5331D9A9
05EAF2784E82A6DB8732764C4BFFD7DED428DA1F1F0FFBC203981678592C27C3
9DE49BBD28D09F3BAEF126FCEDA222E049948116EDE787D88758CBFAA79D5F1E
583DFFC5E4EDDD6FB7648FA5E8BDA6B09111338797557B24634786BFED9BA353
62BFB5359F2B3F7356ABE20056B3DD423BE92D54A682D6E0481F93B4AC018DAA
9E22DDA5EB2C71B0D7153B8322547F1F829DCF4DEDD6ECA9FD01DFE44D65B758
F97102E7A86692543A4D0D7C87EBD42EDFB9B35C8E52D2A19D34B3F0C8586FE1
D897A0A78C6285499613E00551B37BC3FDE5ECACBB3BA33BCD8BEE3EBC3198DC
0554FB3831472E387EC0E632E354912F12EBE7BCF36B8FF289CC52A53DB12CE3
8B87580F899959A3000F64900A39CF6B65288C973DFF2C16E9F72E32DF598EFB
98EB4DA356E1B0D62F8DBFB579312E91570CD9476D3BBCB9EF17ACBA2AA15F91
4CA4B05F95F1811A6F03AA95954B8270ACB161BE8A4E7D21E4AE4B1BB035435A
18684A6CAFBBB5137F74B14F01287B6F275C8C3077F2870130058DD9B4D43AC5
370DD60D815268A3D2A8CFAFB7D45FEEB581E783F932F73C406204CA2E416332
EA1EDCAC72AE0546AD6920D040D4FD8F6AF688159F644CC8DB21BE6B4CE6052E
C5BB4D2C1DB94742CFAB1F63BD938C78E01F43677D7EC9B53D7DB67EC04D2604
E4824D6EC2C87FD59BF4A29E129930DD663AEF6B61A0B581AF8EE6A5949721D2
B1D627D9F3C0F2FC67F53E41FBE5E2031337E7E7EE38407F65E8821D464BCFF4
C8C12EEA5EF98ECFEE6A8B6322EF1EDFA12CC4494DC0DF29342C28FA232E4AE9
6CC94DEA061E304318C3099AD4E5AC2018D72C7A34E641F08EBE80828431A982
1624AE150C77DB0A7638C43301FF297B398A16DB1563CFAD208CF29AAFBB3C02
2BFB46EF93134D3952BCBDE7274D64C58730E15337DFE8DD9072E1E85E454DDF
CF56B4E01B6C1FDF53752834D3C851DAF1E55A61A04D09719C82246C7F992B00
B6BE4DDBC6DF4768664BF14767F0373881A0B4477ACB6372136AAB81E636CD88
661F5F7DD26D32D224F70466ADCA85FACD73E887EFB96A9D6BC553F9ADC8D25A
D5246886AF9DD130FD135794915404CBB8D2823EB86B2878ECF3801E5C2678FE
56724239EA5AE88B7C73FAF13FF8DD5DABD0E3521500F72FE313D10333512A41
BC5880529B43E9F27F411DA3EAD2EF737DF5D235E1CE76FBFCADBA5E92AC7023
CCC91FB8B35536EEEA92F17ABFC684E4623C0F83F6CAC49C2794CBDF4851F217
D01146BA58BACA049DCD6F8E43E60A0BFE64BCB9238355C655FBCBEBA21E398F
72BC4B85959C4EBCB026B9290BD021D5ACBC3CE2FF6687959D2EC1DECAA25038
C5AC4D4F0FF4062AB7D509F6F92DF4F08891BC89BCF065727F7FE44090F6F1D4
88FA1F38E6812F71EFF8249E2BB2569461DF178A67A03E7AB832C3479ED27375
BEA0630D12871AD4815B7847571340B4C7A067CDCE0D9E35DA36DC6B52B037ED
9196621983FE85DA1D73FD94BF7484AAEF7CC99B66139FAF12134FA2E8781993
62D1809638C314C753B8DCB061B2472B8191ACE4B0971627461921EC4FB8D09B
A35D0BD332B99DB48C59CEF64B6D6961644850AA3EE1C82D5431177B3EF2DD21
234E7950876B712A8EEBCA6302C6481BB6ED243A5B05C68AAA8AF72E4EA9DD70
32D10B64F2EA44CD227E30900075353470CE8CEDA7B92487D43259CD7944C60B
2C22B065F1C410A65BC9B6043806398D4B409675FCA470598A775D53995DC7EF
E22CA7C0124566E59CD73D738C8400CB95E42B0D1C89199921D54138413E3C6F
1B109D4EA0FDC6F09349637EB93A855B783AB0C8DAD5E0C188676CC9B5ED309B
9D41BCE4AA10202347B2355EE28A45B2AF6D6174BC37FCCDB0EB95829FBC1CEA
B0257D4E6A0A076A5DE4B342F80283D90EF945765181448F21B94453CAC45CA0
3E039A62A9F51B6441D6E34586B8C1032C78135593282AE7A0C89A45E10A3E7D
A1F8240CCABECCABD4B8E201528BC46C2DB9B949EB45FC901B9DA3169C085C2D
8F14A9BCA5A71F090F073F4E51D2FE7B0089C796F8539BA1217F42EA832CD6BD
470F6F8594B1B5132C1121D1C56018770F1DACB5B16016CC69DDE9BC8E2C55E9
8CF48779A74553BCC06FADCBDF68A8898BD1DD4E76DC621B0D51608399CE99A1
9C0C75C8EECB71AD97D278D5DEA9890E2A5A68BB24070CAA3C1633DF51A94B87
174B5382D4C455132D816C5D8FC00E92579F8A501DF1DF04292F022F75E2B854
19A38B9AA27710B5BDF7A137CAFF7911E5906DA778C848991F136CFA15995A0F
2CA02FF037CB78ECD8C3D7636E31006CE0AA26C7112CFC143DE57F60645190AD
4168924A7EA8F3F0864D5EC210DC9FA89496148C74EB7DA761243DEAFA5FFEA5
2AECE1022F75E3F4CA0727FB04C5CBBC5BF0E65DC96C49E6F1BC38DE726C976D
CEDDB22998E2572D5579C4C31024E1CA230A2B4B04D7176AB2D95931C697C46F
F4BAB407B471DACA6E0D168EAF2804D50170F52FE2BDBC743B56BB17484D915E
276397522FCD8AF0387E2B91A4AC2B688897B4D9C43594E0C455AFA92B2A837A
692C3B36EF3999DF09CE7BE5065BE49D4F66F460C82308FB603D0464CA4FE861
4A56BE28128AACD454ED6EA08258289D1EB7267C2F4E7D03CF9AEF889E7009B9
DBD9A17F6BD7E7C1100FD2B569AA9470315DBC842CB631E34AE01D76AE8B8686
C8F33E86FED7EE126967C4BFD32AE6443D614F50ADD94EB41ADF72BA2F690D2B
EFCDFBF02F90C8D6D39944BAE1F7F281FA71CD6C6BC2142FFF3F96BFEB088DEB
27F45E628D154640F0FC46D94C82F4929AF5B186D84BC320817D95DD7A71FBFD
2986EF8ED3CF5C3FEC40FDD180B078CB85F07C25EA1CF2603A65B834BAC3F9AE
0017C01A3B2AE8F11A4DB3C4C3CB98D43C9DA61D650767596C21DA503D5ABBE9
5FA0FE0F94FE291636BD39A1105361D892B03957F80D250DF84562600A2C6831
768B1698044203144993EDAC10762DD20E2920A832F390CC6D21F9F0AC300473
15853102570CEDCB8D5D4A0E803DCF227112FF7330B50D4D22DB754521DFC0F1
480070ABE70C09E3712331635BDFFC432CECECD5AA85E08B640C1E70EDB2504B
C3C53DB390880F8678338C15128E3F4BC9995781692461D847336DD7AD80A46D
CA6C14500CCABD9AED646F6225BFB70C52D95631F9A367B95A29EFE64A44AE61
8DAE37C73D4771CA4E9E3287728ADBFA3611E7B0E1D8468B1E01960AB33FA385
C61C8EE6A7B5D124DCAD60E445AB8A9F6D289739389B35217FA1CF6186D87F08
783453C75210E9376D38A83D0507BD792221894728F5481E8F59F47FB2489049
C5D9584317EF6049A4BBCF5A764738FA6BB1A79C1D5F7CACE79AC0BF01339160
B6703E66D10AFBC4668249E0C8D511A807D4E0790A51E55928156C3DE9FF3B93
124594A9D2D6CBE7648765168BD3020574C3ABE2C366F13D3785137104E6DCB6
CEB4FF975D0F7E70A965D49D3830C1AB201B4323BC2310E263B3473A5FE05BCE
11DEF3BC34EE880B62362004912119B6B22E85006D657AA8949E7733F924279E
5B23408EF1CAF39FFE721671A115F4A39BB45D9E09DAA039832468C1FEBF14D9
EC9C67ECE19C3D1B204EFAB1C334E8047C67E78F04032334E57AD0E312BDB7E5
EF524EA330CDB382B50A8E1A68B396727C4358DBA8BCA7E967D1C1488D953B64
6DCF3C8FFFD54AE96B809D6C660C85F7AB7750C8A4627ED058366F7DE9B0C3BD
34D2E819C2202398CB6746559869FD4228384D12D13BF8C39EFCE29369A4E27E
6BFB0ED6ECE750AF40EA09776027784BF2CA0750E4EE49A624D827D61C112ECE
176ABB7F74D45695A8473F778433C56F4BA9999300B8E872F8B88B65854E5A48
9C4F08E3C95BFF54F0335693FF28239A2130D994CACA725DCC1DF03EB60F7503
27FA21335036BCB7B718138FF579082CBFB11124D690C093B1674FE64C166523
74D40650920BB2E18388840C0492468DEF20B8A830A5450FD4CBC59DCA66F52E
61C6B698FD33FCFC9375AB576CE308194D389C828DA143BADCF899DCDE6917A1
E3DCE6E3FDAF0A1466C8B00F9F9FAF17482C72D6A46F81C4AAEAA7348CEB3ECF
14BB2DC84836EBFA3DAA152899C9E1097C9491A1F3B9D7102E10A3DCDDF9FBE9
90A1C4FAF85B419DA1B8106FFB5BF4BC19EF54CDC18D1163CE0BFDC2C58C596A
5ED6D5EC78146919A617C4339C21D069C6A3875E55E59C93E2951BB2288BDB17
D7EFED04184A955F5CFC6DA7368C83460AF5D66013768CB004E62AC19F0ACFC2
821C4C005FDDB339BEF82BE20A78882C1DE8B74CE5EE08E71F6E39E2312017DD
C35CD8F4B08102C67B00785788611DBB4FE06F40890869A6AA7A5D93EBF96CA6
7793BACB58831CC1550830903C9AC4EF8A0B5AE1E0CEC057941F782AE2C816C8
D165D893A433BB988FF7316C3F6D0F4FC6046001FC4D18214757AB1B5CFC25FC
DA6C7B402A458A292403E9139D75E2EF768AC14164BEFCB3F339946B20D78320
D0306F026289775C90B3875C007C71BC1064FA72FAEC571532169A776918761B
41B64113A73B9D05A489CE60DFBB99C6A7DB8030970A5FBB7BC270416FE31C13
F6E55301506DF3CF486DAE8E0BFC6D29F4C3F26A599536DB06C9DC3E43E592B9
176C81513429B27503C3C7E0D2A106B84CE04F5B08B18DAC80A35547F7C9CE86
949504AF63DFE324C2BBBC223063A51FE809DE8BA786734D0B59962E1AE153F4
7BB0AC26EBF36572242A60010CFFCE14B40ACAF24695310F55199CC6A85C60A5
F2910571F2C6420602B48B35621B318A00ACD1364B643A13F6F6018B35D0EF6E
8C719E7DC8A352DF64DD5854D98067D9C9015AB10CE2375A3617305762EFC711
DA371E6E3C7F8C8273E108C78755691190C6307BB454BEE5740806C9897DEB50
3D343D3A30E45FA966D75E2C38D6AACD9D647259D33EF84F60C87ED984C76432
A6D23DD6EBF7034E6621D6D584812447F94BAD478CA526DBB852A5D170BDD382
213F1EDC8AD1D835ECA155375DA8083FF0CF52BED68E3D267B37274AD29EFBF3
D71E29B796E0AB54924E4266F1C640C491776FAEAB178F5B60B8D4F7A97B3231
D8DE3E438C770624A87B2062554E2A9DB4E38B66F4848886CB87DC0B5E37B56C
1097BBF3A21C2E4035580E217CBAD3BFF189CF2BC738CAFFEDCF6654A29B44DC
2202F7C8C1A9513DBE70BCC095DE1848D4B507D43A0DC19CADB927A1C99BC842
94C3BC0ECEBA9CDB68BE86D4D641764DA5FF41F1115A40DC88A9B133E17BD607
917909BCB444DFA30C9FC215392C39F53DCAE67557CA9EBB623336D5C4734C28
F55BBE94586B3A4776BFEEA12A1D1521C9D4795FF91257CB363D9B20626DA3A7
B0846B36FA7F2B180D00DACBF1EC0F347E0F5A9548A5AC996476724B3A2B4670
522DD89A2678A79C7AC4DDBDB07F11178376852A91EA53C8D29735FE9BE63A87
C0DE480D79D818B2157A87FFCEBC0624341A099BC0471B899657E9207E49F682
A302D4C807ABE94B83C173E7109CA76EFC6FCD816531EFCF14EC4BD0F0781D47
CC78BF46B02765A5C5922CB19A61CCDAA38CF2E51FB7B309213F7A70643323EB
B36E09B2F1E783D5C301C701FB9F915E00C170B1020DC13C01DD4FB284CC85CC
7542A801ABD9C7820BD09ED8C28016FE02F9913757AD9A73468106DE89CE9BE5
89C4AD2A649AE133C422E0D5AA0C2CDBD67ADA69B734F191214C0282245D1298
B26429D7FDEA050A5C17A728BFB04B546E5A7FFFA2E72A98C16B9048D5E1CBDA
B5A3914BE9CAA3A19F929AE8090AE4730A09A6644EAD7EA51303175DDDBE9DC2
4DE4E9483560B1198250233A2B0D9B201C5ED01EFE92D9DD186EA8B2FDA106EE
0A61A28C82676CAD2734DCA1B36F97233E0278A7A6422E6D8730044F7550BFD4
51790A4FAFD0E027F84249E602C2729FF2D6FAF38D83C964846068054D2551E2
A46910E41AC3638C670DD5E1EEE7DC3612942B100117C7E85FE1CC057E870A32
29DB59C6297C064C14F7E235C053C0D40E96A147AC5E65DFAA90895029853082
8AE1EBC4A70F9381308006AA668CC19E81DA06F6F64FE98698FCBCBE8720B46E
9D7FFDB1D93F8CACA2CA29DD88628C12FA693AE6703310C2B50F2FE1C98CFFEC
FE6539A71569FC1052A3DF9B1E61C60C25E43C317E7EFC5517EA63D2F998490B
7C30F8300AF7DDFFA2AFDBF0B0F4EA8C38B72C2D272860C8FFE844309E5E3EBC
99F2CC762285D1C168516CB015ABCCAD67AF205100D76449DD020D24A401CA4D
3BEE6FDD97F48ECDAE14DD834A3D18CB238302EF2309AF63BE71458319B7B707
11EFE4B5D5569C7ADAD88EF1B156E0E3B641E98430A4D6550FA8D31B8B8ECD01
F1FF3B40AFFA56B2F4FC4C079229476DAB24CC52AE2F31158FF806E96A5ED78A
5F597CD9A6326A3DDE65F7F840C5AC52F4EBC6756814EA2E0A0C2B92D333A2CF
4E66A9A4F7B21A329CF0405B3FEA6411550489A95A9B333E1B04A767FF3E14AA
D647D7D33D53BF2B6807B2F39D22C078A4550E087DAF9A1D78D2990C8DF029D0
07422A8A047CFB91ED7026142C38FEF4797BCB4142F101FB1BC6B7C67DF448DF
D1EB489D7453B40631953D905B5D19EE15016F186BE9291D3DE5C9296BDA5C8D
2FA577A21509937440D9971FDE00B4C55D83D1E0C6A3F153BCB14588A41BAD78
AA390AD9E5D8EE90B24984A98057A0A9B401447B026F33956AC1792B242FCDED
4766D0214579F27A5480B3C950F1CD7E8E75EA526C7DF93EB0D126E0C30A016C
21F46DFE07A3D5E77A1D49359459D0570BAAA447FAAC6971A0C6E3D8995DF64E
6BEB3541E74B8F32B2134CB494D2AF19AFF6C4043B941E04532BCF692A34AF29
AD9DD6D49F302AAA0FDDBBFD5A8CB7AACBB0268A3DCAC856B104578D82784058
FC059A75731E6875B0216A1523E29A82A745BAEAA0DEDD97396AF369A17A3CCC
37393A4F50DD0F984878C7013E6F4CE41AFDD009A19C22CE75F3E60C43A655A2
FCD27416F47552E5782385C2F69D66C4486C72ED1A6DFF41F1742E212CA58A04
4D84A985EBE45A769DA661A781F143086E77A525F97FB489526184C48160C30F
16A53DE809C81791D0FE35DF6B0ADE7059F75C1D0B2588AF261E789C5CB0D3EA
22A2531FD8438F285C3288A2BCC9EC44AA2DF782416F20D12D96CE64BC020CCB
B14529B02BAFC42515784333C71EF5CFA7EB820C337707465FE9887AAF20D119
229EE839BB34D4426DE6FB53DAAC27297525471C5B4DD1D35B3CDB6C1EF759F7
07A3EE63D04962E1C083F08492350560BED23FB373A6C266BF68C87021EE5296
4B080807590FBA25AC172E748B1D26B90D7B15449E95CA4950BF70DC430CC7B7
348CACF3CA4FDDA88AF03D374B54F2829F3C22FD769FF5A1BC76F817EBDCB507
1E64A70904CE183EA946191ED907D7144391490D81E2F10A62BF2F7AE1B4E195
9C6874CB85ED5041F48B8EFE7AE542139CC22DD14BC795575A9A82B1CC9FA1E0
2C60DD318B28E78F47FB337E6FE0BAEEF5D34501E485477EB254942C7B2AF920
38DE4079F8503B6729848676F04BDED093AD5BCEA8A2FED309EDE06A2A5405F1
84BCC1DEAE2EF7AD21AF817F3314CD6998913314A67377E917B950DFF828AD60
CC5EC15A4741AF36CE9D09218520F47E3009A60FE11E3DADB4D68DDF88A003D5
56C5D3B34E903EEDA8CCA40E524C9D5A70B1D4477F18BB433E0F34040C640604
CF113E8D794711BB8E3032C707D12C073C3033B72F42D682878CA88B3E6CB746
11E30A5814A646DD1B913103FFA16389A1FE87151DC53A5359192E4EDB332830
07C2904E404E13897A9F4244DFA1B822E020293CF4F1DB144C537EB5BF57EE43
93B7797998BC20F06A0E1BCE47342E85C2B6BC6214E019DB0E9E5DDE41506097
32A2A0E48DB71F33F731A2D58FB2A445C3ADFBF47BE2F0EA532DA460F472C7D6
DD5BF3FE96A110B5C22ECBCD34589D495972D6816D72648CFC5BD4EE53D88CBF
B4A4A80447B8AC716D66FF9E83D4270EE4D6D05D794D43B743113A2CD3A81344
4D03FBFB473A59F866173EF00224C59142B28B4CEA77B7722C5F7A6F31CEAED6
6B9B423568EBB1294B4CD7FCB1B1D19442B4B53465E68C4A5BCD2A5C271A23C1
C38311A29B2B632147B9A5E4FDFCD965937BB658450721918AE6B55F97B7C1FA
9C2FAF83C3788D1F859E5A2CBDC6E668959091D660554155D562BBD708E8AF0C
B8F425934A0A10FE9C9DEA67BA4D7673A182895F8278B39B3ADC0DE51B0988F1
E8243BD559AAB54B0E4BD5BECBA188CB45685563F6C8A3AB0E2F9D66F0D56AE3
9EA49031279F86C4ED6C84101895BB55391315F6EDA3DA1B651FA3B97B04E732
7B276B64A6837FDEF69BBD6E4E7873348230827C57391B5D0189CA87E3664944
A37274511CF18F1CE64A687B393DF66C7BB9CD026EA9C430701672496ED2C2FB
BFE7754BF7E09D5AC3EEE80D8CCC9853FE70A023A45F4709A579FEE43812A65A
DB58D71F716D5506125AAEA16F42DA0D4EDC6768820A69E10B66F7F50AE11817
0794388B08B3D910EF02C58BF04BFDBC00C6C16B807B950FF7CCD1AFC0D60DCF
224E6DC6FD5408EB3FF314F6DAE531CCBFFEBA7025A316FB4C1AF0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFTT1000
%!FontType1-1.0: SFTT1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt1000, tctt1000, latt1000, lbtt1000, lctt1000, rxtt1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-208 -360 1374 838}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1ED6A435B5950D131BC48179F5BE3191944DD
8626DE76AAFD8EC4DC8241F2ED33E10698DC7741D6E45CF5A02FC6D2068AA205
EF3C4FDCDE803F4D1D4FF03A079CD4FC4BAB3C558A8FDDF53D34AABB7D89E4E0
CF76F77ECE57575C27718A8074CE275DDE4AD245220A8236400BE47BC76DE13A
9EDA4BD5744C71DB407BCA39DBC9D857122A1DA969E6D0915FDC1622AB8BB88A
93D2EE72E9A2FA73193D6CDF254252980674DB644EEB36A2036E04DB649F816E
E70C4C43E88609C8E8B8B84A920CA933FA00F41F2FC3C867825E2AC658FA0F7F
331323E22BD193A0A8009B3F0EE6D55281CF1076F1631FE509E79941FF08D0B7
ACFEE566C76FBC09F3B4AA57959D4EFC34413ADB46292ED99CC8EC4436DE2CAB
86B8B48847353E826F5346762CD5D353727DBB502E08B934DAE4E99894706BCA
DC35AA52C8610137C7E336009D564831E1E7936600CC3891D3A58A539523329A
45DD54B8D76F43582CE621F74FE7F8FB06E32612FB06B66CBB3096C0DD63D097
08C206A620CCC9ECB49CDC17295CD0B3C9D2DFCAACE46137490589D72A6A57BD
FE97C0CCB9087CF31EAA7860444C0D2A1B230F1879B1CD80CED3863680AE37F7
39A117963BCA696B1EFA8EA500DF5B1C5F6F42EA16D46CC0687DC684B2AE28CA
8511448362E82092B10FE7451F92E7798EB30D015614C10FAE46C0A4D32FCB0C
6BAB88710E429820C597271F5ABF0D001D837D04F7DAFD12E2E3E14A5D6A62F3
27A102A2D235520B22E90390172C479E98418A0D659DA46431137085B59AA611
233042AFA7CE671A231C00755B2090EAE0B6E67A05EF66353972D071B660741B
4094ED90D38FC3107695EFDBD03424A0BAC815709315E32436D6770405F857B8
A4E027FC9D7E2464DB2B18FAF3EB7CBFE7BED6ED39D3D765F334BADF7AB43D90
E252FD1593B813E1584C17F386892FC8E6E9E1E7573C82584E260A752C0407B5
F2CAE74CC5301B91E8ED5B38E84AC06B816316A510E7C83A5D7857C9D1A49158
5195214B025334A0B671378BC393A6640D1BD75DA41A9D19821CC1047193BD7A
2C0C6CFBEBF653856055EA905AE045E8814A4974913884D1AF5CFCD784B9A821
AE7CAC7495408FC9836182135BD489B276580A0D5AE365D9ADB792F52599CFC7
8FFE55259F50CD5903C722522BA5FE3F6222ADBFBBEB52CB066DB26D7492A5DC
D78EBBDCAAC2342258F7A50E7FA9B2D2762E15355E4A714981110BCB0992EAEF
5EF118DE1466A75D18113450080FC0DBD2A65FF89B0C033EEAE87C5EE1B4EDEE
8DBECB2E49F0317379E6B45FAF5ED8A878735E95CB9995C9D1DE8ED3094CC318
33BCECFAC9EB1B75E7689C16112ACB0A383AF4681A58AFD8154C33D63407E2EB
B95CBB74792D1F52A58D657DEA997E133DC99F3EC78B30B9D0ED8D410DC113F8
E414A0AFE4966BA885BE5235DD3D50A5332AE9915D0F4D02A0E52BDBB1F743B6
0BCEA4C40786AEC2EC67DB0036ADC9BA6073295AFF301F5470620963566FEE34
A55081E6F545755FF75BAB52FFE105A19D1B57C7F0628A7B29520B77AA16B866
CC56D97CCEE6DB755299321EBD85BD17E8FB9B932FE11F4A2535E72E07C6A26E
593FD2969350AFB9FA5F74D61F187662B519FC523E0D58649AC22991D32CB08E
341A386DEC55A7E35C0316199F508EB12237E798E60A6AB1D29314982AA5FF10
1DFF7BCE9BAF56C8C376BE051BB34FFDC5B5787495F7BDFCF4DFE521571C6A90
094CB71B54D20E9ADF47FB6B8C852BC42929C577FB7439D83B31281205EFBA2A
B2A420AA56784778C30E5F5BB881FDCBC6CDC9B2056297A0A8668E03AEB8150E
62845488B7968360F57840B81D2C7B166554638ED54819876D7CEE799A3EF64E
9868FFD1DB7157B21DD2F54A34BBE83BB75A3662C9601E1326A72F463715757C
A99983272EAB35BE21C97C66CBBDCC464B3BECA2E08DB5A22D138C4CC88FF651
AE208A96477E0B2856F69BBE0179E53329E229F8F69A3C74903BEEE2A9FD82ED
4624932E27A0174B3BF67B4B3E6804CC798ACD831354F7C4A668DEFC55F6456D
266D470B4EF2F9A8AE87013B09DB2CBDBFE1C9D0D0980DA8C45E36F2A24AB83F
DCD4DD8BEF1136AFB8777F8A2831CE023F28908B95F1B879C55F1578CAE73AC7
617F61204CC6D61EDFF0CA7569008D6BF78DF6DA1349ECC4AB6091546CAE9B9B
5ED9DD3A3B5A57D4276E90966097FC441C7F2F04705FE55B6ACCC141649A1AF1
F2B2C626A156A4BC69F3CC4642FB657BEA89B72CE9C17B6318DF93FA06C5085F
0D9BD8E5B602F552176D289C894CD5FFA5FC0A527B2EF907D052AD8D01980777
BF866F3442616A4C5688A0B80307802BC0FFB26A9642215864E232E58C488CCF
362702F73B6BA4CDD88F5A66D04AEDFC0E8E2A0985CEC6E0C30F6C2EB891C506
C7AA9A47B69C9C0A90A72B3A705081CC23838F40C75723850688865B357A8D8E
B98B4536EA527F5BB053488D4E5E6E3346000AC8A3AD9D18269A4CA2D99A323F
568A264455D81D673B1F459FF3A535895B925AE0B79688C14723CCDEB5274945
119497CC9ABDA9206BA4F910A66AB0D96E45B93677E06DC5AA7A660A51C02FB0
48664AE53777E6C61E78AE1353440528AA547B5EAF4EBEA0B6670F7F8F1D2603
033FF05729698648058BCD06D21B381162DAB730340EAD853C57C3F29FB76BFB
D44713BF60B3E0A4B666595C254B6106B4822DF999B512A80F54CD42851808B6
E7C6398E624C2437BC89F52B113BC0E8D6E3E12DF15E9CC371461E09E0E1DBBC
E5C07FD0195D5E74D5B31561E71C9D086CE3A51D07185666EC9D478A9674EC43
5D6F6232AFF7EEA4D2797241E23D0CBBCDE0218E6BB90C96A6E060E1237D3701
239205283CE90F642A1883A7D5D4AC0BA7D7E9AC38C955D3CE54C57BACC6348E
7E59BBC6F426AC067AF4C55D26FDA55470AEAB4F82FFA09291B2C1C42FC495BE
BAA495745652ECFA05DF55D2C9BDCEBDDE3E21FC9FD8DDBE0892349641E64351
F1CE1E42412226730C77CAF609F5629EBED60DA4E33DF29F1CCF9417BFEB772F
7E54420EEC723FF9ECF7969E2B20E2B2A0B0C24A136CB29E1EF04A540CDA3F12
AA5547FF5071BBBD6D42C75FB9D635B0FD0EB25D48CE4F478E134BB128F2070A
F37CBB8710EDA255BD8273610FD4349F0FF7E8549C065BFA6B4DFA01B0F4CC19
49AD25F73B34E3DCEE17348D9AB2153E5E172F7A9CAC5318344CC4FFE8F2DB95
A4A7DE5FD1B1DF59CDAC54CAD5EFF289A9B2EDD7DA77099F9A918D8847C86EA3
DE3D093B01F44A359CA9559201D9209810E034DCF3AED0B05765CA5E7DBA7225
C0B681EE2A3386D348B45976141532ED6E5B8E62CCBE00BD129C2B3EF13C02D0
8567D890C29572E135CB28A3D428B65D3149CCAEE98C1480C90F35745885B03C
CFBB8A76F6B639809CE9711809E4A591E34876AB8C52681BAEE6E99D101E947C
7D0018194BA4AD5F0D63C8DD04531219C0E8FE516ECF44C196954CAF9CE0733C
CE3A613073D28515CE6918CEBA15D197EB0B446E46A410451898291760309D81
832FFD2F70E8F9F3EB23154715788712137AB1CFA08D4A4363E738AFD1639A60
91E1168E461B1FA48BE775DEB47409791FA324157D71655024AC17D075FEE893
41ADDBFE4C4DA2B828359F2DB95B56FA032D974B01403D19A11CC1507AEC9AD6
2CD9EF16D8E8F9017453A2610CFC6F031E1220CCD20B677797EA44D16C8E0C04
B5F40223B60D35768FAFF64D5C0D1285707759EA2EF27E8A9BA1DBB99D0F0B5B
3A5148DF78B0A7C47DF2CA6FA4F62601F29EA58CC3FCFA0EB895B11BBB3AF894
DA5EB1DB3B7EE41405DD87D81902B12D1B449D3D8AD0FB57C473E655B966DB29
21B90432E775E06E20F786B21E0524A1DFC7F0C779934FA7BE4384F532A79CF0
C5819A9A8CDCF4CD8882D55D52220380BECFEFAA64556FD599C07882F770B925
2D5BC813B017A72468A71838E0168DA8156DDB039C2E6E9E1449CEF79998C0C3
FBDD01FCDEC032D1CD3F6545062399ED52B8F612794B9E7199889FD2AEDDA5AE
960DDE2BE0E1E4A12EDF3D3E6FF7A05EAE586004B154B5A9EF3841C00B2EAE7B
F29427F4078DC1E5A4105D2A404AFDD6947B83EE6E5B6ACA3FABE2A790586C81
82D05BFC75D87F890FA15800B3126828A6E73B21EF6B9042842A7270C4C7ED48
8CE78957C95F4E38FD3E6B9A88C7746A3EE43DB0D7310579F7AE00D50A8137B4
0FE8ECE83B6D78E418C7CCD9B9EF4AA7FC348CA5048DE4026A986C116B9C33A7
479D94D49EDE91E7A5A4C9EE3B296249E19814B3E6F6DDFD318AA82856EB9013
081DAE4FFEBC10DCA2BDBDBB7909DE30677540C1867273F3B52CACE234AE5F91
46C4C556603469105EC3D4E2F0230BBD4756B32593C2A9DD645198858503F7B6
57135873B5FD273B20ECCCDF64F4D76A5802D647F8A95C9DC17D2740848C3B02
C04E49FABB77252CC454AEDE3FC303EAE11BC1A3E43901B55BF11C472570732D
ACE2E77E25AD3CF517684ED5C21C084ECEF4405FC89CF3A7DD526D54104CB2F4
9B161E015DD06AC652A8C876A4FEAEED3FB23860D75CE372E5290E50E2E96283
46E92EAA2364B7C4C04AEAD4112AE569EA6F26D025F1AD7290EADF01F74B53C0
B856022E3C35EC78BC10213706964E3643A77C327AC0E934F6A017E55EC1DC92
80E13DC689C390C0AAF406FCEF5A056B490155D3EE66B86324EBDE7EF35D3391
AAF942B6BA35E22B7DEEE932B2013B8EB4D048C81F97A88BE8780AF14EBBF7A3
1BC2DF4AEA2A2B4B88AF0EC8AC16DFA6D168D089A65A1F1825E2CEA774CA60D8
F5B588CB83B7A86D23A7659626B33FBFD83BF28EB625A448F059303C399853E3
F9C475AD19D9A89D9F64ABA4B585A674CA2D5F3DE6A5981B6DCC687554955F64
66EF878BCF49EA007F73A55F7A99286DD127CEA81A0F82F1FE9B62DDA42FF89B
E8C78D51F0A7E2596C70A2D35A4DBDBB26EDB0468104D02E4464F5A8284AE6A8
ED644397C2B29B7A44CF6C99EA88881CD76B0CC9A083B06F5AF669E55A6D4479
CA0965A7A918BFCBA0E1FB8E7215D91E2A8B46A20A3765AB48E090355274CFC3
95D0D0BD0CD16B5BE2721C72150325D843F29DE2CA947557D12E63220BA4FC67
82A123CE4EA6B9DA529EFAFE44BA7A78968577912A0E520D3074D68F71F943A8
07354B0C2EC51766EABEE7BA2473F5869BBBE3F91C9907A396DBBEF785AF8D90
80EC1DB62F5C164B5243C3AB79D3FED9CEFC47B08EF6E706B9CB919E9B5F6021
3A13F9813D13D15E95F45DCA7D9550ADCC1E0EEBCE3859BFD52385E21CAC1DA7
735C1F44C5D89E152044164C516A24BAD59710AF2F9E209299101F15F0EC1ACE
3FA8D3EDD40001AFAC32E36EA1F0D4BF4B07A65E0EF0CFB345D35B6E5642E547
0B97D8DC1FC329D22DDAB68B3DA210082460E8BFCA4B11F62A03FA9D814116BB
91CB428BAC7A4BEEFBD550912D94611738A00786E5ACAEE8AED7E4AC87DB715E
D43A7599022FFC8D8E90172263A7EB876E1F1A99784E96C1DE490362FAF9F531
355FA62E76F7045FB77AAA45F1574B937F489A9BFC33F4366C494E561534BD33
723D519A63022CC2D4EFE7C1107279134ECC95608CBC609E1244B5B19EB9A6BE
5057148AC996F4B6EE13FB5EDC3C728B598303CBDFF58173D8F9B8CC62B0C5CF
DBD88089F99BB5DD26788DF9E1E4E4B5FFFD3CD8871F24D10C1E24A2DBC0968B
9D951AF23FF685C8235291E6BD824194EE85B291ACBCF9B25F3F89E733C05325
E3D72EDE10ECCC6BEFFDC3BBCB47FFFC4D81334D762B22C960279B61624DBA48
E952D2B1E759C362864C9E28FA30C1142BB7C5034496EE21591AEE74989BBA48
0002B95C916E5CF6B6A655DCB8D7491AFB0F5107B951C4ABB698901CCA4D3DE4
DA71167FA3399649F5439695896C55D2BA3616A2AA41F071A2D9F5A5B281ECA5
38AACAA13DAC2D1E3E1F50739B6EEAD71F18FB3E6F5655E7DE2798CB6FA5EF4E
D2D6A617B2140687F6F186034A31ECDD6CF5BEC17455649C0011539930F4B011
8E50A9DAB6B6C95B5F9A58343B82B3CA954A0C135D60AC1A4ED0E6085938AC45
32B7D88CAF463A0B6FF32FF4EA9CFD117AC42C40E13EAED3B5034DC3E66AF0A3
E77D47BE66CDFF25B736A91E5566110B87395F84BB45DC7B1658E49984AA1940
CF5E27FB1DF859AF41EACC433B72CFDEB4CC326E82FCEE0044B15989A0614B44
268DC40E2FDC1551966A7BC229A216F7566449F2EF32F5DE57CC35175975678F
ECA128568AE91DEB4C3F859B9D48E75617115973AAEB6FF49A13FCE083D3D5CE
2D21D016CC773C94450381D6145E33515ABC50A64500D6CC6A6D80B572EDBB72
75AF5405CFD72C726EEDA77CCF43C301B4F5A4BECB605AFADC7F9AA616B14322
25CA444A3FAACB2D4CB6D0F823D45B6333C19C929E42F3FB308F9322F081D8ED
EB082BB0861A0D4DB2F7CF2D8EDE5996E4440BE5D4A387CE86169605D50147DE
B338D9366BC725B4F8641D299B57DDB9533E239DF389F76E63B1EAA482D1A851
0092BD01240F732E186D5AB504661C758EB09AC6491468078633D8D1665A51D2
06287F0220819A797C01F88FEBD8549473EEB8F1731BC609A831C2C13CC91379
4CED7510498631A3511D8FE633960EC8085AE23E6F3A0CE3767FB3E937DFEADB
B89D7EE989E31AE92ECB5631ACEA359217A9750750300AD1D6AAF09EFA9F7685
E626DB4222EFC2A63E87293390E2ED53A1ECC9CC0B109CF23511BFBC9CAB9ACB
87B453875C1F6DBCE36E6313C32A4C728BC84F25C857F04D2BAB51D7EFFF56E0
5B2BE7BD85EA42C69AA985BF7EF0B20ECB0CB937CDC8668A67A2B48CDDFEF16C
F5F460C5467E3372399AEC03FDDCE6A420A6556B0473DFAEB4A7B5C4B9371E32
35973D29C2241E1075E302EBDA16C41214FFA23EEE44C3C850DE785F65BC146C
F13E9FC00E316AD709E795181B429C1F47687FFB9A1EC328513413CA39AB2730
96DC87640E3410FF41A7B70A359523DF00845ED40E4A50D12D8ECED28FE8C32E
E1D31E06372CDA1C65BDD9097F2F108C4A590221B7B421583544B2968689F5D9
EE75A04B5CA1B977C6B8F3DBC93516306638233AD6F9CA6BD2A947050ED63E8F
8548470D8EC41FB39752E2B214B4ADF04010855B92473FDF0C82C2930188C769
172BA997F4634AA81BB3AAA4ECE54B38EA0E3A81272FB3C472C289DC70B5A6B6
A9AE9DB022EBC0FBE06038C26A1717E6229625BCB3CB6C9AE022D6085E8B14AF
3344FBCECE86D88E89A5588F215FBB3E476D8D45184E7661C8BE16EA1310768F
C3E362C5F6D78F7F3A3AF372B12426216ED4A10BCF93012334DB14735E7F4508
DAB3A4522D0B8F81AED807AEECB8389AEC5668A47E37A24BBD39AFEA340AA9E5
44590F5334655C13CAAA401652593353D7112C867DB50C6489E0745858310281
DE16EF2EEE94EF9133AAB82D3FE9CE7CBD8F76C866593D9FD9B6B947790DBA13
B731AD82C6F9B862736D867D927772803D96B3864116BB91CB428BAC7A4BEEFB
D55092DBBE6FB6FB60E18DDA9D18F1FE61E660525B71CEE994A026B5C239A235
E5896047EE8EAFB1B85D1B6ABF06A38B85FE3341FE450F8F4038FD870C5BB10C
0FF9D64467F1137BD60ACD02139B72551848051DD7BE7118FC0F4C2605C90512
4EB4BC3D5C8ADC6A2B2AF14D8586911F73FB7B4EF52147208D982C0D35A6D110
6087B363715ADA1125B5EEF0A195BF8627ED4A4E734A907ADFA1F18A696E24DC
470AE00C0DD5AFC45D88054B8A4665F1BCD3EA55007CD402FB770916FBAA3EEB
7803A790578B162CE3720449E215CF8EAA9D9E3489CC5173E662690A5C744295
627E2D19AE40071D70EE3A9D6AC8AA9D5E488A902967B91008513A04D2CA8953
09CC0579169E604597DCD773D3085E5DB40B20FFBBADF413A5C6A02EEC7D4064
DA918226890E8A616251A86BFD4705006E4AF46A866BDA2BFFF838F21600D5AC
275C2798AC486EFD3A7E0341523137D15DF9FADA0222F0EA3521E92D813934CE
4C8A6056BB18F8C47A2BE5DC8C40FCBB2BB86ACA3D96BE9DF2432624E625AF32
30DCB885A1095DF65776062E2D26946558B6FCDE2FE1341025B4F3A13E0A51AA
90A7BFB6EFB196DBE2AB542FD469B45C2B8B4688D271061170A1A5CF4037B887
F8D6096789353D237169EE52BD772C5FB42AD72AA79979C8E7C3B88AF70F6C54
B6B8BCC7CFD0C4E361E145673984D60AF0CE74EAA9530F278255665E4093F98C
7E5EE9E2A018B3A468582B3F7E7C0D6AACEA9CA525F848F15DBAE9B5C7F3767B
ECF1C52D2A20F795B100D85E94D43161C24A1CA5B99B6EE2900C4AAA1677A4EA
18CE93A46707737F3F729F352BE940B4B329FB463D8C8D06E5C4764B9843A412
C20F1417B92D6331B4D891BB19EA5D887CF8822CB94B42542F18434AB8CC5027
653F221BE4BB40B79EFAC5F5163514F43D9EF6B8E09A092BB03221FD212AE5B3
20938D799EFEE232D419210CD4DB851CF156B80B846D201DEDE6AC92C30853C6
070C0B91F0605A719EDF2E73A8B37F51A6EA4D6173DF15CCC34FD2ADEC769C9F
6FB84C87A5298E70D1CF6A41CE62AE4E48E9DD4F9CBA6D04CCFF117FF43ACB4A
121E3F625CE4895B52328AC1739A90A836B0FC25654C7A2574748D297E014FB0
712EA2A700229BA556E747DE68FF8CCFA522A2EC0062420DDAB752790F22CFA0
017DF37D807B0D8F0565F799F1DBCFF100EF2E0269E293EFD4C57F4DE9D9EDD0
C81B66A8F8C528A798E6BEC3675B3C8AD0A8107253D061A2B7E3B574D6B528C9
4A61B8FB34D6093A2AED3BE70A8938273C9A32A0B536FF74FB037EB78941F923
20DE4402EC81EFC6CAD5FA64F0903F307B37C7E69DD5C4790D4477C7AF5A22A6
18783B8C668558824F697947DC1B49DA90151B669DC82D2672294399A89478F8
C8EABFF56F5A09C1257CFAFCA7D5C9848C14AA70B8FA76773BA3C3727C0543E4
D2EBD7151E2289759D88CA155230A848FAE0D36C328BE4815E7B28EA4396BB6E
F74DEB2D075025A15496E42772AE342FFD5A32846334F0D295E6949E690DC70A
5180AB61AB535883FC887EF5576EDAEB53824E43C05966166B0C0BA4C7622627
51C0893155D97C645161B7FFC00DDF6B8AF6C0BB4CFED319AC2B2B54BCF553F7
0268296E36E1B95ED2D8F6CA2D47F2F635AE071BD9B2B15520B129C5612B04AD
A368E75CCC7A585DFBA55DB8D7050D67EA83DAA0E0C0054FC0EF079C5B8EEED6
9F3A31878B1817E10B98B5915A8D468C9E2BD390F3AB2CEDFCCBCC9C39A3C152
CA0A6F6C22E4ADF5B4E20406FBE703D9617BF4F1C17357E67F692DF9457B54F6
ECD8BD7286D89D5697EE87FDF81DD421CCBC53B3E846C7EDFDEA9EB539331199
48F718AE3F3838F308B512C2ADE588467485CB2F15E96B39725C13676E097CA3
9A7A66CC81F3A127B0814FFD646A4EA4210043E7D8959DDC3BB9ABA911D19232
03B284E90B5C280624BC8AB13C1E1A165DB120387E04196AC990715EE7F059D2
A80F1517A46818E92EFC5EBEA9C27006073134EB35B5ABBEE18694E708B86D56
6CF5A666F34D11BA9157D20A9F9FB9D6B04E19EBFAB93633B6001D2B05BB9860
7B4CBE10AB376A9514184F53A25939ED58A375C6B24AB76AFFEBA16BAE50167B
1DC5AA95B6DAF079B86E6804045C240A4CC8507CB63BC616BA3D45489CD0EC11
97BB56F236D716F75A2C64B101B79AD3E1CA82AA8362BA7C404280974959340A
41D3DCE4433D0887A13336F740C9DD97B944989A42B9B3C74D4E85FCD8DFEE62
F9346C3E850297B8476D86834FA11483D845C18B7DA97314B5BC3C7954B5C60B
ADB72B836D98A0BA93278DEC59EE43FA5EF3590B0F7940C659903B3002C8A34C
0A5CE0C49471EDE575FDB16D7BE525FA7BB0DF8433FE26812BE40E86B53FF382
042F80361212F2AA62B9C0CF05EA0870980FE8C493D8DE2339CCCE549E4A7C65
3BC317F89A8B2E26E717CEFF296D5828DF1BF84531D663CF602DE45BE4BE0F07
194335C06A0069BC810B83937BE9389440AC84EE8AAB6F15B245188733A6BDED
1FB64023EC6EFFF366C93E9A2D7B1E5BB66882C130407C638571BC5F662002B1
46CA120A491C31F98EF3E46109580BC11B4C563D799BC059392B7E3FD332F78E
0EDD80CABDD87F4AFDD6947B83EC84C20424A6C41EB83D5F30233CED47B79A35
41AF906A9622D12AFBAB045C3BF765E8E45D60CD5984EB3455EAAE5A65B22E68
2A7CAF347D04A7EAD48B2C0A60685070D6D75AADDAB3FC976E0DB7F4D8FD546F
0A68E1A12E6649FC205280EF22E6BC9E50D69CC7FE7ED36FE65F746BEFAA93A6
003301365DC6234EA715800AD9A9B7AF56296934D03D0FA4549E8E1ADA7046FC
28D4645BF52AA7EFFDACF0E504AD866F01E78235D85340ED352B63E6E071C523
5DFFE1274C11555E066796B63C7922F21ACC3CFC8CA53AFC3C5304AAEAAC390F
C3E5638C3C69B24E0ADEB2BD6848214868EC2B16102C514439893A84ED7B8E25
ADD5FD1B8E8FE461B8A93035C0A761BFE6C55B2908E8B74369B32230D2A286F7
128C0CE109C182E20F29A103DA1F8197863E9E17178A7A3AAA7F1CCE1A08A96A
DFD86FCEAB44FE0209FBAFCC9140BA35F3E2EB5E2917276ED538474AAF3390E3
FBCC3971B37CEAA85C2911626F17D02D74E2C0E085DB93F0A7AC7F8885E17AB4
6DA2993728BF0C5F8742746D378D38A1E25B2A8B2BAFA21E7180609CE5FA770A
883D5D0AD267592D3A597AB3F1800CCFA3F238BA39DD6E1353DCC6BAA2F5DCB1
247A67030CDF349064F9ED7A6F36F438B5E728D9798A83E2D37E2B85F52A2D95
87FDF9FB095BFE6125C7A5BFCC8F5CF15078B158BB10A69FE60AD7EA14D51E64
D053409ED44A232B3192CFE5F04D53EF5D8334D3451676CCD188EDB297B5E017
90F54FBF5A4F0F33BE8198FE125464CD4A13E058961E1D0E616DB9326A5B07F0
AA3C459E44397D91B75D7569ECED521E620D26F0D01BEE148F1580BC0DFE56DE
F5788D3C4B91E4FE65C42B5F38514940363642FE2D6143F71C9806AB120AB51C
2D9CEF9DC53E58F58ECC5298FDA9834F028AB83CBA7EBE220C6E6C5CB9BB9A51
6027A9F3DE43BE9BE10DD9B5270BA9F142E22F5851D58F0743E29A301B2CDD3C
5997F9697B34FE0691AC6E54D998B8E441F3161074E3B41A7EA7B7FF2FA9C2EB
77D6CEB6F20266F1151E89324DA977490CE37C2B520C8B4F0FC30C4CC65CF29E
DD350DCC3CDA3AD6350EBEFD23D3ADDD32758147044E35227D5C399113D5AF5D
B023B3AEE35DC97B9104CA9101A7B7EAC06AAE955F8A304DC16EF1A023641150
32342BA4F4C57BDFE6BD073F2376E39A778CD309F215414595B073EB8B80508D
D39264487C50261A0D71EEE71F0433B9BF837193713B190C6E7DA8941967E58A
BF505F4DB8D1B947EB79F92719771EFF726D496D195400A726D9F2A4DDA82983
851FC92076D57D5BDC8A21EAFBF5B3C5C0D5DB9D3966651BB2E7DE18296EE1DF
FF50620AB8D6BDAD6660808500825AA23D630C2D9D32EF476BE8CC5EE30FEF14
9E35637257BFB4DF2B32151851BEF6E7F500D579F052CE26A23A66F41FE27A56
9E54F287E72FF971C361E5A47061EE12917D0F28EDB241A0DFA7D16E81322C84
2527FB21B3E23BAE1E96309D96F04978D8AFDF1B50D23DED0A8ACAC6EDEF2D11
F8EA83238F90FC1B581A05B27B4F90412A08104934F9B2F12838F0184647BAE1
AD8C966323C4F2D0DF15C1AE3946453ECB5F57717F3C67BD8EF187E7FCF57A38
E0675BC627F02BD6A72DD939D4C162357C5AC8E9796320AA1A5270B073941265
9725A4A68119419AD0275CA05E1EC09B97FD9804E88AC22CB250673E396C64B0
937A1115D9890DA9AEC4B1F29D4FBAC807C55AE38716D1E5119AF4DEBD57AEDC
70C1C09AD68EBE91B18EE5AB791BEBED419D8C87BC21D8047CF4B34392A93710
A58498DA5C9565A5FA9B2ABAC4D42C211E996FA7D9C0E8653A834E5507B3CF83
B8A7262B3BB787A38CD24CB7C87687012BC32C93A581900487A2273EBA43294E
B2C1F61CB01D00DEB2CD24D083222C27124AF871F01022D8000845409913932B
F367C5B025F437A16711C7658A59CCD097C7AC3F38D6C3C54A10CCB302F2F1DB
14821B96E542C3FC6E8D2172916AF4B382E22EBDA76742E4DF42795B495AA9C0
A31DB8FFC0C5FE96F3FD641BEB4281190FC629E001C1EF6A04D49707E0BA12A1
6D57BD757DDD3CBD6099CF4C958EFD2861DAE169C3CEC10EF1F534A5AEBF45AB
9E4CF7B3F00B718565DBEFA5E50207FC94DD6E5B41F5D030C32B1FEFDE6DF012
974241B33B67AA62FCA88E1C77A3915224DEB5B9DE9AC0FC2EC5DC98910E662E
B9FCDCB33E4AAA7AA9E9886970A2D35A4DBDBB26EDB0468104D02B3057B42C5C
2D1ACBF7AA88E0740F8195CA1B87B046CF2F1AC9AFDAF468B1A6A62CA64DCF82
2CF801DBE050E82C37651B1F31AC5DB1B02474C876DE136AA6B0EECCCBC6EDB5
9731342C897F3DE61ADF2BEF868FB88C17DA604607A124319499E41D93413B74
C7652B74A589749A1DF7BEE2D753DB52D6ADFEB92CF9B7F14FD34F7AEFBC2800
09803847AC6FA5D99BB3380DCAC7B4250B3B4DEE44E6B62F13D0A851D5ED8217
384099CF4B2601417E1E0B11E5A9A883165B9432DC77CA58D5A79CB4D22178A1
A7E9F7891973BBAEEAAE6565E10260436699C2E85261C500BE7F9AA8220A01B9
E7C5A0A66EB88EEA899A6D3044B10987945AFC328FE6F40F1E03A5CDC782383C
CFFF71FE94DC8B253A1FA7633BA5102ECCDB8736CDCEC853DD25DE15C350DB1A
16658030A9CEDF035A6AEE43969756D0F503B4B1FBADBB424E8DEB9AFB5A1416
64AF698CD4C3FBB0F5F128E4E336E0DF394312B13DD13275898FF3B5CFACD779
023B98667ED21140E9054DDC6DB3FD911499F54D345E513FD288F74192AB98F3
476DB9B94E223BF905F72EAF4E043A642D66A0A1CB71EC2FCDA6CB7C136BB7B6
12146B5D943E16A5D11228209CEE30FA83953E0F95D3FB26C21E9E0C08E18904
06AECDD9AEA759E3CB8875F64925BC7CEC1E54A639DBE0D62639AD438884CC93
EE821624A14774AF132D3A55BDD02AEB87889763C0BB94D94B4FBAFEAD85B5A4
BA91725480B7064D05A2513FEF0E925972E9E7D69A1186AA832CA2695685EABD
0593AB15F54CAF3F615904166C179520DE9BB05866F18F577B7F8EA6A78A2044
DBA78EE665F362D755664AA7D6B46E2C96FC7BF4D173B067BBB6C512D0140BFF
7E5177836269ABDBA9B8DE945B5A67DB624B9FB1C71A1853CEAF6C4CB08B7DB3
BEDF68D054260CD14DE0B1D0DA484F02F53663DCEB4CBF11AB5F2DB99DF238F7
A3840921BD8B00B477E87EA0E7CE57D768E4969287AEE3BC696BEE61D750792A
F5415B7F322D98330D3A36BB872A5581355CD86B9649EEF6436972E1A7DB4EF3
6F5ADE6E0E23BCB09DCB6885CD766F79EC696D54EC2295146B272357386BFD24
B880132C032BCA77242069F74EEF409B918D7B6647869A64E63E5EE4BEA4AD33
C335001FFC313003AF5B1DA703D6C447F86C8FD91B7D1DA32596763F104CDD2B
B541D686147B390A099993B56AD4C9373C5F69677FB7B7ABAF82D8258EF6D8EC
9BD9E5F67CAA5658DF85B06DF35C2A43ABF6FC319691A623F1AB688FF87FBAA2
E8619D79D26E799F1D26CDA56B940E651AE1A899A6EB2A05C792BD1E8B7AD72A
F9367D89D4A6A939861D5E3EF8C7EA2FA6C18E2EA5A5977F1DEE184B2832ECD4
25FF9CDFB7362D8F5F513EF6415438E6F3D1E6E16C4FC11795E47B2195D64A6D
403FD460619388E7A5250A930E2B4D8EBE7C59A5807D274FBF215086DB0403CB
ADA784136BADA0DC3AFAEE572AA229107185F497DB3C7DD9D4F5A49FB8FDFC88
252055D5E09CDA43120C2FBB84E5FF0DB548C76367A784AF0AFBC4EAA55FF7FC
0EB2EAB05393FA10EA4B6F4635FE86247EB90AD0778989B77983DF1D1895D414
99EF300E5CDFCA88076A4D467ABBCC0FB73B758EF603327B307F8542871DA0D1
59A05C938E87FBD241FD064DBF0304090F4C73A8C48D755A6B2434BCE500F78A
226C74E560E8D3C2D546487330DF959CEB4B5E825127763100F15AB414EA9AA5
461BFED3994F00F81A74AEADA43D105E0B3F0A4E26C9E630172CB5443A16E7EA
A4D28DDB3E18E524F9CADC9D9A616CF1D067F152B48460C8B0D58828F2FBE07E
F0C119B80A5EC38C0B4E7C44D5AD6853F315BC533CF7684939FFA834A508614C
4541CE81A539F8903CE864F8DB22C3F1483B482FB1B444BFD0A63FA21D44D28E
CAD1EFE98979C9B5EAA32A2856A2C6504A1700C8792DD0F08DA33F1718060AF3
7CBB8710EDA255BD8273610FD0FD62685D5594F53184FB2A6949A02C4E37344C
E53F5093F01B5A44313480D1DDD172F739E9AEBEA5472CAA52FEC5E85739E3F2
08AD325754C2F4232E833E30AE6DA6569171BE79D6CB3CE355D262DB1D363EB5
DBCB6D6211B6046A225546AFEAFBAA8C2D1D53AA6EB9A279C94711D7350422FA
C82C374A3541B5D300D2CE49F5DCB6C591E015E615D0632471C2DE17840410D6
E0CE7863428371DC23690FD220F60E926E8A89D6B7629D51B7B745C7F7956246
A0BF758D7B49B76F2829109B76B6BA459795A215C7B59E6BD87FE16F606E4F93
6973902FDFEB517B2FC612959CC14EAC1987147A55594F1CA146337716860BE8
D809D760A7AB40F922F120AC9DC5F3C0D6A582933F1B0D12657DB21DB3F1A934
7D04A7EAD48B2C0A60685070D6D1B569BCD676246C9F7F2825AEC60F544C3906
553D101EEB0A6E0F8C63CFBAF202BE40E2FEE3AF0318E1855162B16F7CBAAFCF
E7C2D355D5CE9EDBB49C20EA64AE533D0F945940277B62E03769C06DB70A2626
B6321C7BB5EB6BD4FEAC5861C134080D23859E77D39591E8E43B40CA75D894D4
563F32399BF64118AA42A7789EF017D577F27ED97507292A4EA715800AD9A9B7
AF56296934D03BA0665220B47AB77FFF546B2218A35BCD8677F643392F6FF0E4
5616CCAFE56EB0324E84E7179176C32E07C2BAABA83DAB9E2332C3F7A4AF9679
00FE599D419B3E98788FF20A73419B47275F12C5A0958ABCEBE0F3B609EFD6B1
87E4AAB9A553355BF3B07AA2B7A5354312B13DD13275898FF3B5CFACD7790B76
99EFC66DD8580236D0ACD74368BDAEB6978B07286B5AEEC6B30517B787EAB33B
E9346C22465F9A65E4C9E9432B3DB333A2E150C10E2C82352D6C9C9E1F76617F
02A1A476CEE75CC9934D7DACDFEDF479FDEDA45B63FC69EA1CA34430E5850128
4F589BC804FC94006255F0F2AC4D26D57C33296B8A7A9EC19929F34995728F4B
225616FC5559B4F702FFC204F6D911B9FCA599D118553C5E484D0EB13B50361F
EC8C077445CDB87AEC2BFB1125B1EDCAFF67F946F1E50BFD4382AC5529AA7BE3
FF0902E902A1C8B0CDD29FCBE11D1213F3959467BD360670443324C69762C593
5575364B73FB24648387F15D51C4F12C172A3448ACBEA2C2BAF04A0C9153A8E2
1221BCFBC9711DB8B7689E5EC50F5F652DE94BF4743C8ACF765712D191D61BC1
DA0457EEBB0B78D8D60A180F4035419C073E71D61E2A383FBB0BD702797B386F
2BA0944E29AF03B95DBD299CA228BED66721581E9BCE78BA0068CB6062845488
B79681898012534F37BCE048782092E257EA85AF7D1E4B7ECAEB8172BE08C654
26022112C73F05080A4C3B0563E00EC25ED54D611FE2661CEBD8CDD7A77B98A6
15AA26973696E8A274F2AE6BFAF25A5EFABA2AB2A420AA548090A01BAE46CBBB
2643FD00DC5B1BBB113126BE62BA2FDED908881906142B6AA54B870E616611A9
0F96E9BB87EA87FF6E81827829529726A05C975CB334E1961AE265B1142CD842
719BEE2D586F5D1DAF0A3F0956759CE9EA23D6CD70137F2EF8F72D3E88175483
E0C77FD55D817EEFCF2CE05493847CDC58304EAD398B3018FE6B4F370F7F61C2
A692B63EFD8B5B7A290ABFB1F81EA3BB7226EDCDAE255B706452816A67A6C5F4
E7C41399D98E85D2F47E4618F30C5BFF35F8A6F8E2054885CE710C8FA750992E
8920BFED69539B5C50CCB4B1F1775F43B7724669B5EF0513339DFC42254F9478
2BCA6356A392429D636CF6396DA6F74AB46C994880FE884EC7B0D1CC1F310E23
7C6DAAA88EE618785E3AE1B67833CD25D4EAD6C07D2DA7DECE6D653EEF251D62
13506478A9EC0D95BEC68BBF97536504D777AE66762BCEB8AB14CDB5E9239D5A
6797D7EE6443E04D616815B3FACF90E2F19B171582A88B814F5D6AE5A84916CA
56AF6E9F26E0E073F613E8C5CD0E34D96BDCA2513D4D360F9628B11394FCEA9E
C42635C1317CD71B2C89D4B906997D52A9B688BCB0EEBC694D3C26129CB619B5
031F80DEA5C4DD1AAF585363B0C2B8AD9957D6267175482A2585FB02F8C1AB88
27DA55ACF40B21DAD678A9FAC80990BD7BAD05108F3612EB75BC835C53C1F970
3212F9A5CA1F9040833233EA063CA246FE2DC3A98708EBB6AED11AC6FEDA6C90
D32D8B1042DE5A9662C4B270DBC8A09D56A027F2801FB8B2B3D37FAEA29EA59C
1F2BF52C452F79B8526F375C9255EBFF429A17A6A51657E0899E67385C776E2E
75BB1F82B42FC8A95F789F6CF0481EE03232D0A0DA4A2F1D8CE9F946A9E50F44
B5F24B195DBF00FFB4D4FBE796A4650A19B44DAFBD603222BE25A756399FDBEB
71E7BD54018CF4C6E6A56146656C588E5EFA4B651FBE6D0BD114581921663D3F
21C9AE6812B2D41150B384D5922C9E5A80D5F6E51B8ADF515DDFBCCB55C9C030
430437CFF9A55ED32B1312F8AF1FD25A9A7CCCFF59FBD8DABBA5960A60F714A6
EECC6AF7C9C66F32AF0F4548B3F56CA5E42BB22158DA7CD0383154862FFD8AF4
908193BFF7CF278EDC5A77640249FAC47BD88E49686B66102EDE53406A666275
9B65A8135C8E1DC3365E09269AA53D388F0FC0DAE3884DD8E1A810DD962AD61C
4E1BA6EDEA771A385285613ECF05CE517257D75E13B5F6588F762456E14FA40E
B2841D5C3C82398F0ECD902E3596BD5A141D4C466C114743B853D7F77E360BF2
C74C81CACCD455A6604FB505DD58D8AEDF9628E94D932F2FD86DD6D8E3EE9C8D
403537E2DEC9BDDF72E5684B7899AB69540C2DFD6BCF629CE4592EBB04D529B7
80F8F1F12C48D151913180F2699643267D78C585FE79937B4B8513F4DFB5835C
113CE2A5826517DEEF803B521314FB2D40AC9A7D179AE8F0E9D5467235D89844
7A9A1B32D93163F5722D493D55A4C325DCEF4E053C9A36AF2206F2C74C81CACC
D455A6604FB505DD58D7FEC7605D070C828C5ED31D6498E484B73CCABEC88D19
DF523DEDBD1BC5AAF7594AD71DFB1D19B7F3078FF824236037C83A72053D426B
F752C7CF778A6C91B1E41720D6F902A973D022C270A8F90417B0EE66181116D0
68C1D3C49F6428BE7BBD8752A46D2BAB17B21A3AEC738EBCC518A6BAB96EE0F3
4D5ED2C4963A6D174775158573D65BFE4D15974849643A9E1B1D0FFAA6F79A3B
18033FDE3B5E388B99CAECC46D2D7526C5F55B90AF6D51D261A6277162FFD310
E335A36D4F14A6778D660523C145EBA04B00038E4DF7DBCC1EB78333FB955A39
0E4D69E0DA171494C882443A3667BF6AC4874A26CBE7C81C2EB52DDCF0ADADC0
492E94840A2977D8BD48555531C1CDD48C64600D48329329AB5B315AF04BE29A
49E5F081BBAFD83E00FABEEC932E97B8CAB5E512572D7D0891B23A3C0C3BB6EC
EAB97DAB9A15A4BD6C8EC20C900D3BB6ECEAB97DAB9A15A4BD6C8EC20C900ECA
41D28ACDABBB8C2B2A3C9E3643195EE0DEC971A1C61091161756189036954130
1B9162D40B28D8FA46D2F862CC94CE8480BD9B12730BB9EFCDA12B01150F646B
6443C93BFD8F756A74FF3696C704744A7583319D5CB3943B9D00568942AB2D85
E1224EF69EABC17D3FA9B84E93E6AA36A4B7742B977178309881B2701538F815
4BD6448374228C87B92905C11D92424C23C4B9C0085199D50E89D54CBD642A74
904602DDC56B18D5B0BB1C6B76851C31C2E0C92CFF820CBAFBC3C90662593F64
4D4C60B3A2B6295472CF9577567D125E058B3DFDABD7F3AE4C94868E164ED346
ABB0317969E0A255A0C373CC72BCEF0DB00846FA13F2E7AF696EF5BC89ADD1DD
AFE62E527B1591F4DBCD3A2F990B1A9E603A0B7B1E17531C90E5C8260565BC2A
8E37D08DC89C85B7063DB42F3178353FA6E246DFDC900ABC2FAEB0B8D1C2699B
CB406E24C98D7A6D358BC2778AB577C5BFA96D5F6A7B719B2957014BAF32BCBE
96529E5D8EFC8EC3B4CFD2992998F6B9230D2F74FA27507535FDD21AFBBADBF8
B70712934AF644E197522E88C941526C7811B7A83DA54799BE018CEDB94FC6C7
CA82C64B7ABCA1A544231D6304B956F4FEA9D490254D0E14A83DD150735524FB
B355183066983F1AB6BF8C7ABA79BF3E45B855CBAB764EE2C84E7F63D9BAC80F
F8B92D978351C7F5C1C3C0A16CA45AD99C6F569B1840457B886315CB63E56AE4
C363C341F1F04C99F38773F3949948E787A0D3E0E3AD430E4910D17121FBD8BD
E1596EA62C68CFC4994C5ACFDB94333127591BCAB7E0EFC90328641435BE99DE
D5563CFAC92C6D8FB7019DCE6AF86660244D6ED879306A434511BB33FB7F0E04
2448478D3ED7AAEF5EA233B549A2054E1336E203EA6D6A3CDCBCED185931C7DC
99BE66801A26DBF07A91137FED163B00ED3E874EC152E3A4F818C6D9978D8F2E
2042E2A9F8730FE01EBAF6D69E9A6D88580ED38377FF33E1FB1F743CA4FA60B1
2E22D00A2EBDAAA501F2F8E7F34948398ECCE4E7EFA1F79A5A43B5BAB4968E2A
E631244DBF1373F819E8CCD795EC297C0CD02D8E98D4C362F7BB0E452D235E97
A8ED9F7CCD4017C15430EF4A564DA684FC4A547F572D377AB129A4AB1BD53A62
D2BED63040D46991DE02C016D6FA1762074169263E0A069AC387BE36036BAEA8
AE7DD09D090A6680DC3F1062E543EF66B98F9F45C2ED7246667AA3001A5FB38F
86C40B618FA651FA60C384937A84EE90AE9B48399D901F1DF6B3AADA01FE5517
5AC439F1C0056BA48005B926042A5983E44B77F361AF2B18BE63F78380CC2D52
7F333B8AD05931490409D02BE6B4C473431DF378D0A79051647CFF73C345E138
F519E42A2903384C57BFFF54E7F820E4FB5510EB663BD4F4259E6596290A1F2B
D1506FCFD7A6D2D8047F4E48C018EF86987486C1379CFAA434168464FB37E8F7
0D4315AA31DCF5C1559B318EA43B7CC317DD26A1BF755EC54AEB8C0EE218AA88
28365178FF54F355501EEBE29882185A6CA1703A65E48F37CFA97B8F0E6DAB86
19663C9B526A9631993B2877F16DA0659DC9016C341254D9BA09C5CB3FE06390
D32D8B1042DE5B44E9A7A999CDF61820797E260E8F84B19D7BB5ECC00DB6457B
B03F14D4F676A0A508D8A22082FC28FA4BC7C7EF4A09CA19544514587E4FA04C
72E3234589D312BD2F2008108FD2BEB1797CDA878EC802B59733A871E3F0B4BC
33432B075924607D034D97299E671D9EF6A306207D484474B662BDB92283D532
C9C58841999D3D1FFA9F1752D7662760354394795670837DEB88751451A62D54
8E6179E39F48D47236965CD3AEDA00ABA62BBAB3555B26539F8FD59CD9957DFE
ECF065CB113B672BA76F6AE800D8149CFFA9F9022C8D025DCE099BF142E3C79B
1C4FE879F8F418581BAC224F887E7F4557CD5CC9E6FC7C354DCABDB4284B7883
8921F5CF2FC5BB00EF4C3AA5D733B97919BC15746C93C0BCD52F34F7043B31D3
09A630D36A0AEBCFA35E188428B104B112B247FAE8078065D83F78818C8D7C48
5EBC7E36A2E55723BBDD99B54127DD8B231EE156D8DCFAD237EBB2BCFF7125C0
6408446D4AAFADFF905F83E5FE32518B3904FB96CD33AAC869554CE7D5B2AAAB
4D558B0F46BA02F32846483BB59CB2EC012EA2ABCB6CCE85F17B18039707275C
7B2DD301B647DA573BA1E16D5F20C03A590CDF7DC66C4E39C94C9AD2551A5869
D10C24FA4195B170A79A0A0CBC1EA137B0B90AA85F50C050921852BD91279A52
F99332C1E10A5B934A0857AB0144547FEBC3037EAB9931087C8982D6B0B6ABFA
B8B70F9B6B24B9F2B52D802848680ED5C60C1793B28A640B89E81B78C1DD1D3F
BA37BEB34F2B744B2E3DAA4FF54DEF78DF0CC634890978CD1A0C9503C296E7B8
D0BBCF376E66BE5B6EE53771E4B122317B6DC6F25E219F9C6C69051E693B9349
05064ABBFD5A31CE40E2EDF7F2A684A1E7B30B679C2DCD39C2CAB8667DFBE4C6
1AEF51A2B331A66B49ABCF4637D1BCCF1C865A3CE1CB537BA41266FAA3815C1C
88DE2BB999F2E445659B53D5C79BAC678AC5C650C13A32765748FF9B61F821FC
4F70980191270EE3B0FDFE5FEB4CDE8DAD8A9A196C4E2C8E6ED1E2CE312E0963
63748ADB403A2495B3D535E8A4221485323BE884E1C5DCF4C788F03914C33062
2EB0BA47488EB6A272CFF3694CC7E16FACD4FEB60D363274850F491152FEF604
35601F73EA0B42EAB16D15778ECC3C58615547B13487ED1A335209189B68221A
D5999A3B332D22F3CF349C2343AA451DB600207EDA2FAC810CDFC4E87DABBA84
D780CE9FFD45479C11AD90D5BC4125E4D54152D16B853E469982A128F182B9F7
91E46C77F5D74891C295A8304213F1A4C0D062F4E939C6DCB58968C175C794A5
395823D12AAE6657E094DB56B72367A4102E021741461624918B940AAA408662
AA20C9DD6A16EB5768D9D4835F7F3C7935BE643FD617723EB8173AC40F56848D
45A646729AB105EB1854B29BBFED7EFD628DC9121F14EC6A03B5056807A02417
B42360E8801F200C82C2930188C769172BA99DAB274C8118785CD8CAD7914800
0277EC997A89B702E031EBB07470E1A12387BA7E4420B9D4011A5A0E1CF39AAB
CAE9301F409BC788A4ED175676B5B48F8A92F371118F28E17204F1CB38956153
85F1A69366203997A800CFDEEBD9A3CED45628A6795901AFB56EEEB1C77982AB
B8EE6140B82E44754256FC5F537264C0D006978CBDE6D959B081BE1D837AD5E3
33EFA90A3DD11C42479E2447A1B8F26DA0B71A8030348121F69106B4610C16C9
7EC9C93466FDEF6E40C955C70071667AF599119AD3F245E3863ED4BAB11E1A62
36573D861F40FCFB912F31D3072F45C2023E5D3CFCAA37514032F3FBA5FD5DC4
BB69652AC42ECD6E37219BC63DDD0A52F1D8BB63E7C96E2A444E8993B9C48916
4E362BBE9F6864EC7978F14D1AEFB4E12AF0385807CF1B6EA201CB89840D2BC0
4EEE57DC797F9282E015B6A1F5E401CBEB5515E41ADC072B120A647201F0E236
2CCDFCFAA14B5DFC9D36088FF740769FF65FC38DD5160698D2487761EC7B405E
E88D02485F9874881696F75A6DFF3BBD22D3D13C1BEDE4AD5E6D34F26EB32159
19F019AAA337931CE43CB12C36612D0E9F1DC7BE4C83A079F838B2410E1735B3
E157BD4709C3FC1A1DC77F501CC9DB9EF35203C187BABDA640285497FDE80504
89C4093FECACC8C1B258E8803BD5164DE957E47DE026E1129D2E5A2A01266ADD
7009ACA1CE60FCBB5A18BD74D1049AFEC3AE793B70E140CB5DC928004D38BBC8
B83775CF1F02DFF79DE6CE81CB86D38A467B4BA3F9AC5D73B202F32B4021E2BB
3ED6E5863D4B18F75FC1C671FA1CF98C60E797C1BB79E60DB4862E3F711FCD6D
60BE4766554954A9DC11570C24D2A0C36363A3B14E0B3AB1987353FE08309464
F85C3E839DDC16CD4956A0B7FC77303BE9A0B5873B8B6739483C92FAE7681D9B
46962F2E479F73EAB95C024445BBE491114EDBD774B7A49E0247C27FD4B30551
AE01F21FE05EB234D9D40FD4BF9C748DC8306B8A0F4A75700DE5B6EF959F9EEF
9C52DDF1EF62B040FFC5D75A7FC59B0CE49B1257EE728C291D22FEA0802E7A9C
D0EC3B7B153BA020AEA0AB41502BE9D95812294EB8A28E006619AE4D7A2491AA
7CAF9CEF0200D46D46A58F16E1E3AC58B87686F7F282F29A4CD39DE18B88453D
0C4E9DF81B2CFB53E32A3D7690B054DBA04D4354E1D423D6E87AFF7A7C4754B3
5F3671361E6BFEB0FA1633C6C328F1CD6C562BDEF9A7D5DF58FC780C4E7C44D5
AD6853F315BC533CF76844316F4851D8A184C40A73B1792DA8AA542517ACF942
6DD6B63D259A918CEA4AD8DA1241F8B8C912510535A83D944E41D2BF4AFBBDD2
604607A124319499E41D93413B74CBA1D5AC4D9361110A9BD9219A915D2A8FE3
93324C69DFC0AA6D07D1BA23B4C55EFBE1B67051AB97BBCB572F4E6687AFC912
ED1E21183B7BCC4588E67458694DF4BB16F59C2B2448394641EAFF580229B3AA
CE84297ADD3DA01A864AD2161C45AB7666C4AB8EECB4856E47824E8F0A13E52F
5E5DA462245C4836BC040C146C67EE26AA37FAF7CB04EE8EC47A5EDD0DD11F2C
BFBEFE2FAB8E05429F3ABD15749A54893931DE9DE37A59E6FC97ECF337CA67FB
37E8F702AEFBCE9A496C86706B8107F53BA5D6D7B344437CFE3E242D32E730CE
CE906E4CB480EA6ACC9A4B5593802277457CD318EE0DDC149723DF13DCA3517E
7AE30D710D64F3C32FF1666CC635269ED51FF323345B231FF4E6117113310668
1D124DE7EFE05D07011FA7E06D460B3C819388782A2569FA711A8E4C2539A3C1
7FD3FFBD1A8EF53180209628E94D932F2FD86DD6D8E3EE929D779541C30C8443
0CA1BF74A9144581861A138A943F004C5FD595324A84CA3FA4F7A87559F9E8BD
D0F3E0EAC84924238B253FA0546774B33C016ABB190A7BC65FE6DD24DE122BA6
3DF1470F35A0D16D332EDD98D71E7CDD7FC56F26C6EAC5CFDBD88089F3ED36BF
F53C26732548A18FA4D92495A2992E623FB1EA91CE30F65D00D24D9E2455F6ED
590A84B98B807854330FE071266C5E03015795FA9CCE7F9B54CB2D4FFE5440D7
3DE3C79830AA84F3972211DADB2DC08CC76E0CA06CB1368F56B10F6FCE73C4B7
BE0185DFC841D2D97756A81F1E1A7131547E05320DA429C6D309D1935D4B1227
0221C5996930E1E73B4812BB3F12A2F0CC441BB9D713A07ACD1365303CB557D5
E3AD9DB0705D2F40C56957C8C329F3F3397288F9E058341E83221E8122D490DB
D04B9E2F62A0A3E60116756C1035B23F3D28E2A7D30F5F172DB7DEAE9E2253E2
07EB3B10F7613C591390EC0C9C4439936B61B9FDA5DBCCBBE4CDBBC22C4B74CE
FBE1133F42216A11F2D202F0CACF57F30616144B40044F517FB66E3331E406EE
B99A28941BAFE16CAEEC0DE8C530C2D7BF899FC35E307EBB0B0DC46238DC0662
139B8121388E8C06C074C0EF082D34E7D7C5FACE2FB850D01D37C71444E570E4
F1389C88748A81589632AD2CC71B77875CA3E888696BEF2A0BF600F291855FB2
6CF97106549D92C1D40B593A617DCF42EEAD7BBB4094128B0A67AAE0467A3C96
ED90804878C44A6CBB2CBA69A8AC9772E2B54FF369D170C552FE656171F94F19
78245ADC0329FB8E0A76D8AAC4DC2BDC31F89F47B8048AE856C7F039C732CBFA
E8D78666DBFF1DD64FC534EC6FD7428B5C6434FFEF6D65A1A3123BA3B044560F
E3C5DEF64D7D71DC1DDCE725B55DBDBFBD9D21D9AE8C10E28C6EC0107BD3703B
A3421066335357F58D819A4562D3882B3BE0334D596E167FB5AF5EBDBF863BDE
25B2E470769CB56BFF435FCED78320C8EFC9C962547C6762FF88E6162F3EB681
E50E210A4A55AE63CA63B1271C762A93781345D2676392312ED6600DB29CC21B
28E1D17960645B15A1D5723A9A0B237D5859FFAD4C9C74E18AB38C328A6B15C1
A87D63522CBC25CC8B9D6EDFC3B1A033E532766C422B547AE5C9160DEE192598
7494C1CB645D75EBED84E7542A617EC0A3CF4C8B8C8927F24C09FC10F9749AB6
9A88182D72A1A13FB288A4C365461BA72292473CCEADE23ADECDE18408322277
F70BE7A54E790A8A3FDBF8F1A73F16CE18241E5E5A915E6BA79EBB124742725A
9FB021495CC668C5203D503A2977D026424FF37B05EF874F28F291091C876267
7F90BBE4405ADC394324393032BA3BCF6A010D9C2F9CB9F513EE814AFC0C5E42
4BEC465946D0117C0B09EB7F8775D0D123690FD220F60E926E8A89D6B762918A
020CC40799D7FC06D16F028A304E0EE582DE1A7642E98F9246DEFDE0F026FC3A
DADD814148359E71EECE23834C1DDBFD88B7E1DABB7F5D014891B609AD53CA57
8EAF1CDD5A43D2AE7D61EE2B7B8779CD0D3E7F82A1EE0E396E65799C7EF6BDB4
599FB13C4F5C02108320D5CC17F782C3E6178FD39A86F1EE7803A790578B162C
E3720449E215C4ECFF7EFBB57AB664C5AD4411CD76FBC923FDF0CAC06D0FB18F
4C99A5601E45AA1AD6DFD9F24C6D8A0E21BC8B4A0513829F544C100569E05CCA
8F4613491AB14E6BB73F41822D44D6B7BE93794C633A19110565287A3FFBF0DF
307B0947E7F4C640816B2D839FBFF44A24820E6DC28F4E73E38C7AC82B48AFEF
DADD1C52559962EEDE3D575DB8C76B9C757B929FCE694F4A664B52D54369983B
610CF05C5B816EF13FD38408C5F6CBF833783DF9DF9D5A0C998F2B778A24DD72
726DC97281248E7B2F40234C6BC28D01A91B61F2854BE3C9AF3BC9AB1F1F73DB
96EF2F48A16C6E3C1FFB193F4D27EF370F3F71E5DA467AFE00844D07B311E7B4
80D4A8DB59DBED4519838D34098B3C2A5E1D19EDED524E9D683FC634EFBF53B2
4BE62BE603AAF1D3E0D22EBA883251449E99E8FA8D8C64C78B31CAA83B03E2FA
EF9833908CF38459A15C303C8CEF4D93E9459673531F167957AF6E4DADE5A427
0E576D84C6A112DAC6DB7E52ECE9CFF42A6D8D27A25812DAD62114D3DA727300
DADBA506F4B9E4828355EF5068E7176101023E68DD7980ED8AE7C9CCEB19FE90
5347E44029DC4365DC1649DFB770B4451FFC18EE0AA452F417D27E5A69DEE043
9EA954766C4C14F8F9B8267BBB3A61C81B232BAED7A6B30C9DA7CD5370D3C34F
AC86483D4456344AEAC5BB976C62EF6C18A2CA1CE94409D9ED56855A3DFCC090
B6EE7E9E9B6E5DA79D1B91FCCC1431D5E568990B01F38C473D01AE1E2A6B0A65
46ECBFCE702923866187508F31B47F46D97CD378A39ABBBEE36D477F64CC768B
B8F13229E172C3F74CC0C083646755AAB3A04EF2711740E658054064B301D64A
981A4F8D698CA233B243B0496AF659E7F7731A353F994B2C33396714E41E24CF
3F64DC3AAFE9A49E3E71A946B8DE0BB13734C9E722B70ACD2573D119A77303FC
12414750C9CD8103C2702BC36BDCB5E7211167974D58D6E0EF2D8D09839083EE
B0035C42B87A51DFABA0D2A0652959DF6540680DDB6FBE126FE61C308E97E150
CB1193C353925E5EE1E8617FC6F823465C8B54A63AE2EE076A49A29126C4FE99
6F718DB031DCF50F53B5BC2DC80461488046ACD86A35CFEB2E62742567609F5D
A4E6DF27ABED7158F2F1BDCB9AB9A40788FB644D06397DDE2F384FD189E5136E
CE48D81328DAB29785406CA23373D0BE06E4CFBBAADC8487FA7D881070B7BB0A
870C3BC8EBD2D5F36D3D3E28BFB0665176084227149F27DACA7750D7EFD51E83
0EA429DAA5880AD6D0A6ABB56271E95CE1072E5DA1DA7990BCAB0FEA07454484
81F15B64DF6A6F8FADBA22F398FE8E21EC7E119D220A197516A4406E5F967370
A7D562EB02A302BA4A00DF72D8FB872123EEFC996C4740E4A9DEE1596B6CE165
CEBF2490A0D62EAEFF156B58282342412DD469678024980A870611BBB8C427C9
B171568934345A8EE0B0EF986FF1816A2AB41851D7584D920062E8C72A4F44DA
BA883ED6019A4979E26E093BAA6332F7CE1D26346B09FC6A4F4428986406968B
BBB1C2BE8F9981B2C52F7951B6CC5ADCDE0E39DB2DDFCAB9CE75DE3AC2DC3DBD
088F08033E590A628F14FCED37AC0188433894AC735295764B76DE3D9B7F9C20
C9C966C32BAE3DD25B7FCB919DFDADFD2B6DA875B0F7D3AB9C7E7FBF26F3A2E1
61FB63651D807E16CEA20E26E66FF7FAE3068468A096D1A145976C7180525DD8
89C4BB064779C78FFDBBC5A0C54E1F59886AC35C27648206F89053B9DBF46EAE
007166D6CB76A7E25825A8BF7540DCB64BFBDC441C8398A092C8225AD84F880A
D493F881C2956C4250F5F28207671D7AFE44F000A6BD9210AB2C5585FCBEE927
AA20ACD5B955F1D01A6D1AE754AED0086B42B6A0E76AA9B74D323C798F0C6B2D
74672BEA35599A75223B13D79864AA4DA8F143C672552C6B50FF3676217C4D68
5DA750D65CC7B9DE5158AC6EDDAE31D9A9CF7BCA386974F0F05157145D3C7590
DC818EDD9ADBBC7A96AF202D90C4CEFB126947755D28306DCE9B83E128C91C8C
E9C2CDDAC5B87738C55FFC304796ABBF09B79ACD09210DE05180F10176658882
338B8306EAB7C9541093F45E2672E4E4C818C21793C54D2DBF56BB5DC54BC619
DCAAA3DFD904A8A303A12D13CC6DE31EB2FDEFF7AA929919D808E598F7766498
5FD115ACAF775CA29A7E732AE875E325B3A7FF4A548B13BBBAC6AD4AD2D77E4A
90E2E1083115F0D7D2656B106857BA91472B103027C660873714F9E247DC93CB
DA072E7232ED3AC1E730D4639FFE925C54BCD4AF046A63719F5B359AF1D9D049
57EEE167D20358A7A7BEB989D7C265800E3293211411DC7696E23DB4979BF5E2
BA0169B709385B88D9E6695C03C2A60EB350BDEBB575C7003CEA2AAF0E6171FF
AE88C5E56401F247DDB57070601E6C49864A381CAB2ABF9122B7E2064A376465
EF27D977108E99FC959B5DF5A8269430E40468441F3FD78E6E9B6E895E837A96
E75454B2E21752FF9337B7A6EF3671320A7F252FCB0FDD921F65885C01FD6A1F
AEC51E22D2F5A3F63B3591BA48F35738BBD9C2B73BBA20C72A92C83BAD92089A
DD78FDE02FE4843E9A3001BD0DA4DAEBFC4517757B8DC4925861B4FF198A663A
DBE20BED379F83354F77E797A327685A5F9B7486C1379CFAA434168464FB37E8
F70BE8C8DE28EE5B0546A0474E2CC3A09316897752995036F2F0DFEEE9C8B578
60EB209E5D38A51E6401D6FF57DD76F6041A5BF89C5B679181A1D72D687A6FD8
56FAAE2DE25C9C7B71D741BAB78D8A3F37D6C025DE6BF1E68E0C36FD30AD1EA0
3280BFAC2DE4FD8272E092082167C921521A4199CC9D7FF6F1C1CCF90A4BB9A1
669AE5F91C9907A396DBBEF785AF8D9080EC153B3CF39D3B2FB467D74C35A996
20B2750B7E09B74766B73FEFBCBEAEE982C7FA09872A6009B0070691739E8367
9330E0E29DD2B106B0734CDA28FE4334A6B077147869490FF59F61BBCBADDF85
734B3437CF9662EE86C30D0A596AA88DF1DC47C464CAE16A2936DCABA1363E38
D2DF41DC8E6923A275A78BF3A39487D8097E1B38EDF2527768498EB88D22575E
85FA4C640C6FF5669E61CF95A5855BABF0AFA8519E62EDFB2090F0C6D7FF8435
680C28C44503D481B11BA70521005665BEAE36D9D7487F806AE71C86D6957FC5
7709BBCEF1D42FFB8C7AAA5A2E94C613B4A7CC99A891C938B5A37FA0276EE972
90FC5D557DCAEA201F59DBA1A199A940F3887C011BD8EC9BA7AF44CC83F1AF7B
26E2BDF7BEF9E96292A5E99BDC94AAEDADFD1BC4B91D4657B1720DB4702BF0B7
4B352EA43C3B80DEC5B6F85E28F5ADEFCF3DE605BCDEB01D12F635EFBC5533AF
30E4D1AED22C2EAE8B7CEC45A4EFE90E2781D4F238359C63DB25934BFF892735
BF37ACF18799E003D704FC6F8D37AFCE7A26E16D3E6E39C2F71A8C38651091A1
669FFC2805C2783039DA41CC8CDB125443985FCD1140F15A6CD3401A04093C37
D119B77D0390720043C8D977769C785DAD1A2915E56BDF382F2BBC9ADCD43D91
FF298B4800F21F8DCEAD0FE8DF98C6278F586CD9270154AA2E2C8848E5509F7D
6399DF33A8E1101310255504A70916FC6BB84952274B94BEAF0EB7F550A56753
1BC40C8436ED5A189A95AAEC516D87248CF52A90A41D2D28B2A8A83E32331660
753A3BF6ADD8D67AE0A7FA3CC9B137D6546D58CF6E884C186803F489738E1326
2E4D4ABE6974AC017EA40E705E32EEA6D4B13C67FA85438F78643345D6AFEA41
3618B78DBC70A30F2C535FB2A5443FAD6FBF8B442AC54E1C416D6CA8BABD23DB
383FF3A155AC5E6F068CF2075D5013327BCEAB43766446F19EA66137C293F8C3
3EDA7F8087C848C9D431786389E89CA904C7184830337DDA78CF77653E23B38B
5C7B3BBBCD64DFAC5A23CFE24BF2A6255133A2700D1D9B2C0097DD7A352CDBB5
BE3810C38A481F7FCED0C213C56239E0EC3FB31CB7B479C4B92F175BD1C14A49
A95B8DE1DAB44EBBC0C5A079E855B51DE6F7CF415CC734D5947C9F82301B823D
D60FAC84A5D33E27382663283EEC7CD2009E9CB057A5DEB2A5CEF8D20EDED865
2528A1EF45867DA4A0F61A347D4A3CA906A320A7364950565A74DB7238846366
9EF26D67216D77C5708A83D5888E0FC72DFE00FF0190FA4F948B0960C2BB667F
FD626714F5D76BB4976E49EC2C1B5BB1074B8D8493ABEADF59D1D286178B2378
8EF4CCA71C1232850E2E110293A137236ECDEF1A0FB2B6C0E4DB2807334C366F
2A99FC2CC90D8161646AF1B4E859D84E0645410ED962736A237031E61B58E0F0
721E58019DD3FCE9BD87A1114D5C0A630BFD6A5349A4E3BD192FD5256807612E
E76BE91554C136EB79D3812D65E595932E83F8A9A814589DC47C086D0F2F2EE0
599DE870005977FC252CCB7235CCD4C616D1553E6D9851611B1DACAED3FE8D56
AA3DF2C37A7AD8F7098BC76CA1F1AB8413CFBD0C436F122DA29F7937F9DF00DE
941ABF1A174AAA943353E49FD4E764B326742DD554F879D8AE5E6207B2B71655
E83CAD3405744AFF9A2DB58AEB30B5BBD8541D72B9E3CD9E7A15A5D27779359F
7C550F5BFFE2DEBE0F48C3ACE475B9B4E86CBFF158869960793CACB685209525
0BD382187EFBD03026506C289777FA9F79D026096F2A20AE54FC8B20BEF1627C
74C8A77FF81E60499396A13B7E9A88304E017D30F730DF83CB017D091F21FF31
3C618E5A328F5773BDB34522BA87EA55AA790080AEA56F4DD664CEE2D9797480
67DF9ADFAE70D7571E619F3F90715A76DBF57784BCD075E221B731241AC40D05
825F52CAEB87491AFC80B3F1031E2E1CF04290EA00D40078848CD9B626ED831D
E9EA27383D72ED50A55D337F12B7667ECEF5E80A63621839743E78CC2850D82E
E2651CC50A21B7AC2710E1A8BEDF7FAE632A01A00B9B3AA859D0375D1716F9DC
509D70F4F5F4427DDD307A3D2792741DF533D311387BDB4B5CBB12BC05DE8C4E
9ECEBA2EC06F3F0B7197F5F77E98EFD9989D152E9A2D96030C850B46695DE792
7AB3D571C835C60C0CDED9417C56D7DD0DE22C313CE16B372ED2FE4D0EEC98BE
C066F342C3CCAA9E7694082239DC409C2F088514C7FB34A965E93DDEF574F03B
3BD18F2AB77065AA3F4AC00B0383F67832F8939844F519311EDD7F5CD921B809
D8D3AAAEC1582B22E93799EAD412EDC0038CDBD5145F0FAD8A422A2AF741FD30
D0A7CCB7D7FCA2DFA59FB8B625320FBFAC0AC423620F40AE06FF50A7D7EE771D
6E8CC7B29EC618CA2986F81259F8D553EE3D7DF1CFDF7E0CA4183768673F7BCE
0420912A79288DC14864E09B23E2238AB55833FE1FD8FC59BAFC9047A06D5E4E
385507F72BBD341B592F486D6DC2DF6E9C8751A1DCF4CE3041909E4A774DC4D4
E7764D973E240409881669A27B990308C7C17E58958D6492C0CCE5960DBD7A1E
586EE4CE84917765AF40D48F47E62AECCA641663DB68862CDFBA97A8CCE0386C
03CB1AFB0520A73B3E622CC4BB97B929C1D456E537D91E0AEEE983AB45A6DEAD
24F9DB919DA5316C4EC71667C7461E08A9B3D7A0776F8BE3C477E2F1913A6D48
6C7C6E8008112C36B3525EAEA59CEFC734C48AA355F27B3F6529069ADC2098B9
71664CFDBD3F1808F7075BA197507C42EDD63E4D279DCF471B02B6CC8AD187D0
BB87589E8D30FE07B150D25BFB194C25A49CD62CC1C9CFA698F3D5BD5FA826AC
E75FF43B8D852C34992B704C1635E73961836BDC70D39EF592578BDB60BFCF0F
6B4392FB6BC3587AADEF5F7F2D158DF0EA0020FDC7A519555516385BA6A4CF3F
D8B389526B0192B446A6C0886FDB00A623B4CED910690C4BBD7DC65579C87341
81777CAB9BF9C20DE216B3319877C05B4FB045CF75C446CCBC36AE063F8091B7
3EA2B5C7189C9C1B6FCA7003A22251C6F9B5640A49F6367351904E1E2865C1F7
37A2B3857E9157725861A1A41605F3C320876236904E4264866624C9D5ABBCD7
D9F72150DE232C9C516F149C31E69DA9FBCC3BB3326E18E56EB69417EF2E5BC5
2B6BA67335F672BA95A86354A79440902D0983B4EA885CD9DF121101DA7CDB25
BD16470AFB5BE1E99220331D09268B48006169CA0B89C5600C1D91F877DFBA44
26BDE2F9ED445704DA021AD6433FD42EB694858A4585A59D2EA91C6CEE8D2D3F
99FA56EB8ED772618737885194490F2D722E836098641749134EA359F717BC59
72BDE2D2BB4E21A9AE7904EF65448B816F1E292D186121ED29020F3E570EBF3E
B064A1D87A6EB747B4373D2B7D19C3B6E2EA77DD8039527CB16E5C9371B3632F
F0EDAFEF5C81AF3DF3C8C65321DD0ADD7FCF60878544E4C5A3CD975220E75C2C
C659A63DE2119DAD053A7AF23945030AC0A394EC4F88BD9A39A5092CDE38413E
C544BD31F8A379B608210A27F791AAE8262ACC1B2036139E70DA331E3FBC301E
8836BF086F32282A9E50096CEAA497409CDCDA675601A480577C0B48668C754C
42EDF5D762EBF557BE1AAAA2DB9922C0568362B74F7483FACFAD90281BA5F0AB
F61D48A8C00CA0AFDDC4D047D69FD39E64A06C09F69E0081ECEA2116A4CBA9DA
A9F9DF7A20F9D6DFF1E2FAC66941D1FD87450DB7C072031FB6286F3EA1D67C96
F492A3755FE79334D56862C93B3C6E14397AAC889178507E41DBE4233FA3DC61
DF6C95AE4A7566999968A37649F292636FFC2B2A584B55CF0A88149C84C6EA1E
0F77D8044418A344C9C58DFE93C6030F9E37C352DE4BCFF831B9ECB20C9E9896
C766427182D2515DFE2A487A75646D4AD48D6DB159519D980793CE160D39D502
A9640469563E153456E70CA077F4F2A264AC49A3C48F0C069F420F851BD43DFC
096B1DBC7E25108902BD0E223D4955936EEBD5B0F572E1577A6E0BB79BB1A8D3
F72AD2D4740C0598FDF9E42A5F6D210E2464954FA8D1AD3C72744D2618007F41
5E9537AFE3BD567EBEED6E910CD5578D06C807B6DDE1FE1ED34594E64A5F5F89
34D935205CB338FF1F4DF93CE793480C57235CEF0B9A144E504A7319896A4C79
F145AB2868B391D314BB2EA54CB25F93496DD8276564819C019F7A651799F3F7
BC04E921D80FAE2FEE1A7B9FB87134F56F6DCC55F486D051CE75BBF5D96E0ED5
A6F5EC1D6D6F4C1708FC9D021E653BACCC24E70B3CFB28A1B6AC0E3EBD9F7759
DDD6A52AC8AD6C18630AA290CDA90EB5BD85EDAE844E9F1DC97AAED79B3CE5E9
924418E2FB47EAD9013BD20AF072360EBCB743ACA55A618E3AC2B60E19A4379A
EE00761CB99C98E7F58414794C5F9EDC04D387A9BF8738B6AB6642EE43201855
9C0747DA6FBFF510B167E04F3576A39BEFE27A8C6EBC92E00685E959E47BD71F
BB83F3C84D49218444CD448A740CF47A1C83530D8B48107C36313FCE44FFA949
72F477CC814E79A9E39C505CCC86C520F44CDB1AC1B872A070DB0E3E7656E3E0
284337B7355097FBB4B456F54927363DF93F5DFDBED07386EDFFDAB7E6B7A61B
B5F5933E648EE4D6B06043CE3C5D8940C673D6251517F2238B3C7F8FCB7B5356
95CF7E0BFDAF40733FC7489A0FEE32CA9593997C82D37A902EC8152F96C6273F
3F77935F24EDF585018CEE23D35264A44A8D6ACF3F148FBA56F3F5F79161A5AF
42200B11F2BA88670975514622EFE7C4B6F3ED532F10127C9564C8EB1EAFFAD6
55CF3E9A4CDEB48CF1F6CDC2AEEE1911EF6D5FFBE12974CE3ACFEAFB6159E44C
0E2851E79824F8B1CF836EA22B639E97578C0D1262FF6CEE054782683282FAD0
907321DEC56AF7FC37499ACD831B00F9708EB1ECB3581944CF5651214ED75745
D7E41F98D7860DAEF04DABC3961A0744C8D8A15044FD12CCB27B5D1113335627
D9BF2F3AAFA3C5DA972558EF18E940884CF027507535FDD21AFBBADBF8B70712
9527FE0705ACADE1E4039D242E7434E22EC9361E29921A1C0987F4BAD8429227
94D6B6F9B56FCF063BBB290A575B952A8F16F10AFE920DC50C267F31C773DE4C
FCBC17249F1878A8F27E1F8EBAE513C9AA802AE75116376241EC604783A6A409
FBAB9A700C0715766A71803F19D5395E98FAF5E9129EA14BA8FBEDDFD071262C
966627D0C42AFE93E08C6B3EF2D622416451E239AC4663873EC9E67246F210C6
BBAB83D2ADA9B1E9383844071E5FC484B259072EEB44D68BBD661FCD331BE82B
72491B6107DA730DD03195CFC5B11FCF9B0AA799E12AB4DCCC460E7237DE280A
932C2E86CAD3E02CB75A6DF5118A0673D3854EE8B354247DFA5594EF1B9A8410
33E22A6C97BCAA7F1593F01194682CC7C176979BB3FA10A404FA4E2B403BAFE3
B263F1EDFFE0471F39191861C9878DCB90016A51407773231E6CC093777074D5
14093BB16D07FC3B2FA1D49D970431248928612655FBD9B72D1F1C68F33500EE
2674FB3AF91E9BB5C0C6A6DB2A325482279888284EE3898A8E0D2188D380984E
BCEC3B199CBAED4D1E3494AEC041DFE49E42414A22FE8914E1943F47D4878B36
FACB49E41799B2A221C584150BF00CB920122A653701D006A280B8B76577D688
3E8B252A57530347568F677674E54628ECF1E428BA9E95E5DC03D35F624F48CB
07DA87ED52D5F102ABC7C24D89876EBECA7DD9F869568300CBC183986C37AB14
C1A8BCF0B9E8E437567E2193492BBB8082117A1D97794F4A71B5B0C15DA24E8A
816674D69D0BA8A82C40798E0520F574455428A752F33781B763DBA3DB2C113D
DDC23FAABD2591D35A5C4290145351E05357F3053B6F87A252B320E46D99E2F6
0E90B3CE772DD84566DAE62053088315CE3CE3298D50B67B2F2DEAC39EFB1DCA
502598D1EA5E393E4F97494172069B03FCD2DFE69C3A7A5FC6C79E8591235F70
5FF3C1537CBD8154940262081A6EC6996CB1C154F8A4362F3830B940E1164178
F9865290F0944EB98BCB0D9CF4239A856368634B89AD2D2637D446FAFAF0EE9D
BB3900891E954B850D99E402193EF840ED0B5B8AB75754025BED8A949C1F2031
BF08602719D09B0B8B832BDF9CDB10BF2AB2B736FAA6BE5AF0783D6C89F2F2D5
803D668EF05E94B398407220BAE583736C4D5CD8309C32AE9C74EE122DA39045
3745CBA988CFF7BBBBC4C917A85680D6440D7138F4C93DCA3FB05D00557C8DC5
92AF2D49CD7803CF9D7F89E9F58EE087125522B56892A7AB90745048DEB61F87
A64CE87C793C0FC2F12B85988A454AAB0EC1E8B1D8D5E38838C975249CBCE706
98C95376AED6FEC774281351683EED1909345D6DD306322519D250C245F549B8
D80BCAC0212A2C85A348A52E824F055445179B9A01DDD229B487B0CB8B36B79B
5C8EF1BCE24FD6069DB66F34C00E43304B90E02D3EC0E4321B380E6AF53A1D20
BE53EF62734A65C7AB80A7A1FA5DDB306A4F23C4FD22A4D8DD35B8100BC553E1
B77E4D2322E4BAEAB630B75F1A632626747E6F46E821316432420059297DA99E
6C016DD057E1D5516EBAA39C23744606DB167F2A61500CEF58CB4EE0B53B6F2E
CB9727A1616869BE0E47629F5000AF88E2AB979EBF8084AD96F32EF54857595E
AC806D4F64D05CCF8EABF1D6DECFF5EE3D76227B3234B8435510410006FACB69
EF35D5E07D0F57B513E1FFEBEA0431857ADBF803B92D851C1C55E6ECA2C6A193
030C3C9926DD858BFBE2652E88BDE15CEA1F078FC79FB4A0AA7CB87817D06EBF
BEF73E1D2F47FB2F04DB452D7454E6DA781F7B415B71883DC189E9E9AB618C28
7C37657A061383EAFD6990A388879F0A538782DA53BC6D5424FE40F2B9B77757
EDD87A86B3D4D5416FEBE45E1002E6B95F45890B02F6E6BF361A99FE3FD962E0
06E21C248021FC007A39D54D1DD7D63A9CA4CA18463A739857D4CF2C442048A5
F4812D70B361232E6DA0038FF9A2328BFDE3B3A52D0D9D5F1823209BB718D74B
651545FA5F0ADB1523B72D394E06C7BCA9878C2F97D724F6F7911277235867F0
3FA630814976EE4E23E1E10BD7239CA2E619A45A8FC2F0C56C2E28E6BA741FBA
D5615C635E258AE49AF124BD0170B55841BD47B375FCFADF2ECD0DD4323B298D
029A2B729356504B535DE8A0960088860313353FE7062BAFB54523F67AF759D4
E5A523E8B49F1E559416E9B40BBDC20BBAEAC0A3DBC9EF2729B37C825CD130DE
25CB3926BCE22D3835E10AC063519B402AA443CCB4BD0AAED72BB42F0B0D808C
11F768325CB44C0F43F2D50F2198560D8D9A2A5FBF53164D0D84FAA66F2B830B
2055B39D484F0539A645F6D91182761A9DB8F27F0413F76147366A745DB4A7D0
266903252465874A42F87FC812700B136BEDB5991BEE3F7FEB8140F5FB462D3E
99837D06678E7BA1A2C32A7D1BB71D43A914118727D993E00AFCB0D05A8E4171
11DB73D6B6733976A6792843E4D1735E8F5C191CA506483ABA66AE7630ED22F2
0888C1F746CCED301231B2E0601B232D70708A4134D09E506A4E647776FF54BD
9E82235197D1B878794EBAAAA776B755E84E37CE6BD824BDC49B0C617FEE90C7
ACEC77B754051D9B862584EA257C447A1C01D988226C0727044E2CC6613E05CF
237D344F65A9850F496534CC4D72D7F99ED8FC15759A32F8EE1E73E9278626E6
2E66E7E1B51FB50D28743C0C66A165EC18923A29076FF4E89CEFF11D063EA5F3
83F0B42165DD5E3036813121869F6DC25D8BC37770B09E27B59A343E680D9E3B
31B80DFAF536C93D34B419535B332C7AC546D80C1E15B5DF1CC096F39A86A4BF
36051005B616C5A12BE8BF8A29272F92BFF254DE0C03B6C23B8A032BC80ED1CC
77D626BA93C2806392FBCBF0D85DA9AC07E0450DD050FF4A5F1526B91AE71B84
14A2687DC1C1CAF311DFEEB368D0AC83EA022BFEFDAF9A3B5536E3376405AB75
CDD222F09FC3709317703E9974B6D506AEF618F4BD734CAA326AC75816A56075
F2D2FA8A13D6C0D536664E8F0B1E5BEA4FAA28B094A55FEFF895085846A98655
3B0C2FBAE321E2EE64B884ED098334D161AFCC6F63B2FA8D88D9A2BF2C4FE227
081B995EFD56FD8593E9D6AA040CCF030322082F8152FD6CB1A22B11DB6B77E0
0EC216335293CBCDB87502AD4CC95848A7D0B42BFE438AF24415559C0DCAADE1
E57431CD87DDEAAD83869E11B48A7AAD7504AE017BF4DBE019AD008FACF26EBC
0596E2D094EA7452C96ED17C35B5EB442E8E2E05CA7C8255FF7E8D32C15FF59A
82E6A649C568142766E95C750A1A817008B0590F6098989B84EE7DB9B3B31160
10C152D51AF942FC83C0FAD2DD29F81B96754C4AE874B7134FB41A4655B2B8B9
91FB700D4D38A3EBE72B7941E3A271A333629C32C40F5F719263A0077773B0E3
46549F9B823E4E0EEF47DCD982642850B009449C2EB265F110B0AB629678D0B9
7FCCA81EFD31390D7FE3B3396B53DD727D33F12A9FFF1E9357FBEE9B15DD3784
B7E2459B0DFF11B7977EBFE28EAF2AD16712ABBCEB9E4011283D4F5B85834912
D4A8B1C91A3279E4EADD9B2E8F65E6FCE212D16D4B6591AF16C090E56BADD74C
0154DCF93B94124ADDE52BEBBC72BE642D0786E9045147F9FE35A5EA5A1517A5
1115F145912E2E5EA92124B7B8AFA8888222A274F0862D10A373EE2F5A18EC45
1AE32BF481CC4234D2B6DDB57A61341734A5ECFD343E47AF8C20B1483968BB65
2C380A29D2A8661A425CC354C178653197CC3C02D4C4610A72D0D257174D8534
6014B3AE4CED664E79442DA31FF1EEB22A34D6ADE785D99AD56D9F1835F32705
16FBAA45CFC2CEAA6B216457BD7232FAA74D3B60ED9E8D7B463614E192F0140F
98BD075ECC7A17F2132B329025B97908AAEB95463E6A5FC511F21669D138DD6B
F8B9C25555507765ED33FE5D7757BD828C16E2ACBA8CC96F27E6B18BA6F7129D
E1236CBA3E45E4153A3B514F17E5E6650958D09F72AB5CCD102ED801B2B37E0A
40A5895B17E7D8E5F0CA2382E83BA4A899D881F7787D9CC6FACAC5D4F372247A
F185B6A64FF979013A0A02C1DDBB8D6A4006B8D20E4642B2932120BC9770FD68
9CCA6AAD463DA1D9D9DC7700F2F2C231812E9E4ECB31DAEBE1E865FD930E52FC
237A019D82AFB5E5E08A6CBE14483BF8C654C1A89813E88505A1FDC05F87CB22
7EC52C03FED691F299DA28D5620F9427E16DB7728B898E4D784494D38542DFF6
9C3E7DA1BAAABB742EADA06EC332086319F621590D15B04C957577AAEDE28D56
D2C79B9E37938A6BEED0D016550ABCEE20E342996A46A79B03CCDF4396CB13E7
E2EC3DF6FD5209E2A915D151C5B51305D8814D2365B72AD64EF66B98A1A4D349
5CA8607D14E22DD5C89F78394F6C6A99FFD7029D98F71501984F987E4312A3F6
48F3240582550A797BBDC606EBE3F1C9517423FDC082812B92B42AE4C0F9A1DE
67469DF6DC65F880263AF759DFEC842B59B3DFA581A2049B07172AD382E9BE32
170AFD6F495577651F4A5DEC1FF958AB8176863475018BBAA7562513CB2E5EFD
05F36D7E10C2D8186CD816AACBDA4D5C21C0F08E498B3F572EFFA922FEC125C1
3998F0120F86B8725FC28B3D2A8BD0EA73E6359242F296F55F9CE9DD660ADC2E
F99BC4761195D27EEC21ED6071C9BA415A3F2AA4A557EAE552CAE93146D8E895
38A120CC7D6685E54ED521BAB02E6D72E0AD8D4E41CC295B1F8775A0C284DCAA
290454224F970CE8ABC89D2D68964728382B23390B709FF9599F2D95956E8425
BED8FF07BBB1487D26342BA4DE992D440D9E0CADA266FA3EFA24E1B1ED5E8B17
836440C2012C27503A2C24B14F25386FB7053ADDE05EF2286D8C426AEE58AFED
0442137CC9E770F86B07474D2C448C2CE52630B54EB026CBF38AEFB2D00E9727
84BBEA799C412F4C258B7259DDEC0B50A74B2A6356D0D983E4403F47C88BAF25
4C75B72625DC27DD2CDCA97942271193C5C4DEDD84B18D53F494DE02F942099F
A055FF7B6C305C3B3D6961ED551B1837DE81C2510F3482F17939E7CE067C59EA
641E0E67CD906F358BE8FEDA226B9B05429D161E6C6F39343B5E12A5E13CCA2B
0FD9C1E29062AAA916D88814408283D4FB88AFFAB5D498FA1D3476B16F0C78EA
A2D87812ACFDBC7F24EA8AE2D965C2D5B4825F592B85301EA1DAC174E1A57C36
6D760C73AD947EE0EC886E26455FB6F867F241E4EE0459E7B56AAC9A5419B2A0
C6012279A0D3FA4D5ADD287A3146BE19E8C61FFC164AEC05F8D36E014F428F5A
CBDC3F77E33855D2266658BAEAC3DF912A119CF8FAB9C870581052C9280F2233
FCD542EB569995A287BF003A951F6AB5E2D9209FC2658394614857031B5C6C2F
A8C7E9CA4526A0B552A5D1D310201FC54E456EEA24E37014304DB35506173F6E
D59007974110C564C128C4A32D44F52F123B110514467FB12F2C0AE0F5502BD6
803E273D70DE52C0DCE31D3FDB92D8B4FC8EC72958B0FFEB3E44B09C94AB9B5B
C41610A57B4174B07339E706F178E21705EE293D7D47DB27B2A7403A59EF7716
51611B2D36EB149183A84435F05FBBC2AA5AA5376C39AAEC0DD19527E628FEF0
2815B898AC4E1CB1A1078486AD64C5FFE55FFC2C04F2BCE0CA0DC271FE6D5A41
0E06D08C74064AF92552321887C0CDCEE203EF80811E6B590225C0910175FB7D
49C42BDC868E70E50A5FE8318A4EB1133F241B604ED22A3876EA1490CF32A42D
ED28C986BD21863EA6E023F5FE9DBC076DB8264ADF05FC0E9BEC5D3EB9EA4E4A
DCCE31E376A3A072A54ED91B7D3287AC6A0169773905731831F511CCFADF146F
11A536766F75B2CBA00020057C14EC52E516A0D071CFAAFE9FB56D827375919E
0942E297A2CD12393AD16DC50DA6AB3E3B4ED4524A29A36B339D1C70F4D4E99C
D4AA11274B36EF43C784CBA2E68483CD3379AD1A13FFBDC3D832B3E1E6B78395
43CECB0F1CB8B8E01FDE3F4DC242184D6A3C36B456AB92865A15AFCBE8F42431
10C904592B26588F7D805DEA47D300D5C7608F5C3578A8DFF094917154D4288F
305CCA031B7D73C3F3DD3BBDEEC0FFDA2201635643F65FBCA3002A517F51E949
48F445283271FE52749073E5D109325F1C06E3C0086564BAAB834334C09E8235
7925638F6DB23EDB39F81E2497123CAC298ACE0A54322998FAFEB8660F31E63D
FEF0A639F43B00720E7BBF2D9A9AFBA6986EA3455D958D979A9FBB02A17660EF
99C45E739A20048349CBF04A464851FD7AF1E591FCB721A2C7F9F16110493F26
0762E73543DAD0B1E02C07E7BCB661F5C2D2E1CF6A415ADA64091D32853FE7DF
22EA7544CE38D89302C3584CA496C0B033FE6EFB0D8424B52872A39A9C6B514B
196EBA5065C5089073B988188051E72B6EAA218C0DC643881546AAEE4D2B3D67
3C394D9FF0E5E1C3239537BF9E41E78FDAC0DFD36FEBD0B5F9B1E8B7D0A5C401
EAD0800FA207D2670FE58E9CA4DB7E104BC9EAC65F250A5BFA009DBCEED9A1D8
E12DD750F33C630C957212AB30B21E60C7F2E8BECAB5C0368D34D62ACB481F44
889DCD416A05B2AD18DC9627BB4C1B1144B61F60C1CF8ED5EC6700113155B430
9ABAC44A96C3A10575F2681861DA2791C6E04C4E086D86989943869665823EEA
C3D05DFC78B3ECEE627D9A68589A80CCAACD8F137BE357ED224C438C6C79E1B7
630F2A740921F4CF73C9214367668427F1D14FE0A5309B9CAFA1B0213B7529A8
E573EC77111E71D91712127BC19D483E9CE35898D21138B8089FE68044769BB9
E5A1CBC6CA4B3A3D868A933F09D98C039C5DF67790FBD494A8D8391F42CF7020
8E95FCD1A00A38527C86696E0FCFCA60F626D870FBB0505100843E9F28260882
F51F29673619623E3A4DFC042160391C2056C6AB82C7A46A69A9D6196C5EF4C3
8B9AC6EFC03528D1A5DC2A126C12809E7F43773DEB919A983901227143B15B25
C15AEB2A1207E7BB52C5347FB203BA1713885DC4231CE7D5F37FEF73D313EC11
E00149948BCD0C72672A37C372B7C3F93BA69C9D67F5E91FD7FECF065EA2AD57
B916ADFF0ABFFDEF4CAEA9C19DBF533AC6D691F80796874FDCA55311085CC72A
27B81F3892B49F59EE97181B0643A320B2E3A9216B5A934D008777900D70E9A9
A680BBF547142635C9B9073C9B972D83735AE9F7AA9637E4E55A88B6903DFB47
6B775D7B533BC5DB9C9BB4CAB65E090C9EB211F40DEE22072DC001ED9E804BDF
EE8221B1DCD0BB82A8778954E3D8A30447423A7CE33C6ED89C1203EC86F657E8
EB6CFCAFE94A7DCAD969B237F0DC5420855CB272EAF4C7C8B8C3C1D861C4FB8C
979B8AF4FC862DD1F8882466DE0DE194FDDAC7F05C5550F4B0912ECEAE71F553
D2BF1F60E3E7FB716F878C6F2506DAA21A90106C6414AF131739644FDD08BFFF
3AB935CBE5BD34199BA84D124ED75B0B39DCA4F2E0F5A85E7E87C1F5A6AA8A85
06544C1679C5D556C4F34FDF7B671D81EBD695DCB0DC6FB91F56553DF52D7D97
4FE28E4FCB64C019F484DBAE91D78B8006F9EB7E63D68FC34CBCA29C26D1D551
AF744E6C89B6F26817849B36EABB52F34893058914D4F87A48C94286E9961102
B432FF58C9F09FA88792D89F87EF0F7B51A4F56AD840EC138EC35E0F2FEDAF0D
FA42D975E053E856435FEAC944A8A3E494424709870628157DFC7BD9E56E4505
81E1F614A6038B90ED80208B6AB458274C0F66BE1F7395A69E20BE6BD6B35541
575A47277F6ED9523C226F4A26EEAC73FB3EEF6D2294C9065BEA25FEFA30E627
9680896037A1A587CCBAAD6D8C3C5758D397FDE1D5F153AB319B9D18C406547B
5BC4B78F1D447CF102077515EC312B5E3E2C399F92B7102EB43B2903C13C10DC
424EB3216EE1C39D7E272F20A302A874888A1EC0B266604F36AEC3BFF5B6284A
5ADD43C9F72BF1843EC425CE2FFCC022EEB4BEF5BF685631CD9F8CD64403F88D
18AE93EDADEF16E442679EB8186405E61ABA47CBB3AB75CCC6721CCB6EED19EB
B380311E4D0ADB72071CA25EB6B2B716F4E878EDC6833EEC804CDEDD219EB647
FDD0A315754AAC515B56B815AE8A534EDA083CB3C6F7016A395FB421EB2BA6EC
6055D3385A8482CE1A6F4AC93AFD16B098A466349FE17488256E01B88BEA9068
FC9E79A8B8A74A6207825A14D839E9000161728DC2335CFA8E18BCCCD47BB612
3A41E1A59EE8CCEFDDD4BB78A30244BC2F6202353478CCB49ABBC40555BD078F
139CE718324C69C262AC168AEAA6EEDF576789FFADCD25686FC18C7AD0953AE6
AD4555CB0FB15A469F7FE0661FAA1748ED3980098294853D235646EC0DF1F231
53A572CE0E0D752BBC39863FE9FDBEC570977120142129BA7355FFB59693C9B4
9180D520173AEBF9B8AF4327F1902E3658DFEF6250C9282DA997750029BBF7B5
E76DCB89F8F16159AC96EF13B82825E92D1BA5EFDF2ED639EFEFD66F90E397B7
29583D44CC081A772897AF46F28CF8DE85B530E45E4CDA0117F6BE8CE4E359AC
31C4D1DC414EAA4A541253FC1E4A5FECD54ECA9F1497D27F42A8E608AD0CFBB6
BD4D8B5178909F97CB3CC57F8D356F98B446370DD03395216733D5DE1A7DC71E
55EA78E2A301D462B6F11D9963CAC1FC7D9C4E7FA8ADA58AB06A6C89C4B588AC
BA03074AF625B26F43D4685C5D66AF684A712F6D295194BE952265129DE9A915
1C1D833D2B4690353A99897A9091E360C9ED0DCE8936E0658F4CE9B17FD7C8B9
12FE66E8EEC8562D4C2499E6C1E10CBB20D7B7A5F5D2FC58C2B5FBC57F938586
D93DC080CDE883987CDC117ED3ADA10649BD19788BEE0FA62F2F60B6EC4B9A27
8A75087CBCE688E5B2905F380D61A9A1816701CB57DE0055E7182C1C0BD8239E
24B18CB2ECF70EDAF4CD207EE2A6CDF4AEB7F450787F63B03FEB3CDBCC62628D
1C37D9CA13E4102DC83CF7F9CFDE44E097B20F70DF063D5FCFAB006EF77B61D0
371ED7BEF5B56C62913E5116E7376C289DF265BBEF7D53B8A5F0648D7F97953C
5F9E86E2C75DE1D871E8C1478337D89A09383AB2DF9F2354CB348686BD1F190B
D147C29E7A322223262A66DB5E7342900995FA27B0E267AED82BFE3EF72596D3
D90A2E916D1DA96FD8614403CB3251253AC3769601F6FFE54DF053C09A0754CC
1C0C9FF5DA8061B8D2FFBEC5B81634156E4E66395618D3EECD81F71C2A80BC23
607EEB9D7D553AEDE439CBF8B8762E7E3644BE5E4287CBF6965DD9A67D6C0E4C
DC0B0B01B7E74766EEC7CE22682884C101C64B4EC1B3ADB8987A5280CC8C02A5
CD82396999241AB260B80BF29D9A1AC569A68F1B6EF39F2AE0C7AAF3C4623BFE
451D0EE667C83FE61A29EF5E2743D6B3D93CE80E2A4C69BEAED89C78278FE510
2D178D939E6EFD212444FEA26664DBB4DE2923899CCFDDAFFC354AAF6CE04623
7F03262E242E297E9257DF15824DA952E6A878A9FD2AE0DFB4181CB10DFB4592
9BD5B40AD2A2C0C6219EF29BB71AFAE16929F3C203396EE6F94F1C02272F676D
A320FBD87ECA59BC5A7277679B6DF89D52A59620451F4EE3D49878FEDB622B63
F2AF4203647A627841744F911968692EC5B7C6836D8FDBA583055788E238A7B3
1DC2E10BD7238BEC70922B771EE6E77A0927AFEF0CC77E393FA6F0D5F9A804E0
2B7F12FBED53F704D4D6549FAE3B3FA3F893BF4F719414BE8BE092A0AE02C60B
4982FBF1E394FA7DD0A70BC1AAE62ABFD7EFC2650AA04E840C58424D0A22B365
13081037D37EB47FEB9F1F887E49B1BD949714D28A5A173194C307443657A7F0
AC4B0A9268994CCA8E4D43DC4C56DE97BBAE1326E992100D56AB2B8B70D31E65
DDAA8D28F5ABD47D7DCACFB6CCBB08615F00A6A1731E536E3596F133EDD749A2
F192322EAFC4530660B6F431214A05C643355BA5294CA3AF76C4BEC5B21D027C
D631F9352605F415076C16B74E8C4B73B1E1FEBB3658D793A2979F60BBC42F55
5C5494FFA310C90A5083A94D4E2B7E804E547E1602E27D0697949584C961683C
4D510172FD8F810C6EFB6C1D01E5F0753BE40AFECD27B84A1DA21C32A7D12E79
3B206A425475AEFADE08FF28145B394F6249771C3D7C36EE279D02721FBD63B2
029B800ED685B610729CC4CED189455DD1C427F7D3D8851F619392D508D31682
291C856DB87B26250203B3C96C92DF2D8F3ED147A305D97E0D32A954326F9AAD
C070D54F05E1C266B81A25A220BBC1183B5098F57FE509FA00CA7509815C4B28
5BE67C87E85992C1CCFE883B81803F22079E4F5A8C91B12DA900DACE9EA97332
6947FE55CA6EE9B2E67A9256C639BA04E02AC5BAE494E6FAA9A720B5B2749378
C3F9098BB925F9B917E2C6CD65C651A92856B044F475C60E73325AEE2310F7CF
A455A7EBDCA1E2D9E99CE006B629DAEA93F0F4BC2D0DEA4F2C2583DC1C6B2DB2
EB35CBB6D97449FEEF51392FAE6F0D07FCE2D1A50FB1B30AC580AB9A4A1F626B
E74233A97BEBC560CA555CC712422CEFC7A0601C7309DC96B73DDD94FC08CFD7
BF778D95C7C5E0B977B28FEF2405915D9E5BDF1F2C03B3B07D8BEE9A36313A63
E580EC77D4C7D916E20C936AC3C5596ABE7C4D2E28B2122B9CA4D266CB5EDA11
EC1D705EE10DF9CD0592A610E6E1366A85428B8794E80BDE78CE0013BDA2BBA4
F6B66E25D691D88C9D021C1E0595726C4D7136FB8E2C3D40B6082C1EA74DDE24
48B73EA9EF29BD1C1766C2F22874BEF868CB49C83B6FF841643BA49627005F91
CBD35888D16D066ABD4D0EC32961035609D0C004C2FB10CA13B88436A9FC4E0F
C481E6EDBBFBA4825AC5479A235E363E6560E0E4A5FFD8F482A913D608853F18
0EF4840BBA0FFC0BF5F294797325F42C1D4AC60C56476618B8DD4A8C6014A569
C19616CB8A2AD43465B9063E1E210AE1FC9246C35605DB1B9295422168902B46
B63560E48EAD8E644571DFDAB002F77AAFBE3E997E8B1ABFD35DEAE1D1EE257B
4BAE255E75A753D18A16683A810AAB5216E1707CC5CAF5DB2ADDF693140BAC18
7B1DFDEF77C1D9A2AEB23DAC3A430300363083077CC0D39EF5E5AF86C1B7FB08
B6F7E571E6F287AB72374F00F1976C7B9C8AA50A5E9186C31DFB605D02F83CF4
523F4A5A593B2929C6BD27FA6D8BC8E1E69DD5500ECBF0AAEE7AD53DC6A8994D
C61019845F8FEFDB5F310CF5EC8A3479B73CFC5ECAFF72FD80FB5406B2E18715
10AD1117093A57DED2824C24DC76729C0278C04A5F149AF86D6DE4F869A9AC1D
6D5DFA63FFB93EE3EFB75CF0A3B49E6084F4670FFA9DB2C057B3E55AD29093CA
29C8231C953CBAE020C31EFC2D90E4F4E10C962351CD749D19AD09B88B86430F
3F723588A77BB62FD4129250C0AB7EC1BB3BF9659F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSX1000
%!FontType1-1.0: SFSX1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsx1000, tcsx1000, lasx1000, lbsx1000, lcsx1000, rxsx1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFSX1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-235 -336 1930 930}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B512ECA33884E2FF61F80C94834EFC1
8EB28A04606430B3D9E015B9EDE461983BB823CB2983A990C85D68977F86C9D6
69987F12659DF9F131F86B1B9D2C172B8F30B795E9CC4F9DC7A6DD76A1C08914
1CFB6C6DB52CB0BAA749CDFD030A83DD5E474BDCE04C087271D55761244F53F8
30F60022B32534FA74739AAA0F2B2AA03CEFB5A79B09F3666F1D6EEB0E706507
78103070621D6194A1AD686A43C11D1625424C6199A780B117BA7BA6FDEBB47A
C594E786A466D0B8BBB3569638C516A2516610994BD4194811B805B174D7150C
AB8543C67DF74E005E16108F55494F9E7112AFBE1B7569EC8C098351F4D6BB82
86B7DE66C632138B409A8FCB9FAEA61BCD16A15041B2E772B9A97FB334D23D77
2B81617E0A34E0119C61AE0BD417243648863EFCCB443D1F2901AE2C238AC591
09C16B3F4B4B39353B2347E3CCE1212BD9F612D686AFCD50F79E70E77E4DAD8B
9CE8DCFD565A47244952D1D3A7CC327A8E6BE3768E2A4FA221B60EA17BDDF141
ABE4AD6DE170C38131330852EA79D3A32C596C6FD3D4CA9DC0BC9FF59B37DAEB
BD8853C75D211076514E282484569DF8076ACDBF00F954FB3538D35AEA2DD9D4
7C74124A36B6F5C1A4162577E5087C01936D0719DF558924DF8957E8F16013FB
9632C61DFD99DD4201E8C62E61A15DE10C0F7BCEE49A4A04E6AC6CEC9EB9F7C3
D55CF331DF490D615ADDD48D7899597E0B1A44B8A33EA339E5A70883AD0EC787
13B14F2BF9C80BBC4740C6F5871B50EDEB5946D41444AF6CEFD6164205684317
246BA6505E55DC55BA963927C458E20D78A61B7CDC559331EE07FBA7E7D0E19D
41B10A838DF8B96602F8F6CE590AA06A7A6CE24B00960111A1630CEF8BCF5ADA
42FCBA0ED693C25C465471D687A41AFF10C36B01E1933EEF1CF28D195F70C6A5
5B61B293AD5DEDF0222EB01CCE5EE140F19C9C41D5762189E8B93D1060B74EA8
63759A82C9D3F17AE9CE30B00ED8FB35518C4DD8D34E56D7F9FCF16DF2AF983B
D89892EDFEDA857BDF125B7AA8FF4E920CC6254D15D2AEE6A1DBB9D57CCBC912
55A3740E836E6DE06A51C54BA35B722F2EE93113FBD3E3C03AA6D95BE0AC5F37
F61CFB082B1D8E6D235720CC0FCC8983F5CF12B4ADE3EFF02132405DBFC7B980
FAB6AC77AF90111311025CBEF4FAC05E7E2506CEC4E7C3E63CF461685E0BB74F
A8C31ED0007E952D15DDD367B60EDB7C64F7DF6334B63553B3A602080E08C48D
0E09180BED4B961BF04F33D3C39354F4AACF3A37191636744AE3A8ADFD0B2104
0E80F87A53D8F90EA0F508C1E8F50CE010C91516FE3E7BC6F463B80E928D5DB6
6C4EBB60C080AED9633EDB7A246656438AE69E93B1997469D73A36C78B30B9D0
ED8D410DC113F8E414A0AD083CAD660AF79E4D36B4A04E5063B525099311B058
7A9AA97686E8C27F8FF0264640BA97DB63154E4696E95B783B1BB4FA037F984A
9B40CCD569977681A889373973040606492BA85BA845F6E4F5841FA81A9B82FE
1D0286F38F5E39715667BAB4B1A5B116321FEF3FB26BFA8A80D7DAE697EB4EE9
541A935EAA4240AC015F594919205F68F70D1081284AF072BE9A830F5F8431EE
FFAEED8A86E566386C496A2F38E81FE57EA3DDA4B3CCB0149CE25513570AFC25
B6EE02F3A53DFCE348FB2351BBEDCC903DBDC6FDEB4548266CEEFB0482F48D86
E13709D75DDA67480BEF1A48CC7B155976DE96C45622B48BEC77D4FBF366989D
DEBE424AFC2DC0504D432B88F59BF0193A648A1665E1D6872B1874B9BA8FC13E
745D868C51D4BEB61D02B9022270559497CD5855013A159A4D5EFB1C5BB38262
7AC9B7F5565043816BD94C28532D1F7F81B6EECDE51946FEBA8ACB3CD610B00E
828EA0B352F70D344305DA2FBA0A1AACB91490A3347C1E8C514A4559133B5092
141C6E34DA6FE918E70F830F417B99C6B4FBE719C9ED3F75A15C05C4E1B0036D
AD5C10714EEFDD6ABE878F1C8CF9FAB8BD3B084EFAF64BA95B4F39A24E2ABAC8
2F662179ABEEC43401BFCA1B227993FF2207059DC0BD55AC3609E76A18E8C57D
7005CC92B836A8F7E7C6E564B894E9C5F328006F628938193BAE9FC3BF261A60
8B7FDD6FBE4C4CCC091AD6831CD9B5E2C1E7DF0602DB13FC064D741118E05D5E
165621881D0EBC56994D4E606A810E6EDD81671055F19F4663A6DDBDB7059DCD
1723296F5544899E9BC5E8DE97AAF4C38B249C5F6307F4B8887ADD3B4123F279
BEBCAAA4FA7A54B4EAC9941BC9E072C0C1AF20D681702745D81CB19A34B539D9
5F68EA4B2563E40701AEC767EF492E6C30104F2BBB24CD54FA26B9F8CB038A73
D413CBBB9F8C3C01E7D0A68A4561EA8F903E297B8C2C6E72A18E23ECAD6B0AEA
F364AE4C80E5607CEFC7AA5B38C362FDDF541E5A2B076F4D9008ED95C7935B39
2722566FD5D4D7FDDDF455FA4F21287FAEA2FB22ADDC2F49417A2B653CB20F96
589AAE9D903E3846919BF16EEB7BAEECE62F49BBB48F381A17E6C0DC189230C6
9199EBD327E67EEE2AA3991BC8BF5542840C8C3F6078B66F87D17CD5282F6413
CC9D289E5B856745E00B96DB626EA72B78FBEBCDA2CD22E1495FC465D7252233
CC17321A7E7234D3818CA1698FF3E49802A69383EF318F2A031469E3095E399B
A2CDB311CB20EDD49DBC9095F94F91617440A0376DC995592D007CB15ED7A624
68F26645ED27E09B090CA9326D2B50B03013C577E2A78C0FF15F79699BDA980E
332D8DDB7C15FE2D9C0AA88D7A75563C68D69A376A7C788DC65AA1AAAB6BE71B
9527981BD44600D99926FD7C3A3F37ED2D498FD290D0115268BD31695A11CC61
8337C7F50A6787EDDB73669DD6039FEB11D3CBFD63287BB5113B289E81B36EE7
9067288902E4B2BD41B00B39ED96503537B2F2D8814677F046710E0E051ACBD0
19B0AEC0BFF6E811A8097DEB8A1F6481BC24338B8723DF80E5B89A772C8480D1
A150C76A52F92BB4BBECC58D564A2A425BDC770756F4A887AB343451EFCAE6D5
855D636151688C19C690B20B6B832255832D3394C1E1E059A77BAD6C9F663984
6315D07DB755E60DBDF786F18A838536F3FE0F723AE2C0BC3A2BCE2B7EE62237
01D90529456F9734B7B487C174EA47204962BC68A937D33F4DC632CF1CDA60BE
A3D4E10D331DC984E21F48D0E97410F8AEA6CFCF064902510FDE2A337A8EEA09
371AFE39987766E04EBDD8C08ACBFB410EA5FCAE6285563D80DEB29399899C7B
E315B4DA7E5ED0D36273B64E4CB1023956267F504811CFF2DF507C24D8269BD4
C49E0989390A1E4D0239A81E477C7EAEEF5D023BB95949EE39E78362381493B9
816C63AFB0373840E32D227A9537AFBAB44FC52C7D788E47CE302C71DE5E898C
8020C7EC6B15130D842695CE800AC28000754556991932686B616A403C757EDB
29231290079896578D5EBCA1A71604E6933791C0BE7B51BB7A808B67BC2A11B8
BDB89606EEA883550F4D05F76832AAEC0F6DFE2EF916EFC851AFB32A449E22E4
F80F05C1A8559DBBA3AC28F42EE409EBE71CA5DE4E2765330443C7F6C9C23A31
FE5588F1689221B3AAC1CE2BF499DA82EBC588A756A598A9B7EFCF13B53758A3
BE19B922D16A6757485E32EA5BE879AA3FCF6C7E3551EC71ADDD5CF8273CF745
B2C71A10D98C425B9A7D27CF37BC42FECF3138E99D0932EBE77336902DB76F09
3A46408FCD38B85D1D7CCAB298406B0E040810A1ABAFA9659B97166F2C9DE900
79F21AC87FA934132497CA4B909C83B6250A8F189F894A6E1140FBC3800C3AB9
E0B1070691739E83679330E0E29DD2B106B3827FED1AC0EF15E7E4B72644983B
1A5C7877298E215C72EC540F2EEBA65E3D0C3064EEE144E9E3F0695CE74A1FBC
BA022552BEF26937F086388C2A51F251EAABDE385103ADF225D3B0CA628010FA
55F83392CE84791456586B3AF37048FA0CD30D870F9CA138B01560661AA96AD2
0D39E7D640105F3AFF9407DCEE33573CE3215355BD24CFA4DFCC50D8BAF3F96D
3986AB3B9CC0976A7C3D290EB5E5A3F02561161DE3830F146463EA4840AB03B6
BC17A2E9AC54F1B90CACAB33B444AEB66851FF6AAD3B1D842958E6B6523A72E7
072F78C1BD6A170372CEE5F5594CED8BC91B7EC107372D5B90F4A4D901C8C9CE
72F3801F3C19095E0CAE7E705C6A1DA8FC43B261E1B2A8122571C6226DF6A04C
F06D50232E3CD1D7F775BB024B6BC59C801653D2DB1C6D0A2B17717A5B1628CB
446A04F6DD6C422DCD2785089BDABADC888B65AA943C021E11073B216801A385
AAA7AE837C964EDCC1F55915A1AE4FA8F26F39CD599133D084A56DE29AF2E4E5
649034A62418DD202D9025428EE579B50FE708C34EBD9DFDC0979EABC0FCAB99
14BC9BA40BD8BFD50CF2EC612B7E5AF418215014061C405E1F86627D6B973539
D90CC1F2CD3BBDFA87FDE559A1F0FC13A9CBADCD2407B155D311D7B27E7B12A9
A2DEA357BA4A89929F29AE099FB0507E809BF4DE72838B65F59C6B52980A9B6C
3CBC2FC10E0224BE7F4D9E2B15FEDB0F7EE1C5F78E6D99ECF7F38A31AA151879
B37B93DDE1B88BC2A0282E4037CCE936BB42E97596D3F6C79F64FD9972EF0550
084F43C9023321D145A97BCF28AB7AEA43141AF381535AD347514666FBDED922
D68614EF826A8058438C69528D598C4ECC7D2F2B08DE33B0193CC796F60BBA27
857D7C031F9E88C3E409D3BF76C2482A283694578C408CE8F0C9B1CA1A88E8E4
B615784D200A0A482494C502ECDDA6D3E10FFB63DDAE8346CD6EA1876102DD2E
3E7EEE3555E0B60F46E594F158DA5E341576E55814B0AAD492FC6BFA3F822379
7B2EC8FD285F8BD4BFDA5D2D419104F1186F4AC93A5C4795CF79D6A9BAE60222
D60CB2ACB72F9D8BFD2E129320B51C786EBCD92F13A7583D5CD1EB52363762FE
201ABFF868CA9FB21718B45F1D7F03B117D7CD242E5EAE84174FE5206FFE45FF
252B7B01B2E471F5FE819C8B4FE96D04B6E9D3161B5A42093EEE5F01B034E421
AD66D3AA7D731994626CE99F21ADD77D2B2F19E5855076FAF76F68477483E093
B0F0379CCDC9CFEAB92C58BCCF98F8D73B69B5A250033CE57B4166C8DD6B727B
5F77F1414AA87E142002C71191783059A4A9B9E5B204745C7470B3AC99645B05
468A28C650E3F6C38E05BA07D6AE91512FE6DD207F9BF8237387DCCCD95F0013
7AD43752611931FEBB48E1D94D12BDA0F24AF0580B2621E7DFBD1F17FFD55660
7F29471FAD15F4BB351CE2B183F77B2D3EE3F3C306DAD1C4CCD417E875D905A3
8CC46317E5A5E680269D19302A9052A414EF5A6D4479CA0965A7A918BFCBA0E1
FB8F25986406968BBBB1C2BE8F9981B2C52F7029C0888A0A7B1DEB05FC3974E1
9DEE2FCB0C6855DD4D93B75AF627C0356DDB1610C1AB9F0ABC1D326AEE2A6DD0
BEE3147C421D5C1CC81E82250FE4B2B99749E610D026F60FF4E98C4EA278FAA9
06D093B00AF0141FE7C90328641435BE99DED5563CFAC929DD0DBB23DC1C93A5
009DA5115C8C5DF991FC5BC0E2C36C0D34F2DE788DD70A36B6AE6AF201507C59
37A7080B54D3661C1ED936625839203FBC4394B77B0DC473289CD30A45271671
D39DDD3664DA065279A3CAA3E750C0B7DEF14217ED30B42286360C270404F970
2D49F005CD4403ABC39F8ABC8D91927F40B445C93CDD190EF3DB40EFD19B8552
B3CB8C26B19FCABA39E28507DAD902718513E7AC109C4173186288F85935EAF7
2CFBB020A9BA7472925CF6AA8F487600CB5DCB521C06678C107DE82D92BBDD30
D76ACFA2AA106C26010439D0158814332AF14A0CC7A24A0BC455A0E3BECED1D7
40ED6AC6C13754249D1D14EE325C459CA68F6299B5F77FAE1FB82D8DC4BBB7C6
F4CA08528C5E62F5E06EAC79C115879F42CCD67584BDA40907D50D2341DA33F1
5A5D79B165C2C163CD6FF848B6C8DFE565DE7F55704EBD3FBDE0CF0EA0437766
A6B517EF13E6CD6149A2018DBA1F7DB065F20CA9ABEED321A07D23CA45A77418
B46D7857FB335448C16C3980A763F71B5936400C5D25554FBDE7BE9A16760309
7E2AB9583FA02C951EEFF70DD07274BEFF523BAA8979632303497214FDD8FB04
76113DE4169BD2EE075E34A99C43D16849F34EA8D628C26F57A223F45693BBFB
1A82DABEC6F37E9A6AF2D9A1086EF0D3361D0AB2B6341A63DCB3605C1A41F20A
E37AE6B1BEBA5AFBA4DC256194ECF721D1697918B3CC39E43798681C7BCA4427
F286079D9FEB4F39CD734366C08DFFC212B970A75CB813B4D829F365412B509B
B5746F7D44706674D634A7B44D40B1CB8CB60C0DB64F4CCBE0912277447C98E9
157BA2EBC0A4FAE72F7555BC89A00249386C3C241A732D3BF46894758D6BB397
9CD9378E0C6C11205AA1489DA2EB15E74CCF9C5E829B05C8EAAC6A53FD80B521
2A294ECBB6E6E9D6FB03E01C35504FD0A2519EDD0669F82AA6DE178D997C4BA8
B3BA01971F293CF8FB11761D1070FEA8792CA0B7FF7C6CE0145B17123123018D
1A910872AD38D0B3C1973D171BCC4C30DF26DFB09B706965E71016AFE4CD49A7
1C7040400CDB7BA1BBF41AA58E5A3DB1A794168CD4F3F7FAC106B67E74C28D02
83D1FAF55AAAD18EDB926FBC2C5D63B24176C9184F8DAFF84711D89FD2EC8256
A1AD11EE5C79A76B084AB81EF1079B667C86D9B96239829EA2ED4A326FEA00B5
E6E855F2532796B42E8EFD3B38E4F900598B0AC2E83864D39B831B9D6D310F72
3F5519F243C73C44EC877FCA77C133957E3B6130AD7C452C3EA405779A673463
B3D691578C32C1FD38C233FED4D010340FB87CF551E3DB68463C2C734389058F
57B5B98FC3BB679B91B9596E2D0B3F9F5F72010819684DACF8B6075996F8CD29
043A0D3806759B3EB47C4F6B73CC7E21368A8CFDF94EA0553B1C5A434D9B98F6
5EE749DF4D0535C5FA1238BC95994C1627D63C5DCD0CFCAC525A242788C2C5D2
025950BAC0E569253D8760F2D5E5758B76F5D2EDEE644B975DC122B06E555EFD
1B5BF8E9EC27CEBFC4378153C1AF01A4E7D377F6B7BB47F25445AC7FF3482845
D902B1685A9561E9C86AE5FDDA10B61D47B82F5ECCDAE5AE384028E228E26707
D3BE2B69A95D46F32DE17FA39323ACF828E338ACF6A9D00F5DA548093DFD81DC
D822178A446D8CEC5AC289BB9BEF11759D61AB7A6518CC9A65CA594A4AEDFA13
B3A7BA41DB5929C152862427E6DBDE8B9BD3FE21E1686B48FEA397E6FC8724E2
55DED30BFE096EDD56D5EF9CD88E4B559B11279CF22E90CEDE5E43538A977C94
968E64D97F7B259C061E93B5975715353EBF1BCF0AD509795CAC842630105849
0E5807F16C597B69D1AF8978F1C697DDD8122A4AA7DD0D92F8822623018B4D89
4474E96780AF1A44BE42FD5444E304141AA6BA0B59619C398C3B6C5293F0CEEA
FB16751057316CFDCDC5F12C172A3448ACBEA2C2BAF04A0C95A3BB681F1E5D37
F7388F60DCD565D40CF658240663D0959A407015E556EB8CD2CCF1A6D46ED2A4
79C575C08AA03678C1FE53D840ECAD0B2DE38AAB12BA95827F51E088BF96C290
E660E1B226EAC41E9695FE8A830A5990810B38CB7A963F1A743580231B6C0049
F45E8D580C0BFD6C8AC0F37587795A42CC3501FE415076C1D1FCA8645DAF9F4E
B0D57EE26BD9D4FC3F476CAA7BCF8BD9D7BB3132601E7C4920D64C02CDBF0B7E
35DEF75093966283D7BEAE56566296B000709F3B5573270993CF9706F7674FC8
39A896ACF8B3B4B2AC7A81207DFB271A932A81F9283E1C2470489A70F5CCA069
DAA3CDF009DBD5927F4EC637724FEBFC2C90381236C47E436E8EE5FA1236ACC0
EB2019C5B1D5CCDA045F765AE897000C8044CEA285BB97A7F1555B7249406A87
8C78201A23393FE2CC6D27376DC8AE75FE8ED2D7879C8C8004101CCF296D0AE7
190E88EC8EC3FA9F4B68CE7A510612B52AD6C61957583EFA0FD5560B7E80C5FF
6C65FA0F2D3A688A700FE2858FBA0FBB39D5165F61D72B0FD5A8C9303C4F67CA
B7D3D850D8A6CECE4D88B3B62ADDDCA6FF2A81AEC12E33E4172B58E105F15786
376C99468E17C5A19790317DAC4604A96808B720993886123D401B61057A2993
AA3BB06AFF91F3EC14D78ACDBE28B91D33DA27C4071C1C5FCA0E5C13342374E6
254C16904F717AF91946590C55B5D35994BD493853D06B8E25A1201C1E9D065B
AD269F7FBB61505CC3E8444BEB2FCF16D4AE84E928FDC81551E003A1F679DEEB
0D2E27A2EC80946CB3D5BCCB6000E63C900F2A6A93878A6EFD56B9D10ACC95D9
3C80237F52C5073543865054F9331F1441D9A49FBED52908A25F0F5B357569B7
55E60DBDF786F18A838536F3FE0D979A23ACF828E338ACF6A9D00F5DA548080E
7DF5ACE48AE21DC831C4C5FE755C4C89783F8C4022EE41AD47EC1AD16C2F7100
30A168E9256651F81F548B08C9813C036CEC752B5E078834B951A4FB26544488
1CD321E7A3EC128DBA3D5427137E8EFF765ECEFF0AF5D0044C4AC6EB75616404
C07814F63C9FF5F071F3964D2609F4B8E6142FA206A4822454E772DE956ACE0C
A995B7BE5DE6520ACFDFFAD0CEA4924DCCD155655633F02A2A0347A0E5358371
20ACF377B840B2BE0F08198074DC6D874CB2247B8358B43FB42157BFB11D0035
0FC8ED47A84B487004DD8F0FC08F8DF6A9833F2C88B77EFB84F698B1E7F347F3
3841FFCF7B7ED004EC3DF25242A77EEBDEFF0ABB73A8AAFFF9DB786D7E724179
B064E2252303D3DD4FFCFC95483BB41CED61D736C4EBA0D508628CFB3F7F1032
C2CCB0D350718D8B191F04370196094CE2B3A8608075037BCCFFD81EFEC9ED8B
48DEE3A06335BDA1ADE6F682C2DAE1B08D20230189832BF45FCEC50BF3D67D34
9FBD703CECE7F8F5ECAE72F8988E5FB51F64669222DE1F120F759C3D5B8305C1
86A61279D546401E6F28771B1854EB12B22CEEA0F1FAB03394DDFE8DFC4CD4A5
1489858C38C9C1319378169E604597DCD773D3085E5DB40B21A166AD858971D3
8F495FD2F0F24767A37BE4513A1E8A8FAC4890E1D1405EE5CA4756E418B9E797
567533E6AE768388923926281043A10786B8725F5F9D407FE21B35001338940E
CA39B970DB7C6032F887E36190EE28694B81195CB158677203751B981FCBAA85
B643AAE3A0C9ECC1857924BF0D2EA02338A3053A77F4817FBCF046B7E3D686CF
1AC4C0107695EFDBD03424A0BAC815709311BC0EC0F0AAF2F083A3463721C066
8DEA8D1F017ABF12800B42CD21BBAAD7F22D53EAC65BE25487EF37BDEF71F3CB
C48EF1AC99EAF6A2F57678A40F3D435732124A22AFD8FD331A625AFB5DCBD4E2
4FE68BDD4B8FE4C7A8E217D15E961F741BF53D4FC5D149A7ABB8558F6FBA61C9
5548CF5F45CC9BDDDBFBAE4675E0045EED0A696236EC2F5804174E1B90A4BA40
5AA0188959D96F399FCB8C9DF6CDA4766E5922B0A0A5A63DFEBB88CE53A3213F
C15663950A61DAF63E1B427EA99D278AAF3C59A2933BA0298D1F27766AE938EE
F8F2349D76D0857809129BDEE930A2DA8AA8CE69EED997715AEE5BD46A6A3720
3088E13F533C5B09E739EF405741CAD56CC32A47B9BC6AAAE1DD23DF6B9D30EC
B1BBAC218C11D365ED0514155ACBB4AA96AB52FF01955B9E9110ACBB8B477972
F4C158F1E2F10FFD2804417F7A88528B742B87CF1B45B4A93BD9CEAF54746AD6
FB4289EC577C9C1FB092EE288F4CE0B2BB2B5A01ED2CE06D09C2C42EE041CCBF
F7EB2CAFAED1EB80F547F23C351FCCD5A8463252DF90C3F0D7C95FAF724AA601
9838D990D2139CB6629A70678EF05A78F03E841887B573C1E165BBBC0AFFC37A
5CFEF09D1E9910A33BCC14C485F8BB7B54C475B396B403E0F2FF7860EEA7378C
F5981022360E3FF3BA875E7365368F2F94C919A663307CB98E3F9AE062ED5B14
4EE4C2F2A4B51846F3BDCAF1794C18EA0EF6ABCD64C38473DF19B57A5608992A
551272C572C1A4593DA96B4D31E8D6D5E8F024F5A8371DDC2696F12BFD9F1B31
D65373C65700B22E2EE1B5ED812CD2F3EC52CCAE52F0E2E6B9904BA52EE91D73
6A70CC3AC70083406D7DBE4D8232159C00BF64F5721F3BE24382AF206B779FE8
724B5C2B2BF986E48FA616205EEF9E04A551BAA6B894DAA9B389164A1706AFFC
9A411B2304528D02B923932ACD4BA1BD85E62E06BBC34E1885BA4ACEF5E98B6A
4E86FFFD8B09D944B39CC9B92F9F20CDB7C3C2BA39C876F0638205AAD772F688
EEF76117CE0027EBE74D03E5D9486EA9D2299BF1CAAC0B31F96F029B6ED8EACB
2A2D95C841E3A2E9B166645FCCF1EACD354433779BCFC2A213F7E427E992F0F9
4B379DE46AB43784387592317478DB7043E8014966F4C86458AAABA9048F87AE
42FB478E3E370C11DE0087F55F105F5A0F27370770CEFA573661EF54AFA4C4C2
2FAFF18600AE33909142C789B0CC3D71B51D4817037ED658A684EA2472C0B229
6290BD961310DDFA3A2CCFA0D150656AC309C04587B5DC6C6BA31CC103BA5AB3
8B013698ACE10C85093A9BC1F8A01152CEC064AA3C01AE29CB56FA80FB695BD2
2B0E5E0B44B2C47220AC3EEE6C72352173DA7CACAA07DF2A4C07D5FE5382E07A
033707F90F4AA976C8806796E308BB2A1599026C4A216460D95E9FA506F76E27
FA79787754F9FB87D7CAB3099D93D7D7F0835871AAAF88E09333F26EC047B160
14275309AAF20365A50AFEFB3EDC8B99EB65FC2C0D760FB6B45B32831F4F98A6
8C205758D9EA0B9B18D07024C744D404E6C9EB8A74DE836AB5C28C4D982C5337
146157E63AD5F0AA910DF1583569A98A9D820F059B409C559024F2982A6E90FE
D802D1F35D2630B7DE482DFBD93731F8E6DE1904FBDC5D5B5797EDAC5758BFD3
F9AF4896C3505C1C4DDC9F9AD22AAF7EFE037C4FE474A77A1F389426702996AA
7C64343B5A9E8CD91DFA03E1F13740BAEB4D10E188D70EE7FDB0441024A31EE5
8501CE959A8BCBFA65C7AF0CC8AF7DC481A36A1753F690E9C7783779BAF0FBB3
00F4025124D73471C771FB388DEBCE8AAE26FC92FE7FFA426CF2624C0B89FE85
7A8AD5CECD4EADA32FF96A38F9B7E11F5AE6CAAA4F72AF52F5C74974058D40B0
C86B305D0E415D7A7B335B105815653ECD7826BAD00D4DA90F0855991B6AC867
6F90826E69E7AE376325845ACB9226C67836F717E13D8D145F8FF44DF5CC0850
37A2F597F8F6C074278B16A4C83BF9D3A84A8A4BA542E760F0D0CCF10A5BFEB6
7DD8256ABA9EB54C0F31EA7BFD071C568BB3E97FF356B1BC33A7C8B20514BF70
BCD1B7C809BCF41D9B58336AD62DAF618449DC19016B2E991D6570EC6078E5A6
6E618F1C765E754609D7266EE4E6568B256E486EF567E24E5BF4A8C79601217D
77ECDBE53061425C01DE9F733475DBE42C23E07C53DBEA349465832765B86046
AADD8EB1688C7A8335931A5FA25F0398915291EEF428628A365106ED3FACA43C
F5C5A738B3CF7584E8FC48A03E1137D5A1281CAA541FD4A5C1312F7D08C5D6D2
47BDF83B06B1D166781450F998C0C79B2B6E859B59A29F51E10583933C315BCB
D971C5D5627A380A78F58B1F4B629241369E19664162FB9D9F0514AE4C5D2F5F
73F95E0DB870EC95D8F09BAA2A0B989E0752A84922CBD76010A10D24B1F631C4
867302FEBA3066BDEB3FE94D1CC1B4F22118420839CFBB386B7304DC9436A4B1
EF0187D374A26B6E2378FDABC74D7970638C14B3473AF5BC2F45B5E3D327353C
4D656F6B16D98AF5B0E1C986F982EB30E80A79791EC3105E07185805CD44AE8A
D48DD9B0F29E90A2D95DCB454C2C618B612A05A5B7E3074054412A33979B9FE7
F45A2A0CC1CDDBEFB58C017E21EEF186188AB9AC7ACE16CB7739F44677F9F075
0DC173014E1D5F2187ABDEE36885E92F951E522CCE24F7525AC98D11A8F5C051
C58D0E6FEA38E58EDBBF2455AC2E09DAACD30A86AA94B1A86020A3B4937580A9
6D0B1E140095ED4A6C5C5A5EB784AD24244BE76CC14547769064907A6B3FB59E
36D639D56AA2AD38472629CD3B39DD543B37BD8CF179C4069C04EDB845FC664D
752DA651B9ED215C9E3B5A7517DA676A8FD166461064BE4150CB95C41AE00DDF
A3BAA3150F84D4EA0E7C610D99C622D6DAA547F7EDFBA5C3EC49D94E6CE50228
6F3D52DA94FF37C018A5211FAE9359605EA748E76A976728BDE2D47D16F4DD22
E6719AAD1F75E4D5B176E7439BC970F9761444F34A36E097EF2094809AB75715
DD54A38382CE7032ACB1511766EDD87AD40DD401750C928EA1A3F74F81086E5E
E27646205CCBAB868EC983AF3E27FF16727EA0F820D09C78E0F7D53074BE07E3
8A1580CC9FAA5CE82A6F3D5DE9F1E091924807BA88A85CA6A24394D299968B4F
6089E7F8BDC7A6431D52D71363A8370FB9A4946821217A986DD2D780BD36581D
9566AC866281A032BD732F818921F5CF2FC5BB00EF4C3AA5D733BA37B8608432
E20E45DC7D1DF3FA28B1C6B3A7B957C228F61063854C4AA81969255AB3EA722A
E99AE00B384F2E8D9F9ACDC86710B0C64870A26C332D3D8DE9863A4D3B725A68
4F31745A01FFA2B6EA8A841B3D5204405BA33E7934AB8E09F6E413D028AEB721
2AC2C7F45D9FC7B4BE4C2C968EDDD18FCFCC39823DA08EFF3BA0C2BE892235BE
6D33E5BBB73999BC37332C718B17300E8CFC4627675EA3EFDC0531C2D35985FA
887EF1D3FC07EF85862F0F31939D505D2D86DB402DCE5E45107FF3133C6D422A
783E6AE8A7778C1D27AC5EC62364DA6E0C5EC1E9684DD758A9F294DA4BB30A97
96DFC3EF2A6DD8ED3B3E4AC0D8EB673E22288F48A9B5C51155D4E048ADB45391
6692A8644BA12ACA2FDB3075FA2F725183193DDCA689F08B9C0DEEC061B2C0E9
DECE172069E61AE46988A89FBAA56735CE36D237E65C4DC74A8238C0CE1A376F
69A88AEB60B3805A0055D108AA20CC366BC3A82A00344169FCF02601FC4F93A5
A704B2B4E1D23D65682DF00E20B2B90D7077BDA9858C825ACB64B7BF82D1E594
1E62CA1BA819976E3B5C790C250030C74C57D52E4859E1E13AC0E7AA280CE7A3
98A633D8B98823C431402F4AFCCAD443CD60CE8C6EC562D8D12A94C6B15B7BDF
DCE101C80AAD0B3EEBE5634315B777153711D1B68E3E297989D7097717D07A13
9EE76D616C62D153B450C29B60419B443D50BB15FEBDC8CF5874DCA60A98DECB
82054781B4B3412F840AB22294CB9E735AA8B8B389F07781CD17E1B1862C6220
09C31770A956F1E1A857CC33995AF26116EB694015E87DCB300DEFC3A1422A58
E668ED5071CFC5CD8BFF8C851CCB36D2E15CBE397FCE29941052017B096BDE18
A80D732FA6F1C03FE9E51E1B36D92CFAF283AED79E4D70EBC6707C93FD5D936F
F654557DA4B62A491D5ED07EFFAF392B53BA0BCB0E709B78C566F10AD5AB91E5
90C606476164980098F40FA3CEAE62B847499D99879B434C4C39ABDFF598D8D8
3ED2991AD2C5556D4AECD10A9529D724E3E80FF76A24522F116E889ED1D243F6
416B5B2E3DBCB45A73F62F5C815D0BABA65FE065FD988E33B7D90D3BC479DBC4
84BEF298ADFC714E59EF716988216537D82BB9F6E394003C96C3C084F337D6CC
E775D21209A43EAD269430328F9A6D41A77F92E2F0B7C3D09E55BD9605795E6E
CFE5E03B2631F8E518506118D8394D3C4E92A9670A15AA2CF2FD9BC138B31347
11BCD6E6239F210C68A8AB4FA98B37E8D41E976B2E684775529B87C77A5C154B
3A5441598D7491448FD5703A3AD3706E54611998B4C6C9BFE19DE14E4AD592DA
5A0E419838B90E10A35918FA239B603CA9EAFFEE039CDB8594625C3A3A272582
96D054112AB99ACD7222FB6EB840D55CA5374CC67000F63CA5B8915100E4F50E
5CC70FAD3A21917D15D5DC08561AF5CED0161465122E9BD66526CBA4E6D7B9F7
B6EF8C41FE60543A50546B12D636ACF255A33F46560972CCA137ECC98C6AC5B4
B8BFCDF9657C416A2FBC84FDECDC8347DFBEAF50DF131A3B75D06AEEE7769647
67BD14D515E9EE4923397E773C2829755E67D33A99E8EC34DE6DC1E471AFD57F
D3D8B1FDB6F185D375CB62FEED5F083DB926C13E07D81DD142AF6614CA260DFE
CA93149CBC45D1B8CEDEB52746E2CAFFE9D75627B7F43287AEC95E407DC63640
E04FEC25758EA2CE8161B500C70936E66FFEF3277C1DAAD4391377C8B8BBF23C
9C66B6D0402E35CC2616175679FD9054DF1C605092F60F1C355862AA220070D4
E6265834EFB6BF8CB47EFE732DF835EAA366A11F6C7564C80EB1E4FA6C618D3A
CCCFD597F07A42D5CFE8D9CB806426BB51E5866A2A0732540FD16531D3740943
14F740C3229F12ED30A73CE249DCFEBD3E272043EFD8483B9260DA4B0D5A67C9
16D20884FC482A40E41A652B36F704E817D680535B7ABD4A8A56A61D9FA470C8
A00FD8726F7EFABBDF7561C355BCD58F9251A2C4CB43DA2F3BD3868D6373B736
D0F693433037931943FED17A1E3AB5F5AB0BA5242BA080EA18870B45D94C6116
5CAD7A2ED0D243F6416B5B2E3DBCB45A73F62F5C8598088966254AA1DC42970A
9D56E5EDB90BC7CEF0C78E76B3973570DE3CA6DD714173FE0D72DC6F4ED70B0D
D23E1C4CA1744E1E576A31B06D51B447E7F215BF69090B7249702D48BCC68DFF
3DBADD0648832847710E4152F45A2800E87A58D2469CA423FDF67CC464BF089C
9D6EF808095EFC2423976D67989506137E1CC4FA7B4DE933EAF370C36CEE1DA0
43D4E223245F29828D7DC95816157223FC05E6FE63BC3735269ED51FF32EDCB8
D29EF6F7A06DD18AFD787113209C4BF58CDB612944D6885CCA65B9ABD3AA4635
F8E67CC1DE2DF791386BD30D3B0B72D0979B5989C5F1411BF492640EEB1DFBE8
CEA9F00867CA015D3978A928134E9EDD96EBFA8719F2742C7374D3EAF8B61656
CDB76C91D5511F7AED59B4E5C38C1FF2E594DD8E0D4F3161C99C251F4C61166C
1564EF88E75B7B712019107AD66E380937B6A1D0581D6C9DB81BA091FFE51B85
9F9B200CEB625A28032AF084B3E5824DD9EF586021779CA07034E30B8D92B036
EFB742986F45611BB4FE63FEA47B4A17797FBA3603C810F9149096861499FDAD
F3C21F161FAA1E28EC28D50B673380A124D2D0BCE0834B7703A1ECE6EAED6A4C
FA9EF3601598018B676F0E037CFB5DA4C7A14CF7BC731E996F431C318824FA57
621FDCF79C65D5CB5ACD20C3C1B5385F218157394867ED03CC33E37EEFCCCAEB
5B73DD71D0DE7A9B79B2D8D9734FBBCAF55F973EC6AFF7C5D7BD0C1E1B7EA9C0
8745A8F9F5D949E53D12F791E1D26F058A60459050045F960F38798D89CF7548
79B9A9902B39DB155E3F2F04EFA42029A4E4D84599E28A4B3581550989141933
7E8B9FF55B57B0B82A18125BCDDBD51D346744A7600834D028B42130624BA585
1D6C6E6B1D1D19023ED9EEE454972E28D194901AF5567E73AF9A428AF98DF36C
E870E720C4A832917BEBDD22DED6F1C69091A16E9A008F0072844B09EA0270E8
7ABB4FAEB441E71A0814115BCF50272AC67ABCADAD9C3D90AD06D6C20F0116B4
03BDE41B5AB9FFB728BDBF7A6392ACFE0BBD623C99C74E1A0AB48C931284956F
B6196309BFB69534D6E2F905B1C4A50AC955F9BEDD03B0729C26A66378336AEA
0AD2235663C579914D39D71C52D7529D95BAE40430C7A17A9C5C5673B883358C
5AC95B1DE4B1918542A9F09EC5245218BB8F0E8FF856B92D73037407F9CCCF28
3202D48F090112FDD1FE242F4AF64EC935EA3ED9D129B072FFC59A00A52A8B48
F33819BFF53878DB1ED61D3383ABBF86B72A870AC11155D4E048ADB453916692
A8644BA39E842E52A7363BEBE9D39B3343F5FD681D5D45231C3CDA0EE906C5A3
41D76525EF6E16D8C2D193328DCF37A9396A0881303EB1F3F9BA1A34E3D8DB53
28DC7AAB49611D79B399C1CBF0D296E34D669BF548EC241A2CE29807DFF43DB6
0992295429C8A8DDDD4FD7E5C546944661F590AEF14FA9D6617B75F5E1F7C83E
4103197BE497653A46A7B8620B86933AFA249B63D3936ACD1F7E80ED37B8A4EF
F247E85DB144650433CDCF08803B05EFF9EA8C3E161F5285F9B4E47DECF58468
B52132598833C003943BF3F246E5094C1811A6C7817D55874870992DD4C818EB
9E880F9F24465DD39A710BE21EE92FA7DDB9B62AB82066502C527BA239BB8149
6BCCD9BF2FA1201C1E9D065BAD269F7FBB615059B4C5496BA5C760B3FDEE138C
0213688E62A3B8EB9B160C705F5EA9E752B6321F7F47A3BDD017718DAB72E8DA
89DBCA388B710BB6D4429017BDB5C62ECBA7B89C85B9B0B6A3DF4F9135493D44
81463ACDE9E5F075F95BE80CB3CC20F5F78B7473EBC160B0436E94D66B72216A
8BF29D1CD29AD839A9F79000484B554530D8E321AA77AD96270F0C272E798B26
B2E3B0A1B07A751BDFBFD50CF57639738E39FA02CC0BEF92F067F255C44752A0
583C81778D8C706D313E3239CADEC5CF8019419AD0275CA05E1EC09B97FD9806
4FA24DC4C15F6CAF9BEB82145A0224A50D7D925E6A7C55EF9B64A6C440824CEE
4AC9BD665C3F2A37DCEA831AFF26DC914790750A9D4816690A99E3BD51C7991B
300213F5C71EAE5C2F4FFD2BAA53E271A305ACFE85E280D0BB87589E8D30FE07
B150D25BFB1EB1BFFDE346285FA3BEA661D6922E038503B10882181D88EE9221
101F17185E95A7C5FAF7D17FD37779E82F47ECCAE0749E97B2BF238214A2A47D
FF9A7F01AF160394A4657E6D199B96D29EA08280BE1355EB2292B7548A00AD32
EA9D78890B7DB63B131A1F7FDB362CC21ADA55129652B3A5A21173244DA72525
C564A0A7AE4E27E8ECAF1BDF49C7F8A7A954C8B70615EE92276E5655214FF67C
9F903C40E2F4DF50A292E989037E08EE4FB8034C42FFACE6F501B9158CBABDB6
4601E27F0EC7E1709AC7299196A7A874B7AFC43DBAA86C6977AB0F3BAF8BFF26
4A3C9745C86C5691903C9E414CB171BD224EA8B21D1B1038EC8D7CED4718ECA4
59FA2AEDE6B8343B47D56E7EFF9BC0A75E0E4DD995D53B955AAEA9EF3A1AA6F1
D083A36F2D86CF36E5F0ACE83B90FE156D55A3E56C4B5AB6B0FEEA9E52A9A309
FA57C5B704D37E19D4FF6F67307D401620C503DEA5D79632DA3D9BE026619613
647E89F9BED2A2B2D15375E630C73AC808418FCDEB08CCE088FC754C0A2A1458
C0FF846CAEBA5FBEE789B1578367F5665716286D0A16C7C707660D60FE42A0BE
1890F46B6ADAB12641F2AA81DF1E7E179AC00FAEE97A20A63399B28E406FD90D
F2E464EB8F990380A012BC1C5B90FA361E74DC727DFF61B20D59A681931AADA4
A4CE182850FD54ED78EBCFF39185898AE491E6E1961BA80871AB1502D80DA733
95BCA83183008B5AB071DB3EBE468D5DBECA20C35D8C3D1CE6E448845F2100BE
F91E71CEBF91E51E80C5043954EFECFE10485A5F88DC1C017050B1F2217FCE70
98B5402576CBDF6DA71F46F7F481FB831276C3DE25FD7C6ABF300103566E94AB
7A7128742591731C805485AD285667707177C3FF626663380089C45086584511
10F672C0DA902F04027970FA3C232104E707F4E1B4A2722C93AB0EB509D50575
368DBCBE50BD8B4B212F3D633FB90158ABE8314A3BC2B94C48170E0D91C3A80D
D15D6BFEA0C061FAA09BB6C117FAD1A4273F1393B031459AEB6E4343BD326DEF
7D838F4CDC18EE37BDBCAB8F4B5441CC0CFB83A4B41D3E515C7C139C18F68B76
84FC01A99BFF8EBE13218C2222783DC7BD168459AF6E719FE85DAC8542C53275
0A972AB4460F8A08F37EE3C1E8020AC7214607A445DE6ED4A1845E4BEA607B52
C7980791CF2426A43916730A33E3F20BE70B1608FFD5E07ACA2287C6F50BE00D
29E9CC2EEC2487B221BB31732EB42D125CDC46DB778158B67FD0F46A0A16AE43
483CE99AA80CCDDEA5AC588EE38F37CFA97B8F0E6DAB8619663C9B526C0CDF02
B146CA120A491C31F98EF3E4655BD9B89C0AC1C6734DE8874AA71E488097CCF9
2BF837D27982DC3815D94C9A0DA68DBB01B43A032F0A9D572910AE98FA9E1A70
BB81865C38D840A16D980867837CF7FBACBB4AB5BC1644C2E44677E3D47C32A8
9F924A8E0C2F43E70DBAA1970AAFA046D99965F0548CA54B43B15AA81C73D39D
CBF8FF3EBC8352B3283C241524AFA38D290BD895D38FFFE12974CE3ACFEAFB61
59E44C0E28579DADEAA87D62D092EF7CDA08BE8FB158E654315E4CF6E7910F2B
EB9593424FB4A58E3C39471A25D61F2E8182855DEC14BBB3E65A77528708382B
1DA3670DC982C71F0EDA1C273C0FDEE72D852962B8B3342044FBBFDFC1BB9A84
A692B02896F9123D2C60F9DDAFB03A02B8EACA8549F369683C239700CBE964C0
45217557ACFC7232F52F939E91730993F88555F9928901D24CA03B7E474179A9
DBB3E47091E3907BD068F41569DAEB241B46C9202D46EED5E045302B71EABAC5
FB360CF74930F123E273FBEBDD92D941DD666FDF7FAB67419E2012362C5E81BF
78DA7A796EA634A6A383EBC37BF9AF7B51FD03EDA4A12F463715757CA9998327
2EAB35BE23A71127B3A7A94BE6DBD964ACE56F31BE53E59FC6B16C116E2615DF
5D45EA4698F54A9DB56CD6616E674037274D150D2E80B53DC0AFA28265109ECE
AE081F286512B4C60E619CE153D1034F2737B2A4E142758EF9A7AA0E9DBF73D9
07E4E856D60F007C12820D87B277625F80F238463D0D6AAAB067235D42009ECC
F218A96C1A6F7F53DBAAFC7094822124E7A76734F256C0B0D1BD0F94149F951F
C0548BE676D7B7E646540DBDD8EE834A4030EC84B6A18E8C0906614179017907
EA03DE28AF00700A4657E975B281609ABA33AE7ACCDF54DCCE517C629F3B744B
51DA7EC3569B52F812390BC29E70AC3872FF04436E49185F6665F6ECAB752BCE
6FD4F9F9C57D8429BDB557669ECC707AF9C9E0F86DDABDE7AF00CF17B771E436
8B717A6973F0178C22EF20216A1C2B070D067F8F5DF8B0BE7708D77CD09632C6
DEDBA62DE9A66C37519CC64F8BFE14BB3328E14E69A92200FC77D5D61D1FF7D0
163B774DECCE286F7D1248B5AAE1498BD007818A0CC23A8013455C2630735DF3
305E50D2B278B3D9BE5338B85A6A458FD46CB0DD2A1936A55ADFF8F3154CD041
E65721F384CA12B6D41E8CE89D36555314E0044D29F1946C997C95508948D95C
CED77E01C5B93388AD5C63D7B2E52D76D01046FDE77496A505DB0F3A64DDE652
4B3AA9EAAAB404BC495072124859B4EBBEE068F88DE375BB7C010486F737141A
CA92A9C71F7DE360FDEB58A0EE72FA4885FC8B1861A287E101237FCD54C4FA9E
77228C39713FF1052D11E5A12FFBD12A674BCC38AA82BB2FF33776EC02C279DE
025AEE9FFAE55E0125344634B5D97685581655F226FB9114753A07F10788F4CA
9E5901A682DDFDD93086129F3D1DB228021ACD2D067C2EAB987050A5EE9A9373
EF934E4C61DED60F0FB0507261850147BF23886790D08D95467A2292D0A453D6
D316246ABA2CFFC6423C5CF3542C01DF092588AF26BB034F561453FC99AD6E5F
713D51F6400DD9432B0CE54B0FF3413278F5C38E8FFC7C30375D52CC20860751
9E0500F49348E2F2DF40CA8DF9B076E6995B9BE60D222FBC973F199099F4E035
A4410BACC3B0EC3450E766C66210E28F8BAAAA3886BDF52FF56B69D74B51FC8D
F26DA8F9EAAFD6F5F177333586ADB01FDF0F5CC4E586995ACC965ABE961C05F5
27AB6AA16C67C389CDD4B8D323578F80BA1F68DBB064484F46EA08E333B192B1
CC0D45C7A4FE5839B468A2DBAB7353F015D116805B15434A07B705068C10F6B3
EB2E18DC2AD786387E7B797A1426DFC955ABB82AD4BE1DA480022127397E433A
4C8ECE88DD3B0AA89C773D9956E36997816BD23C6B1C8412B792C764D891024A
199DC1E48AF800C7E68D0E392E934C111CB134FD9FDCCEF6CC0891832F110CE3
D7191C35E074ED01B57A3C1421C8FDC83DCD90ED5D327C41B2FD3FAEE262841A
29E2E29EE290552AA7077B923C95BDA6D1B00525C4C211DEB6EEF8DE3332A077
A0D90C2BAEB3FBD29EC7202A39CA471869E1DD2DE316CBE557D495EF6546D73C
6C09E5958B138D610DB8FBFBC53E4F1C8B4DCEC89201D1E7466ECF978AD19DE3
03FA054CDEF07FC481AEF6A64C4BD58E1BB4EDFED2EABBEEA7A307422C62D793
57145A94DFAB4DD96C6E47283C0F8F5C8682E6F6979E9A8F8F1ABAD2F23D5B69
B0A66FC85CB73AC790DD591EA199500BC165A2D47FFD6FC7E119D9DDB7551BF5
52AA5753610BE29C88E130931784476D427D0285BE864FC5E129DF2D29AD04EA
37D58169516944874FCD70C676AEA7118544132E616978AC7235A755AADC6805
BDFFE6A720A6C1DF0295127FEBC1271665147978D5B978521B7F041643FEBDCE
1FC3BA5B211598701663F2E1801A6064701B0724DE0250A6A575DED3AA897A81
533D36C8FE99DACB8AA8B51C17B722845C95DB25F2743F58DBF061A82564B34A
21B181B38778C717AB7585066C9F0D45DDA3FAFF05DB995E0F41C7F4AB57A2C7
B770F117B32DDD6E40D7CC99417824D1B8DEE49E3C424A73C5C14E8DFB3DA2C2
8DB5B2B6F639E0041658D6F10028FEE389F67800223F7564604B58205BC5D9E1
1008D2F6E52E3999E30B9D31691601640B2EBE0C78D37368584CE754784BDA4E
2AF4274ABF675AF3384E1106F08455B17455540C6BF72243829C78E394804269
4CB295545AFFECD4D3D51C6D9B0F7401781BC73DF39B387DC1F1061DEA8FC5ED
9970FDFD9DB78A77C2CF44B444684687383C7A0E0D9FF95178428D8BF363ED47
1DEFAD399A5250E9CBE382318BE7D579033EB487F1927D917E711C0B91EBA1EE
28B20C189C2CC00593B71C7609576E3B08D42732BDBEE5CBF9404CE030B6C5FE
E40453DCB32838687A797EF52B64EBC5CC78DAB2087D825F0912A812C6796ECC
CDFCE49E094BBF6737320E088854940802495E744AA13016F04167178F7E1787
213C2B18158877613FC288F5D1D5CCB6067C22E11C74B53830122CD5B54DAEA1
07B241F6FFF562606473C531EEA6654C3FC5A880AD394A5642F350BED81AFD94
9AF995D316A06665C6D8E1246C01542665686E5D4D4266A1A381FA4ED07C46D4
73B53194287FFB7D6284E05ACB7F9692E083DFB29AAF13CFF04C88504219A0DB
DDC84E4B9CA2259798F94CBBFCF0B806B19C2D01BB6088803F3A660C7FF72CD2
6FAE0E22B2A95698424D8EA4B25A2EB182A83908FF207310BC1F75B405413942
84F23A10BDDFBB6AA6E4E460E5E57D01D13DC0DE2D6BD5615A8582A1B0A961BF
AE0BBBE171A513C4411C48E9E335E97ED139D77E2F659D77F336151AA36F5C94
CEC2BBDAC5F389E1C16A594F6F49DAC97D78657A55E4FA5760F3C8603D1F182E
D78A48189EE3C4ADCC76436C6D3016E833B8898EFE56AB19C5335AB63534D2D2
916463E07F36E645AF347683E76534345428AED81F20318571A088F0F3EC2794
776F7DE5CFB87845150B20474C5233F6748FA4A5CCFB8EFD37E0299CD5273DCF
20D0CD1D7762ACDDFCD54FBFFBE926F8D4DA76D4A954CA3DEA6346D9DD74E0B9
8D409644E727CDB04B3F2146F4AF06F990DE2B23434FE007701044DE25A79D8A
218742EF4539715A21492F9042FB743B4E7F52633E893182859429606A4B3CA1
42C86D3EA487406E2F00D9DC160556199E382DE31537B1E297BAFB750317E0DB
23C73FEB3F62FEBC5B316B372AE1F38C83215CB134866F76B508E9ED54E20AEB
452C259D83FEE30A6A7D5A52B19BB058525DD2761506A6E8C380464C2222B83A
B694F6166BCF64A0A1C152005C5F43031D9B4E43D65B159FCE93B5CB1977F878
AB1447F415CFD48E3C0ECC346CE273EB52760335F41ADA195E428CE7F879EB3B
1E35692D1C70DC196AD516A254E3AF9E77CC59641D0BC4BD779C0A3FADC4182C
7F299A3AA072CC54F47F7D8153B908FD029D7AC524C735940383BE9A98179B9F
69680080526E4B464C5B79DD56C5D1598CAD44739E8B31CC71F1F39A262CF948
5882D3E8ED5813E8EBD0E86ADDF3EB33F50C8C1948A6F348DFE74D130406AFBA
F87DC59785D373759C45AE6BB9628F3E803AF74DE7999463DAA0701BE03F7949
E04D53A2BF39333D1C1BE7DC143B6EF23A7BE6016440E869FB2BCE6D70C7297F
41144A57ADFE2DE747CB349B065506CB9C6711D5DCCEA691F79D264B11C56246
21739AF0722C9870315552DB3F34A9B6C37710A6801957597D1ECC46C205F602
439867F4BD3EE00086C7BD94F4739E4D4BB3D35336C9367E026CDACE80C85E43
A2BB8F44520797A03D037A84B9ECE524BC5149B55CE113CA7A3D987A4DA4C375
97B78E5BC2A20003FA397A55133653BFF7CAABBC5F60FF73603B9E2B1939A47B
1F7EA7EB4BADE89E3906B48904996E405AE5D19B271A0EF809CDB576C789A70B
E7964FC494831827A3E25CCADA1A95738879090DC38FDFAC232C1DD91C7E528C
A1BE464D2D49CBE42620A51AF9F6B664A2B9BA1E87D5D62B0F058B4C5338F243
829348C0B6D2FDF3CD7ADBC5A65C4466B971E253C43A1B4DED2E1133AAF4B301
4350502DA1F90692D2C8FEC194028F08C10D6935ED7C9C23F48F885072FA0DF4
66261C8B86FCAE179C70CFB0D4936F9C3C418EE45A70595E6F012E4AC09C1F89
081208003C8F318B77873F1D86C3E7AA527A8ABA4B5CB2BEEE03ED3A90932D86
19EC41131A1FB01DCA811101F846F29408355D96EBD3DAE7DA6EFB6B86027998
63020EDB7EF592EBA384E08E0684F2DC34018A5939883F584508107AFA2D6613
3D350539A2511FCDB50F99A9137CA201BD6C346C3F1002E4E66DA50BBB59E1B5
8A8521272D68371425AA8EC07298D13D449E1D67D7806DA42CBA4B785F5140DD
C178D2C58DF8EFADCA880908DF3A47813CD79A6D444608D9545B8A4F2E825A4A
AC347BD81B69E1676CD43710BA27520E1C96CC668307186C349046D8B79C1E49
8F28CB5A06850D936B5C2C8651B8B0BC4407F2909D792C715E6F172B753DDCBF
29BBB47AAF6D88E642255D4AFC0C9E95DAEFCA698703D97D0EA6CA4B7132B1C8
BA1C83CB0B3F357641A7F6B3F328A09955DDA04919A2DC3F09251C5CD5B0C320
AE55748C7EC06C7B4D4566480CDCF8CA7D9283FC34CAB82A1C6105B6EB891C51
C4CA8887B6B3F4D52B9FFF21FA9E31626E2E5C1F9FBEFAE017F9510A2EC753A1
7FF4382684008A56F917F19C1946CDBC23EFB5FAD004F95F88E6F12EA8A5F3B8
DDA98F4456B3CA9BFDAAF09C34F41DEDE052E4BC012F6BBF0211393368D9DEB7
7E4152027DB6179B551717E66C78C07518902F576B4988D92F2A6960664E4C3B
74CD5984EB349DDA6E3EF92323D68BD6BEEE6205469D51B0EAC12A101EF6FFFB
5C0107FDFAD15D914FD1811E2A1A97F9D15A6546275004410A2BE4C4E5F6DB68
84E8026915A861D236854423ACBBE37DDCE6D9ABE81D6A23B358548B404D165C
1154ABD4B0951B5FDEAB3FDA50936FD8EFD48BE69C64993E152813BEA54AC661
A4FCAC2332B7042DE88730AD909FE0749758ADF5E8DF77097DB43339D90CC131
B667C6FA7967D8808E72E017A37BBF0834554C536A50FD5181849B85C2E930BC
16C7F3FB72212D22361DC3BB5F0BEF257C96464CD9ABC9DAEBEBDC55E1338AE7
E5B3ED54C1CF0F5794E1C576F06B840A1F3B70871C23862AA4B2EB70496CCD56
79CA73B97AD6DF42B4E06E3EEAF0F938F405D565D7DAE2B23FAEE385508B9F19
4C8D62A6B8B156000E697A8EB9A3B2C042263A5A16F80277981456B07E25D65D
DD0DD4567A3941B94807AE4D7C0409FB0A0A37D580911C14677AFC3BF0897145
D9C5D5F993465F535ADC0A0DAB01DDE92F52FA8BA4F92BB89616D29DF1B55461
295E21FF6E34B932D61B9006C72B57B100AA39781623FD2B3E601A26EB6A9CF7
D1665BC1D09F6340286E8ED908863ACB8A462BC40A85A5CCF5194D0426B52097
FB8C69D7D265DBFDE0BEBA99AFCAF9D96D332273A35A01E711CC13CC48905AE0
B33DCC408044EF6B7B5ED25B4CD1A9C978B87B1201DE85E0805AE93D26D01EB5
D9745DEB20537345D5DFA2A5366831447E41CC047B1F1C01202124FB8A565251
DCE902EDCC51215DFBE0FDDAE2568C92322D6B60EF73D419A5495AD67C32366C
04495C138FD64FB75F0F8A1F3DFA9AB7951E70F957552628E66746FFBA6585BE
C3D98C6C1A95CB8A9B4CFB5CA7141158E81D30DD539DD257D7D7D9C614799804
286D9C1B93D1DBFAE25FD6577989E9715FC4D016CD1F9B8D3B73A4DAD2EC1C84
D7F1970EBFF0DE46E983F691DFCCC5B8612580E88FAE18B0E90FC6A5281AA8AC
9DAA5C0998DF888389A1C73AF52EE3796A594F6249E465B9248CF96232D12EF1
4996E76A8487A8F5C62FFC31AB14BA3915D7DFEF595DD1BDE8C0FDECC5CC4D74
ABF81C1376184FFD4EB87C4A016CB59BD530DB46545D98C3DC882FBE8D00384E
E856992E4AD7882F5F68BCAE045CD5F13CDC30DF642F9F8AD8A9101DF869A1B5
CA46A13A4C091FB61B7B4B5D92A365C3856FA2CAEF5A326DF7E05EBF7862B473
6B16CC14162A57B7314CAAA6ECBAE303703910FAEFBCF364232B363C6B214299
5550ACE8A0663757113A60A0A3A98D83920FCC066EE96F1A66230B5C7860D648
A10E208867DA54DE78FBF1459D78DA105FA4525D41D81EE7E8CFDD7E3F9B609F
03A0953215F1AC94C46BC4D280C7E3ADA255FB61654B3E32E79C02F38B898273
AFACC819A539F2CC60F229C019C78870187903E1F236F8B87CE835F4CB815260
C4828B45EB41AEC5AF79F967F77DAACEDA8813EAB03007B8C7811415D875E5B2
ED7F26043652C143DCEFC5B2EE245F309B320C2C8B63621CD10F27D916976AA1
16E801DDDDCF0A70D23DC4B4459D14988BC50C71793B9B061663169BD554BDF7
EDA25623DD7A4D17FFA82BD272E12FEBC0AEF05FD48CF7C89839BF124B3F439D
EEC2EF5E4E56A9A08CDBD337E5F42229EAA10319F4E302FC5E40288442FC59C6
114F505027FD6C387D9DC8BB17F553FF601A3F8544B2E6BA2A9E2E516FD969A1
7ECFC7AF00C74E715BCA15AA3C3E274B3021D24392D3A3F266FFC28D0B7E89A0
BA3D6522E4EBA8CE5737611D3C88D9670FF49A3A694289A9F84EC14864A27BF0
CF3612B1B3EE90A8459468A1386342F1686021EF147A940A0ED135C0AEEE01B8
7F00BA84FA3F0B052A99A9D7A1D1C1D505ED14AB431A9A1F34AAA0EDF322B0C5
4F8257AC8DF14437BE2F1B5BB107EACF24076554CCB4C59B4D2EDEF42C4C0104
EE5EB1B8C77D59DA4D317EBF8EB6055871B1D5E109EC398B17F973321AF6CB9E
B9C777D77E365B3835FBB4B3783198C719D9DDDC388A872C430F33E5F9E6B7AA
4E32CDDAC72F1971DF79F3F61C6DDBFC04BBBBB0345941700C0D609BB02A6502
380B780B188AF127222ED71E801EE84253460E2046154AD21D7B82D5D9FDBC27
25806A24F5ABD47D7DE2D3E9849BCF95DE5A13A029DE0FDCC67AD03C3D170517
9F8287B3D0FE080F4B02EEB88EC745C3F670CF27EA84124446E1A3BD87D121E3
6362AE7492AE26575F22D3AD5054AF27FAFB68E7EF864A6F6726B40280AE718C
A985D9370EF82445EE2D2FD62BE5365953A6897496BBF5C3D63503E31795F694
B88C4FDF27115D14C9E58CD935C655D3243B72E7494AAF96C3C6D4F95FE78446
05A45F90C11E9C28EA8A535527B179083E07951E0DEBB415DAE91EF626DF6269
F920A8972A42875EBD4C8A1D1B808C463E0404EE4754C5A0C23494E4926D717A
98954FA16A4F63CE853340979902FBCE10A101B4B2535FD13754495B38133BB4
1C04C66C177901DF3008CA6FCC1238B696380C8EF29C6A659AD62FB2839AE3B9
A05A108A285855680E0957A1ECE8804A7D76767ED293EE766FC3F52C4C087330
AEECADF6176B58040B661EF1F2BE372D3CD0F19DE5F74BEBEFC2043EA1BD740A
751704CAF849E22DDFBFAB309C149A335DFCDE0754A8E41E6073CDA083EF4EFC
D840E44AC433269C08B5957C530E02448A2B7A4FA09566C5732F388D242883F2
86FA0D45131201A32F9A19325ECCB407A954F934DE7CADEC4F441FA60C00CDD3
529CC62879FBBECF8CA15A7B7E65AAFEC1B75E96EB1E3F068976B2C42ADACF7F
2A166D7FB9C6B30D3359D7DD5F0F077B72CDE78FD8C31EC5B6FCE20A2EBA3820
B7BCE9BD1EB03BFE9144493B8455E787B031473729DBD5096DB6711B6840BB1B
57C9ECA5D24C5E298140EF504E177667BF00BE56DBB34CB0D856D51809DFA835
EBAAA975E5BEE851827970D6DEB1DD0622CCE15F0EEB1F5A4252342B2E63A290
13BE92973016CB5AD8616295EA66B9956FA5099673FFD56D800AB7859771D899
6121888CD779C36554181B1436565D587C749AEACC73354FC4B9D2C0DA46B1BF
49A35506F993F922C114D42ABA91AFB3BB2437CC99EC1A960D66FAE493981AF2
CB43F0945528E828C45D6BF7B1D444DE7E57F83246BE46DC732EE8497B354917
AE5616E848CEC48E718C6993E6C73FB51C3DB99B98F38983306D6CDA3B86A58C
4A488388766A38284C9FA9ACAB53CEA2F1C661D5EC1D703B51435B29775CAF47
F0808E7A98A7B22E354DDCFDDF280FC27545F27E107DFF38FD588246A5DE853E
DF3772BF0856D61B1399DD7C760F538230CC7458169922E30D09D7181FCEEB95
26C36A0E2AED9DA0526E2EA3568314FCAD298A6601A7361369469CA410BD1CC2
60028416827F0A15DC9FDAAB2DFC3A3C0CBCF86818B8BFFDADDC3F080EE3A9CB
9518E7E08EEC53D919E34A1BB5A3A77F67A58969B78652AF4A17924BAFF2FE6D
32356F8E5DDFA4701517206C5BA8C9F74C91B307BB036E096C9B7400D0AF3FB3
7C3AC38A86DDD6F516E6531C7B7D81B5446E1D70A1CD09E76402C34215670BE2
7CFA472CA2ED6F6A5BEA39BBCC24395B5DA9744DD733DB88FB5471DA5ACF2301
DECC6E2B96805FD382CD75B4AF84999BCAF0D3EA13BF07B0205E70B2F69816E6
54089CC388440721A8994BF394AF354778900E1AF6C0B178DEDFCBEAE2F50311
514EDE362154F837677B90433CDDA7367BECFCDE660D1713362EF4713D8975BA
79557D82075C09D463AEDFCCD7C2980E74D4CF037EC01BB93614D672FBFEF6B3
EB7D76B19825C477A4A5A04948A69019CBD7BBC3F725C86997448A17EE88C03D
BE617B2153885FED3F6C4F6256822504BF1E7EEE797C8EA809E12A90CE2280DD
63F16BA438FF80B1D5A69C7D221BD55054687C5E16F6AF02517A06239DDFD685
54F515DB738249326EA5C6E75A48BB0C36AA2BCC0F0D8873B8FAF2988137805E
E73D0B880BDD813371A5682C11DB93BD0075B2F5373F212A331CB4A81CE8D164
3506242D001A2B456D5AD3C4D6304D21B8716D3094B78668F686F1F62EC76DC4
8362ACF24EAD1BA17A7FAFCA2B5DF8EF4F763D2D4D006490D06634B7B50EC81D
07EA7042C50F076CAE2C7D4225C197A2E59D96A19A7E8F13A2371E55EF14E31A
4E9D4D5903F218C2C1C3298E166CAEC0E50246C751F6766ED6617C3528C97FF1
F1CB6BE5205B4FCA8F3149187A7A10F333EF6B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSX1095
%!FontType1-1.0: SFSX1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsx1095, tcsx1095, lasx1095, lbsx1095, lcsx1095, rxsx1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFSX1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-229 -332 1765 914}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DAECCF15D23E042826C6F673D98031
850D97DEDF379B08825FA28CCD6C9575917E4EDB201337D0634732847E566818
77A9644F90E45F1ED0468DC768082D03B6CA17AF4ADE26A79F28186AA47214AA
0171FBDBEADFDD1B513C0D2B138A56995CB2405278FC10E64C960A36C87D66CA
1095BC092AD27CCB73B0903500BFDAA29F79DFBC30354B2718B259F659330ECF
B2B8E361679F36297A1032088DB0979F81900D2D420176A9CC86E91EF480EBB7
25603E93D578FC86158DDE3D029C43831540D2E90B2D4C8FF1D7E80E6D2F2828
721B3CCA9F3D814A25869BA964DAC95F931E1998B1BC182D7416B4CAF48F0E99
911DE06B5D4A7F320DE20C6536EEF043C36904DD2BC701A9DA8AA6B3CC902850
15409D48AE336F6493B0DB3B8D93918BBF0127F295AFC57AAD15C8F914547C74
548FCCFDD2C6A4B81A6383DBFF93357FD14847A5DD0537D6D6F8D79353A94A68
61B9D526F71880EDD4ED131C0411B5ABF778EBEF467FE7156B5508D30DAB9DD8
F433262A603DC09194EE0768B10CE3EDFB60D7B2189CE4C7E3C5C6A15E434D65
07152DAE9012463400CEF1F6D76C3FF0C86BF99399F7062FCF81F73CB8A7995F
49386C29C1A0AA2C5E92515FEE44783616A1B4B7AC8445A58A83F9F12F7F7FAC
82DCD3379DCC437133EE9AD0B024FD4FF7761B7018F579D8FF24228681B32820
2F34F67D8630349F377BB074A28C8C00B4FB24BA188F762E5F38901FDEB3C6B6
9D93C4647D5203199A09C8E463BA14FF361749598433B54A8FC5CB83FEDAD142
87110FC9DD7582AF50C4C961F9896B2790CDE2AE71468057EF87F8A551686094
84B33BC05A3C7384895DFB68701312C1C0200B0B592A3E3E4E6BA684A1E7B30B
6969055023AEB2CDF1BAB41672F7A921189D3DB146C66916A90E3E83D0E4E968
BDFCD907CBF17E8709D2A88F8996B3E83DB172885F1F428E37D4382E0B27C06D
FC2064694B73BFF53E83A123BB462064D0B78478BDE1715F68E925B3141F5D9F
5BC97840EBD7706D309568C41E6212F98300AC30E4FE9E41A3B0F30E9E697EFA
A5C2C0165C712FA50BAA39534FDD6D41CE9DB692D0495AB383DC8F047935BA4D
C3650F540287D85FD2F480A7C9E7ECC8B3B01B9B88C659BFDE27226931620828
B99F77305B3AAA57982DDCE7EF7DBEB1B3154358212CB5E6BF76D6CD641D8018
7FDF8C119934FFADEA741989A69743A0569753D2395A6CF74E54C6E67EEECC73
1D6E0F51A9C588C01D57B3248F38DFF9B354FC88C15FD48D140291DE144D0F80
F79771F5DDB909B8CFB47D6ADB79D5639E1A751300AB9F90C300665C90036DBD
D7F75B65B3AF6283F694E06AE15138930F2266A5E026E1AD154AE786097A5130
4E43F58B741F6458ED0F16AAD2FDCA92BC85A23037BD3216A43A0FDF1E58AB07
8CFC02DFA5BB3139004B7EBD88C9F5764ED65DDB5810F1083A8FF4152158F9EE
AC59113402DEDAEA48FAE44BF772BBAFC4DA837DEB39CC7C15F8BDF57AFFC362
1062398BB6CC8ED238CA6DC2814CAF2D87CC65893DD1B99CF110D8E09B6D34DD
377C4DF0B029523EB9FF8606F048C8209C0F7F22BC03056BB63E71D8475AD036
349946748969A7E02F8DD6B223A64B5350CBE310AFE739E046B437A45B1130BA
CD242DF2DD878FBE51F911D017A2680CCF85417AAB7F663FEE630DB0A4D9E457
3F7B6BE316D8AF143BD93111D717FB06D8336A7F8C638598DA8F2F8CEA8A3E2C
AE291CE6E75258D9AA9A634B5BDDEC0671B809D61FAED0A5206F6568173EAA16
F51E8DB68A9ABEACB2F60AE03C2C013806759B3EB47C4F6B73CC7E21368C6176
B962165CD0BC70D58EBDC2A98616D075DC0E39A85AB5C8CF24705BE0751EA0E0
DE142B654D67D4F5C55FF4147242C3AE685F7131B04C23ABCA88D3E224C83133
3374F482E8231DC896D355576B996A4E61F33BEBC1561BA8D526E8D6153D0430
40F640E9002F0ABD8E86DAACB86493DA4D5F3D2FD8F9C55E697BCC9D14602267
A7A30FF2B378941C0C4A0A0099D460223A82E9239921FE58CC0B13B522BD3599
F7BA5069BE19C244EAFBCB63B919A3880CEA07FBEBB74415E0E8AE43B43E6552
8F72C6F7864345C33A730A16F870B88F0EDCBF3EC0756C9F6C608B6E3EE491A3
FC6B1AF9D1F895DD198C51BE09B1109F3D1DB228021ACD2D067C2EAB987106A0
5121607EAC98B70F055702D827919D82352E0497AF024C1D02D39B438095A096
96CF3EA85BD19DB89CA91F15452AB566786428120B80078E0C04B5F4022465A2
AD13082A5C101CF8D876DC1E45FF4A70764C5E1D239F23449C2C03F196ADCC39
D4DAB460ECE2979F3EE368F0F87A712019107AD66E380937B6A1D0581D6E7230
2A4EBB29FEC54D709C50864C10553CB77727AB3BC6462C1B6EBA112970A4EFC6
707C93FD5D936FF654557DA4B628E80B5994227D954260D99EAFDDF799DDDC62
9A0FE81EC5E02ABC6F0AAE5F86D1552C54E0F2E5C5A13DEA2D839B35D996C650
88FF37423FE94B9CC321074BCF71906D3B1CA8E2A8BC13AD0FAD9BFD353CA105
8CA2951AF0D5CFB904B9A774CCD273396D62F72287796111C6784398A6B06E56
49CEB53C2A31F106FED25998FA6DE17BE6E9C231E240C7AD309B15B7AAB72F17
36D55A53F94F734BBCBE96D74CDBF86D4133E38E633D9B8326856BDD3C259FA4
A4A6EFE9B7D6928BE41941A3FCB9551AF51C3108AE9FF520CAA600831DAFD218
27B7DE2E0371680A2C71EEBF9EE42B5AF8C3B8B6DF7235D869924573D541D678
0D1678137BAED6B0EFCD800BDEBED56D143EB1257D27F54BEDB929BF96CDC8DA
6013AFF50691C424CBD36A8036A07C9DC5DF7A40EA5394485C9684714776BDDD
E9AE8187B3C39A72F38FEA852E0FA1A70318E63BF984F1AFB3A1F7C11FAE5B79
AC712B2DF0C17071143F517C6AA4FD5E904CCAD9D8D10353655C34F43940E126
C275620F222D6EB778060F3D33C083CB2E4949DC2D2D1ADE17E43F8CF89C9439
FD4E5AC8ED87FAB60376DE3338E806AD809738068E7878898C64529DCC34F1EE
903A1D45221638F93B29D9C8100C88F9574E62639364BC281699E31C3A9EA18E
4E4B49CBCD2CB7200C540287D85FD4430C85A7CFF5E2D1F86434479279EE1554
48DAF8388C596E32A813E336204E896DA189173C035D14BD25DD4279A61227AE
1BC097F8AF2BD37BAD55E6360F4B0EC4F20CA85653502D34056E4094630456A2
BDBC60EEC693C16B0041926C90C0BCAD56EE3EC07F3B3E52F6662552A3238603
6775E6D9FA948BE41E7CE3703322C7EB06C4AA289A3D22BA80F9288E319DE464
A4FCB1BA37E4A11BC3DE5341C4066A1EE76589BD8E8BD13DE2B96A0B40ADFAFF
4B1D59F0566E521A2C73C3915C13E4FB1EAFB3E197FD93F5B22CEEA0F1FAB295
ED769A0D4161DB567B3F3620555EACA2A90118E2789DD6F9E0D7B76001E331CF
AFD2441BA85588B0F934C832987A61FC0D688A520177A1156EA382CD8406BEC0
09B3DF73FEB03DFA072C05EFE42BBB16B64D871AF8BD4EE48E2A77E90A2A26C1
5B61C06C85AEFC2042285A4330E53A3D6AEF2574AE127B108C0E2EDCE1A33E7C
FFC2FCDAB714E705178FB4F310622E7EEBF1CC459CB3B674CD042527582EDC85
2427219B706394A9B516925D64940447E1436AB8D187E6ABA8C2B950AA012D8F
4F80B0119E68FD8E4045E891EB54748050669F4DE4F500795C3711F1532898CD
A3AD586242A955D68A53069A1B62755C7125E8C5102CDC644D4CCB2DC20BA4CC
58E599F5422BAD83C62B6A88BD1F3094BBD7AB4C8E56B08EFBA820D03FFBBF6A
B64C00FA915831646A79B08F3A9EEE2C0BCCD88C4E5FEF2C3DDB12746D24A061
080F503A1E8A8FAC4890E1D1405EE5CA475400235931CFA52CF0DF41AD6FAC80
0F990C17B128235D9002121E24060E5315F6168A9636ADAC8B11FFFDCE7F3FE6
F3845521A11423B94D30F49EED4C518F30D02BF421825E6B719AAB89A17B9927
8925FFF9B826732B22063109BA16438FB4068CA1EDC755E37BD04D5DFBB9E135
7DEAF2DA109CB859D969386AB60B8F8A0A1D024BAE5E767C544A96720C337D32
51FF8E1C767F12D8A7E2D048EC9B09BB3A2B1C548D84ED63036596FC6F1C647C
21D91B883142710DE7B71FA9805BEC3486154ECF786445584414BCA564B88096
9B162EF0502AC9A3A20481DB2B803626051D3397BDDE5CCEAA969C5561B67741
465E9FE9824A0761D8CDE9F3C80FF3CBC0CBCE60B1E0CBECC7898D6AC135BFA7
5A9C11F45B4106587613E9E462B8073894F455B621F9A899DA2CBC9326F40724
5E06C7BD05DE405A5877A75E03B395D012B8BC5C091AE291DA3D8A6F1D568F4D
510D62F881B2D378A6C877529E79E1991B94888726133B000AE96F431AF2BE36
60EC51E8D31E948F8845A1050102B840AD04DB181F5170D731FCC19348FBDF8D
AEB6555918C71679658577B8BD225A31534547486CE8E24E1526E57B34653672
28B7B90926272365178CE4FA068AD56E6422FFE96C71C8F979767770FC094074
36DB47C540119825D6D65D9F18F20DBA1DFD4432A7E28A5B1C4242B5B5E39324
15A6C244AE410069FB3F1F51421F2478EF7B5C5123FF234201F76EEF7592DEE5
2CBAE5F6BC82B15F45E5007901CFAA4364CA46662F3CA5FE78F713C6DF5182E1
4D08DBFC068373D746FBA5E62BA7632D0B88E14A8D4ED99EA46B7EB141787671
2C05C5ADE462C0729B2C1DB0D0F91735E8930680CCBC9B868CCEDC08344CDBA5
75788EB9B9FC130A3DECAE6FBEA950A9317EC5D7937B732C2660B76F80289DE6
5259BD4635854E9600C532014F3C26AB00BA7C9D83B2D5CBFECD614208C994BD
8D4CE6231FB6AA4DB98BAF2C71CC935486628A5CC9CCD1B74F8D5C7833CEAAAD
0D1FC5818F220B2C713BA3B611ABF11C2C27F891AD8F8A081BEE082E10265F4B
B7F28862B91276B4B5EEEAC4309245962F7D19765BAFD457E9174BCEA5CD5454
A6ABAC81CE8800858F208F653DBA3BA2DFCDFD7EF97D83ED64042D69D9077600
B03DE9ED8A1C872EB7C75415EE3EDB0C544D19861DF2D636B626D286F95D97C5
1628150EEA1DF992BAE74D42A0577B0FB390CAFF28E0E5CE3AB76562AA1F682B
4734A1E2370EF50FBAC9113E3CA2596B19E227108899590F6DC1BEA5D5FABFF3
2324812A3F3907489CE1D3D3B29272B4BD320F339D9456E298E9D5FF4F9086F2
39DDE63EAB225F2857D454F2C15082163FA6E7ABC4F09130EE36B0E49AD70803
4FA5D50D15A83A0B408603C98F857D334D5F9E8F791C86ABBA55A956924111C8
EFD84BBCF7857081D2B571F1196F1690FA0BF68078537F1E4CC91E86284AA68F
30FCD0EFF6D124AC5E19A044609A75AF9D643B0E5D33184B46C3BBE2D6F3E113
483BA9187A3F63BCEE11A4C56D6E16583FABE24AD8721A21AF05613B8E50F75C
C7893C8B8A70839681B34C5C5B3A15A50B543CA6D4EE2A3ABE7B8404DE866B32
0FEFB7B56996B6C1721101606C72FF2EC1A4E8BE81DD404B4CE4BF9C26692C2A
01EA6D07BC9BBA5DE29E08452591BD98D198ED988F593D50C98F5379F971BDB4
953216877CF541BCB68DF0F605C6288085A0C17E7A955C5840E4BEBF86699C06
D5F14F854CEB69CFE870326AD5EFBA50B4EB4B76725F90A185CAAA037AE2C7CA
DE72564CA00346DBAE3D9D97B7EF44DEE8FB39BD0D837C48C838B422461EBDDE
9B75174145EF4A96F676A0A508D8A72FF92DCE4D59DA9E625DA7395222C1E9B8
E791170F2579EECB56BA2FC0C0D6DE7B10C80E31E8C7819C16F9818B9EF5C503
3D4E87B75B82B7FFED8AD82A7DB295365B9B9D76EC432018559C0747DA6FBFF5
10B167E3D92EB0777AC47E3E02CFEC9EA4E5E056BBD3F184D0E3841E0C424C67
C91483B3DF8926D928EE5B0546A0474E2CC3A093168974C7019075F9814A2F4E
FF3B07B035520A5AB21167C1D4295BEC4C9FB02FCEBEBAD945C0B337A4996AF2
66BEEA34A1E73AA06343603BA3DEE5A4105D2A404AFDD6947B83EDBDBA6FBCEE
D6DF46E8728479CE94608E6B93C5508450D6039B6E8BA50560FD20035EA220B8
23DE9B037265CAA576E829981826D3C8457C9785FAF7C4ABCEE477BE97BB7D1F
ACF55514AF1C63E8BE31F1F410B1B4BCB655187185F53B8DE69CCB685091DD8B
D7AA81EE51EAF284D749B99BCE670CFE23D6C0DAF54BB5A2A6041618BBA77FFC
56DFEF8677848D0B49375AC07EAAC1F39A8CDAC298468D3B8C5EB1565F7DAB3E
BF015FA81AB406065569CEE7EC3BA7CCB39365CF4699269AA172E0551A37C55A
715742BE83214D505953B42ABE17A1925E2EA38006E7ED0CF970D06C2F2A98D2
3918AE172C8BF995D25DC2E1FD1ABF827FE884D9BECD91AB1E987B01E4BB65F7
27E8B0555B43B5F73E9DDAA1339003DC184BDE0016E3237A957ED798EC5ACC35
F912E4CD28FBAAF9E10F6E677106F8C3A0CE8C480CE2FBB73C1846FF96CA8BE9
1CF752A0938A2E0E014CC67DEE79BD03953AD61194630224162FA0771421FBBC
AB46DEB86BE084BDFAD3F11DFC964B4C24DA153B1F0A3E38EA3D62664F3537BF
6AFFCC9967F66FDAFD1CAAA4384D9BC80EFF6E66281CEEA956D6958D78BB1C8A
D739BCE832CF2BEA9D33ADDA96924138EE471C943F48B1DF7F70C5AABD62E7E8
21D9E0D61AD270D4076AB96AA4F2D44D1F8665F1538F2EB039C14A52EEC77953
0D117942A15FD76D40EB7728716F8B03B14A2104A47D261D8B0F912B271721AA
252D0151D7DE2478A2B1550886A296D8665BFD59DCE46351F57E6DA7668B130C
B286543AB123A3EB65D1FA0BBC70A4F4F3BC5A13E32ABEE37A07A6CA7CEFA6B9
633FD0003A930F6C782E3298C0CBB1EEA779C4F57EE344751BC098342260C5DC
0F99E25E47A2997A3C7A7CC3BE69C9AC28D8A3A69E30647BE908ADAD503BF9EA
733B577A0C20509B2CF760AB25808E9CA433B1EDC902A790A25F29FD71776072
37A69E15148E6E0996D41790907B1BD807C450CE6F948B09AD811011C695D956
88A154C0840D6B523C853B4482C3D8CB155A03A55E58735C637EA68A9FF99260
7FF78C6F639F50B11F30208E8EBF054C6A93E25B1C1622679D2F0E9C2882E634
E4F8806CFB07034CC5D3CEC8F42DFA829A4AACD811B9B1D1BC2B47072D521AA9
750750300AD1D6AAF09EFA9F7685E4B46679588B742DA5CF16D2350058593978
6119CDEBF4044B72B7102DE1498876561E619B3E63010A006507468BDE59944B
040786D1904B3476E0A2CAEA1D9C644E3FC06BC3F0605356DCCDFA9BEA0F6873
06A1060A8085937A76DE9A17C93C1493975ECB1F49C3BE7E8CF0C029F1F1BCAC
DAAFB55D94CE0159892DDB36641E7E452F1CE506264E9B3D8F25ACF07A282E73
FC996B5D111D5617857A345265C58B580D0CAA5947D28A2CE4D8499AB3449E70
02DF03B3835475F099D4A5B0F1D65A529DFFC640D25B5C822A214E1AE0F3AC3B
5396CEDA42622B8AC60B87453D50F5DC4A4776D464A72D3548C5EA91481E0103
E86A4492DC06444069FFF2FDE7ED81284008D49C6CB7ABDFE29A0BE2811D8813
FB4D5B78F756973049CC73DA9A1541CA01EBD900D61616AEB00803488CF2897E
1BFD085FD69CAC31A111D98F2099F0E770CA14E8DC8A1B569CD7BA510291D44E
807DE4AB841F919CC91209C8A81359D93CC99F640682181D88EE9221101F1718
5E95A7C1AD7FEAE66705575B5AF01496892EB69F79E0DDA22D83C01F92C03D30
B06363EB36E285FB74FD4D9F7F5ADA8EEC22C2ECBB7119143D2B0759988C243A
337AC3CF06A91C467B6A97657B839C14B0637786EF7AE3D016A3574150E9EF83
FA45C008DBEDD2808DB547F3D00396ABFC831632EE8A70D205D41A6AD416D064
19AFA9CB8CC98986C54B7C3D68623ED14F6FD2ACA6B8303BD3710A1EBA3E4A9F
00CD4FB0930F5F8F9C48091E72115EFA50685B8CC424792182264B38A4205290
05F74B679B9A419D9FA274E342451F096A95E6BDE9FA15474AC675E8EE1F8ACD
91E7831E76327DDB5324DDD10C20B0E29BFE97F4F5F9AAA3D39F5A1A72B430EF
00E0B8473D9E7B08B9C95AB10DF2350FE3E8BC912063952C11EAE454A9E25282
E12B021B099AD259AEA922E3571B133AB269223DAD37625BA4199ABB5C36BC96
7DF98C1B17BA3EC33021E92D813934CE4C8A6056BB18F8C47A20C67A784C9E82
0812FF747775D5CDEEE99F6BB77F57B4E1074C234E362A91FBF198E14D5054DF
5CA9F38CC225B86A0C5C427181F7C490FA1DF609553A2900B5F1EF5896E5E454
85A6915589105ACE1564C78049DBED79CDA191CC5AE0CEC1747AD16E7C39CA87
59A18038B3A93B3DC944C76ACD1DBA92E7C217D43F798EE0DD3FC02D26B27665
10983211332B1F4D8EE08D7484BC23105F8D5B26E165D8E117FB75434FD3280C
187579406CBE7506F733CE4D6E1D466FA1708CFD051EFCC25AAAF3F7A11D5553
F3C5C3B96DC4C90662593F644D4C60B3A2B62954760A0CDE293094158F2C092B
42A314497D1F9C98E60D222FBC973F199099F4E035A44544CDF45D8CB8761689
551078DAB918F95320E084DF8F20B17770A899ECF7DB3731D4D5955A9153BC78
4C4DF00F8A3AF8A9632DE25C6515B13D1C5903B6F5A0B75C53A9D650DB508A43
843C45AC8006EEA335B5BDE2ECBBB66A1E45713A3B0D3FE475B052D6CCA9A902
F3A048C8783AC01DEF4602E94549A765902BBE611105BFDAE3F0134626FACE3A
2E762AA44A62AC673985CE804E119E30EB552B14A66C77D020457E53FD64E457
B500056A7E9A8620825E5DEB9673894CA9D7E303BAAF4D897E7872E31F12A397
0976CEB7DDB1DC1D7C8437DE05AE2F8A2DE569626641AB9FCE5B1EEC7F73101A
B7E7084ABA99F0963D28992A8A6438AAAC7324595A421931AF60C8928B709B3A
AF96C35AA6157DFE189396C552AB80EF33C6102BF99A3DF0153E0810A97062F1
F013C21D9A52D0849BE7D6277094810DBD66621A423619D3D9BB9C503B62AEF5
5514AF1C63E8BE31F1F410B1B4BD6775BB8EA01F035C399EDED6AF7A70BF20EF
41101370ABD3E4AF6708A85CB82ED741DD07AF05EBCB40F8F88D563FD9373F9A
74AAC708E0E6C06B81A2C78A9EF6B97655A936716DD6600A44DCFF73C43176B2
C8D0BABF6B01A342F0D877A1BAAF50B8F483C8FC32687B807D752C9F0598CE0B
324996DD0BC43AB24497218073DA6929CD8D0028621903C62B1D6B7142F88FE2
0A5AB8A16663E926136AA5DC7B15AEC24BA433A8A814E536A56CA72FF7EF2047
EF643C99321A702FA71C28ACBA73DBCE9C8436FDF96A5ADDE486B008AEF45F07
5D926BE357AD910B4226229A959B1BDE92F252D5EC9E7A5E810DA329B422E105
FBF8F76E773B34CA0E705F28ABDC2009900B86C49073A1F6B1B9CA71D377A6F7
19155C4FE46BCDB26C2C46AA534274BC23E69A969631D9BFF4C24A2E9C2FB46E
9417455C5DF64006EBA3BD228B40DE4290FC54BB196128D4F48AE2F55FCEB8F5
2E62C19A0D6311293ECC185EAF59AAEDB211A75C51C91E18856D8A140AD2C237
793474703B7D922E255D1ACD225D6B6899D96F998A28E0F2EE4470B55C4666F5
F14E189DD101ABCA392CF8D13CAACB0703AA980F7B2F5F384A115D29180BC287
9FB06B25359EE841438DFBF6EFBD0A20A820B9A1F603DB446FF6544577C86574
BADAF9C4C58030FE6B21D02BF4ED91193B161D0A359E80D3B07ED07D61B1132A
F5A073CDB6B84368DFE42F76B00682C91C34E0973C9089850F491152FEFDEC69
E7D2DC33F796E10C46749D3E72C032EC9D43CEC38E71530974493AF6DEBC59D6
3066547774DBCE4FF97F9119649A69BDA41E5AF1D9EFA7AC8CAE9DC52FFACAE3
089D4C331D73F8BC5F26AD901614682E0D7430952F891F40ABC0B36EB40A342C
C1D2A28269B167535AC80C18F244ABE9F2A95589E905CA44000C65E1DD055310
794385AC2425DCEE78D5C9A2E3BD77C30C8C026D74272992D64D2B345E9788A8
6F9096A0F39C297A124902374C2A2BB3BF3568B8D27B5956598CAA1D138C51DF
AC44B6D836397D450CCB39E7F60FC2D853932EFCDFA5D6B2E57ACD2261D5BEB1
F3C77F936ACF5A2EE7EA03B75942A749DA34F041096799CD79D72A07B5644B1A
4A158A605616DFA934DD2C434F3B6F520344CB65987E98A44D4CEE4803CEDAC9
758ACA629AC90E4D3530060C9383278C8AED39A15DC99272E75D19F2562444FD
3E28DF33794829DF33C55CEE453C885BBF4688B3E790291C310E9E11EB91CD5C
B09CC87416D51F58B2B8FEB1DF7D06346EC0D1CB7D57A5765A068C5F247BD874
72592808C260D2DB3421F78DF2CCDDA1DA5931F895D2825E2DECD3A23016E5E1
564AB11EE10C59A2CA3BF852A657BBA19626F2B092305312689BAE73BF5280EF
F8207597FC1E53879715300697D90448609D698B4F4CA6CB7375B0E54B919210
EDE07A6EDF37EE388BB1C716BB3018EDEB43EB3105E59ED9BE07FD8BD31CE111
F11189E64FE3F8BE1DDE1A74BE709771EBB353B84C4F7FBD2E1DA05FB3C47045
5F4EB72AB4BCD07147D6F80649C53BE69D9E052BB70928EFE5A1C1BACFFCCD7F
24A5C17DEA160D817B6226568D05E9A0C187A29685FBD3021FFDAE61A10931C3
0A3AB7C8922183D3892A8CC337251B70DAD2F3E48C40974BA685F6B14095B00E
ADFCEB162D2590F68AC8D6E777689D316D3D301F59EEC61AD90F14C51209B926
4E3890A996A17206333DF9ACBC104C6C7F1BB4B34585C8934BA2834B873F37F3
CAF35BB17BEDE0EC8D559B99CBCF184A63D9339875FB3AA771E380B5B4E3CDC1
33F9C9DBE5E72D93F3EFDD0CFADE2BB7825FE7319D9A5401AB86892FC8E6E9E4
70638A3B539F062654F5B4CB48024879DDA3AE89023D7FE60AA03CDC3623A2FC
50ACE2F9B632EE49D2604795F8A504BF2B21D6C47D4E324040C8FEE0D332AE43
81ECAAAC91F4DBCD3A2F9A365C0236CA81A204105A13CB53808E0E444B427E32
CBE60B39A63B21F2E15C2A8EF428145A483D0731A0735099D7C4C1678904B3DC
2CD895B58E38DE5DB5E5267DD914D13A5E582C26FB1070B5ECFC751FDE1EE784
6E609078D4A9DE466EEFD18A8297385137C1C40EE694389CB59DBF68AEAED7E9
C22789953AC4001C74C825AFE8B52AD367011EC395F57F901E5363D8D95D9864
78A0E39727D6DCDC074EA41BB786A4EAFE0A2813A3542C543F368DECF456B604
22F086C8299AC2DD06C90E22479068B559297B14DEB7072CABC32FAC3397C8AF
A52FF73123D490169C6F426B64371271F7B5721D931A2AA9EDD644E1F3D065E8
BB20D4B9284F2CF4309F8DC5C0A6577A87A8EC463EA700CAFCE5A676DB280E00
41D12AAC18557C32D3ABE3E767F2F3D5B062FFBB2EFBD94270B66BFAAF715F47
EBE8CD44F7929E85C480C5E2D6D9762A876980EC5C13DB49A688165089896051
26856CE5DA6698BDCED3A6A94C8FB201C9E18668AFFE056AFC0AD36537FC8315
D18192EDCCA27AFB460B2E600522799DFB143B583F6BC2976298EC5B00E27093
AA1B41B4C10010D2959048216E35CBC02B7A4C4FF2844675CD6145902FC6496B
A5C760B3FDEE138C0213688E60C08333048A8562BABB70F4C2DEDA106ED58BB8
8A45BC5A84AC6E9A6C015C0D3828EB29E0B6BA8B4E43834CA20B7D2A247A4FB1
B39DBE18D2A144BAF1DB9127604FDBA76A4CE75AAB7698D9673F781D25D798B4
F33564140C9D9FEE92C1E8A17F5E0BA7EEE9B4214E2976D274C172B9524E18A4
4E236548BF21151D817BF9300212AD8711648FCDAE5B8A803B8BB13E56296A6B
068F1A1BD07C977506C61DF1ECDE0F25EC766FC8B36CCF2AAF4A03DA890E6CBF
9564F042CDE0FB79221DCFF97A6B18CD16362E6B302E060C8160E3F6D31438FD
A6201578598EECABABB7230BA71597EF3E3401817C8FB02B9C55E918E23EFB32
956A7D1CF59873C867F0962E39D1BEEB24625547D3E9E36E093BAA6332F7CE1D
26346B09FC6FB32C16DC0A74717A3038F694FB2648B8430692E76952236B772C
473D69B16ABD7E4D58086E9D65A26EEB2A08F0000765FEC64CE2772F9EFBD234
9A572B8D9C49904081F5EDEBC0AC031B299C36D800606CA851CD334451AD3F92
3B9EA9629C9DA663CC9481C295E5E90C5F7B3D28BE2F5DA06707A08A05A8CA3A
51C28763E7C94595CD7FE4F2F92D04AECD003304ED939A6651E1ADB229F37D66
D2C9FC9AB41C89F3ECDC3019558A8005EB129D85B622808537744BD9F8D6DD0D
E22C313CE16B372ED2FE4D0EE908A62CE2D7C1D54354319E8720EF13D11A8A43
EB33CC19216DEADF6749F67164F0338EA896944A83934003AE6EC6CD98A11CF2
5F356F8216E2A47955C670C8CFB01373D4DEB2392DF3787C95419F01C2D87E2C
0ED5A96220B9EB86E852D130DEA9026BF35857248B6279E7AE6D25E81034C170
CA7E61C12209FF0FBC2E83B5CBE5C17BC07AFE447F64163DE076732E80276DC1
4495140DFDB922866068E4CAEEBF16350AD93EC7E0B59AA611233042B998FE63
A8F1AB2ED3D21567ECCD4DAEF1F156B275F4F922D89693DA726A730538976B4E
803C256E22E5122BFAF367FD211F743CCA457C9785FAF7C4ABCEE477BE97BB7B
A725A8134650A3D4F7DCA310089988E830BD02001EC9DCD2AE6F97DC325F4952
D7189D4AFC10A75F2A34993EBAFE33E8C39F6C7212BD28588F5DAF7D39D112DA
15AE630C2DE6294C204A69F1EE8AF463252D9E0E38DB134E27485454DF2E10B4
D2510894E39EC9D5C2056F4A44F153C95F176CF011150BE28F17D57CEA5C0B1F
04A2C9E2D90E47F07263DFB82B2D75F6A3B20E68AFB63B5ABBC15FF191604D50
D6DF2C6AC9A36CB629A7BDABD1252196DC6785ECF5FCE8F7277436BC5777E258
8A7E216EC4FD7F61ED0FA696926D2DB941B5C58F04375C81530060B1C717B79E
73F95CF4E5B7BBC4CEF4A32E00286DAB56E326F3963245324E826E80FBDAD6AD
FF67656ABC15C5BD5F462084D82EC13F59110D2167FCA8B6512BD1D87B6D2600
CD2A72104CFD79D3FDC73772FCD1FDD34089D289A05C01EBAAFCF0AD1F55CF22
3F3E6E4EDD8804F1C0668EF41605ACAB4C260475B5E59A5E40EF2B0C726A64A8
1C6C3C737A290008A596FA141C0BD80AAC1E57C22DA4E77553F9C266FFCB8AAD
AEDD952D790E32BA259FC90ED21EB7CA16C4320FBBA612095314744F9CC1280D
6B363AFE2E4A04FB1786AB04B97BABDBDF5FB2BCC60DF226D68D5B171B8A6BF9
6DB81DEEF4550DAD42EC1A1023D0FA0E7B7BA1E19C7A52272B3A0D6983DF6129
9B4D5286C4728797476D9165A26F9E5F210881E930CA4280F594DF89167AA614
FAD29A76ACBE18AD7D62C9811CC547DBF44B6AA855432521B489F527B8BFDDB6
58A581597EF5A6FC2348DB76790AEEAE47A32855A2BC6BE7DCF3DB602F93F2AD
9F14E00604EA02621DBB5B96BF5B21947E77981D0DFA6819FD64EBAAB3206897
F12A19716D2678A152B54F2775B50AA4F00C505DA5609481950F26F1B3F4DC81
3B17D211A109843ECA0A3B389CE583E8D7A843E7CAC1F1B46252E886FF5C7279
C8F308FFE46819DA7A0A6A29B64436652B7D85B14609E60F560E36E0EF2E98EC
EB1281335F7086B228FF39B26C0AFB268E2953FDDA0C42C426657D39D059554B
95622CF981B7F1BA4D3B4BB514FDF2990B48683294E37D304F247F999760E3AB
70FBF3F859AE485465CBC7ECC71854A8FAACC182DAFB93251C1F69A6F25AC5B1
8BE29DECD39FC89BAED5748281E5AF0F1E4F893C91836A294A1920083B57903D
F8C414D751106EFCA9576080DE68BD1D37AC717F2B1D4AA7F5995D021628CB44
6A04F29FC0E66D57181E449F2AF71EE2D500AEF65216368E1BF9255CD22A85E0
B7A470709A4F1DEFE46DE4D072599693A451C3B015F8730B935370C04334189E
B06A1907C8EF7DCB1E935AAC71347E5D7A8D79844CF37C6CF4748A905D66DC7B
5D0AA24C265B49FF4372BAD09FCE763F5B08FBD9B21015A30F2258638EEDC1E9
DAD766B0BC808D629F7174EF768D28FFFAB7622302C8FEF6C24D1574CFB41E63
D5FE4D976FB069377831EBC8ADB0EA8180FB6D901187A6BEF1599A38B3E3913D
58416D7C5A3292CB2FFEA4F79A8E5FDCF396EB54748050669F4DE4F500795C37
15CEA7BBBA8EFD1F8CF34144B09F4BD9445F024F7B53F2787DF1D113F94B000D
43063253F8A9F524ED456635695F958E5805EA0236374BAB94926B1E9EE40A98
DE2A4DFE45B41A97C1A231F6182A78F269CE57984B193B34B0537DF68A7C5C73
AFCB512EC30491FA8A8A9CAC5DC2ACB2C25958842188EB949549315DD15B9C53
B8EB16E648D68B0FF53DA6A812482DDB60AC56CA53773A7725D5160C823DC364
060DB592B9AF98FB899436F50B3F16D8FD1078183340BAB10077BD6FA25A32A1
5BAC9F35682459A7BDF199BC621BEE27C725690F24FC7655CF554A7D6A7ECFCC
6560C0F2544D7E7064707C5F3CD19107258BE3EA639A8E7B5D2184BB7E70592E
04EB46F0008633A9C8DAB096C33E8ABC7A0466873F1F7F8F93BB3B8C927F7C5A
E82B81E0143598446739318E8D3449ABA1DAF9BF6434EAB202E01CE3445480CB
27430F2AE7A1813E3586234E8877B5303ACBFAB7F6DC7DE6878DC968928FCD67
2AF1E79FD4CBE333FBCFADE275EDBFE0C92C4C978BDF715A0647DB52992DE617
DE4F06956A5817FCCA713AFDCFDABE9FEF9D9B682E7AB79B0FE64C2269FE1406
751D2DE88D80966F7897F5314981BF3EB429768916060483748D61C22C922349
63DA6A0785D0719BB68B698A0832AB827F153234B69715ED7C6B2315FA4BAC8A
9ACEF50FAE0EB69D1E6556484CFC0BE8AA27284A5C2AAA6CCBE072ABB0777E6F
57D2600CA659E44717F40EB7713E5401FBEA8B89D4D787F99305E3366124A37C
A8283B5B0F8AF64667D75E3FB20A88FBDBD7F91548F44CF99EE1E646A335D2F3
A6F31CF09779C9CB7CF58D522F7F1C36E9AE70D1711410029B4105301D095138
3AF0693EF0FB94DD866A1701589D901C14E398A9A575C8821BB4350C40A59893
2F5C25A9BA7472925CF6AA8F487600CB5DCC0777A7F3EE96FEBB2B6B25047497
982E17E1F4BF327706F5FC73B549E3FE7207BCD8397BAA54C86107A73FFA6DC2
89C854F7446799A862B07EAD283DDEBD2816EA4DA67804C5AC15D9C66AA6F3DB
CE665DA9C303B8054C85A30B02D79634FCFDB96E5A11E8CD37A70DD1FA5D3C24
FA7BFD9CF27BD36B3C952B8DC75D25988B92294C485B868DF174D5E6BA17DB4D
791F82A2BFE40219C674DE9C5F596DACE11622D5BA922D2BA378E47105238F5A
E1585AB04A818D0F9FF9A0F2A3BDC2E7CBCB60046602A7AD79A6CC4059875C51
0C2C5417B1558072CC481FC7A72D6E69069F73BAD96B899AB610490536BC0FEA
04B877744EBFBA53E8D9936DE643E2EC30674D4BCF59D4689386FB48CC923904
40D0495BD7C6F5A86BD272D137A7A0E19D5FD519D9E111AF73D816CBD96E4EF8
6182CD7033B5EA8978F58EA8D522469D57CB2100ABF625BFB2F9B3AD38AF0A88
0E8091059589398323EDB1EF54E133B1D555643CB242CC43E683494C5EE74F40
D5233854E132FB78F6843DA0B2594EE9642FDD32069292655AEDDA5469F8B3AC
B722B2B2A523A38AEF3539463C29BEF79EC5245162A5779C5147483F5E46B23F
2EFECCCF2B563AA9EE73912CC0D1FC5D9070DB1E340C2EDDFD92B868DE43BAE6
A0FEB3FF04F3FEF0DDD6EBC559AD510582ACBF4235996EA4CEC7BD03D02F6481
1EEFEC9A601506D5764EC8397589BCB8A202E2316BE7403DF80899F14D326711
1E7FDD0FB74374EA6B2CCED3A8E249253CDB2624101C7719C216B78E39227170
58DA98B661B8538459AC97D8261EC7EB1B79381B7EB3FB2DB842371D586C5B76
E62A27090A53F930D74504ACEB87FAC48BEE3EBC3198DC0554FB3831472E3879
D1B581B43DF88B7552DC8D306781001418CA57A806F322C4F1ABC8CE1843BBCC
7A56B5D2E111DE3FCD7AAC6231833359B4088A47B1C59FCEFFAB98EBF63CCEBC
DAEA3DB9F8431A236AC3D8105EB9BE3BCDABFC4978372630C60DDB3150C372F4
E388C5F5B377BFD31C2AE09C03526F683EFBE41342A8ABCEAE335349CF778B1C
3A4EB7D4634929EB99EF6750C21046C5E10BBE2AAAF439459BF27B57B73445BE
16C9E243742CC40CA51AE3F83E01AD0D376AE21F017D2EE0BEBC1B7001A618CB
F676C4E6A1C2F027C0E5727196EF3357EEC176D06A59B3EC49D3C397D7BC7837
15F2184F8A62832F3B2703C5978984C20C3A8BDC58B12CEF858CDA958B74A117
A5F6E8A36B9161FBC7D89A16EA2EFB7D6C0A09568F677FB2330928C1E5F8FAA5
1BC1B6085641EA78916FAAB7F7E18688C6C76EC7AF358DE71D38D56A5142B2E2
573FDB89C4892DD310965D3F3A00A36870AA8EC79714C09925C4BE3E37C01834
2535A45179E5342721CB240979B2C51F74EF757237F456170D431774AEA9CA89
7AC54A3FD0D72CDFED2C855B2BC2E470CB86162617BAB0AC6A9843EA1BF63EBD
D354638EC489A37572F21F90B8B6DF84EFC5830D796F860AC59861BFF6E74C23
EA07681C391F7CE71C3CCF05CE517257D75E13B5F6588F76245038AB5904BD13
39D92B61B807EF6AD4510296EE8179C7C682B4EB6C09A17BF5748605866FACD0
AE095B4121E2F49359244D0CEAAB9F074163570D7CBF982B939458D9DEBAA2EA
C1EB51261B2AD4C243D76451DCBB08673DF516043325B54EB538A5A26374D1D5
679C4DE4DF9B1965C21E973E3F84D6B1220EBD7DD73AB6F7E6F165A1157C7D1F
E0AD1B0D575C3419AA7676A3C322FB4BD50E9C637E7FE1DC02D37787C16E30AC
81F9D093133E4C455E196C2D1C9B59168843DCD143E480EE7CB17B98B3BD6597
97B79D0F06C6F25F1DE64CD263A792E1C72D278609DD875A1D217337C5B887C6
A93C4C643F890AECADFA0A7599C2FD89203E6A0B323E6E86BAE2A5529369A03D
501AC6601146907D81751589ED7327642128140D603839C66278253170FE538E
F3A73414BDE9E85821EC8C15906A5BCF8807DC55E18DC0E5BB406AC6C9B89722
A13E7B12C35A23AA87A50C937AA65C4C48E015396C64273815A7C0E8739700BA
ADF413A5C6A02EEC7D4064DA918222436B5C8AE1925C5A6241C5B93BCC2935CA
984757AC73B3EDC9D29D6ED4F1646CD218165CFC9F6CB1D05B7DC8E54E39C009
2C5B5D959C7066F1629B49FDB893DBECF6620AF58D8ED2D48AD3E74FD9811F7D
05D239E72496C1C8EA20A85F9D5784D0B66AA0C3A7A751E4AB474F8BF9F90E15
2138E7847EE8F964B677288CF5281793FDD870CF36728926F665C71530EEFE82
3186355E912CE925CDDAA0A9E6CF8B200FB6A5BCD1D7FA7DC559461B06294C66
DCC4D12B83677F886643E4FB313A6CEC63F07D4039BA19B37938E33EFBA22743
FD30822B66FD58535F8DF45ABB61035BAB154B8F3C28E19BAEFB623FA601A59E
10EDE9BD4468E48B42322217B06878FB2A6EBCC9D94E0787D5F083F990F219B2
DD05B29D84C849F58F7117618A9ADDDF6148F347FBDEC10E18C32FEE06340147
C888DBB28F75A7DA35088F0F1264EAB0C83B64253F0DE57E9CE04DB5A7367877
F8B714D97E063CFB0EB3C6FF697509736BCACAA3BF111F1E7DAD437A201A6E0D
E457EE415AF2D3C4360F156D1AB55CFCFCCA75F4FC8E00F2BF68AD4FD5B1FE71
4F64CE91AA02E0AF999E169F96A46E2D1B0207F07D84F8FEA645976C7180525D
D889C4BB064779C7881EB6E0D71D17D9C57D98B07D6101E2D5CD253EBD0DBFFD
7BE7D2754A414ED5F0DD2F033A41BC089FE680D9B2751763F16FE1D63315099A
07B6C82DE385C16FD97085D60E99ACE6EE2EEEE736CB10EFABDB32658491BA97
2DAA6D73BE41C8E5FFBA53EE47B67629AA53A7C4C3A9C35B4F1944B856AD10C7
381E44731D4D21411B0807DEB3A16A92F48665E4BEEDBD85DD5E44372623BED9
C88098A5BA410A1C7F82D2835B56773E7A78C38D617461EC97783DB4D57DA7BD
6FC76D536A0C374D194F984558314A256C554C63BAB1CCE2A890495D4FB51D52
B8DAF0F445E512CF853D1669C8B79F15285EF1F9BCE3675628E0273E0882C018
EC8D23811D47A6A837D726CB161A51C896786645841C7673585E0D35C43E91F3
AFBCC1D5B24A1D21A9CFC2A4BA5DCE1627CB5B3D175E88ADD1EDDD784B135CBC
6C7576A576DA0CF2E4DC5DA82E3BDFE5726FD5FB18EFEDF3CBB8FBFB7D2F87B7
E2E9128CAAE91A8414EBFEA809D051464E6BA2649C34AEFBD15BD299DFB1A2C1
64DC7BC396F01D63060CAE9DDA4237F9957CED494313E3F6652E2F4C5B8314ED
4A8A3AAD7DBCA63C8D864FAB84A3BCE88C9F26A9767007E105FC40810C110C37
A90B5C8347A63D5F68E6F3346C09B1E2FC8491C50BE9267F6C015FC8FA2B5DF0
775CE085DA35E9A8500D58C483D7FF0E0752D104FA1098D82CABEF5EFEA189AE
4069420C33679F7456DAF2E9C9C5AA291BB1BD179E3D9F163106FE1B9315946B
EA6E4224FE51C7D95CCF3660BDD4C9671CC48B89B1C8CA80962D2EE8FF131A7A
2AAD7FD84038EF3B8F2CC2E41540E95E37676AFEC9F2DE4BA2E2353FFF19F2A6
F353F0A125FB48E3FF565489ECDA006FF7EB345034D6FBCAF77A08AE9F9602E1
AECDF8578FC75B78378FA54670E3D35D0BEF08CA1DCA28E63EBDA64325BBF79C
CF1021E26AA71B3F973E0E00E6FDE3985F5AC9E2C3355F222E7876086A13CD71
6D91616A9CA707759ABD27B4CB79437FC3B53604071C63035C757B6E8D1AF9FA
3CF92EABED849D8EBA9BFF39590AA4C91524F3653113D54C82AB68F4DD5933AF
2CB2A4AE8F80B64A00B3718198090D3A230818E658F0620724A9E4264253434D
A7F95C5C7D1C7DF078C77146CEF3C82FE17BCDB783D1E6BBF64923EFB4F849EE
87449947CE7FCA134F5C3CAF5E1ED36A6B970ADFFF057169F60A50EE8E8ACFDA
05BB1CB22CA14717B5EA74B3FEC2D9ECDB3CD43CC18FF8644FC90A9641E2E1DC
E2E336E06066B96E61E673310356DAD88B4963D2FA3A3EF2279C090D0C220E17
A230AE0804A42A69AEEB9B59B6ABC128BDA16F7A2EE0929D4F76BF9E8CA34821
0E4060154A3473142DB82987D6CFB64527B8AB1310387F5F6016ED9BF78845EF
B26CFFA172FD6DF16E079CC8E5AE75E4564F57858CABD1202E7343D3B4DB710A
43401271017AF8397A2769E12BA7C454E1F755B8FDF2A5A864ACBEF3AAB4243A
12AA55473CC807137C8C15D3A4E6F74194FA5FBCED899F381B70CD90637504B8
A55430C174BF72C3CC625727A300D4104EBA7C2D74C2C7D948561863B9DBB247
3F7920E51D055D8A7869C685B0558B36DE562D61D11D4962F0FB4F55B03429EE
492CDE3DE9E876F65335199B05C9DA62AF8167C2F0BEBB3738402366C9B1B006
A28AC4A4E541CCA56E212A25FC66513320988956E0776EA599813878D4EF394E
EF0F1E96B8B7541FC19434F5810891C661B0F09740CABE72976226BDC591C61D
BBAE551DF6E2636D38A8A88F42B947C8AF04CE0803291912B09ED066F1243710
3080F91DB09F7E40589F04F1D4C37F10F1218A73EC37275B757662F9F2E53C99
62CD8245F016811C3E57CC89A9A474615CCA6E6E77203F30E55D2395B7E1FF77
58C0897693BF91F5CD7CF201CAA9900E7849AFBE65196DDB2A782F0B3DC571BC
005FC64572FC13A500F6601E5ECB97E1508FAD5ECB9F8862F2821A9FB87C5012
9B4AB1482CBF5E11E9017F7992C966622FC76A4F039D632FE96908439AA6307B
4BE6C17E0AB1E46D19D96EF20CF13C967F213D8E49C11C58D679D65800067CB4
A57839E835EAB343D3B15A237FCBCCA6291213F4E1290CBDF1290A5EAA06E774
1DC1C433B3EEB6FDCB607DE04286B4FCB8969235799ECEA59A09BD330AAD6E23
8108867E6CDD9129DEBDEEA1CFA234CF1FE7B518A9F34D3166297092E4070327
8D72FFB655C489643B53A2C3842AB19F59823D5AABF2321F99947399C9AACFD2
B3C146054DDAB34D9F9D01F72B40CA2297D620077A7BDAE38BFFA621B6B8E856
DD0FCBCC518556408850E5E1903B897BDD92219714937F43C273A9B98C9AB566
05BA3CF74104675D7CDD76A9ECE48A24040F105EA37DC3709B2A623E2898FDAF
447026214BA65825695344E8718D7D10A15842CDDEC7AD880F5B9D505E7D5ABE
973DCC6877365A00767F19A7BC271E298B0FCA98587DDB2C633213A299DE0DE8
375BEC0B0CD5722484B22A7A664AA01D381212C81B278AE86F43653E6819701F
9F596F36446EB94AC317B91D5DEC9C73BC1D533BA509FCF827A89CD00241A257
A8C8F4282D4B210D707AC2EEF787CE6C342790C1656E778C747AEB2E3DABA78B
6703B013DC17C06DAFBB4CB35A5CBB87D143163C17B5C499DB70B67B67452586
6428C4A87B4EFA93F4E7C3C5650A8FC83331FE8D49CBAB07033D134A48869F9F
41CD8116FE64F8CE423DD3BFDDEB9C3433E56EAF6AE4E35465A61B55DB30EAD7
3399C019F1D90A4DCC1DBC69EFA3507967A510F6D6001942BF4FAF6CD20C1C7D
4AD4A2552E099A9B3AB99936035ECD063E749197E5D90D67005C1CAE911CB6C6
33881038F4DF96305FBC7E9B21D3E18DC0583A2FA7E69BCCC56A9D2D6608BF97
50B280F4809DC3CBA4E2C8D20939D90378739D71DE5CB565CDEC47BB4DD2FB3C
740899DE4649BD215EED9FCE8AC6A9D44F1C0361E1DD361B6730BC59F1BD7FC6
D31E9FF67CA25B8ABD09258ADC9F0B63AFC031E0223A1C5E5E192422F5C65DA0
DD73EEE10768E4B029DD496F6EBB10CF550910E563BFEA769E756808594CD418
83C594CCC596228A24A1C58494410D2CC06A3E542FCE523924E55B52FF8EAB7D
AB5B9EC16901B54762A6A938DD8A7E4F6F122DA8746675C051B7EF3D7705B9CD
497307FAA39100069798249B6D3E58369D5282A7CEEADDE5D8B2351DA2F78F28
AA27AF9E16E0F664852F6BE97B3CE78FF6B30D5CEFB39763F879FCA47C4C4C62
F9669241D36324A2606A1AE7B0CB22CB0549D844B8556056117327820C08D389
72D1A057C855E3A14E729C0171F1A75DE31ABDCF67706E0A57692A96CEFE287C
98ABF3D3930FB30E710B4E7EEE1E0AEE373FF58337E6B628D959FB5F1AA1DCB2
75E78926F32F8D4DDB2F2E713BB827CB8F0E7AAB1BD8FF62496CCD2FC86D7EA5
0D791732F033EC358AEC78464E92BFC5810781D32529D02FD7922962E4E6A482
1003A1BEE768ED7862996B5504C66F7B50DCE6B070B94BCC1027F79E23A7C211
247A33B41BDC44AFAF57ABF45C0FD8D294AEF03B904CABB1CCB3411D19F09C13
D159572FAE73EE4F12011E10C5EC95544492F2972944CB623AC82E674909192A
483BB0960FDD4DE15FA40B859333DEE1B134FB4F02C62F63D44FA798A4D5BDE8
FDDAC01DBE7DBE60C2C1CDBD4C9BE7DCE58E3EE772D73BA72FEFE8130C98FA6B
C96F503CC74C78554483B451A9721B5E94E09207F87D09AA960783B14A4D41EE
89B20AA35181E0FBA0F6885142B606AD277900BD894309D86394AECDDD42560B
BC359E4FBF1ED552F753DF6475474E599733AEF3910A3E973D479899E229C198
CDC260DE75BF4186B3CAC859D1254F7B099A53F54011BDDD8CAB3E079062DF73
2DD744C0A62206B3F6CBB67973B768780553AEF782F68B2F72E7ED08BF934C0A
7413F7703BFEECD36ABAE3EC69AC0BE885AB1A760CA26A8E779E844F4CB1C573
9790420971CCBDEAEF7E954FD13AFD49A175471853F733FE15E56AFBF3FE3D82
850E717A1174A6386FD860D05CDD50CE783FACA6506008D2990B0F151627AF61
EB72CC036CF81692200F51F70D55C0713B7B25DEA54E1E6E4FF7025145099E9E
F62B10A42CCFACD460287B372104F26172685A5A1925B0501E6BA1EDC662D079
A5D55745B6424BDFE3C8EBC222CD2C6A173B23B30F842B3D4F7E42633229392D
88C71E7870E2B90DDE97A2A5329193AB3219C829A8ACDA23BABF7AEAADFD0B23
27373473F9EE4ADEEC3B7FBF8A47176C24267C64F92BF51A960000CA52A60911
B188AD35088EB58162A24B392B9E56566E7FDFFBB5A61269FED25928593259C2
C435669353EAF1920B4B29CE5A384AAF621187E85883FB64DDD8534B720435EE
62CBA102853215D41F6E26A2D47FA7A672406B486A7369B54197E50902E287C2
A46613C751A172BD4501A9C8E20BBA04DAE855A3999CC986057EFE76828E1E13
92427F8B823ABBECF2A48667B7294A754850CDC7E48EDAA433EB5E3AF1166854
A6AF744C62231023A8E6E34404DC9C6BC5E59689440C3375A1D64D3A953A518A
351FDBB486A6F416B5D17505D019AA4105464625BF7B8C1DF09998FF91F1DC54
FD2ABC91225F31BB71AF3BB8E70B65D6D7E8A0FBAF0091EAE02AFCDA78B73DC4
4CFF3D181FEFF3DBA0FE03D004EB2D7D64D99985A4DCE104F49E31CF2D55340D
33EA4F87ED11BA1070408E5D67E0B47BE180E307A9636FE3AB78DF24CB5A61FE
57FD131BEEB1395AC929E7D96BF3F033E766542A7F4A0CCE00B8D0D186A4AFC1
CAF4A469438FAAC8F072502E278001D994BF0530F898B5460955B28892B3B80E
7AAC5E5D3B12F1AD754D4EE7202CD14E9990B24E68E2C808111C3281B36F0CBD
CB5FD660A7A9085F7E29EF5E6B4154AD1B473CBE08A362A947AADD3E3705C0CE
7D6D28EECCE0F900E20F4ED9087D575D4EE3A818903633FE803230A1F44DFD56
D45557EB4E5D21937F9DC3A153FC4FF1EE500C837269C7280579054951B27DB7
F0DC3BE0C26AE78C0505B1B9729706F7657C08477552ABA405844F55951DD541
CD44FDA2ABE238601B9D944B3747D8C910E2ECA724755295BB0B7ECFDD89EB64
B1D7B8D4ABAA5B9E168083B847104664DF185B14D4281BF4901D159C6432CFE7
C2C216FA5D97B02ADF3AB54AF3244ACD66775CFE442E2E4ED6F5C06D67109D70
22D6EEE87A5F5019D34EB472335787DF887252735100B7E91426DF07887D98D5
8DBA04AB4C29AEBA261AC41E7E7DF835D9FE2598003E9F92D692A810F3C66E31
27061197B63BC2EB38CC5AF488F2F19E2E65E6CDE193E6344401D5DB0E4765CB
55BA888277749EB88B2A0FB6F5432DD5B189F7AB804CEA0AE06E082959FD43A6
F1A770DD7A6B28F8B2870BD116D61CEEB3DD4E7E866B406B976C3656A895304F
FD4A02CE3E27EDE9A14E65E0482FD8DEAA3A3E4DCAAC6C2EAEBFF710B7D74B93
3FA7F92EAF6A551D5578C74A375E03ED306DC74C1EC93C43A0B6A47C5ACB18FC
DFAB30B693BF14E3AD7E0027ACFF07E033BE497AAA198F6219C950BC5F8FD65C
446B197851E4870844079C29F617BB9DCFAF2EBA93952BB2C1F8C9FF64FE748D
C69EBD5CD477CFFDD795C092F820726472E92763BCB638ED58F2EBE713BDBC47
7A14757F991517541F0342FE302741EA81DDE88B4ACD6E76E050777ED4EC3F7B
5772E58FCC304F069A8D660EABBA7E12DD6063D36005F70CD07952E4094CD39B
3D1EC3BE195588484924339D4B8F479809D18363DCDBCB07568E5D2DF0E1C37A
D877BA0576010D35B1E44FE4D5C10839E19D055DC5A489E3C1711113DF70794F
A06D255336537E799579CEC1E00B1F42195DA2EE087AA46AF93849DD3A15208C
218750A7D0D36BF0A9743709C46FC2D1444491FF3DD628D4372E464ABDBE0E41
D09BC56B2AB24B4BEE6F6ADD6DA66C85CDE5CFF093E111D019545495C79CFE11
5FA93213E1C98BD14CA1AFFB86C9DA1CA79FF11567D34FD6ED76D978FCEEB7C0
A48669EE8246D1EF2E68DC5F32A645D280EC414FF754E15009087B07F21E0961
6E65EF5B3F8A96846929AB91C774001FEA2E4793E0257CDF44A7077554E90735
DE103A5FE67A2DF8065AB7494333CDAF0A570B5EB14E26AC88F12F74295CEF8D
30BE291ED57AE41F4487C2875AB94390104A27F09C4191158311510C740E484E
A8038B4A2A04945F9068587A38582601E2B9B80DB36328897EF34F3448553331
4E04370EFAB740729B9056272323A8030E453F8A8DA91072C5477334DE12FED5
00E5FFC8E55E70885CAD26709FE8307D8A448FD73E2E75E8B8FD5F2F69DA2B6B
B954C359CB754AD53FC6FE6775B42D1E531A4DB8E1F172C4155331AA7D827AFC
61FFC8AF42B114C23F9D8B41FFCB7D6898C02A3D5501C8C8C4E0B86BB1EE8102
BBC3A99813A14E57ABFB20A254B82B22A4EEDCF709DBDF5E7168EC8CE0CBF839
872332FABE77C58423877BABE53B887D8CE960D12EA40AA12CED149D5D494B5F
F8E18609EC50BC5DD97F09DC4333193C9B1886B0966FE0DCD6280EFC5B866AEA
D4326D13DF666723A51CF7346F72857EAEA78B58909D0126E3DA2D3659878B8F
0E10760B0A4F9CA71BED582228E13B091691350696FF0ED5C199F1B5171BEED2
7D3BA5B5BA44E7F0791F33F3B59E51369C2B3AFB322378323BD5F13C8276B178
E8ADF39656A523AD24A89981336718A00A1566B224F77A625A71B79422AAF1C8
ABD26130939226E3B5AD6B71AA7C7982F811816F5238F7F4E19433459D77397C
D00A4B94DBA17F337D691ECDD4D9B27F06203B4E41DC6C4E70A9C441CA1997F1
2DFE1F01431FBCF550780F7C5137C024440C584187F40B7F86BDCBAAF439230B
0791A5152F2B02F8BE1F3661B7BEB1AA01C13F6A3739B2E96D2B01798EF91F11
95D5DC611B263D44F0DC80F5EE03841A00BC965D3E8892B6AAD112FA8E0DD13B
A3682A970B1F14A3CAC5900F5569F726767AF519CFFCB6A0E88FC9D65BD756D8
22EC05D8566456D85FB0B75A750C474BB4BE8C5540E64254057A2DB81235D0BE
8F5906E41B01F7F7147BEEA7BBD4639F420FDC164F2EB307996748DE1F2E8762
4C7FAF5EE48E5E4E32EFCAF10361F3DDFA3F6FBF9819A47C8D5FD45AE6E95A1A
99E49F69769003AB6DE0D77294D189872061650740F1949F75412B36B5B24151
CC08DD05FBBA2B15EBA452AE4730D8B33443F64C06A4A9B1397169537C6D36DB
C5BC09F1B2BCB94E40D6F847AC29B1D71131247EC8EEF950DAD27C50E0FD6A00
B9967952B1D59DA1C9F053DABDEBF52DE8E777E519F6CBFF66AD49CF6A18BE03
FF65C9CF5AA81C6D290D9EF722E8B0834EABEB79AA86B4E4CB66AD49AC605FB9
B6BE500E37E133936EA895B815BA1D809A302D3C9C9B41B2FE237313D9D02927
F323C7EF70AB083A8701CA5D292118B749BA39DABA6AD72756F311432363C030
A75E71956F5A2EB74DC718D0CF028B5688C6A720E9DBE726C7D482198A1D80A1
BF52942BBA45ACA617D6E9F5FCE8F785DA881E8D011CCA168AE32757CE3A427C
742ACC4F363D1E0760BB183187AB20D871DB5EBF33403B39EB45309F82FBD2A8
187DE3E4B83F5C1EC5C68A6758DAD06A20CE234892545E0F49ACCC2EA932BDBB
6E317CF96DABEB7A6EF255D1D9FB616BA9E00953147C280A5E6A61143F4E32DB
C618BD0F22EFAB08232FE0CED1E82D6F5C23A1ECB63CD8E07DA4FDAF1DFF3086
B882EBE497C601382F5C2DC2DC2BD4FD05FCAB5302BF92552C2456249A1ED14C
01BE2499DC41C3C8476F73589C2B0A5D5BC7C201688EFB010D2AA1972CEAB4E7
90F7A4FC4D5FDDDE7DB46951EC287C27B9E87DCF778B4C2E5D9336CA575579F0
C585754EF6A1E1BA97178C201119AC2FAA72A06A1FD37676A105BAB0967BF2B1
E49198DE3701A23E0970DD7A70582CF0AFA7B02D6CF293B0953820AE0AF46E3E
D65ADF491E7A15D8853B059C4275BB75C06C54C69B774E377C07A33CABBB8327
0556B31566E2331FB4AB4D74B6EB0096224C67F545AF031DA5BB54F203243B0F
4351C42A833231FE962D1FB88E3BB6441D643C425885D75F6729BCB7F3F7673E
DE77B0A9174A58086638D5FC671648E7A8F4A3349E8E18D82E45A72A0C0F4932
127D26EA0228104B693A778A45B4CF617FC52F25AB31DE0956F737B621EAC256
3D0E1E22FFBA7675C3D9F238D5FB78CE16E977E782ADAA3E201CE166FEE65D31
6F18FEF93F0F8E2A9950DC897E962E9DD21536DC8BEABBE76CA1A04380374C35
C2879E20C9335916CAE8B76E3586D27CFC3BB16C0F9778B1BD5DC84D5B20223F
2BA6D4B400546F7B1953ED761F5B110F8C1F4A8CDEC1DBC65544210F2F5B7DE6
56867FE81989B5442072D2A3555968E351877F63941540456D322D5EAE7078D9
8CC17E49CD224EB923C27DCDD8080339DDEBC4BEED3F1FE556D8C5FAE39FFC5B
A43034C3E37BE3384A6ED58031B62BE1E61F2E1274D4D61184EF99468A96F743
F05708509F003BE420C93CBF81AB8107A2CBA9A301A7816B0CC7D242435B62F6
1D8F2B75FB48502EA76E67028456AEC7D740B6D10C88DB0F0CFD1809B0FC3A94
14EBCEF93C0F475F2C5AF693CBF46462EC7A92B79542260B5ED61A56879A538F
2115535F7E1DA94C0B7B05CAFAA89113F70FE5F45FC83BF02FEFE367C20AD5D5
1056503B5039B2C4D7574DFDE5C64513FD6EE2A0B4E0FEBB293DFD9CA9EDDD0B
31CC16178B5698C0918FF4E756DFE98EEE2ACD9C55919F2849A92D14B4C4C5BD
5C8C8A0FAC44904BC7DB13370AB01144B598D9ADFB1AE8A4149D96EE8AC2B6A7
D2A264FE6362FD1B7626A6670EC2F8224901012C409D99855357DB487A0B8783
D6319620D7F629EC345A04D9FF58627BD583E5D7F67BFF595CCB0021103A861A
21861E49914AE0FCABF8C7EBD211E997D8E7B870CFDF03C2CED80950D58F2B7E
15009985CA5E2FDA838861716A22150A0A6541A5654F8C6B68A1C0B9C837697D
90CFADFB41CA389D177E187AD6175F48208F6BC2D9B965DE95D15C44938E13CB
A5DF06A593677C006131F87E7AADE0075C8BA1B724570CDB8613DEDE42EF3F8B
64318D861035EFDBF3509184BBBF5FE3205FE5DA3CEED324AC220DAD0D326760
D1922C8E73D75022C72344627D53CF61D8D02E0710E1D55A3FD2222CC5D432A3
E6C067C36BA3CB4DDC67B5A2DB098E20D15D95F85FD9F349303011E229DEDC24
68FCD5AA0904D00D22B57721D374838B0EDA20CE5B0684AB3225D29FA9333479
6CBDB857AC72E780279877173C490B91779C0300B5329B39C2F626AD02BFE0E4
5ADBBD3D0942CFC4388A7574D167269E1D88FDBCAF8D7541853DDC34294CA389
AD62C8A74B7EF1A667EE3117261BB8017F9AC38FB88B2804F9154D18BA1A8526
6949BB044D849E95F04CD484BDDAD2D772E1EA197626AE2EF3268401DD93CFE8
62D404CF6FA11FECA7FFB8DD813A48A156CB572A43C2BE0677095B167DC1A622
C2443BFB5077C674616EE8D93378EF134A448BD333E957B3A399426F3E49B425
DAEA1CA17806F4BC5B9FD1812AD14BA4825DBB49EE39DD946B14A7E33CB45D80
A468991849631AFF60667853ECC6AE2B9AA9A65E3676E11EB0A27568A910CD93
C93F6C1DEA3AEBA81018146B5F9081444BFF20CDAE33AEFEAFFE03A3DDFEFFF2
FF4F0710F33ED2646784EA636C7BD98749E64873F654F10F91640B9A76BE5C45
C9310EE50752FB5D5334C9EA037A2930F781F0C88D034F57B4315B97D5F0D879
EC4EF31CE835F95DF0B8CD57A1A4580CF261B028F2325F8F11C782901EDA5E57
221FAF7081AEFFAA8C4F59ED473795A78C90895FB4633FA55E3377A21DA882F6
555F809813D1CEC109D07200756305BC11A834B48CDDB0A8FE659A63CA5BD206
8E4ED4C611439D3CDD08C5D633DE94D6E491C297F37057EDD488AC7E1CDD79F0
E5BD62CB857B1914F0E4E9FEE28BE45020BD4FF2F22768C92D1DB34F0A38552F
FFED09F10839F1608B922F91A73F5B230070812BE081BB5F66845D28575A16A0
E22C935397E7819FDE194AD49B269078278C083C72895AB3444085067ECDA75A
427DB0FF4FB1CB4458BF708B7545A026153DD277F019EA68566E62B8AFA70A93
4E6007986A3D56D61244D61F71B679AE4397640F68C9EC09F86533A6DDB18E72
2A286E58DA6C47D26A9AE0F754BCD60E4DC45BCACC137B3B26E9DB51578DFFFC
7874930CEDDB8F6E5296938E6FE6BFC91604DADFD7A1849EA0ADE81639972AC8
92F1DA0DD674A31A94DEE31189852A306F2E745F6E3470B5EFF2100A55F57FB5
14C8443157F3A70FB5DDEA50CC0321118927B92DD49E3AFD68C3CF9EFE8DAD13
988133C1320856F20555B89A83CB946AD53533A3D2353DE6DA958E813D0B74C1
F7FFDC12ADFC5148B65094C54B05527622EE3C0805A95B9B7D20772C8EEE9440
7A2B4D3E461DE23E49F212EE7A10485AB88350FC74F5CDE1D9A52A73978CBB60
D9D43429140F6BDAA11BF54596F6801A11A53BD4F0B363D4954AA7344E9A7A8A
D397938F121B59FE13F1C51CC1F47FFF0546F74B2D7685A3AAC5210E39901B2E
BD8FEEB96B86B7F02346F65E81C0E981DF3CB7799DB9D4590BC1BE91EE295DF0
D3C25D4EC22A75274385CB12CEDBFF1FDC605EDFBD9DF6766B3A75ADC1F2B8A2
4138DBE6DB52B7760C836173A961E1A1CE97F2CCB887F81671F71105E9C6FCFB
90FCE4DB62F997D52DDC69CB3C43A076AB49AD1A5CA3554029925352992CE8A0
92186E26E24009B978E165CBF50A031E022743579A68F8930CC27EEF9E3D51C7
02E3EE3D81BB5DAB313E1E5F03884D845017F524F641B6B5A83EF8B7BF2907EF
7228AE064C73179B4FCA111FA2379A0A9F93582E36BC0D8F3E1893472944A0D0
CA03DA61522445D9D10E70D87740AA719C016CAF2A912F698692C7B96EAD3E26
48059025F8BA9B5E49C45D18679C8458D193418898C312747235064A2998E414
CDB8A2E6E7E410DB2A96DFAA3C5EE5371601C6F7F970B38F4BCD29AB5C6CEBE2
EA77A5DE77637058EE559A3E286305ACB1842E01B4FAE7E167DD22C3D8A34D0A
AE3C26AAFE6AB3281F631E18DB2462C1C5B2AD7D3C0FF27D27F5D90903F8CC77
7BC30F36ED8059D067018FD2C2E4E087164F0B252725CAA6D36DFBD0864DB29D
A69F86717FA3E14326F1D7DB4AEB3FCA1919F81EEA8384AD6EF2F17F2EAD933E
621D7F4F1742182436B82975260399212D3C2121D3D5D0A44325671B008F74DC
BDB9D5C0237E05F63F8301C3279E7F726E985AB1CB31354E3A1B7BA58502388B
5FC8B9EE8B6F1DE6FC5DFA053659BEE4A3B54E25FFF0B5A5EDE5EC7E40913A9C
8601055AFBBE5D24CF83ABB1C2B3649F130378A03B3DE7F7EA5EAA84FFD0FE98
AB24855C0499AD19400EBDDC05E3FF1B0CB55ACD315CCCDA6C77743E0E8ED5C9
7D9CFA87D189C5F6B08D24C82DBDBB9F7608AF2037DF82F2B6E4C88EB35C5497
6F509748453314E9937258F4A0526C7004F28CA5615CAD23439CAA3E4958A9B9
C233AA30E46737EBE0A580D9A14BEB52A74E3C0BA2C0F3028C01985C5D9D9719
8E032C8A1AD37429B2756C733F45DBC716F35462DC3ED391898892F4CA8B77E6
D4171BE69D5249DB412C24D2C8869244199DAE721DFA88E4E842761E9860EA91
2425AA3ADE2CA4DE9E941FF905638BEF916F9D7162F556230DB07C2E94EE1C1B
0F961CEF32EDCE0C1B1D1C9B41F1750B0EF8294AA1A86A95FD3F82166C24E540
2DAB10BE7BCC71EFDDCBEF1BB87C62E1EAC235C706F63544BEC77888EA74DD3D
70E220705A8C61114FD5FF4E27C4D19F5AD1B3A6BD03F0F860F1DE45ACB90BFF
AAC36226C3C19B2897C95B749A164AB15A535F6EFB7F847C458DDDF8A348AD6E
B7FEE0211461E2D5F49DF3BD37E62E1A751C5131BF3E9C8CA6ACFFAB8902F02D
60486C0E2511A009923B139C4F4369033D68909CF17676B3152B6BBD22BEF7FB
2369B4D81599941C1B20911AB9C1257629359580A327AFBE47F1A6C5DC073673
1A574C1204D9C24EA771734BEFC4963FB1990C1EA007A5BD75366A612175ED30
38A1961F469E938CE5FFA7C04D1D528C83C2AD3C03EC1105A669A44D69F5C787
207F807884772A2DCDA360635E0BEC3C07C4416704D52B8586924FD067DAE4A2
8A540B40E1E1838BFCD505D4BB120EC4FF743835F3193FD1097B5C6E85153AF0
A174B289FE27C12B1DA5525D040EAF03D6F89D7139171DA8D88869D907F89593
F49D3A71CEA2CD42621B024AE5DACC499DED28FDC9E812F3BA20A6BB9F3635B1
4DDDFF90A6AD81079958A778711564D3B60FD1C808D7005DB2292B6CDF0C8F3A
C9728827529BA5AE3E5BE3B973134A478C4E7CD47A6273B1B6C84F6D878EEFCF
550DA99F4762EBA073A4AAE44E999C97BDD60359AFFB70420A6797FC44F66771
ACF82951262B8FBEBCEEDED5825E7E64CE6F70B018C239F610DDDFA5D0B7C215
FF3C6B6C5499ACFB763124130EF7478A8CF6198BB044A8FA32F844765FA2906F
27D8D5A3A571CC5DCBDEC0F2285E3560A38962BE22C756CE8EDDD40531EE34A4
E177C9CFB1938F2E968CF0A350B50BA528F9D4932ECD9BF85DA174E36AFEBB21
4A009D4AC3508C3A879078C17D3ED24A7181A729348C4E326247FDA782B63268
9FC0B1E85286CA58CF9F4ABB9F0C78A81B0452EBABE0DFC3BE7C2AD5E0AD4C9B
DA53178DC73968D69BDECB1D44DB3512B04272881087B2B6C65918B85EFFAE6A
E1AE8A81BCCCE7D9FDBB912DB7A65ECED6D2FB639AB691BC5B5CEB426969C0BF
8BEAF56BDC2D94FB8FEFFA66E7263EE03D3E0524D6A64CC37FAF64A1836290DF
23BB8B8A1BF47425F6C853481D127E3A21C6AEDED5BAF77CBE374AA8DB84ADFB
00EEDD0CF6CB4D064BE6D1E95903CBBE4D66E1DE33B905B4E7BACFF396C2F9F5
B0064B8D3DFEB05D8BBB0D777024B4F7C96B857071CF18761259B0C2206471EC
A1C4EC85499D719C73CDC7CED706BFEEC945EFAD8C2DB9CF8AF00407AFE4ACA6
0C1346450A40CB3E4C8449CFF22F37347BC3A25ABA2CFFA258A9F6D83E27D884
D6E928048D0C6555C3E12BA147D5B934127A302BE355AFE0BD2D618F6CF1AD11
DE796D64BD5ADA981D70149C0FBFF424591916615CEBBB79138E4C25390F1D2A
02A704CAAA340D495D9A0ADE7F172989C2F6A4CE96873066D5A6B4B00A73E03E
FF12E9049F42A16BA75628425849A37280D6252986461877A382A1EBF113543A
1C7351E56516D9D2148BC912A821FA037B5A20A883F8916D55EF1DE4D4BD32D4
537E40CE58704A1C07AC02B5FE49811F4D9FDD5BBF7823C444637961420BB738
EF3D2AEC7D83FE23675F29ACBC6061D886A7226FCCBC2F9D0C52254DAC1C3E6E
5D5CE222A19E86E4F7CCA04B46370AA1B284821E9CD808490468AA7BCD999F61
AE65AA3C4C4202A7562D265DEDCE2611A3C200FC26CCF6D8E6CDE7DE41A119B8
0FBBB209A4C5292B74C48B225399D7E591E4B8BBDCBC61251AC9BEBAEF157ACF
9CF323AA38283671BAEA68854D487D98DEC1447C063E048773651849C6C2776E
F5E46EFD87FC293352523436E68AA52FB47CA60F8C4141F8232CD4E52C161D12
CBA30C080923D67D0EEEF60C02DBC4ACD085EA4801A237868251A65AC3A2B7D4
5AFDDE61E1B61DA424654CC4250F0D987E31E8700D5C1080DB1BFDCC33BAD408
7237DF53A2185F020FC8FBB5E2BC5CD318DF360011535D1F6242C8BE52572C78
6D66B5C34989B56F40EC43F964342E8E5C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSI1095
%!FontType1-1.0: SFSI1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsi1095, tcsi1095, lasi1095, lbsi1095, lcsi1095, rxsi1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Slanted) def
/FamilyName (Computer Modern) def
/ItalicAngle -12 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSI1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-154 -321 1520 899}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839D875E6595524AE250B4811DC71C18B
C8E055460127AFED0AD3F2E2BFD5D3BAA2CF0A636E6F0350AD667C2A13012E6E
1823051806B4C911A5CD7F03592FD1F899079A510DD7A0B8F822D89BDFD2EAD3
57D561CD76C362C1DA299E109C5A8DC083E0672EB226E3468DEF2BA24599B2CF
040C9F9AFBDC9AA145DE336BB0ACEF4029FAB3E120A987B291787A5F8996673F
065C7C4511447758342FA48491381DBB5C88498184CD33DE3A7AC9F271AF5B7B
4689AE26CC376094D00C43CE85BF3DBC7C99E75F69A5AB7036D9CB7C1DEF2F4D
5525838009AB447336F4C426CAFE131E87D05F2CDE9B64981DE349C0E42B6649
D0EE6024BBA6A0FFC0C38643F06857C1DBF74B680A34C75C7A17A4BFB829DEE1
946B2E51210F623C4BDA1620BADFF7681F55803F161C9131661F997FA80BB012
7289748F329BC02D8317B78F89C065C77B467369E5632C674E328E74E144B10C
BD8249980E6EC4EFAEEEFFA030C7B29CE328430047AEDB97706AA9DA590349BC
385858880070EE9CE991E600F9064D7A581622D0E76014F055D69A724D5D36EA
FD9C584EA09EB570D9F6456127B92D1DDD68FA3879C8B41C62B7C39F39959327
8B1111A7902C617A91C08E44F64F51FA8A371524ED9D1B0173673367C2A8A8D0
57CF275D5242CA10B3EEA3084B04BAD77D37D5F59C8E331666869571A90DCE83
7B58392AFDB354DAF07513828718F3EFCA5A36CCE0AAE21903232199F55A7B7A
F352DE57D9BE1FF48D948D5F2C2BE666AA655DECCF0E540BA916C73C645B3C8A
D0A8107240A0376DC99559715BBE6577DA7AB8F6EDD3114192121A0F3814DCC3
D4B761A85276F31F8BE69750B103F7A400D2C9F3BDFD33EF249B6334B63553B3
A2D87CDB10B1DA4F35B0C6ACC25C47CA5E3D5C6282FAB484948D1EE01222D74F
D830D63A4208E827A9CDFB2BC02732C5EB8F7753DD2A8F465F407463C1BEC418
5C3ADB1255CB254DEE8940246590CE7A0AA9AA395D5B949081D98C00B4B3323F
7F251092627CA0CDD78DEA6BB9603DA3B1F3271B5345C44E1F43166CE59817E0
F166CD48F80B0D4DA49CDB6995D419D86008FE63A6960D7A467187521F5FB62E
F6CC8B509DAC769A0CB3AF32E8D6ED83CB80975E2059FE4D4D50BD25304F8DE9
CE6CBDBA5FF88D862E36CA302C6B8DF73CF696309092EB2E86C46317E5A5E680
269D19302A9052A7A82219C2C6709E83AF28CD8EE4010F3AFE79901C98FECC16
584AF52626B6321B4725252397B8C506BFB065C3A5B0D92AD17B00FABB656025
2F1308747A98D506DF6B5F7FF99F8768EB7D92FC02BC0C5F3923E187A14CF9BB
649948611BC12131FD7BFCEE32E86E8769DE52013281990B676D43142E601F8D
A2F2CF27D1CE4109D34A9A396D507CE215B0D55DDDCD373E804158054744A895
77EF0D437C97E96DFFE832F094C59BE732D65189A30AD5F6C5D7CA2250AFF29B
81B08D4485D28CE0790AA49CD2816D43E6148CD5DAF85FC0E21D088545549C89
D8733DCED0CB27A085BA2FCD1B26C54D2E45D204349EDBDABBF0AACA0ADC2FF2
328F7D5D288822F8AD14F5BFA0573729137F16723DDDAD8A0F8F052ABD91C424
CBD36A8A2247E90CA83F71BE56EFB6BB37221F73DA01F514891BB3E492C6E9B9
0595D1354620BDA71C0994A19EADDDD7E10A9FB3B36B2F3A498C1D8216BBA57C
400F062D20A54E9B58914BF80E1405E3CD4E8ACDDB90FB8867810AAF4715E339
375D60A47DBA37B7B500DAD1B6BCE260A08980D155AF74821939BBDA4324A41B
8BE616FDB35DB9D3356E72AB2F031EB250827961799B82244B62614B955E5870
E1EDE216D993F881C2956C4250F5F28207671D7FE395C6125084A8733DB33DF0
1FD60553A2B7FF2FA9C2EB77D6CEB6F20266F1151AA45C907DF9D9410893D243
65A1D1990C080CD156B453B314909C55B200F32EA706EDE5AFEF4703626CCFF2
D17673BFB88B9FDA9A8F07919D468D52000DB78F95EF6E1C8A6B4203114D5AD4
ED831830CB52F85814F0E0D2F9B0ACB1F324000D5520FDCD2D90C79E73912740
AD4739CA66526031CFC134A30F3C7C6372166BD935A6E8BD186E190669C335CA
9A03223359F45D49BE8337EE470B65E2393A3EACD52109B4D000059DD3A47844
7C0AEC3223C1459E3787DD3E2C90F68AC87DB67806DEEE3A39AB32D5463F7F58
FD51F8C47C6E7D7688BEFA475B3AC6FB1DF859AF41EE08F2C3DDBBF6E69E33A5
D55B5133EFCB9AE52E31AE57CED453DFD55558ADFC1BDB0DCD002BBC94CAADF1
4CCB91A7A244142B0F83C29BA816788F384091223B77244F65613C6B28590013
47C36E5544A2AD7849C9EC825165CEE8D7EFFCD4773E5A70DC1198AAAEBD432D
8CCB25ADB0EEA08BEA6C827FE94A9A3A862D939F3A32F797B11A571FC8809B06
E08263950FE6C75100F73620FC4EEF2476D0BC4F004665AD54B9DE2D281B47FD
020938E02C1ED5F735EF6EE23CD99BA3E3B3AB6682155BD1ECCCAC3C218CCFC4
1002EDE3E49ADC1DD6C5FC93340A9269557B7C88B4799FB5915A8D468C9E2BD3
90F3AB2CEDF8F04440BBF863FB661EF9E666B4AE09D5D9C1FB2388A9EAEABABC
9E48037C65E6A2870BA9C8FF8DD6F9ADCD7E5134FD21839B036AAE27C9D52E02
12CEF6C326E198C82E2A9F4A9C3F216E6E0BB2251544AC539B2AD1B988CCFFF4
777C92A2AE917887CB412AF6A6F6E0DF4814EF7F439A96ACC0379E6D2520FAD0
CEA4924DCCD155655633F021E4E098F2421692912E83AF2E7CD81AE6FE060713
2B66A80659D1E8011A2C6F11E6179176C32E07C2BAABA83DAB9E233F43437126
43D1A48FDC2A1223CA6D677C56BA6EF00D5CCA7C13187CA8EDC2BDFD25C72621
1915F9448C44D89F32A2ECD8744DBA6E41EC4F6114F063574D9980B35CE4A609
EA9624687347F790ACBDD58070691E9CE5D30FD8B30DD02E62A1BF8D18C50C18
F43A63F7DF10FD16FF24FEE716FB1D19B7F3078FF824236037C83A7D28FFB935
23D9F14DD01459FD1BEE59BC189AA3B0EDC13FD0369D64F21405F984C1F848AE
1990C3525E998C840313AC9CFEEE5BE6E225C55598BF343A1ADD11C29CDA1C4F
219EFD5D0C2FF4BBDB2F7C4FEC9F973DA79B49AB381C2C68CE685290A25CE0BC
B97B345D66EDF80CF7C7D8E434711E2EBA0B7ECFDD328813DE1D442961F11EDA
3096437DC7FD88EC0EBEFDA8D1EA7BE3B22E63BA2E5D206C7F6299C49CAB1B3B
D3DD90480AF3E10E5626B7EF927D66729CF17C8738D8E4E1F6D64D183E04A62B
7303E7025AE365D9ADB792F52599CFC78FFE56D4417F2ED2CDA84CEC9D581AC2
E477F3CC1AA340638EE97668480DB7405B86983B430A016FF32FF4EA9CFD117A
C42C40E13EAD23CC6A1F1C14918EE9CD8801346985DF28BFF7186E8FA6E500FE
A6AB9D256FF8721B1FB41BA34915B3D0FB1AE1A829F0767951ADF8122A0370DB
F021C760E88091E89335597BA1B3915B3B1E63065E17744839EAE4210017F327
4C6745188399E725ABE897F0EBE1C7CB5FC6905CF4A7E3E547A418F6F1235576
0274C777EA01886FE5FB6F899C39B23DEA5AB43AD5580EAE6F3FD0145DD7514B
236B307BC5FEDCB41FCDB0429A0F9DC856868F7FA8F2F12C63E8CC2FC7C9FCC9
28B6D7A183E77F6E7D61FAA9D24452E0863948DF20597259E25BA79FE299A30C
A2FCFEC5582B9694512DAFF737CF8477DD9E626B12C84DF5DEB2E50BE6B7E2E8
D867F7A988D575366CE29B7370615DF1E1691251E0F3BEAFB41BB9AE82246501
3BCD5B69EA89644FE9738D445B018E3C289786B1F60CBD89F37CF8A1E3CCF12A
5BF4AB6BDFE767D3AAC593F776D381F7CB84087024ED123A69EDD05A2224F10F
D8E081ABEB05FD27CD6D252E71BD789A66AA9FBD54205B9422384911BAAF3837
9F28EBA7C7DA90D24D7D560698C1837D978EA767E825D62E28C2E864DE851442
B97CE6E4A6C1A3017900EB4719340D2AD265CF8DCEC72F30205FD96880ECE94E
165D07D0C8EFCAD5B4B1E861486F0DC893F79E79DFC44E97DF76A4A6CC320AA4
307FCB8E74F0266B5B177D5FC5B2EDEA366C4ECE3B502239B067013D261BBF33
358AAB8BAA5E82A6E25960467011A1D594F9FDD3F6E23E6A0B82FBF9EE56C22D
6A7C6A48F5A37D565EAEA643AF6614CA260DFECA9314987AE2E814C7E9B4F999
0F1EBF3E266C7E73BA15E3244330D83143145837FB44CE935B8B302BB888F23F
33757CAE8E59584BF2C14CB5CE756785742B9DDBED0789AC6FA67906A0013391
B037CBFEE5A11B3EB2A32E2958369AEA8875145155CFE3CABB35BD346D711E28
ACF549A8624811FBCD9D62CDB0E466A4FBC9BDCCA77310F99181551CF0D1D77B
6A6A6377D95798470DBA9315884369E301CEBCF27793ADF7B1BF3338F37B0253
00E0C66EDF19F33A6050CFDD8E48575769447A6935CBB2380FCA35A9EEA69593
0A19809DD1E4F31C470EB34667CD11B0E9D84CD20EBF8C7CF2D0189561BC97B7
DA969E929C04FB49C7BCEA1A0C120A1C8B44C75D9E7FD13B95694592D16B9A0D
577D12DE631FE3BD9D6CC183F4BB1C01059F0B03D9DF049A1DBD1658FE1B4485
6CCB3A973749981545F0BD5B81B419E7C202124E96BBF942428B0D38E5720B14
EF205A863CBEED9B500C919D8DE0907A8737B566F6B661885A88D88ADCFFCE6F
371D04C18C1831D631180CB338DA1979222FC39649B5AE3EE8F25CC476CBC8D9
C78775F03A60839540C234C4F66BFEF283EC1901AEAF71C2DDF2D543CBEB81BE
2F8DCF418156CEB3D26702B2A871F588D0F7D81C10D44E84EED223DDD67E0A15
4F283AA4E0C0CB5DF98F264F1BD94D7E59E41DD5DC92513111286F60DC32825F
6C50AE8EE1A66FD9D83F7EEE6DA22C28C373D3448D46D47871885A1A37C55A71
5742BE83214E05BC67231776925E69DF886F18E7DA6572324A8803BCAE80EC59
434C7F4C0B854F7DD3D856CB2264C6E68C1271FC8201ABE068B81F1C0CDCBE72
A0E14BF19B4631F1869D3FC7EBE9DF3E539817CB0472CB805AA9A5800E86A54F
076F34DE6A129E6F95C41DEDBE07D080AEDEDAC57E19249396DD49571FA5A461
4C3AA51976290C34C7B6B74768568CAE7FB5133168406635CCE51A3A5197A5F1
76DC711436FDD0D299746CD367FA092D16DC8DEB5F187358FC661B65E3AE4723
100E1D0B0354CD853222F53920BE2B47FA5A9A77C41B41DC7284E273BF14AA2F
33B09AC07DA33B6AA606ACE7A7807738D360D07D844BF65AD2DA72802633C360
4179CE6CC65A6E2DE58F2B890F3023BF5CC8EA8ADB3DC34296C256872DCF54C3
17438AC76DBDA47838F9DE1C532139AD2A2B98203FED7C00476338DE8AC53723
6146ECCBFB7204DC6235CF272E5D3760D235A411E33E17013D4D0C50BD9E7EEF
98A80B4196EFCA2D26256C5164AF082589283FE0E8FBA39624091AFCDC606D72
92084C9B448800A881953F6B21890EB2B2AA0931F1FA223D4921E8D5EC4E1A32
B855E5283A85CF01C2A08530E3DEBF865AC5CADFE5B0F23FD2A05C02204EA9DF
6B99A175593C5FC0ACE9FA87B5997486B659F268DA6D0B6A64EE7BF60351AC49
A8E6C4562613BFE454963C96A6DC21BA304ABC1296F55158826B135420ABC88D
B06E31E3EBB42CFFAB75CC79F1B8D1ED8BDE4E6DDEE0892451F8642BDE04D1B8
AFE8B5E7C4926E496EF3E2FB47F558AFF3761709A6B62FD5F1F77D947B7ECCFC
E2402E3E6AD4A8913407EF30C49374364AF286DB39F36AC8B30499EB8537D9C2
B60FE62416D0D3A21CF715877E5EA28CCF3322F45574FBE8689B64145A9B5894
23FE8E386C646710BCF518C1B19BF1654242E3BAD712670CA0D614270F97CB0C
0D02D519012417135D67D9ACBABA4B4AF6F8751B19B07B1AB806F715882AF00A
79BCBA40DAA77DA169262631F6D3AD49EF4EE61DC1AD69BCD0D182DA5BBD35B3
786A7A4E96A879168B604F5E3C5BEE9525ED9FC53FB465F0975703B8BD099969
5ED676F35AC347164DD26312138F759E13390EBA9E2FAA3525BB44E8581105F6
23CC2170D466B9B025A80CAE34104C780DB2BD058A8C945779E0F787BD7DA817
96DA835F45B4380BA8E498A272328926E00054B156921AAF31BE4CEFEFF3550A
0DD64039C230A6A9FD51CB0BFE2E37E299EF2A6EFF6442DD52B74543C2854EE8
B354A4AC1959FEA21109882351BFD4F08A3540248476981DB37BBD08CF5FFD2D
36840A68398FB360A92364C42454802CE817B1DD2B7CC9C8DF9A51A71C476D7F
2E702DE489531265C89C158A1BA9322B9DA5816045E2F09622B5BAC4D58ADAC3
F58E8EA53D1CD9A51A7B94F5483928FFCA28FBB0B027DBE706CCE464ECC69088
FFE659EC6872229D81DB103633A6E33C3E6D75DE1438EF29C178C0A82E1EF533
2C61623C1DD519B13223DB28DF011F7EAB4F702118CF896E1F1A99784E96C1DE
490362FAF9F532EBFB548F175E082B3C8933B501A088C86AD39533D1BEDFFE88
5325D10C9BACFF557F62BDE5347A3E9F093BC1F35B45FA2277FB118F85B01E43
736EE24C09D6C48B87C12DD547B3927EEDC2E1F15EEC9EE537932BA07C173374
AED5BA2CB45A2C47AF970278F9C97B8E39DB387A32A7CB0A03B3C693F64CAFBE
F7AC5456B005ABCACDFC27733E8F4EB6E74F1A63CDDFCF95B0B198BC5DD86B2F
A6E37EFEF1C0E3F545755FF75BAB52FFE105A19D1B561648FC3A1D8DB7E6EA57
688C97CD7C7C9D106D3EEC6DE76639501D71AB534A95B3EB4C1A8D75FBCEB230
BBA2CE4ACD1D0A7FFD7A01E0FF52A55B8266131281335F7086B5B7DE54F948F0
DC2E13D4718D04ED9527242F1C01B7CF5EE30FEFBF1484EDCB50EF0E4FB8004E
BDBFAE343170B899F8799DA8789470A559270C924151D694CA23892203582A55
6DAE55E4BA58D55A7C11F98DF053BFD881650C88EA6D4E2C9DEDAAC1DF294CFF
9B5AD44C224381B094C0F855F914536869F854A3505E8CCA600D6DAA7AEB24D5
2184C44D7157C274D9BC1BB87989937753F78D1433C5E7F960338A73A3AD7B3E
A9F1BBBA03D62DD5954DE088ABCA88D3E224CF9366C714CBADBE362EDD7D516E
7307BD3B826865FE355B1BA190E9598324D4264B331A511E1FB2F592878E5DE8
180B08D5361D1D81394A11143D70911977EA5A7D0E8A59F583131E92340E5E52
7FC26FD89FEAC611AF4A03E16BC55BE5525AA1F3A3EDC51EC50E6C7F2463F7D6
050CE676F06EE0CD971411E13798A41944C0AD33906AD029384005A74AB042C6
F4D42CF6A8D9DC1F6A73151BD3DD30D3DAEF27125F0BD2DEB6724DD5DF8423AF
953E9E9329C8F46245050BEEC2A92135E1705E753E307CC052C477EC387D3698
6A3ECA1856E577D8AC3C71C1D85FB7449CEB3A27AF22752746417C63DE39D896
411D284071D290F35E9B5A8AEC7752858331EE0C7188A74234AD04CA1F485D4A
91382870E6B1645B32A29F37A08BC5A1454CEDA92E775A490D72647A7E7689BA
CBFA9A312A9F69118ED61BF32D8F4B0FF1AFBFC5051DA96FBA9B557C6B569D71
D35EC69172F2B3C4734C677E9AE564B4024DFB043E1ABE773CBC3661D002AB19
585E02B43D378ACE7D3CD045170F95D6191F3281CEB7BCC78BD24BD0AA4B085C
F2D3BD1307A8EB34884C13832466823DD8CCB8AC705977C939A498F35C5E2EEE
45A9F3FEF6B8BF6BB0C6FC4D49CB8061654EA2771727EDE0A7955CE2E21DCE5A
E2D03F15752D5A8AC016036169CA0B89C5600C1D91F877DFBA47BA9EF53FEC62
0594715C6BDC65E9CB0E3659AE37DF0CBD61A8D5F5BFFCA8CAD6BD29EE0235A7
52E468BA5CAE58BB54C7F8A1BC13FD73396AF32F15F31A8F9DA3A325CE0C110C
37A90B58B8F1BF657236FA7479E8DA89E2BF9537374A12BE9CF951CB89162EAA
096308F7782C350A93A234B2DF61C2740A8EAE4450B7603B0712DA635A3A0193
FCCAA56F93F114B53F82A23C204106F5E5BE85533BE7D472D0AE963B6720A89D
CC65387E745EEB8E97EDDD052D5E4E718FC2C74D71B86C3109AFAFFEB0C31B8F
E7475736AE1662D531C6B5CC30705A1A3103960357091DE0BA4C800DC5E41F25
7BB08B6CBD2CEF2F86C2CF0929FF0679338C083C728998BD1AC0D43F1AA652FB
1E66B2525D70B5D913ABD8EF5E30FD84E73BE1E4434EB9ABB02640D69EFF58A2
B4304F395D365C1A48A745A378E3FE5BF5DB5A81F49082DC20988033EEFF1B20
0B8861EA9D7F98DD697B9DD918ABE7A19753BDD3275B77D00A2AB8DBF6EA6E65
72EDA8E26B9880367B344B0AEBD538E86283945C11C41A69566EB219529A61AA
F8CBB8B8EE5F0FD59D0CEDF521D60D332092488BA836CE401105AAFB6C66820D
BC1D7C6F186B84CF1DFDBBD7C2772F465E105C11FDD07D23E2F105BBCE98FD00
DC07EF8C00D4CD148236B55033A11658B5FF69E7F3079B6CD66D8B330B24A050
5688ECE666928A10E2F80BC9861CC7439879A491FF36CDF47ABA476CE9C69240
725B84F74723CD86357D9C6078F8AEC542E98376BBCC89A9E7AB94C03B686B13
C8880EF2C0AB8F773034EA57481F43E4FC476647EBF8307234581652203A3625
0AA25E8D003663D5AB6D9E4D49FCB81DFECB27C6DDBA4630494F461AE32BF435
5F860128995EB7CFB93291AC318703D49C50952FD4C8C69FC38E208C130BA90B
DECE41578C98ADDF18652E224DFE59BBC83083831F41EF23D94DCEC7B3642319
BE02A2E5F93F1D575196D496F02E63E6E071C5235DFFE1274C11555E017D6BDF
D88ED9928D934169920F7F6624B4142396FC7BF4D173B067BBB6C512D0140D58
EEA0DDE45DAFD813BC5D248569054F47E17FA5A16B56402A36E1F506B20DDF35
F358880C10B9FBA427A226E5404B71839F9889346866C055167F6F2601E9462D
F4721F6386D1C213B623834C7CB4B6C439A2E90C54581DF5CDB984B1E06447A8
48529E3D9615A898EB0A601A94455B2C7E12DBE00E90F05D4AC0079B4CCE6537
9ADB3697247460D66020B76739F372C3103DA920D1A1F547C1D91C4F0352AF81
8081F3DC484333FC7EB38DFCF72132C6912EFD701E3E022AE56B6EF281DFDE2C
7698421EAEC6585E084B85BCBE9B13A74F86261ED0DD89B284E31958432E8DD6
9057F351AAB2D25E6D9A09EB30FA127E0F4959D4EF06B47D81EED29F7F795CE4
1C478B0B46A2887998B28F24BC26C09540D1B8CEDEB52746E2CAFFE9D75627B1
DE9D1D4F024E25379A3E3C27D24DB0385EB40A43B154DB14220C315FEAF1B7B9
10D52B6D8396B5DD2CCE991922129189FB1A15F9598C7740A33180B0317B3E89
FE3A8E56DF355807D968B84A7FB100468C4529613E4A3182F7633FB174D178F4
D94FFA70E5D7678EED921DAF712A0135F35B9B1CCD7694D785013984D02EA2F1
DBCD5A2FDB5D2EBFB5238857784588150491DF470C278AC43C3C7C0BD23DD449
9D88E9AF66587D0F331911AA1EDFFE92A4DEE3DB725BBD80FC88BC1F1170E241
0086D876F6133E6FC8ACD526F63CA437ADB164A2C5688E64955E10F341B7B81E
A348E24A55E261E03E7AFE2BCBBDFC10C2AFFAA40AB22494D08EB379D8CB64E5
AAAC35965E06A372CC7943AAC99F4998C14ECBC49BC30D6E0314C43C14066C34
41D92710CCBCEFE37F9924DEFD1B1017CD1171632B91D575030E5339214DDD26
4FD3CC4CF4E15B3BBA7210546FB7F5422C7025D6BD06210BA8FE7DD8001A209E
D6B4B91132C6D5B59FC4DACE4EDDABD6576119456D0C083B35033CD912F06002
193DA29EB6D491B00719A97E46DA7E0F270994F122A48C560C12C41011E99E55
2F82A67791BA5B1FE8D74CD292CF4E35D6E574A7C52BBA9C5088F0C49AE5C919
1C0D6DD4A64E1F4023DE1163EAA94F1A515BD7A9B8923061CD16B6ACC639E69A
250CD2A970B8AFA3D9055FF80B0A9C7142E651D6217E1FE4E74E5B98F82EB519
F75AD1F61ECFB1883B4441730ED96C93EC733CCE3A613073D28515CE6918CEB8
BD12AFE9B0F144C466CC6C0C0151D97D99FA2408B657DA9992A8DB8E5CDA66C7
BFC94C2FE3584257054325F621D13E70A4B7BB7D3C1DC033D9BD568153E9C582
7A77DB59055A570E1D82266ABB1F2A3C2AA6716B74EAEA91DA3D8A6F1D568F4D
510D62F881B0713FDB294003CFB7C926DDD1139D8A35EB3A084AA0E3CC3C51F1
81D90992785B8D76CEEE71B6FA1F8FA0EF6CC43578C70DEAD6B93835D5ECC134
4096A4A2CAFED13668237680EE6F40BA560B2A6C0895D5247D877F7896781449
41369F39084CB266753A0AFF9057D6819D2452D01F393D464FCEBF55E9480232
C34A5AD7002418F6A825B0E4D345CC848C9E9A4731CC56BA7A94ADBA674280CA
DAA88F7CB4F7FF1D292CFD08A3A0E9BD587D50EDB59D53B7B581953CE53A6F20
F6A009ED2B16C09F618880BA68F44292B23EC10E661F1FA11CCFE3CCFB57345A
692A4B84E00CE412E5A0D3C666C73A03C8EDF836D0011A50447DC6E1A483BB71
4EC451AB5F16CA2021B83E6DA71C33828CFF77C0C881C2F2122DFBE1D2E4AEE6
9B2FD47EC0C3BEA4D3F2ED497FDDD21F38A47990213258C3683282FBDF9A818A
89D13CC66D6FB986F36404AD9E9682F94AEC9E3CB751B4D088DCE729B3D68933
BA1D2D0E52AE242EFCE7AB046BFD426A85C5EE149F191CA800EF635481EF23CA
24E0ECFFAD6B52510F3AB8B9201D706799FB7C19B6BB777671F1852B2C5C5897
AA1815CDF19E6ACDB3D2151F83B22E027CE0E98166B20E4586850D1CAD55D9DE
130BA78C84C8AE77010C8D90D1E8539855A4BD94249AA70551B294075278CF84
E2AD89F30C4AABBE388385AF7EFDC635611AC84536917D70C429840F03D3FBB2
04C6D59B59B895EE94A5EEDAC954C033A1BBEAC0D78EA8B9318546BDD02D36CD
00AD9EB38011294101ABF942640133FE0175E4EE205D1F268C83283BFD4D31C6
DFBF53361CF3B0503EFB212224A8EDC1E3663B9805DEEC81EEAB71EC6E6331FA
1588EF9D3E3B8A797AD0E4F049C2AC93FB7828B7DF29C3335F72DCE3112ABD93
40C05C182E9D8B2474F1A34C0D59821E6B9AC300A35FE7F5C7BE64BF780969AE
2DF4C75AA9210977A1156E0FDC55B5AEE3BB9B4A2DB28C38D29B519E6CDC264B
56C30179B6FAEA065D29796B876BE1C11183AFA0282B65DFF8078AE29918FBF1
4D739C8ED40BD258CEFD4DEF076773CFFD55EBD46A05F658DBC847ECE839AA5C
B42519595C285AC848041A55AA423F37D565EB1081FBE1E8AE0C03EF144ABD19
CCEE1E41BC3CD553DE5E739BD9DC55D7B0ADD45285F389EF4DB228B48F58B827
A38EC357C6995612A376940DB3BDB1BC7427C9E01E80DC1E65CF0B16A9967E4B
96C822D4E5FB80E4302B9AAD3A6FD483FA2B851DD4EBAB83F9CD2C6748ABA544
06CA107E50F90F45480F6A50282F67819A21CE2A7B928ACF106FAF66E24250BD
FADC3F1BC7B8D3AAB06D9CD63A40C1B0A4FF6DB7E61FDE2731D9FD9BFCCC3500
FE072096A0443AD96813FE643CB4679A847AE845B80D5F98BD737FBF69342F5D
FA8B1CC27BCEA41674CF0A2291C19C2CA83DB94A55B3A6F8C079565A4B227533
48D5E99F3D0E161DD4BA40398FB92C8C80DC1C1760F6B2E9EF506DB680AC9D67
5D2606B34ADBC74867733C0FE63B4538F04FC52A729A6FB0E49FD9D026F22403
9786A939CADCBF9D0E72D0FEA1230B2A37866E364166DF42D07ECF362173FAF3
C8D20E4175EA7774FAAB68E18303521B28082C081DC8FE5F216508D4FA3CA087
3DEC99E419B4C18F3CF39F7F341C65E5AC80A0B265DBF2112248A61E4D1A3A2F
78C5AC8AE0119750933F43E10DA90095B017F0809358E33DF2822B194283DA5C
4F55E3B4237598FB613821F06DE8E922958C201C60EDCE08A2526D5499FC5D9B
450C63F831A35A8A5D3DF8B1AAB8130D6E931B6F73C6B1F48002437C576CCA9A
9CBAD3401087BF4BE99CD985907A7A3E2350D8C173F01CCEA71226B48539DC54
3AD95EF1CD3F2ABBFFF7FF8FD57537742BB4DC167AD63D3F168DE4FAB74A7195
9CFBBF3269F546E0D4320D78ED74E1E867EDA10949D605D923C10BD7AFEDFD2C
FF3F1EE956B723DF3004A875DA2AE360A4107472D800F026C1A13909ACAD3C4C
D4D890366C817931DBDD0416611659402907D3C874D5552E0BD43A6DBA052E98
A3F49A2F042D59B19CCAA6A7BC03CA89D6DFF7B67D22F9BC35837F591171923A
27046B5B5092019C817BBBCEBDC1D71E1D5EEEDD8139BF3B10164A1EE02F10FA
A1B16DBF210DED55117AB95277E79821CA3E5C99524FB3AC3E81C1512F3CA561
81487552B0BA3FD6F6F13BB5F906CBEDE823E07F19EE91BCA6233AE0B08D05CF
AA6C5654F1683EA11BBC34A68C885A752A1F0A262621BB40B5394A09B09D10C4
5872CD5D22EAB248FB6622A49FF635ADE803EA1691F1850CFD67D3B00D54D41D
411DAF77319F3BA8A190DD8A5ECEEA94DA23504266A7DD0FF022729AC6D468CA
972A550985AF1222B6FCB3C53E18AC94FCB90F36F514E03129DE42ABC58C83C5
7EEB2A2B807408E14FF93D7AA4150DF141EB9E9F88A9F4C9E6FC577FEF1766FF
B54DFF95935DF935EA15B1AD44E1AF7210971D61B4474967B22FA8A19F8BC9D4
CE70629368CEE73AEF4B621637DC0FF9FEBAB329956EBF078A5CD6247361BD56
FC22C70631415743B83919872BEDDD8D6735BEBD9C66F5B92023888443F18567
AC1CBEF0A2D3DD6F75F42C576DED2FE793038CA678C5CA56BD99268AEE6E8195
9A277B961F862AD4247AC7C73B813D42EAF9678B87DA84B2063922DB1D7572CB
3365A813DF81E3A9AFC5DF5847F7A6B0EAB1EFFD4D853B6229CEE9D3D4C5AB01
DD1C6D625673FF579CD5A18324202AC6D309D16F572DC756C14C4FB0E8DA7677
ACF68C46EBD85DF198441B780FF13C690C114AB6AF413C00FB4731619FAA9CDD
2BEE5C58EB3C4567963863A92FFD724052C8CB9547C78DCB588C5B7CCFFA8211
433A6E44C5E575E6E20BFDDA3530EDA682334783A61A3A4BC76870CD8F0739DB
A5E20D1CB2ACAB536E49A9D1B21CF82FE9000E5B487861D19FCD85883AFE6E85
73093439B1A49D7E4912692782B09D91FF876B01A0300A3F76982528CC970F88
E9AE7624C5C3276FC73DE3B4EC9B872D59AEAFC0C3B71FDA89E563B6E4022268
77BB4DABE89359F769431297A2C12D1434B5E630A3B887A9C3F0EDBF721496F7
87D68DBCF7ACC817542906FF3FB77BF3ACC574B74E00A7E3B0796134C4125BFD
BECF49A614BDBA2D1FE75F8B7C2DC010B6CDB6AB2E6F90B2229B6967BD23E079
7BB96EDCED9547EA626D68BFC2D0A8EB9D395419000B35BBB6FD7D7DE499D772
5AE1CCA420D6CA0FE8A7BA8198F38B68524EA5613A84065B6394413EE8AB5B1F
D49634BC30E512D150D6AC9EC506ECB9EA24825C4208238C3E9BFE7761CF4D94
1ACD939EF561A30A727B8507F66EEE3A28B5DE6C5938F01CC9A4347180467868
E45DDBD88EE345F1A2E0D0F2B3993BFEDBBA17E36F7674D534C8EA9B66E0DB09
1AFB19A2497CB7DD1544791F03626003C673B452E240DB4163FD340D3D53AF09
240B9693B9418BF29C41B01A214128B1E062A6B39D8805585B39A87B856A8AED
DCED9559B22953B9F65A984BFEA71BFA6B4E1E0AA812CB239F1676E5892E6A0C
C21D473174D98A51A3347E459692EE4D267DE9B87F9F5CDEE5AC48722DF1CABF
9CFAC3E5BB541417528690DC91849772B54410B4617157527FC7843F913DC7A9
49E5A846503DD1F97684B94A3E753C33C7B7351E0611E894AE63D56010D76D98
79BF07ED599460990AB5733BE9B0FBFAAC5CE0F507A586689EEFA5D7DCF7A393
3EDD0170D7E50A43D78CF58BDCC35EFA2D94BEF67B86399C928A38A34ED23BE4
21392ECC73C2F208E7C9CC4BF59B41BB45D930A48C688550B02B44A6E1245C6B
05FF7E2CE48B9BCC19580F4F2F29E7C27849B70CF52329FCA932881046BA421D
3FFADF73EFC6448422BD4473F2BE235F358A0925D99A8466BA78105CE05F95B2
3534A248159B29F3D8A708CF0299AA97EBE1AB1D87438710EB41D5F725C4042B
27D9041C0E3A839B3BB771CA02790605E37472954621FBB947317FED47E0F666
1848E90742F8FDD11C810C5967699048DBDAEE245BDE27F4F3BE1455D0B0FC4F
7D2E1DF35E6B2CBCD54904F74451CBCE7C7A701FED1A5BDF6D969DD8E629AD7E
B704811FC93AD3AC5E410DDED8392C80E0DADE7466A627AA63CDB79E5FFA218B
A2ADA37B100652BC02A6B3FE14A1E019A5C447196A6BA7B95DDFF9E27BFFD436
C8A47B92815DDBC8783EAAC1FE72D210C7DE84F39D1E24ABBB325EB11C1B30EC
D8AE414E1404E7035E5FF74922A584FDCB4EBF6B24A68A5D04F8DA80B64A2FBD
C7CB020CF0A59B000A3B57709229F1C75CBB8BD94FD0399D883735C019154273
BBAEE4B4774A54705352EAD8526549F007D6A20755A3143950095C17B28D0B9F
6414166669073B90304191C33866D2A13BE8BB1B4FE48F156F05A2228FF825B1
03D17B204A9609DCA23F7BD3B57FC47F5DF67D1542F9E62F76186501E7CB3A63
B4C14A007F7C7BF332030107DAB2451461781BD53D518EA93E2705921914D32D
6F97EE6F74D2F11742E044D5051027A9407E99C47DCE7C08A2B017DFCE3E0593
A3F372BF7EE0FB8FB1FAC342DEED020139C15743E636BE98504BB00A5FDFCACE
DEE401E1B551EB152846BC3651E81F7183FEA87AACE43EB43C36319FF0984E35
D413E4ACF8D3DF4642587EC705EEF6C85305B3DB8984CD739C9CC0746ABF8417
769E8394C43A3E15F3F63805B11514845042298908BA6CCD4A3D03675E2E939D
66280CAEFDABAC2CF506592CFF433FD211142DDC1115754BC8B68B7A6B96C589
570D83DA6ADC499D01C6D46C611BEBA81D7AD33B140C2F072441CEC7FB2C9D7E
60F092B40FAAD11B64CFA34A29EC138A7ED83E244501E507DDD637918CACF72B
9C29F0F4FAE8570753EB5BF2C5E63B6223B7C7A305AE5E970F9D94047E25219C
9765C353767C25B74ECF81998177E9ECC03F27F94BC2EE53A2B92EE83A615FD3
DC0D8A59DDC5A0B4AF9A565BB56FB929455E1A66154A0E07FA46FEF48B76E68F
08E216477519C9B80342FE26DE2FCE2343A9854206B96BA0EDCC3E1C22CA5842
3B941323B30FEFAA515C2EAB8C1530B3BAD0DACF5C52C79697393725BCB66E78
210DC37DC5709AA7B78B8A3F22FC00B9917DA22385BE2DBDE3F9933CD1D1D888
6888BCC4B3BA24E1386C56B77BFB10C73342EF2C5C90351D4AE8EA1AA0B7CAFD
1431D749A3A9E7E27AA0B178B29B37031653B35886145F7F6D2536B3FF28220D
1B4E8C85B9E1B2FBBBED703B440524AE4CDE4A663323676EC581E78313BD5AD2
F1DB2E1B7D943BC185647C3AE18B832D5D79D79FD4430A3531BE99FD4A0C7055
3C815F27B676CE86B13CF09B06481FB4DE0C0913B27C23D38A186D80D8BFFB73
05A23681867FA7335CA1F101D60231B730D00DFD5043708BB73EF20E2D2E9733
AEFE2F54F6FBB048A64D7F8BE40A517450B7702406E5EEB9202F892EE9705266
DE0FAF5814C4396322E1C92C03FDCC6BA1676456E2B5FC3F4C876318960F07C8
00D001334FA20003AC775AFAC6BFCFDE1CF81E0D180DF321C8F8C7330F03CA43
2F2AABD3229257950B5CEDCB99515BCFF40DF731463DEF20A4ACC9DA8E6FD573
1B1AA74AE3232B989518BFC705E56F21E069FC8322A2E15F0EB042C95CE39ED0
6AD1621C86AA2CCA4743961ABE6A2C8A068C69169CA3EBE1BA54C02B9A715652
3BEAF2F6D29DB4EFDE598DB67CA7DE158CED33C5D36E7BCB76473A6C22DFC3FB
7AE4E79A428A013A6B7B6C6EDA786E7E7F05DA378A74B51A24BF9439A9C60AB2
C6A5EDCC1C0482B071D3DA9ED4778FFC6808F91FF9CEF8357F884DA545296CBD
0B3020C7F530DA5CD9E71A5603FD122F403DA70E14EA57F516D3A828AB87DA44
9968549E355B4E5F455876677F8256DAB494C9584E64AAADC283F6D8D6DC0C71
2539D018C661CE1B589BCB942ED3A4DF9A7671649E276142174BF3FFA7A9106E
543C9F1481516AABF7B8BB649874CC5B63EFB4A0F5ED303F0D3EBE8C18B45863
401CCA07FDEF3DA29B4B80294C286FA5CB2F91142DB91464876C88505131CCF9
E980FB946D92E744ED0760D7DE0C666435388AA5FC59E14B8644A097892577B6
B65603CDD0E499E348B828784A841F059A8F9FAAF74944327A74C0A00029C90A
A24C55D77F17AFA45FD8D53E883F76F5CCCC7569F0183D0942ECC8374D0A2EEE
2B57F52B5A23881FF47681A2AEA16E8A34A015C2F8CC3470D4B1F76D83483626
93B3E5747146FFCDB89E0E8FC31D4619EC4886FB03804D0F42F0F397F2F700A6
80DDCA8A7F3C6BAC78DC5B44C87B7F598003312B51EE5E4FCE637FBBF1D471A9
84A4DDE8BCECF3E7D142D9AA45CC26D2A6CF2E5988CD9745B4F34A1EB540E573
99E997AD84323E433FA73F303D50840C34017BD2BCB677136FC96E141E3F2206
929EB08042E727C66A37F013402FEEA23857ED085C07FA645704428EC64FC593
6A8FC701E25980C5012815533D7EE4BAC4D9855FB31102FC5B3F37311E45A3F4
87A3CE527229DE343C9FD44D1F30D5334A2E46DDF6D515196558BC7F12759119
B85DA56DB1E9DC5B66B29309EBF5CF7AB8C68F563023CE8E76A85B8F45DE2510
FEDC0084E1C4F61AAAFA2470F37F5D9C19190821A843131E99FF5C186147CD98
54DA2FF304A7880D5B616ADAC242BC8D066D09DF5244F53F24E0B05317CFD54E
B0FCBCAC4412A4C1A53A7492E283E823B30E532167610DDD8EB42C6ABC85C903
E17D9460EE2A30938F0100D0A5E10CC5FA6F17D5500A618A077A3239E94615DB
2A58784DC037EEA278A372C69BF86736E48835528D6989259441D25EE8127384
8336EEF74AC6A954B6872925C20B3012B1AED1143B82426DAD1EC9D013954996
78A30E8F99DBB3042D26265EDB1B24678A368601BA2926AC66F47424038CBB0A
E42F0E9610169C7684FF38A463E7A4CE7EBC840F034A98771C199A9E0A6EDB93
BE4D8F40F7DA3FB30B15AE5F835403AECA66DBF36413639F99B6A0F55C97D67D
0C286BEE959BC3672AA927C26D84995505E2BDB18F2CF3C33B84896A3C219512
DCC36026E4B16DD2F046D2FADD0089D83150A1D8A3558323554E144AA4326238
C6E996F827855ADE2003890B5B3EEAB7045AE073622220C3777149D966E1A1AC
1C3C2E70D3740A09E06C25F29482AC0CB4A10EA124A88A905275ADBDBCD12C06
17AB1DD061191C596690CB82939BFA3B47A5D1044810D10A8300EE64AE83005E
CC91BD5D6B882B062562AB7BE99094EC89FC1D4D47ED728C1E5828134CEA7578
44FCDB7C7075CB19D37E0E656792AD707CA89C30A6EFD900F34C8702D16F5EE2
EC15576CB180B6A036E08ED45A136AEDC23EAC08A6BE536FD546CB945DA04671
214F5548F2E60A156A3CF5CF20801D0FA03085676A3D085F071A6313EDE76A0B
12C7E2F221DF195CDD7293B6BA6588589D813D55FB441C26C81DB824F58261BA
CF85C9D93844FC1504583DCC0FEF784EFFA069F1795F936C6BAC025B1C96953C
87CB9D59FC919995DB1E32C7F31BD0FF11067EF20CDF234002062009B96A4205
0162A024430F99F48A0171B299BA67E633E5AA1BDDA153AF8708A62DFF770C7F
750B404F8E797AE2CB052D3AD552A2906C76CDC0EC260FA81100072E31FEF4DD
0D114A33EA03B4605A96A405C0EBF7D9E1D653C42338744ACEBF890C71188246
13B2BF5BB93F3BE31B360FAC08A97A7FD9147164661F677189352B9F9902231D
09E4934B9966EA72B3D724CBCA67742D241EC35328FC5DB208A0545A5938FCEE
6E08A84D54991AC96F9CA13E511FBD543BDC4B888CA8A2015F761949EB0A5943
FB311B9AE935562F3482D50B0768B97EFAAC00343EA9E669E4583DCADB908E9F
8583D7467D7F23204F12D02F69F96C3337ECC2D5A0B35BCEB5118D64E5F5EE73
9847880DC4E66CA57D40FA9502518FAD0DCEDDF483E72EFDC7FD524232A9F49B
195249BB0FD161B3BF478C2992BF87B5CB9537F34F652CA8231F63FC7B8AEA82
4613192AE735EF9462E734A8255E5AF1FC2DC09B2AC44A2EFAED81F0FD9A228A
43DD8DA80C8D3063E37D8B145754C939AE337B52E32DF3934566D8E95AB2AB6F
8A8E8BB5F27FF75E8ED31C33EEBB358D318656D75CDA3F490A9A3D6ED5DECC26
9030DFFB2615A9438EA07FB79509789830D2ED43AF831E22A04A69BEA80EFE0B
EDB07840C7B5339712F99182E333EC54E92C72C1F1DE6F30EE7591ACF6117615
B0EDD68B8ECC2DE88CD2AA87E56337D635256168EBB8A65FDE85DAF7F01668A1
E34B6D9765319F4878D4F0E9D6E99245D84D3376D958C048CBCB6FFED84677ED
643E38B736E331090F0AEF525BD3C1601BA093751A73405132B6105660078210
088545E40C48B69F4E97F7A1D5F253EBD8CD5D18F4CF3B9D6F0EA624E532D74A
5CF2404D0133A7B579D29F8ABD89E459F0611F7790481DC700AE4B5FF528F5F8
F8E43CA107D6FF839F891F8C2D69E8DAC4993C31F15DBAD68C0F2C1190BF019B
FD18DC974798C3712E95F33EEE149B2AAF9E373EB1DB35146FF789B4D7274714
3A62BA677C5FF0C9616D9765412FF353ACA5A8995DA4EFBB05E80787ADA9FFF5
A85446B9051366B2F261EA4F0EA9FECAC0CEC742D7B1D252887ED519AF5F711B
BEBB57655239DC85909E5FCF8E6D0F622E2689B504D1C1094591E7FDCC58453B
75A80236098A7A3E6578A12350305B69C2FF62B4E1ED64F5EC675516CF9E8A5C
9926072F7D25334D9B36EF3F84A2F92066E23FE4ED5A75609E0CC209FD9D7A77
B435A0D2111F793C180B3178ABF6E4FD0F14A30EF841D71A73EFF864298114AF
9EC04EBA545702BF35C7FED85C9249426F263A8246CE079DBC354774076E8449
D54E6EE647702BF200F3D4F1C6414A4B2EF95D63C9185257CE017CF306F219AF
DAC08DA5230ABD68CB481FFD6BA47CA51511CD23377A44769141960F80392E0D
FBE34560C5139610569E30841E3EBE7ABC4CE2C4BCB93D58827D4FB4B697008B
E5B710C8B854A0A3FB0C79CD66E73394F0537A5A58BBAF06ACE9E791B0330066
3CCC47FF0739F8D58D274FFB021ED2F0DBA662A0A8AC4C4DAC1357DF0326CD10
6E8B9E82098E62034DE22E4F523604D968287E0BE2A3013CB46E071EA03A2C59
32C99BC109F4339517EFD00A4C68A4F46A985F51C62498F8A4F94E48477EC897
9F2F860AB7529B5C520167F23623ED3ED9FD172236760DF3FC93968E52E0925C
BCEAAE58F4A1ECBE809D74D90B8831A7C1DB2B732CF787FB7517BE6F80910B4B
14991DD21BEFCD9A8EC5EDD93027E1BF69AF4D87C1B28E3B396CF7CBBD05088B
8201DDF3C8F88312EE2FA7A9D2BD48DE8570454C201E46DF127F7799DCEAB29D
F2B403BB5AB618DCB50CE344E1DC763CF90730878F2507EDDCB69D2CF3FCF5FF
26FBA177A5A5BAC9BF6E8F2F14035042D55B2D657ACADFC6ADC61AC89B775D54
F04F7004BA95DD046A52C36F12BF6F5A6FF5878677BDC51566E683306458BA72
AFDBF133888F50D43D1DBA1CCDFE80B7C46175EFAFC4BEBD30C59D577D76EA7B
0AD4A9D83437DE5C65814A46C88B7DA973E8FF239A28068924EE05232EAD60F0
91429FDA46F1BB6D549FA8302B60D68441823066E27CD1B4BCC23CA11C40DAB3
ABB047B8ECC7E0061F3E90803638AC8124EACA97AE08BD628012C7C7D7DFF29E
EB77CD8B1C747DD9B1B2E4BB4236EB670E456035EB920FA31B15236A3A5DCC5C
7AFD3C1DD8F13D550EEDD89D28D07370EB199FE7F960D966B19681DC97F8ABD6
4CB39B547634FCBA75EC9F5C43AFA40DC70653DE61F0A218531654C244BB81A7
99D42C40A5740EBDF5890751CEAA69BBBF5277DE313BCE5D882FC420F7599682
07DA3058086324DFADCBB49CF654A7533F8C48E42EADFEAC3752494016B1A9C8
D0B6D6F0EBC25C5F80EB376F55EA9924DDC375F41A8368403710A307B1477D60
D03BC0B9BE2FB878ED8A0D0D21CDAB2E665BC0E6D12CC52FB6C54B52D1005277
71C6AECA1A64F2CB597F0116B2CF9E3887EF62957847E9DDD32AE0B4256CAC33
118FDEDC44AD9929DD2E5401BFCF2DB6CC4F410118656456DA428B8C51933727
4D4C950F64195FB3B8669158DE76404EF6BA187DB60FCA46FBA28925442F09C3
A1D6611E22694FF56AB3FE0CAE0924225810DB2A321AB821F52A2BA4D8BAB835
5646AB9FEC607E00B4B959113715EF8779F43483042937D6C3C965CFE38653DE
6A4635B1CB76E9D39E30349F22D21EB1C8C92CADA5E5ADF442AAC385E60F8A2A
B62DDA9DF45F65FB00919612648F1E8466D9FDF726A5048B0AD5B566EAA59FD4
8CFA14AE5D17407E1500BC0E0298701518C647BBB348A5F77B1EA0279B3A7CF5
F1AD799E31951B610BCAF29A55A81AFFB4C49B1F3AF8D87495BBF78987F39704
8FA629FFE8CD486C78FF17D648BD94594F76D88FC0BDF9B41955500EBF2F3D3F
530681456A07FF93620B0FE0B478DB0E268BAD7D402F35D2EEDCC1FC79EC29EE
4CBE633F014404CA5142BA9FA47851027FB849D351FE102EE6884F4F8BAD4C05
24D2B3110EC7BB761E41D203933A7F6926BE696C3CFFB564029CF21BC9CC593C
FAAB897AA0A03C6D9771FA86676D282A8371D9435F50E44E8947B5561706E721
93481750A43E58247C94DE384B86D3CEE51AE623EEE7C98D95CD454B7A63DB7F
C16C745CE8D796863E7E66FAC7747C356E175AE76CA418B42A25A17B35FA229B
3FBE3D298832004566DDF1AC7B601266691EB7123DB20B0C0BEFEBC2A16427B6
D98763719FBE4766D5DD87B0250050BFE819362773EE199107E4A2CCCAA8245F
C71D65F02B3460D803E93A70B46ECF43BA11446BC9E963B5CDBF633F746E8FF8
27E442FB400CBC90A0EDB7C9FB421BFD5D81CAC7094E2701690098524E12AF27
37AE08B23A2A84BCDD60B9913A3410BD2098ED4E279FA5DE33930EB496A5772A
E942256C441DCCA97D4F590E877BAA94D16DD785B8941DD9DE27137DD68056D9
27B4C3E612030FA690D9DC335D85EC9A76CBA383302C3B7E4D59F51E2DBBED81
F24D23403FD7ACECCD0DB62ACBA2226DA5A899E5FFC3C0F7A875DA778881FF29
67120FC2AF61686D29069A84CFC58E0D7BB732E175671D4D363B7FA97452A96C
ED7A461DA682F02391F8EB022873E9A61238A1331740A04CA64314D7F1943740
DDA570FFA27D88E295E1A830FA9766211FD760A7FA41372FD051E4573491BA54
FCD9EB1431CFE3E798B6DD6C6519F6DBFC931FFE435D0BE9B54C35A4C4CE6988
AA23311DC0CDD67A1236618FB8E027640780E2546BE3D995FAFD291EAB54369E
26DBD8E7085BA735115033061B287C0A122D4A47E68BEB854023A8472CAEB6F4
B8EDE2AD0650CF86493EAE303DB4A4B88B0D15BF274ECC0D1ABD7795244894B7
4A1F4C529EF0CABCE7DD6D5185FE00654BDF0D22EDCE8C4B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSS1000
%!FontType1-1.0: SFSS1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss1000, tcss1000, lass1000, lbss1000, lcss1000, rxss1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-201 -321 1483 901}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B507C15D01A499CD662DAB17970AFD6
236E76C573CC9FB9694E108FF83C57802E37B0D97BB6B0CCBB876708E1C0AE12
639B6D6088724C2736DA733C81D25DFE023170C3E2E0AC6A45EAA1907ADA42C4
EFABA32178A6D1C31006503985160B12FD6374166398D1787A3269D2C7CCFAB7
E91A1CE678BD7C0243F24DF77B15E9A868AA443F373943B0C457FF8FC9DC9307
0F5BA2F096D06795A532EC51D5FF637C536536718CE60E8C3C88939D35E4C835
0B76AE3476BDC17D3512A089E8EBC0BF6089F6A02BF2D3A50FD4128874702004
85E310EAF5441362FC17BAC80D622299DD1FCBBB1D10D3455AB264A149CCD656
9AE99C064569609089333D49FB247B996A742264CE72DD298E6238B0B4EB0ABF
D246646736BC73523CCA89A1E0C0C399996AB57B45EA8278038CB66656664D35
3DF118976E222513AB5465A7C491ED6CE415C8D9AED9FD7F035425216300EE25
AB34CD5ACF13FFBFFD40E85C26FFFB8F58A3C81CD947C0164CC8E44951A54C04
06EB61352D34463EC4E512DF8E35A9BB3B7FDF3DCF2C457686262128F92BCE71
04910A9E2EDD37DEB407BF4E6783F873987A06CA0BD2FE7C0C6B16E529587849
F38BAFFD22FA7AF78FFBB691E482E007232F72D5F2C7E99E198BF24FBDCC17EA
E13D309023212E2F628BD344F0440EE19BF372FCB64D5C2EB8BF73CCC180EBA9
E08CADB350E8DD597C2141C71484F39D980B82EBCD759E6A3A300093A2A34995
02FDFB2AA9CC4F5D5A8CE26E72B8F384934A0A19E8B4708B92D140ABAFBDAFBF
843352376C2293028B3744676C74D1B1215B850F3A41FD972B4D348C5C1DCD53
691EDD31135B78A7F53C9524FDB6E8A3EB6243C18FFC50B75040FAE7F01EB0D9
1A223824AB96AB98C00A6896101CFA26B8AF35C1476CBAB80DE4CBABF9C4B143
B21D7AA4DCCE229792EDAAAA5ED3D908527BF2CA182D2BB9919937B8F1026241
DFF8A328A850EB200D23A1F0208DC68202D42B2BEE106A48BB20A1B991C367B4
EB28BC5D39C2992A6DF729877ABDD9EFC3CFFCFC13A1628B63E23470FE538EF3
A73414BDE9E85821EC8B667CF97FC8CA7C22CD6CB22806C5AB61B9E88DB1124D
FE31500BACC12DD93E953AC37E35B0170D3A5676381FF8E1C160FACB384116AB
5F9F0CBD3CABB9B2A1CEAEFDECC14485B93E93F5698B571A023B1EB82D8DC4BB
B7C6F4CA08528C5E62F6A8E901ED404A7480AA51A75EC58D886B07B37FA2C153
260F651C8D425842D2081E7DE3ADA10AB0A17851972FB083250E0E133025B535
248D4E71BB42FA21CD2B9171263E09FC1493C960EB66639B4FDF93F92FBDB99E
91FDA6F545CF3CC5085140A38A4FA209054D956203D11C268D946C07E4A3A2FC
70EC24B325522F64B542CE2CC6D61ABCE56C8155649A736AE27E1D4A07A88EF0
C74093E06862E333DB40B0329F76447E5D070A1FBF490CC7D7C2B2676F50CC2D
A109C305F747256F2639B38C758160183FAD8A5DF5D4123E4C86A22191BB176F
5E080ABA0A31D47F358B8C64F8FEE86744AF312443AF7E712E7BF7A355AD7A84
6A5C5046AEAC53C3E9B70C329BCD9CA5DF2F8CD9605AE65FA9409755782332E1
E3EFD8CB0D67C8CA2FCB5E7E3BE6B4EFA74E916931F2039182AAB279167BECF0
D7A456C05888E83777104B10C299ADE9F91C08CF381E8BF463DB5440F1F794FA
42FBD8930ECA41D28ACDABBB8C2B2A3C9E36431D9F8AFC905E02EC00059EEF64
FAEFDDE3BA3EC33507E35D5B70F7CCE9E48F09ABA63A0DE8D9D4D63A49C7EF2A
CB3D7E9415BF48F0F79CB5B582781EC8419514939A6E13269B06CE8381A3E84C
3E122D4B163D8206CD9FC5CFAEDB24D242E49D37244B77D4E5124EB1A13FAB9C
E36C5BD185CAD86F43A436E47DC626F267A2FA94CD3386302B0C34F42F4AB896
844429BD3B5E7CC4E93E659853666B4F6D9E6476F4E7DEE5DEA6D40E7C71A8CA
DD969114E73DDD3EE951489DD1A72C95AB97BB407E0ACC540D69B0CC233DCEC2
AED884DC7088B6E68ECF5731B5DBADC8EABA9142EEDAF83858AD7022F1A5A549
AF667F46C3A32F226B72EC3E755244795F8589FD80AF65683772285354DF936D
EFE6E686423055761A65CF2BEBD1777A11A604291E17DE65574EEFFDA7932B8F
3EA56A0FF2B82A16026F973601C5C677E9E5613064018190825713C1E1FF0E03
4D80B2D8860951277F5DC983077BDAA2AA83A0B2E551A4B142DABFB4FEFDC1DE
CE537EDFDF32AE563380F3E8F6543C5A2DD98D5B02223D1466A4714A0AF7E514
CFBDF2C2EBF42BA0BED3770104EAE73EBF64A004FC6527AB2B13E1B65F559576
BE4C7F14151243D996C990E822FB322869936078AF2252858B36888ED287C7AD
CBA1EBC70CC4106C9885426E29F966F1FBE7705D1CCBA78266F04D1C35CFAB43
28EFF3D8A0BEF04D5F60494CB379A72ABC2CF012603AF1E5D0E391BE04D37F08
6E0D8AE6F89E9455860CA17033E37211A4C1AB7F1FAC587DD2E56240A8AE1A93
141DEF3E4520AA121FAD42C3FDCFEBD1D9A5C34BE3FECFBF56C140A1090BA0A8
854C2DA87520859209E86866D42D7BB8E417682EE2532F635937F748EEBD0BA1
A11E393C3A59C00571817DBA34FF1C4B20D56FD93713226D0A5C618425C07656
4E246D45C0F861E429B128C5EEE503AE51060321ACF9BC455109DACE25DA8688
80F32324812A3F39074E4D9FB1C71A1853CEAF6C4CB08B7DB3BC68108A892671
B11DD33CC102F70F1D2BA44D62AA3EC8A6629E1969ED522FF4E33AD0AF16E9ED
6DE4B6FCF496BD5E1119BA17B7744F9720ACA0F900D11DA855B085C21194D860
1F2904FFDFC47257630D474378D8F83F4638E312F143556A492A2482836514F5
9EF80B3D2BA9BCFC6E40DC39A24FD0F31318B370B6C1FB7DEE36399C9766B5A9
4CD4A6E842DAA661FD9B397A3F26BEA91937235330FF76850CCC432D15F5D60F
2D4C47CC7C797466062E4DC6C940133F9D4568E1DED13B33704C5B96E51BE694
56B5092E12CC710ED052F618A72D10138FD1BE70729AB0841E57CDBB3BBF3609
DC0D2A376CAEDF3EA93C1AA745A24CEB206C42E9F1AFFAAABCF64E4733FFE147
066227BD9280E2EDB68AA007940C58C4D06E74EDE6DA3623368061685B466972
EAE33CFF75DB6D150CAE5A6D87AD5F470AD48FB60C2234DEE21EA92348DA855F
0289F4314284F23AF9BAF8FC3B56C5E37E6D27A103F51312EDA08E27C4BFEF9A
36E736A0DEA28B19C28742A9225CD059BD9668D0704585B969251F67BEBCD432
4DBC5D088CABA8D7F062204B651E83B1CEC6CEE8B4EE608E4ADFAFC977265B81
BE7E9CF54BB1024C5EAC9C7257D7DFCFA10CE687754F25F37733E85613210BF6
EC0333FCB046D9CE337D8FA4B433F58C44DB6835A1B08DAF38CF18A7EB6AB765
E456D085F392DBBB591BA40B2C6202149A1DBBAE3C09653EFC0D21361C0318CC
EE8C7E7C399B858C81974696389BA828C31CE2ECA02D305C6B0075B5E81B3752
D5C27DCC2FE096C6014D85D2C8373D4934C6507D84C5FC9635A75F3DA3ACE98C
666A4D4A74C4C7512D0212CEF631B3471065AEF2475C810632F8A8217BDC85C2
2B0F68595EDA437ED593A45B01BCA7E9FF51F30043D2C9C644CC5BF05AAA0491
CE97CD188F6385A00580FEB9774574EA70D63FA3ED367DDDAC193E31191EEF52
A8320DCACFA49B90D498D0F2AC26FBE2CDCEBFA8DFE0988D81FD9051851199F2
5D0192F869C1F919447915188F0C24BB92A02791092F9389C435100BC08B885A
6989B1633DAD2778EDD7D7FBE6B5606D93A77062334AF1D34678C97BB968AB0F
116460CFB0C47469CA52E624006CE68892DC86FC209C014B7E2F1B6809B55EA3
606D38FBF72141059A468B6257E5748001F5066AD669F1A06EED73A6D3CE931B
6011581D9537A854D3848E4BA296E27D7A6620293DD5244595F85A709F3A49CA
746D4F1662F8F8B287B0592551E912FCD4050278151B4407332287643AE189DA
AFC1FCBECD573418CC4BBFAD0EC565F7DE7F981A5F158B4FDDCCDB3DDAD3FDCA
CC26E2A4FD5A951827A5584A91382870E6B1645B32A29F37A088B5E360F805E3
831805C40A0C5CD4D9A5834A12CCA6FB8546796B6E1ABE8BE912F5996D6E34A1
A1C3C8F200F40D4C920D15E179DC2F88F22388A9EA41E968900DF0B0C180016D
127F401161E37EA450E93EC6C6403DFE5C449C3B2F07027ED594D5FF033724D4
DC7E84590C2A96513DEEA1B492D1CA537AEF4BE53DCCBECF96B048A43173A8BA
72A445B5CF9C80E354939DA537E89222348D7CE2FE0FFBA31D3A9964A7A8FD26
D3794266A9C5E72CAB43FFCD33EEA7F0CE1D0963CA42517C12C2C3AA6C1BF1B6
B12D3014B690CC7B136FA03D799029CE01D0CC0E22DE12442D69F8F20BE3A067
DFDDD557102050EDA1A207A5B5BBC5E1DB6A0DCB8D0CF788A3032790EA69224F
236A76A07C20E49586FC867E15D25C6F701533C985B5737450A51D41187F37FA
77D390A0ADFFFBA51E499C44F82D4ED5D2425C926B3007C1471F59C8EC0B93F5
51E52AB7B7C0355E7F1B35DBBA46AF1CDA3728CA0B3FABDFD3366CBFCD581050
7D15DE8B8E32E6FFBD54F622878ED212F685A8D52C7F2906E3581BC1AD1FB7A6
6319E62925CC12F1B0D997E74FBB7B2954CABA71B9D519C1DF5E0722361470C8
7225E9724B8E7C4743B49A2F7349199F886E27EE9B8CF61A1FE31D051C8E53B8
0B528870BD2117A94A65D60D26A4A623848718D0DF45F19FBA00895D857B7DB4
25A5E3124AF58E8D7BD54BE09086213786B671229C776CF57C844F5300D7FDCE
09BE386B8A0F4A86724938F453324584F1154E0E7AE926BF24E7FBE28EAEA7DD
12D5EAB523625D3498165A93A6032F336C94C6B69E2B235B1427CCB20A40492C
C4A8FB539D60E0E5C555651712F633F8F24D7ADE39D9747F3F3360CD97089EEB
94A8148200855E69A869DF37257CF211ADE80AA8A220DB92CF44A068AA259E83
002160B8333B555B676B9E940C05051AAB1B7630ACA1F29A024DB61512B992D0
EE7B77625D5871C53A42F2AC0286A76E2412D1526FE1533C84A8F4BD8FACE6FE
79E8B344E03DA263BEE6F2D182B667625A7D952E716E8170EC6D0A08D502DE87
4E1DBCBB84ED80EF5F31AD9678345E82828679388C90BF6C7EE0B941FDE49FAE
1826CE1209DD13BB48E42CC5032AE3846F4DEAFCB5888117010FCC28FA346BDA
FFE0FFB7EA5BCA52B690F4D0D313BC3526A7961496AD20749D58D4205C7C461E
E27BD032740886423055761A61F39BCDEA9706D0DE8D52009FB5EFE995B98521
4923CCA2E1381DE84FE25767C311C66B968C645C92CB332DEBEBC3BAF1CCD316
FA0957D1D59DE61885640DB00F0394C40D58F7674A5A46AD11556A99A806E4A3
F1A61B11727E311D760A1F95459D7FD11A682697AAAA471D3C68C8B8B018A8F7
1341988FD61007E164E4C32023EFC0B8D4EB2B01D5A9F66C4F80820618BB2F37
3389276174E792C362F039E4050FA9C7DF555D5A5DBF33E99BAD742AB259B7C1
9D9C5C557224D23741D9345287E206C633D36E78832AE4A51C23B48A90E2E971
9AAD1F75E4D5B176E7439BC970F9738FE53F1150E6317C00878A2D6E82523054
85A330D13361A2216E33B748CA6D6D9C5F105B9D602FB53290ABEC941E356E25
8839D94E665D2BD3320EEC723FF9ECF79E15462B5010E81DE9590B3414F72448
3D2ABCF73610948AE77207E56E71C3EF0DE2331F55F22AE8C024DDEDD6D7DF33
C358EF3248B65C331D398E56602451495F5AE88A01362FB7C870290CE6CF5265
80DD431B0D56DA93232AFAE158CBB662283EA1141D20124F804FC1368BC2778A
B577C5B9FD4AA59376C0E56161F4E9FB78EE0EFC3B873DF8E112E69CCC64B6DB
D117EA4C4AEFE96088E100DF2695D516A94163E286B2297BD3FCEBFE9E30CAD2
9DB8E9EE69C254370B02CE4DF582F592966B0262D89D13286B5AF2A1CDC5F180
618010AF811355CB98A0B57F4A0DB0D085EA16E37643AFFAADDDBAE9B7198A84
CBF789E222EB83144C542047921DE8A9C0C96C2B2FF23E464EEA52BAC3938EC1
83CAC5CB5712621DF88B223896EFAA9265D5AF46CB6E9AFE43C103EB63B58CAA
D98A09AEE533B536B33D7C01D70565B0B9C4EA51399E75F2FB15BA9EE4D07BC7
8E5468BFB44B3F03E5A4745D1E0010118D3794D0B3E89F899799A6D881690F89
76A672B9B25777718EA541C7688FDD0D863BC8A00851180B6848B371324D591D
1FA1D73009A5D7C0992AD79D47D1445C591A1A14D96A60CBBCF530DEB7ABBC11
3019405B9CB4C2E8008730A0B38E129B87B5FAA6F2C9712DF6D9780F9AC010CB
804CFA11168403F65912B8B8BBC469917A6F2A9039BB1AF6C0B8D088B10ED796
EB4EA4FED108EC9C500F7222327595E900B6C1467DEE92F791A05390EFEA8942
1C7862C6E11D3942089E218EF790605D17F4305D748B0F70D6FFB3B06D204ABB
E306B060F9DB899852D635506D397B7F8FC7C9DB23E160159D52D28606969DF8
A9F6E76CD9DB41BC341FF766B016182940F03A16758FA9323061E3A4A43C54F3
095CB856CAE3E3603BFBFA8E3BF736363D15A6F2F1CF2BCCDD68DEAF24CE13EC
8671211B280A64960466DA7B6EA838F219950F42B6322E6C5B809DA7D50E96B1
EB88297CC9729B52946EF86773A26568B3413C3847ED2906291B44D4F66FDEAE
A35A80B01DAC100D35EDE1F767E087D0EF371C7E7A820AC17A469918CB67A26D
8FDA9C879CE81135532C2086C850706C43CCB8B839B6ADA1CD0467204768132A
5E8EF049153FDD1A335B994AEA91ECB0E3ABA18480724A915E22117073D74FE5
3F032C0C1FEC8AE985136855350977CF58EDC3B1D0848FF0B25B665CF39A6E28
8D490B6B7BDA56BF43D40421169F47BB207581346B2254CFE2AE6F4E4B0F75DB
D1382EF7ECDFD54D76AA179CB516D72D61928D5E6BEB5C55B9805E4D2DBC00F2
8372000F781BFBC8E993396B083C93E891FFFA7CF35AD451C122C0C55BCDB22E
1F984B772B6C2DC37654177E209D1D75DF0585D5D332511F813DC70321DB0536
9F62CB781E04687B9B981BFA7BA525060E8E38C858436B31A2EDCAB1F65598D1
CF74E446B68F03D39CA582782EEB96B23A0DE4A6D8B0F3368A2DF406DC60672D
A588399B10A9D2B72AA42E87FD05AF4A75B3DDBACBD0BAC5D1E5ED3EE40ABDA6
C38EB50311FB31B3478DDD6E9D2D648ED51EAED1511D25F0C78FF7ACB1F3C460
4EEBA82FB8CCA44172DF16A009E3EB0F93FC2CB6141D656C5B240EE6DD1D6A9E
50F038597AC6F906D796CF618681CAA89E2AB254991C4E1CACEFD728EF19F220
04BA35B52F5A91404CF583B97F788A60AA13D2A08D963B2C8C45B0E5A25FA1B4
FDFE7E39A1662F6878263A74ED15611FE6765657E783F51009369D7499D846D5
84D0565C0106FB807BE0A9FF49784C641DFB6960AECFE145141D9B9457F1CCA2
DE3D4FD234996D478DA157621681D58AD7ADA26767763C8CEC2862592A1E3A9A
A448BC45EAFAD7F08E164990D534727E6B53A52E7184B1413822529EDC7A448B
F4BEF8711009BFD7AA90B833A61E04E3A18A4F1222F898D5F9FD416ADD0FFFBE
D9E09AECA851AA1A7A7519E343CAC57EA9784185BEE7B61303C2DE3216EC2094
9C2796962CDE670272222B46B3E57B2879FB9BBFF294D1BD2354215E93C2FD5D
15F53B62EA10731D8E9F13A080F3440D1B875C0EC3E965837DCB8FCF19ACBFC6
8604677987BCF4CB49F3A697683ECBD1A2F86C98779ABCBE90A143531F4A3F9C
4CE8BA356FE9E9BFC9C2FFAC2E5B34CDD28F1C28830CEDE6C36F526DE4432AAA
B19E4DCF3067BAC93796EAAA2697D1F4DA65541A1A00271C39891C8BD4293F7C
720A17D44CAA56B14D43C252C9B38EF49D1C2F0FFAB770627A7535DFD3B2E695
20B758BAE3A3438AC8C675B910DB4717F7156D92945935D958D4A948E52227F6
7980C92FC469CC0308B2985FE254428567C62C432122C52BBFB5E3B27F1BF989
8FDC61977589C35CB2D3E4F70FA6AE130E3961AECF0CEF5235E1EADD2A2997A8
721A4F945579B4018A310214EDF8805C00A32FE56D7BEF7F75313DCF05136F42
60CD0B33E2977495A5648C906439AE09494CB2F8D01C4CD2B524B40A3AB641E2
BFC15D86255260E586E5BF91DA5AE8EB34044E3F9CDF9C014B7E2F1B6809B55E
A363F0446200E4F4B63BA1FD9E77C6607F0149666ED7F36C8A0F3D67FEECE605
A1D09429145CBD9E7EEF98A80B4196EFCA2D26256FEB74304B26017B1A54DBAD
4F53B9901E959E3653527AC2FDAFE6979CEB210E41CD50A3E3DB993017EDE8A3
ECA57D06B7C97CDBB58ED0B64A8492B511E5EC3B449FCBD7D1067992E2A3F36E
B44D1459ACBAA50F748683BA6D33E5BBB73999BC37332C718B1736375ECBD875
C031E48857DF8545036C32DF16E34276E636C8145266F6BB6670615D8F8944A7
18A49050810B9790B087ADD6D286736E976407FAA6AB182767FBC020895A2751
0EB07C3813FB045C34FBC8B052084E3AE68530A9DAE214BDB6F1782CFC4A772D
8DD3E1FE36A060A0EA1C5E51091ADDCD3076286F0D49A70BA8A7826EB571B842
8AFE59B4232B05D5A7FFD300AA281DBE2706B97E52939E4927BB4A249102BCB1
F9A12B73D6653DCCD2428906B46FE7EBC14D2837DC73B498C522B478EF262FF6
CD97469AF1C170A448AD2C5C7E06ED35A6B6E40AF3DFF14846AA18D71F370CC8
CDC7472DF7E0358E4E391111EEFBE2687CA94E472D1E759A4B186761667AB388
A004E700B76AF560E0F0EFB72451E32FDD5E34BC950D8E67E111E9DC18E7C972
A175BEAAA1E90053DF15025FA4D7A17F8A1575C67897C102F9CBA64A590A4318
B244534F42B16DDCAF5396B5BA3FED37DB43B0125F8F5AEBE898F8FFD096FE64
4349A06377DF1B89F2D4A186EE32254081B579D3AC667CC539C9C2080CEC40BE
0EC11428B3D0FB0DAF18539898E97E30007BDA23370AF7770E57C645BC915B27
27BD172FE4AE0E246C5C52366C9D9F7A2C805AA6046FB54650690D8F281AB98F
72CCF18A68A1732C2436A1766203425A9AEFF948BC9BBEA684068F66ED861B6B
9ACA545CB89C27BC73A1F346445EE63507F0FD4CA73C1A96B8199A00E3C8136B
2C69EAED319AD8D16623BE40C0CAA9E74A1C6EB38B72693AFBC698ACC9BBB44B
811C0D28CF419CD01E545068D26F1449D2F9859C673DF6855F0B47333D62949A
94390FB18601BDBBE4B4FA22C8843184524BC0C4F872802C626BD16373832A6E
2ED472A69561067346832DCE7DABABF12152149FC849BC1EB02569413C7BE3C4
075BE0B7B7CF228C47601D433F328105579195D4C32B33C3265D89FECA3FA1A8
FFDF643006F2DF88B8E7448A1D922910A411ED036CFC51F2716FAE562500A42B
C211DD4D43CECDA3C4EEC1B4E15E5DF3050A35052BB601EB6C69B338721118F0
FADB4E770EF5ED9904BE601C48C45D7930980352048BDC8B68D6C92FCFB04B1C
300CEE34D125305533C322FA0241C964054DF2BF3EE19EF78B5324F48DF8D5F3
5744B4222D1B0815848E7259465288B73388402FF4C0324A402DF3549C0091CE
AE7E4BA304F05D6ED9B7740C2E0067461F497D6C3A7A64E8520BA7CD47CB0BCC
D15AEB30CDBD45C2A77CA1AB4FAEAC81D238D1FBD2C9FA9AD2F3417E3B91E187
8953D68ECCDA715F2CAC44EED37E967A1E71D93F90CC77BA351E4D26B8F9FBAC
ABC7B38D328BB07D8825A2971B7F243013AE28BC63CFB37AD37ACB47D4A5833C
1D9126CDEAB47C7573D3F4A3A5DEE160A32EF40F96AAC323623D9BA228CC03DD
4DC0026D2BA267E820833FEC95C95241BFC014A53265195B1F68AF861141F6A9
5FB89503CE95823B756DA4E8AADF21A4B263528D6116300B996AFC41DD632232
8AC63817A3CBF5D255ECF8F6D1B4C4910415BC4F81CFCF38AF43CE45ED7A134D
D8D013F91AB9BE4FC435F2F9E783664A2A1AE5DD987AB8B42A25F8C103FCE932
BFE5BFD6BA7DD7B3E815198D3BF23E218BBA17724C6FE354F9D5A0D2570CAFDC
6B85A9CA6A8AD5D26672B49719B04A46BC266530D053D597466EDE481A44C04A
6AE34C679E19377DD4D2ED372E5149B0F5C1149AB701404DED140ED20E3B70F3
03BE5672EB1ED3AC85B88AA67338DBD02EEE107403AA9D13D801A83354378D19
F97857A18A858F09EF3190E33C2C30AE9E33ACFFDC1208FB51B0E60ED35BEB0A
AC17F98A595BB05CCC73D3BB55BA4F83A691D13AF6A5A0525B43840CC75150EF
319F6EA620A2470863C526C55B761B4E255EEAFD250EAEDE4E12607955FE0EA7
ADA1934E1A38F5599887BC012E23A86D806C5DB696F37978D41FEC382AB8DDB0
DD3464B2D27FCC2B3310A8BC16F8F43F109F63C2BB062AD6377C8C2F773CD9ED
1E6E51535C5F412078C3A8B9C5C937A078AA0D590921A16BDEFF6949884A2A3B
30D60B67E5349E71DBCAF8F523AD9D73C9DC1C7C1B0C12DF5B9BB51632FAA3EC
89677E7FA9ABD8D26D7E0961B1D2C7DC414FF6C4C91FE7D2CF9092655AED132F
B08ECD6F4D51FE1E5E1C12637B1AC8B36FED94022386970449E986A9ACF7EC84
7DE0140881ED680F7087F3FA88C095C477C1BB7960C9C7D80E4ADD016DF119A9
1CEE0F78C75C1DAAE31BD048E1ECFA7E652CE10CDAB3965567083E2F85D1F3E9
D919C7ED7F0AF459F7DF346A7CCFE4680C556F1C9A4766DA4072B2EE3D1E687D
D0C1ED7CAEDAE686B253A2386F9BE8F106A7EAC275107E4DD1E1D5C243AC4DC6
847852D5BB10EE0C646C124821834954D675C87888E810A76C82CE2014D85190
94B922A88023E20A31DE657F5610761004AA33F04787CB54FEDC42E64EA61040
79E8BB4ADD8D38FB59C7A073CDF9242B2E5B334A3B9454F365EF9E3A716412B2
574345EEE6871708664D91FF9E988475ECE9C336457D09DC2BB316D4025C648B
A810914886B5B17F9563D1BDA0FD81623BC18D4B25F40B0D5B31CC41DE0F9294
2D81E1CB4F5CEE3E2902F9E6D5D1951529DB9A799603F72B30508C2DD472E52E
E44FCC14A841C8BDA1D2619E6B2401762CCA8426772A54D28F7DC7CC76BC44DA
A11AC36DB961D8539F8709FD5B1101B12361BFC4A63B564E92EE83662D615508
2C52B9572518656037A5CE7C8A338E8D4C6D3519A0DF70284800D60ABD5917F8
C3E9E2EBD30494BEF407C0EB4279A84D2B4A42C0AC222CC8823B3C8D55FD1879
0D9DBC5BF390DF299895B7A9E376DA091BEA882CC8068012B81C7EC5DBF41B9F
9BEE5430B6A4D95B3037B71BB4CA029EDEA8223FEF7393BFF76CA40AB3C9E750
10BEAD12A4B0A88C99F8C988726AC4E28AF50A8C1FDD6D000E704EE9A6710CCB
F764FA4CEECEFCD7990FA5F5DD1C6D913E6F4DCAF4F9325D752620A73BF6A517
C7BB419AC96F9A41C9D423999B22C7BA606FA3B346041F7006F4663FF27590B9
83C152B5240D3DBA1D00C1B6493C1F83D5205F691A8775E6542F2834B43B0BEE
E5FDC9E81AC3E445D5ECF74C497CE0F39818355BF473CFC3176CC449CB3AB48A
E3C07F4FF125F0FF762E795767D6731B56146DF8BB16E073F7DBD11D40C77A34
5EF7733F6103B45011CF359AB100B1FD9861293F839DBFEEA14C09D558071659
C3F1470A10E5D7532ACEEB0130A57FB1FE8AFFB5EBD0CA458E885DD7D4E0ED5A
420E07B9ED045657E2A4CCA8207830EEFF6531CC97599BEC8E623555865D3E33
59B057B3DB8E97EA9E236BC57F8A03D6F504CDB4A1FF445D47251DEFD798BED7
26AEBDB0AAD2C9883489D0C7BC3FCFAC2DE02AE02DF36D3250A741FD6202E63B
72F3612A036B7F645E6E56965A59715AAA191387EC73EFD6C7EBCA5DD96F5F17
597D7E660E0F4D207FE744D47B28A82BE30780B0EB9C7BA57AAC6C4D500BC8EA
1882AC0BA403AD4737E5E44A5CF3349310CB9D7CAA9254ED5827DE3A383F7E62
2F89CE7BBCE2B531144EAAEBFD037A82BCDB5C0A267C643819F2AB7FCF8E999F
0AE17E725DEE73B52BA050F604822550E387F84CF7B2374ECF5479E58F397BFA
7781538E6F9A12D574EA5E5EB97C383E614E3E56ADCF8E0914DE17D75CE61586
14C05C544EE99F4F059DDC87597A8F2D0D065FAF270EC006148E70EF653EF2F1
8B1E52E1001D86B725DC04F847B25AD38C422C3032490738D9FFB991061842E7
8254FAC2BA8566E2159DF7876A0F8A509588C70A42C5D56B9BC22A2B39C9BF43
E386707E56468D69CA813B6D103A5F5867D0A2FA644AE377DB31ADCCAB96A992
1F4E07272EC9026A862CB1073943E09013198795BF8060E0662AF689E4149622
B84CE09FD9EE21DB52431CDAF4677AA55B8F57EDD28C7DACD544E7E868AB6A6A
CBE02D3B4B83703A9F4C8DDDF90806A12DEBB020251315B8F47A3D132DF82124
EA3C829E034CC39C4EA076A7EB864B6F887A01140537C24E1C06E96DEC1583DF
AE2A9876AB4C2EA09E4EF2E17A4192F9929D630203034ECD071679424F049093
75AC988B21963A8E3DD7A1EB5A39EA29B7BBA65323EDC81B6D910FD1DF9C6233
F4CFEEA9BF875BB879946C9C58D0A5ABA7A368F5290C76EAED24BD197BDBBD8C
7FF06208FD22ECB41CD54F65E02327DF8AD1EC91CE499377AFC90E520DDA3DBD
31637AF7B736F476B88320486B7D92B20B6131ECC1360C20A61D610D69D34BAC
1FAE7FB5A3450791153D3BBBF8AF8582D2ABE2464AEA773A14C671C9B3800F24
FDD7E304BE07D6FF7F6DCE94A0FC79F649062C652DD3D936300A89C051DBCBEF
A9928602A75AE3E07061E11DE2286916B43F5FCEDC5A3EBD824F842186705F08
D9C5547AAFCFC29FBD89E4FA47FB2B6C6F95814133A9432F92363700DDFEC468
B95B07A8E8DE0E079EC9F9A876639C451D92DEF28A6A81559C287E086147CD70
D2D5282B1FBEE0EAF97514150A41390B49C58A9740ABF58484D9AD94E8974D9C
83D7694F9154C33FE74ED5124078B9FE123406B80576FAA00EDFECDA14F38D74
F96C02BE1246215FD00B64F6EE5EB54B701415E0B4B33CFDA933ED80F41BE1C8
A4B3ECC4454869EE37BFD932AEF3A162D90FDA6DE3ABD3D701B61ADFA136C6DE
1471D03C4D94867678620672614F9788911A04CFCD80B0EBF5A47D887D907E95
62564CD94CA3ABD6A255E686C80F209672400DDCA61D63EC02329790F51AADB4
A45D559CDB872E259387465A058B12F3B4AFC5C3C825EC5302EBB4768F0819AF
EF778BF3673D04F42B8584C347DF9BAE28BEC13C8BA8F7C470681F881C66C4DD
97A0FACBCD5EBF0F47E0A0B79D0DB0963FE4D980162278C1AE6A9C9FBD3CEF70
6620EB54F9D7C559177CB1D1CB68D08D41E5A819EF71980AD577410532DF91B1
353E3AEEF5DF28DC222A87DF27451C72E024A01B97E76E68C564C55075A7D51B
9ECE6FD4F3CE79A2A53873214C82C5E9FA96F60C3E32AF7EA813AE9266FB6893
C7EE51F26890A1884D7564F4620F86A26AF4A8E1C9BA3A646E6B36EA90001169
BCAB925A59F0E163B9DFF622AB6939918C571B1AC4C2840A9ACCC9338A499ED4
61864D03F816BF1F554CABDA287A95BBB1293E10AEE8222A7C4551447A359A4F
18C12DB0E3F592805353C68E7E3637CA35D66E07B5FF9CBA5481164C08FF4A7C
264D63932C7D3D462359F7276C6DFCA831E2AC975025F56144418F1150C44C26
010BCF3C80EFBC3FAC585D68A37161817AD0150C7D511308935DA733946EC1F9
7DA955D5077832DF9B3F42D0200DE390AC7EE9396CB687F7CE17BB5DDBF727D6
B9854287CC4489CC099FE102FBD019A39ACFF04854F876721DCA049AF63EE4FF
0871420FE497D1496B6D842EB6F53F80139BF2EABF815DA16E1BF048E5D8C0AC
34EB603A1F109A02C8558A55ADB820E5516843B4352BEC7FB3CA72CC9F321221
8549D2D1B01669F23C9A34726AB26FEFC48E2B589121FBB05A78DE646A222E3A
A7F5241E41C734382559619820DBEF6BCE08D1898317D8D52E2B5CD896F50DCA
31107CB069326F0A88F754868B141AA2B6C6AE6AD367264E99E4F13D77A88E09
545C621B9F7EFE2DAECFF6D2BDA1DDD75E2D850763972D6BD0AE11989A0211CD
AFCF7EA76636843D41A91CC61162080800131A0A5BA792083A40D753DC5CD992
1DCDBBF34B7344033699FD6C6E2070DD093FB73A87791F8930995CD5E45CEC2A
C853FAA85E3E4E01E941CECCDF79837E94F8C1107D23804EA8AD13D3444133D1
FD6199CB0FCABA191FCD7ADCB43F2754E7DDDF5F2C1404303AE3DF43D6885C90
50F619487B1C8AA8AE87F230A368ADA4CE81A5BF95766A7E9A3EFA0DCEFAE79F
05B06A09D211B894D22241AB9C08561AC3D472250F8E1D9617A34B52E95F9402
A9D44A94592EC04A67A467B5260E2577B3D6C42614287AB75FF5A6F17F474B47
76AF07E227EDB6B885894DA811920E42BA74E163AABEDAF1ADF3018B3929F225
93EF35F511BBBB2D834FB9908EA7571E835689B49B58CDD1B62CFD71EA0FBDE6
DF5379A53582DDD54839AC5C895083BF7CFF411CBB2F2EF91E8EE8AC518E8568
2D42F15F1BA0B4A22A2EBD82F98E54215DC775233CBBE935623532741386B1EC
F34ECAFBBFD57A1E528623F850554E7B6894E0BC68691F0908C89CCAA8E763BD
02EE81CC334C2CFAA6B4170656E529E8EAA37D39F6DA17627183B71065A18B88
1FD1F47209A1B808CAE7DE8BC47B1008A713CF8B6A8B094029D86D22AA7FFE2D
2469554C0ABF125A09A1030A06B37970E2671751FDFC1A05D4FFFDEB00A0C8BD
ED124525758719BD23C70A6BFF5215BB20A454821B1FF58B3A16B841A5CA2E97
93E3EF6EA82F56018F688ADA478CC2AA93DB5046C9D1C514A10BEC6533353417
DC1388C8A84E48BF92F8649CBB59BC4A7DAE899E1F80ED84B96396FCB7D86108
E1719362D48A65FF2ACEFDDBE39BCD68A60E56FFF5B2BC373109D1DFDB62216A
420C6F80356893ED3D4F148A563C07E97335A385B8DFD7499CCA00C064AAE096
D753D0F2E5D9351FDFECCA70E35C5E3973798F735187FEA65B65D3FF561BFDAB
2D6C3C55F6B19F3021C3D210520936617519693CE65E0C80F51272429FA6FFAD
1DA98179249F0072BE3119D56E9A66F74A2DCBAB8CFCE60CF6747828D5EA553B
0E456CBB99F860FD1CE4CABF9D99973416870BD2DA34F3F793995153900720F9
C8D98F120055D55749A7A0C58FFFBD246B8690C52DAD8A4CE8426AC66E1477A7
1B8E618D208411E4AFB3C135C4239C508E857880AE07EAB0F5D738CFF4DD2078
F5F652C0EAA993B692906874D00781DE13CFF129E88FA220F1DF7B77F0EC6CA2
EEA3AAB24A7ABABB3200343D9C60E4C8A9B897E60ECED325C4F901ECBAB96E32
B1B0044FB4B63EA2DD98F109BDB2758CD4C161805E91E4933D01537071763B5D
A16688AD6504F12F0DC616B8680B954D73C1618D55387B1388F4858DB5E19585
FCB83F8307863295313720FBED1D27D0F4E52E1245ACA7F0659ED781BAEDC9E2
D797D72D372E5462D02B28B855DB74B9E4FBCE13DBEB13EDB6E724CB67E3F98C
4CDCFEC7F17D76ACC21A3DBEAA2CFB053E5F5DB67E44183067BA31E59ECC9889
0A00B2CDDA3566C7E4123074B4AE685E430D456D69720E9C167D2FE036BBBC00
B6FD466D00D078D2534E6388394ABE9F5C5BB330FD2BFFE69FF16464D4265198
B662C73A110F7FF32864D96470C3BD63EC19A5D0EDAE7ABFBE9B2E1DF50015BC
76BC2D1D987F66354915D8B475605A36583AB74835B6ED73AD893D1827D4BE04
0E719B2CD986D9ABB84E564F9A420198C2889E20FDACE768C59EFE21BB80A5A9
EA807CD97555AE4643431977F968823906C260A045E9EE4C60384355BA422DDC
F417226C45FFA2D26FF452DAD00A01277CA316D91018FC24429D9C20234653AA
B2FC3043BB3050F572EA5B4D5CEC833C87382682E6CF641BEC70888F21C99218
944A84C23885F711ADABC54128F46DE363312F89723065A66AB154C88A7C8523
5920D889CE890225E150CA485E5E4B82839CF4E96F4652317719253002E5B711
4C88E8B3694FBF21A84AB5FC6D59CB3BF56C640B91C06ECEC195D46B2ED4F924
EF64780EB56270B970B8362DFA49FFAE6977069EB61FE377F7C035415BC5F5B9
37FCC19ABAA4CE9D1DBEB41F7FC6251039ECE8EA7C1EAC79A26AF0D30CEE3F81
5DDBBBEB1B14DA6705C405F5603F35033DCE65999B488E5723D339B5407B90A0
BA368551A658C9024C993DB6529707BEFCC36DE4370E7244CC8ADF710F72641F
5E3C4D56A1B384F331B68B51ED7208FA2C53A116C28427197E786E83ABFAD11F
B36DC8D6A395947277F3949FD2D5CB1E73264C4A64F3A6462E15C4C1F9CEFE1C
73A82FCC314A708547551E9CC62A58CA00972E5AF9264A870CD833E0D6629DA6
33EC9952B3D5650A9BA56B40F38A0C8206CDA8DB3E6FF4972386AB85B5A4BA2E
971C2E767A3D5EA02B06AA45912AD5121594ED964F935826E1FE9BE546B693DC
688B5D940D00B1AAE6EA32B9FFA57FC4E0C8DCF3A80F27434F861E1A1CCDD4CF
3BFD79F6803884904F27642A568DE07900E5ED82F2FE6589C49840981193E095
8461C9CDFE0F3C47EAFC68903E3F81C0C5C70B5D4CFC94E50D6E652B89D88D42
0D1F49D8D1635C110AA85619A23DAF0835BFA63BFDD3DC56BA51B0A2F94EDE4E
45EF0130B22D753F0E26FD7E78001C1913E7AC3268690DA1E70C85A257E529CF
70FE3F938C3649A4E7C5785FDA321F2FBB36FB79181B6877211E615E8F214FEA
E42B3C44BE8A42DD07A7236BC4D5076C4A2C29B6FCFCC830F14F6ADB1BE532B0
206067373EB48F639B9452386D5BA24C8E7A3209E9CDAB8EFF0C6537E7ED489B
D30C684F0349040FE8C7F55512A55D2C44319E04E6F4EBCB191434AA217D4AA5
5B56F970B2E07E9329453A8E2E9A16B02FE6224FDE7715ACFBA34358227D919A
4BCAF5CB5E0D63761C40C4FF23B9218FBC5C16DAF95781FC1046C868F9442C6E
B98CAFF20DF35473990AC33BAF4962FA35B0091E4616960CA1AD17EDD80A4210
AFDF573618C95A0A0672C05E3B3FB5315C57A31AE3E105405F357F773B3E7F3F
B0F0638B7E47C47A96CE3803D2346AD1DC5F4F0BB690871E6873AA4ACF66F36C
8FBF54FC3568AA9FBD2DC57F5E1638D59F9B6F9BFC01DF8C246916424E92A4D7
3B132E8016F912C0C3BA413804B44B6B116C6704A09516E17352F264DA9DF2C0
B281375A03E2FA2B0C1A6E054BA4372D39D284D27D2C874C0E0C564A4182BF58
0187B96585FB67B206E0FBA2AD2E2B03BB59FB4FA3AC71E22D5E416BE48DAE67
F27FDBEC7EE5E395E39559FF6A2748AFBBF12E6509AB95716706B25A4F35058A
7F27D45590A7B5774D5AA877AE39109665F0EB1BFEB6463B4C929CA4956E4C73
2141EEEF313434E8D29F0BF23A7D607118C3458483CA13F02FA8EA954DC6969A
D31835BF8E043C42D294ADA3538E4F9A0697190A03CF62FF8F471BC5EAF84869
4073C704FBEC877C7219EDF8774E09944E7C89D6AF9ACD17CEE5F8993BABD1DB
9B27F4D147E28FDCE3B3B2B7A24B99FC752EECD37971D3B3A0702624C38798C3
2F835E7B0A766BD60093685B14ABDA746AC17C0082A997A6C4C916FF13625631
6D042C7A04B9EF251E5D7EF1F9F2771CB7B586EE18508A2A7DD84C29868F2864
C05B903290D2F2A62462ECBA5946D4BEF4C3BCF19F29F6ED7C4D85BDFBC37004
9F2EDEAC31353926D020E6483211D2ECC27F79433E58C9D54F0AB3B6075698AF
79C0A7CFC6AC3550A74F073F054839B0B34698A3563A26E6F72049E363B15D6C
FD94DD536FE7265C5929D8839710B6DC2ED230FF3BA157D30702C5067DE3C6A9
D0F9D0C19BBC3B9153A5D833DAB8813E06F39AF386C31F79EAAB2CFE14A98550
73637CF4536F273B8885E51F01D1D17E42D3B0818B93569BB127808336A0C0AC
652A01ACB36EDED052ED9545526278AE203C92C28669381A90E8D75F4D3D6167
50FF4FE27DCE4253230468DD0CDE483547E854B9B8BE4DFA6D75607BB21F2EC6
F2D26D0C7677B04B1383E0C85FA6141D47FF081D66A1AD6F2E1673D20228D5D7
6543DF9797D509378DDFC0B1F0B53172910FB3CD697C27AC867D05E6BCC9BF2A
EC19EB9C5B69CD0D94E2514A48E05385A154EF5947A1260E3BDBB8871A6C30BD
DC79D30159662087B77A68394033E109DDF21E08424C86E9D1B8B27162E1C311
AE6D92E231D9EAD2DB93E9D4C0D68134CBAF5042A5329CCDF148166D0F64BE11
27DF197CB55962D2AE0C8B9E098BF73284A84CDBCD079520D5C4DA5180E5C1F7
ADFE263CCDB9D26898C3C1D532058294E34E33CEC6CF677C0C1F3AB06AA06C69
3AC493F0FF0473CE68220DFE36E8C39BDBCC577BD11ADE29BF1DB04056533D6E
BBB1844D871853FEF60A1A2952A49F16C33D5F921D51D0B7F09789518A79C264
6DBBA878EAAE1F291DFC40C31D401373842DD590AAC218AAE8456460A8E46CBE
4A9EDC7591325B79108E4CE4371BDB70FF0612AE58E0BEE8B1D995DC777F7552
E6D0E99733C297EEEAE6A29DF6896DB69FC4EB4A208608F22EDF3C9F862AA8ED
74D98266653A37112DA5343A0FEF32CAEA2C6F0FD7E4BE41556EDDE34E0A109A
10BCCF0FE205F2367DD21482B33B09C7B10C863A70DF3C86026E46AAC34EEBF8
BCC960747AE03596F75864646AB5FBD04100A707163C021718FF123BFEAF6148
1A5E48A150B4296D40238519A87A6AA3DADACCF76CB8188A607159DD635B15AD
403BA6D3C7AB9F97A43F0BBE85760D4C2373DFEA22B681CDFE9B200DB88DFC6A
62E22ED3FC52FB694651530DF32E9ACD7EA7841C4AED30851D65EAB8137E0FB9
067AC9FA0613127CB8487F68BC4F32ECB8A0AA80452608C281C7571A9C67ECDC
AE48FE860881CD40AC3C09C3736647B7B711F9992026D8AB22E27B320588926D
E35F9CD7E28D073B5C2C365B9A8BF25D42F524ADFDF321BA910FC2F91FF03AC8
DCC28D0E3028151F74F7BD5C026F33D1E0863F95EFB09DFFADD9A016A54DFD60
332D88C26F7C570033BF148E2E8B249A1A7FBE656A9F2D3494C5C9991A56FB12
CCE906EDBEDFCB4E73128A8F4DAD59771D7BA90DC1A95501D0EA190905BA4146
D28D32DE336A7F94185B3AA722D6ADAE2AA36067507EB814BC33EA5897C1A234
D6D12137F376C569F1A4210FD8CDBADE0EDF4EFBE0026A34C69D2513DEE4B4C6
6D48D0F182AF6A43186FE81CDB44F5A77BD0F484E0667D306C23EB189BF65C01
436AC4BA6CFFD4D8E694F111CB88B23D77A757135FD4D12DA94EEC41CA5B1CBB
54F61EC663F56A2137EA3BC673832C7D52F16A477A0004A48A801F5952198562
924428C7CA1D293A3131AFB8E8207B5B55B11B75520E17F1B3A2F0F9695155E7
D8767F6C471BF188505FE7B75C87EB2C33286A1219B6720E194723756291D0A9
562C489478A428E4D1F7D5C8747D9B7CB378C6BD7BD9D9470FB46BF853C61577
96023FA026047E01E61DFDE0E24158DA9758A49D6A232214D88FEECFDE9B1F99
F05F8E3EAB6CBF410535B5BF35EEB16C3BA1496D77503B48784ED9121688B379
6666D2903E4DDAFD726AC22FD586DB21506E9BD55066CDF447D969825D909891
211D830FC9A2746138B6085482F1FC8B575415B05E69AA165EB66195A2A73532
C5A6CE207F9DFA7ADFCC9458F6276F260468B4E3F5718933F0ED228C49EC45E4
5EC17BD85E2EEFAB78218A2EA310604A58862B6637FBF84179B9D0C8413B6203
3F0F143B1A3A8215C11B9246D2C9CF0274AA5A26F25CA2035D9406CBDC18C6E5
AC30A4C6B8027BA78EC54D8C6E6249E56496C67B970FEC60F05B827A70BB0A73
3A99FB3EF8158618CD5258A2BC3C8DFBF39562C7B950E58420AFC272EF3F0356
F3097E3AFB5956A0A19B6F48DB12C6494D58386F0EF6B9ACEC77AD7DC59792F0
B63465825B0B440AE3486C8A8BE9C8EBBD6BDE3D98906BAB2A9E515ED5476043
E520CF449536481117511FE79E2520AE5F94F0834FB05B477AB96348839A4AE5
FA605026C5F50BE00DE605F4D540435A8687430228621906D2E46C3DE71A1DFA
519D6A904104F6C527A804BC8DF1ADE874FE38315422FED6814E25221A395E63
83392831608C34C840DAC2E4B03276118EF63A501ACBE50D54EF90C56372C978
6B118F05E6E6C0CD27A6C3EEEC4EC2FC1D6A95943C6905AEE3D5309703E01407
A953C436A2608A1420435C09BEAB3FC9A26A481966A34C636EABF858A0F660C2
A8C5548EE74ED5E448BD346E99E50EACB99F18BD4808652D0B339E8087009975
4A775BF7AFC8A1E7AB58766101116C1C007DC11FD3307C562C97873ACC1AA76A
186DE6C1E51A43A371ADF5A93860BD9E9EA4A9B6D0819D63F31FE33C825027F0
DB732B3045FEB08DAB8F1607EB117453D611A4C21BC4DA8EBC021CC9031AE6C9
23C6F0196E8E1B91550381042FAAA6DCC40D1912DE6DD587A25EAF8648D774CB
FF34D1910725DD05B002F499DE9E15A6764E8122FE1A6C425443FB7E85D5A1C2
6A033D98B8F37BE0B3D616544FD20513C988C189A199E87C4700D6C2B9738E09
80757C05B8F185F9AAE393E3D7C1D543F7482932CAD2C47839AF5ABF5014AED5
36DFF200B3AACDAFD0597074E75BDA1C16782BB6D0580F18951C7EFA256BE19A
C987AACF126439F4BD3AC4319A559FC1AEC5A3D88A725E27494A98312C126260
1F3533A3F30DB4CB811E436D11E5C610BB8939E81925F0AC3E0B108CD2143FBB
4CF4C0B016926FD159C07DDB419ACCE5488233C45C3E782F9A80689003DF6DD7
CB6E29EA48B190D687422A789394CDF49854A263FFD84F9E16EBB32C8762D428
7CAC4D6E841FE64B8BD97F8E0491F4F7D1407AAB3CD7015CD053CC9084EF28EA
5D0AD9B57D9A312822773A50C1E7B166C66B22B5F45E5B491B943596B281CD34
7ED11826E65114DCBB7C863ECD2499CFBA9F8EFA08B3905241DA2CF39864E30D
2740BF1537C5A1C4A48AFC4B11B0836F5265D114E77451A6CDA8F4C7378330A7
A2164EB8142D95ABE4FDF97FC9641814F7ABD36DBB17BBCE5F4D3C00651F2495
B5E60C23213FC2BFCB607260989F94019686B3864A8D79DD66B7AC05C389BB86
1C878E315FD85122FB201EA1B8D8451881CA9AD3FACA0F56D105E2E6D4A67FE8
35FA31D793F3582E57149A6E15BCF0910239CCDF97BF3D3B2BDB8DFD24A64B87
25D859A03F40930FBB7FF6A8CC97DB3617CC01BF5CCE4E4FF378E2A0B5725AB1
623B89F145AFBCC19AC268658ECE9784A908F93ABB91DA309CDCEE0EBA8E18C4
755C3C9AD1EBF659576AF5B73925D07A8421E03DC0F2A47B4C25657DBC91E495
81613C4B22A462767DE0AD4A7CF409E4FB0ADDE98173ED82E5613AA08CB13150
445DD38D23A6EC325641DA4EA176864CCEA480542793AFA706FC65F907A6B72B
872FFDBDA8FCA6D2FFFF4560365EDEA063691CA3F1F541C25EFBE6D5E550FF83
2A0A0E9F310A952498E98FE02DEB8B6A08C2C59125FE3685F892DE85394753E1
141A99B57606BD700214917E581A4E76054DF6D2DA4E0C755E0AF09BFCF43061
E2139D3C394A722DD3D39BA9E10F9F733534396C167104DE4085B674304A704C
8D04CD1BFBF8C30192E06A354A693744339F87BE7BAA4A6CF6E7BB2ADBCFF9AD
23D9C789D7D5675E46EDF09FC564ED4E44FF891AABD02212B81DC9096924CEB5
B3859EB571A0C902D4CA7E4E06E9134E09FFB5BAC37B5BB63D3F8A4C89EA04D2
38F65A6976F0A64130D1B8454A5BB085B7C66464E79EA95516B5536F7D4D7DA2
C58760B4DB1473A8FDF3515FEE83ACF77AB67A501C4579A463EF092D6A990D36
842AFE802A984A68B34ACB6C72669882891579007604CAC68FD9D22677F76307
04B71EF3E8E628E8861093DFF32D802496166E07BA8238E5211AE90B589F849A
FE512B287A6E571B0D469D8CFB1CDBD64AE2319AD8D1519FA6218562D60C6BA2
F0DBE19472DB9E14D71AE41A7DDFAE15308FE82F2D5D28D65B8E2676DCE3FB08
2066FD53CFDDB47A57DF5D17375C4A7538D1F00A332F683025D28B3DEC3D2B03
6852497505DCAB09E88429D08B0DD3E8D43C9C14BBE019F7F4C2C39957452187
6E7046CC895F92458920B610A08B735D299189F3A6DD319E26CC25028BA0669A
12ED5095684785814AD3FC1C87937A4A2691256F249114EB9180D134388F11B8
19C6AB3ADCAEEEDDD3C7A0E483ED13F3305C7AB93A923268EC82C825782A3110
9C62E09EE8E377BA6D05983D2F3BB2A257C2591EADF4175C9C69F469F33080C2
64BAC976EC0BEBE8D06C157F654ECE94EE7FC804C9453253E62D9B779F6D350D
07BD92489266EA31B251423164F786770DA95FA1CFB711D4CE09A1245674039B
A2A5EE68F1595C0F5E859079233CFBE30379AFBD441A22B25CDA956FEE3BEF88
8C31D6F3FC2156E9EF405D91BBC859B07AADF6AB923B7EDA7271E02F39777A1E
391D7B0D279E155C09110EED351A0F5DE9377F7AC860C00AF535A6E0C997A3FC
4E6F392421E6786A938795B66049F2C0F289C74DED953218DA9F6AECF43898D2
0E1FA1F66E08C721DB05531FC899D1B191F5C495139900FD78B242D004FD4E21
03983C0F287672706E2AA5E6CF6576F7F5AD98BD9BD40D0D8E3047E0B3206FBD
53CF8806F3334B6CBA615D87EBBC6868984768AE3079889BE44365916698D2BD
A2FE2B84FFB754B614BCDA7E61EE36D96EC27EAE4C08C0C2CF747D3C64492BA6
1B549786CC399D4E3329DC1BC5EDDF253EB7678282244748611A675A7203D79C
A1D343DFDD771C46024A716D9CE12563D91EBA5F1D1A44C1E0A60319C2D089FE
F96E35DD2D4ED34DDECFB81F542A176FB0B3CD2898A5FA6DC0C7E6318DDEDEC9
390F4A5881C9EC544C978415DC3F16F744FF0DA464E65A67396528B7994F45E8
AE030517C403148A5BED07990956ACF06A2D19413C43978ECCCE3CE434713F3F
2519A6D1628EE3F0A5E230B52EB7204C11D6BA62C2932130F4EE872148BC796F
0B6EED8BA8FA8CA2B40F4D812CECE1CFB99F28E40D6ECEDB73E553C4EEE9DD47
89B3E9CA876011A2F50F3D32A3DF551E8A9A6AAFF35405489D083742C3AA8FF1
5D0641ABA8A91D65A6C066BA5D316A6385BB502F108B4D9A3CA2FC4B5489A726
558D9036C432A5782C5660AC63DCCC0D978EE9302285A5E71F5EEB937356B745
4CEB9BA41EA4A8E3AB632609967C195DA3FD0845A73BEF6C0DC964BDAAEF5442
6692F7F600825AD8151F168E1BB1E5DE3B4986DD1A55B7D01F47B62F4C252144
F9C079DC856EDC8FED74343D8F1DDBC8F38A26B059AC7666DA49644135099341
6D968AE9BD736AEC74B15E50C6E1C6433BCC78FB1FD2C7B1210E0186AE13E397
6C2DC00E7F739880399256C5D0DA0E9ED8BDD96C888E8DF5AFCC604719C718CC
B198C5AB11AE37A6669569971916D7E2FA85D6F884106C4025F2B1875E9C7A3C
939A48CE53B987B2DCD56415EB3E6EBF6ACD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 8 /circleplus put
dup 14 /openbullet put
dup 15 /bullet put
dup 18 /reflexsubset put
dup 26 /propersubset put
dup 32 /arrowleft put
dup 33 /arrowright put
dup 41 /arrowdblright put
dup 50 /element put
dup 54 /negationslash put
dup 55 /mapsto put
dup 56 /universal put
dup 57 /existential put
dup 65 /A put
dup 69 /E put
dup 76 /L put
dup 81 /Q put
dup 82 /R put
dup 91 /union put
dup 94 /logicaland put
dup 96 /turnstileleft put
dup 102 /braceleft put
dup 103 /braceright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
dup 110 /backslash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1058
93FAF9435086F4932783C7D4837170DB0EA31A11EE76B1B9DFA42BD7AC6B7A02
60798C30DA069C1E3F3211861EA327F5E48E1F440F6ACFCD1FA8A7E239B78825
56FED1C49BCEC941D4BBFED805E0AFCFBC77850BD291FA4F8FE707CB4E8CBD1B
1EF055DBB7929E9666F539079840B5A6B6E1AF4FB0AB0CE7F517E28F67D1FC76
2965CD2C4EB718886E4FF6A9F8F6EFAF9552AD1D7CE47CC42473F8BBFD598652
5AF9535A2078DD3E501DF0241EEAC306DB1C2695D6DAFCD4F28DF3EEA1AF6EFE
970EA9398CFF7BF2CB96FF5C8466B532329C1A1C692AF1BCA770BEF3EFB2A9AE
7EAE9D9BCB3A2BFFA4E1AC78BD4BCFB3F8ABE7FCF57A38EDEE243732C37D7C00
D1EB611FAB9C43B42E060EFB666E37CC88A3897C796E7888C308AC989C902067
EC814CCC3CFD9CE4573E0B56214A781C61DC5E6AC9128ED85BEAC15F79D3C45E
B5F8353C55A5FE5BCFE16F81B259E0A00BC42B92571D1CB29505E041FB5D15E7
8F084DA0972416121CF4F0EAA6DBE938CD88A43C54F3095FC155085AFBC576DD
13C365EE4B75F46758CDA848D9EF63083F2C32BB978BF898A5933DF1073AE844
C4E6F7513A0E5B15C3F98B7689C73C1B6BD93EEE34CB364277BC362F85BF6DB5
7C1B8AEA4003551BBA0A6A4B02128D4834FFD8BA4E582E00585466D434CE4C65
37BFD678E60158F9006469085052ECACD33F1637A879B59EC3C9B3DD49986B71
21164292A62CDA15444F5CCDA25E7DA313B81EB389D827DD31A2554FBA2D017D
1F1865BA8EA3DBCB02840B5C420846C7B9DC26A6C0F4237CA293253BA52A7F2F
B9DF82C2B77A0F04D332C1DF4E3B857E6FB30098E94BBDF7F8CF079E7ACD389A
90D0E3FB13343F286E50BAAB87DA34623BD9A12CBCB41A0326007A0F409C87C3
54E6E2D3B9526A0C256DD4D2FEBA321FABD963A130AF395BFE9E8432DBE596EE
7798576A28A21ED89A4848FDDD33D2F684DE09816BE193CE831D6ED5B96170F0
C12748C5176FD9C8248693291F2B6E6615D713DC5FF553205BF620AFEB29D62A
16193AD5E9526360028580F30FF80CF05E0F2F6DE9F9F1BAF73E28A27D4ED840
2B748E4E8FFB1D3E83F088EDD7F69527DC250D222261F7E3861D02110F8D61EA
ABC47615C280165BF910B66BC4E005E6261F5726FC8C78BD5638271287EF3F01
BD0388E54C0AB4C2941928C08DD4A7B6D83F99EA1E9CF50EDC107F19F44D7BCA
1A711C927CF534656764CBF49FC95EBAA5A475E9EE8E24E1164A06D008F60986
819F788FACBC5D75F537C2080C7F41D490CB2B8D17B7B167DE0588DF412EB760
0F4E930F4C00C3733982C19F290A084ED27EF3892C911506702EB4B8B9B634E5
D09F149AB704AED61A96A87AAFACC08C9AB6B470642E3F575F4C6A08CC7B1B75
60C3705776D162D37A60AD249FACF0BCB67245726044C3CA05342484CEEE0B27
E7E5CD2EAAC5156A9A60D96FA80B340FC17CAED2E654DDC39A2A518C83986EB5
6A641FCE84476A42DBA6A154D5639B13BD02949E2823379CBD999E45B371F1A8
B93F1F3A4C6C841E24742A7AAA9820DE404BAE05C176B4BEB56975A1F4EFBB99
EA8C891741772F7A8E854DBAC6F13E6E99EA67CF8762952E8530D1EBCB58FD04
829EC44660037132433E9225E0C959D0AA4C750138FCF3C27EEEC23BE3EBD246
0C20526E1EEE81D53CD39ECBEA29D58E0290E695D48E27D48AA10FD4EEFBA612
786B76AA8114A5CCDE295BD9958EDE0FEAE526927746C15DA47ED590CB2BD92F
A38BDC26FB86BF48CD0CCCF50B9BB6BD07511C54D76AE5EBC2B2FA8864622DC2
F573BFDD46B0D4C107ED06A3CD188470B655FF0312810C167378F28A8DF803BA
0C58971FD291FB28B5EC4E59ABA39B5C023B74A6C59AE44CF5B31AD8C9A308FA
22CE540D91BC2EB9EED92BF749215AF277F42030EBD40C7BECE058AC5016DE51
1765DD1937534C8352C277D4175A37BC8A43EE18577AB22770F5D9D5D81DCCD0
C2CB28F0AE16E9FADA75C29B176E6F83E185211F6D57E9E86AABA8BB976E5A4E
0CDA96C6F9907EFF64F863219080A95C6F172AFA9923158D8438BA5CEB3B7186
A2358B2431B5B4CB07DA5B463D6B5C9ADB7709E1BAF0A0015BE4D08DF48D0D6F
0A7BA34D7C65622741A58DAF3D6B48E9B7E5B5FA4AC53B0FD21BA2A0E6092C36
FF46671735055F291ECD58782660E33EF20B4827CE23F049246D529A98DC3C4C
E3EA581D99215D035275A287952FE2FD77BF4B705112A7A7A201F2AE90BF84E3
8EFD0C9941F88AC3533F859B29977B783F5681719E3146B1226E067280CF6AA7
0A280CBBEB217302D014064BA15E5B84C5C43379B38C4E7AC76E20011A1A7851
09BE5C6E9A8F0F784E7F228C27EB83471246408D90821826795DD9B9F86EDCF9
0885A6DC446224E5A4E6F7AFBE384564295C7B2EF76BA22241E7965EB336CAFE
EEA359F0484CE39CCD22D6244C886758FFEFE3704FB96CA2A9E1439B445354C5
0147852429DD6738CD65B55849BFC1698857A260595F02B01A27AF909A434F2C
3ADE300A0CF606253317F02E97E1B0200853B9F7549605EF3F33BCB72EB8515F
3E4B267E9713229F7B3A6F76EE03CAC3C4F9E1ABB9D004622A8189421EA61C98
B3523A9D22DE7A4CDE45F22A5E8DF073E24484BA0FB4F586CAF62E21FAF6CC45
06B0188498FBDA18BFB8D4A7A6C81B201753EE75AE0438C9885CC1F021442CD6
5E6C6C1E5BB013BD4621CE8FCB22835B4B57C7B98FCC187EB1E7229DC7474948
741D432DDDF80A261438F44A0E9804EFA283F05C7494F60F2A1E740A32192B85
8F37374E9C7ABA1A2579C218B7DACDE599534CAF25C82145291522D621CD54CF
8F31A2E6A2A79DD16F4256259CBBA57FD58B1154A1F4AEBEEAB8F97CD6126C7E
0FD10DAF7877F9B2740C1F4200D2BCAB4C9BC472BBF52BEA79FDA5B44E81ED70
77F1C006DF22414CBCA52C4424D3FCC180825E974970FDABA59436D89669CC42
1DEB5E8153486DAB0533017E80DC77F9AA6C8CE3B066A7C622C4E1D8E35D87C3
4AC6F748A68F40A7FDCF90F57B992861D18A22569E99A7C1DF70870ED573A3F5
D8987AF8153F2C5EE3AD1A8F6AD80E2FA2EF2915D0CB90FE56D0FF59D92AEDB2
8A79D9232DDD843BC44F08006B6DCBA83F5408483289AAFE45AC83534E4FB6D4
5B6D6ACC620E38A72CB8208518B0CCD00E355DD9CB386E7549CD60A676FD9886
2D65C737919C3E383B571F2983FF0A26A35999551F0CEBEC115144C3F00386D5
A2A874F9FFE6E1F1AFE67952826D6923C2185FD78FF07709475E4FA8EA8539AC
67C892D334EE6C7D27045164C4DFFCC63C0E85200080D70E7770B65A98341626
D3AC3D628EBEFAFB671381BD130969B688BC489D673B4FC29961F56795F0627F
C90565ECE4DCC023AB30AC82E028CBC387740BCBCE0F2A2CA88007A9904AEF33
92F8AC1422E56045F3511776625579781148C4D882FADCC65C2122301BCE190E
F3D152682163199277114D0E45F1EA52D539C46F706151B27FD15B0AE3AFEB88
A0457466925C685C466CF60C2687E3C2535A59D82CB40D3AE3EF9D35C687705D
C818CEBBE7E671D16E5060B9BDE7BCC72DA549BDF0E981BBE5677506E5ED52E8
1EAF611DB1E670D06CDC809E6C87B92E864AB43D82E67BC92CA61ED9EDEF2C0E
248ACEC4A55F1A082DFFDDA655AC4138182FCD69021CC1008BE32CB3EC8182F7
0FDB43D15C538E6B19B750EA922CDA4B1B379D88C0FC61342D808CE10877BA15
6D952C127D268B2DD1B36470E31A91CB5581E28BBEB3B2DC76FE07A50B0A410A
74706D8E4E2890A9A70E499E875D0FB664639AD1C18FB3ABA574D016C7096A07
4ECB5A9933AF93566D62E88EE7E24D7096DD3B027146F17D550E84F39D802E4E
288CEB9E240B03B4034688D02E02FB295DD5117054EE18EB907EC31369F5AA3F
8A5D7CBFBFD8F146756A6A8A8DCD86762B5B060677251ED28C6C10152CA1D569
6368C5DE032DEB62544BF1DA46729CC0F84B3A188CAF8CA8C485A7605A37F69C
2094E0FDF197C3EC41E0EA1F046A930B5081030E8CBFBBC2FD3A1CB5B4B17765
03E290EAACA7B37385B210D09CC5B2E88FD3C0A170BC45FC1F6FED422E066537
89DD54EFEA2A8F09C86B7A2D1BAC7A89AAFAD3483DE9BBD2DA85D645E0B210F3
11C6092E308A382F106C8B5C4A4FA85654EDDF9F19C94FD61FEF4BF5F884FD80
7CC0F5D05459568D3BAE9C727AB8122152111F75604E31B96EA24ADE0A07A669
B6A63CBA788D18B06B710828BB0C1056D7376C9C2C3260D0FAEEA3EACA85AB29
82CF79FB09B09EEA70C5599FB0D083768DECFBC5E7BF75D25462CCF54348908A
E5E15E65DDB00F39364C2534F979E4D1B668275C175D2AED371AFFFC8E566353
0377EFF6432D4AB3B0FA6903B8E780F498F3AF4174D61BA61D204423BDA8BD71
26B7A058A0924E328E9F2AB3DD7C5D26E98E2400A6AB3C37A6A87D1A3D348DE6
5677CD557DDB8EA18C0445FC62A2D940FE41C12ECBA0E1911C96F5794FDACF3C
792B6EA5C5DFFB2D51FFF63FBB5D80DBDD061D352E78E300C0403F858582A754
776A03F15B49F53FEF35B71EDBFCDBB6BAA69712D433A2E1FB1CC8F82938E9C9
C75BF0BF06222641415EA68EAA4881EACAE85681B633D413DE6751A8E3832B04
B7B592F5865E24BE6E2551FE74E176A941826E5C576432990D4B2313035C0794
CD35D6ED590F950391EFFA4F9E2E9E1F04E9946CE05053B8B45C619F1D06106E
49BF22CF1448AE426974764CA4CD0EB2AC4D0C432338C2FCB932ADB5E740C9D5
1102037011B7B9DF1A69A0C0740EFD72CE51DC021DA091CFADE80E8AFF456152
EB4072A6CEF24797313E2B02EF3D2B2CD05A7A8FBD5B2E2040D5463103B54EE1
C357E7DFCA592CCA32BAE78F00433F0492EFAC5CEF385716A0A94FFF3434216E
4DE8E3A0A5A2DB09484F9257A01285C607F962F4B6004A6F2F8173A4FDC3F0CA
869E05CA1EEBF270E0531ADC90266E23C3F1A21C93F33BB5581E7886C3AF7C1E
329B07DF3CC7E760531942FE439C2AB46568D9E0625FD3E86EB8CDAEDC76C7CA
627F1403F9338661F6268942C951F46B668713872837F94AD32D284AD59A6335
ECC132A27389E28F527FF8D8EE2BE0E4AD8CE5FC676299C151208CC04CEA9F50
6C507EBD10EC395426175747C3A97A43EB8FFDE65829C453F371D6FFFB026DA1
7BE0ACFF0C17F7E35368A76013B99B841C87269AA98014AF0DE8B2A550F36A63
86FD9024F77C1433A5B21C85C4FA23B51C75B1DD57FCB774F4A0E5027B960381
8B411906B853392359D5D3616CB88D2F4440A721D15CD43DD11F8192E493074B
4ADC1F0354F970127F1C9BC5804AECACD45B7EF72D45E207518FCD6EADA938E3
FDE5075F96086E9C41FE4DB4493CC0B0A0906845B4820B91F0D726C8AF5C843F
8E09DA50CE06486B927F9198C01E178EEAC0BB643B17616D06B29679E68A0F3C
559A3B85FF54939005CEE336A5D58AEC184DD167E8B1F5F93840D7933E2CB72D
2E150F9C39756B36EB97D9202C57BBACD4F366CB2166C401DCF5ACFE3834DC0E
BCF87C77086277705A2BAB486DF2DE3E1DD99CF9ACA21598D091DAFB30369922
74606FDAF306368F4B4F4183596BAE82494C2CA52106F86A981D122EDD9E3914
BF47205A4370B6641173EF694E7CB446235D427AC06A9E0FDDC6EE66683B992D
8FDCC38AB8B9C142EBB47641DD6D9FD8FCCDB63F72F0B7F575CE7C8B6C1483E0
075F323F3F2CAA6DF20B6FDEE1A4B2F43E961BE02378D81F86757C8BBA6EB18B
802F35862D6C7BA9BCBEBEAC04EDAE551CBE6814D7BD47EBBD0E4DAD3F4FD3DD
462AD900EB9F51B4B40F4EDF678BFC2E9B8603915FE2D6ADD92F40AB986C42F3
955BC585636B3E22175B2A6D1795840E25E80A0719FBD30D1711FAC910652E87
CEBB003DDF74EA8E3382CE980AE4A3E839DD3874B50BA15462409DE9F11BB30F
6CD3D034F8EF7FCE2C8C0E0D07EAB7803E7B4D6D490B4536FB1A0C197E7C53EA
10B25B27535CFBC2DDCF5DA9BDC4F6A556BC63DE126625FFBBA62D5166A54191
BAF1FB25C7644BB9C92AB6C370B81C58DB371076630721365FF41345C42E5DD5
09923AAE396D2076366B916485ABCEA4854A8CBAA1E8A88ADBEB8C8191CE9F47
FAEEBCEDD11421994F3583E71D72FD9FC7063B13302DCD355D0B0E1FCC852AF5
EFD986BBC25F687995C7E9CCF9E225D5D0056115A25CE12E96EA39D6B08B3FCE
B818FDD3F117A24EAAA99F45FED1E5E575CF7769AB357F9325EFA5FF14B7F76C
C4A3E6A5CEFA6724CF4FB59DFB7BCB137A07B67B9B89FD1287A4DC3C3989E30E
F3A67BA9EE6214ADABC891367F6D21BA46E982346D8487C3B96D5D6B8148547E
62C556505F77A2821EB73E1E664B151101B1EB4DBB5C8F9B8DE9201E6B15F273
7DC0F7689C9EC2EF568A5DAEA5A46ABFE66F49BA3EB3838C9D07B179FFDC8448
B4A69EE73D488D2346E618ECEF104FC70B0AB09D1283832BEE3ECFDD9E0609C0
03854116A6CF1AF526BC8EB78A5D9F2443619D322D6F0A68D4EB01A5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFSS0600
%!FontType1-1.0: SFSS0600 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss0600, tcss0600, lass0600, lbss0600, lcss0600, rxss0600.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS0600 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-243 -338 1783 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA6B9665225A898CE92119F45B5A35B75F39247E8
87F6148E8475BD9C0B8BBDC95EAF572A341E34052A932AE187F83D45132C6958
562DD6C77AA1D2C0BA44A2BF955293FFBD4B7518249B502542907BEF52FB8AE7
2A5184179367AE6BA5D60016541E2305838A4C9ACA26C5DCFB22217419643CB2
0B33B1573781DD63C56369EA556C53B6F25ECBDB6DE8D624DF5A8C8058C76CCB
F34BB91F48965E9C7968A5D6381D2742E2F017B0832F26FE696B4A6F4FFB0912
9AA241655588EB4862DB523E838DC7B2C99921195D8BA6A3ABF081DAC6741A22
96F74D6098A6AD5094F5D4483C144BA3FD6F78CDCE261682478283AF66C16F49
EC8A4519264C02FF33618D5444D76F460E147D9F11599990A39EAED93150EE04
71EEF896EAC2556AFCE00F88C98E18200A50F8FA6677C0F5F986651363CE745F
79218A912CC1D5AD0CB135282A267CDCA729F5E277D5E85726A9CCB485FC3D4F
0320ED0C7FAC0CA30F1DBDD0ABA7AF04C8DAB4E92A1DB47DC8D7E96B74653AB6
2F86E29BB71C04C364E4BC1FDC7E084FA10D9488E2871EE3D5516DD563735E62
0CC3587F92DD2EDEEBA59C80693C9F8CBA062864DC10EC54ED3F01A705BF5FD8
D8DBD53D416B40FA57CD3792A93E2E85650B825764A0374598B9D1D430F06803
ADAD501BBFAF08433F6FBBD18FA82A30429443ED7F6B3E81F5C5E203953A97BC
F473464EE216293D360A961E7711F3D4BCB5FCA73045C905E2DD7B8EB838C38C
36B337B9277F821C12104B0612CAC388A0C3BC22DC03EE1922B930216D0733C3
7AE910E7209CDBDB93E8C71A3CCD7CBBEFE60738A0B20D187451BB001D837E4E
C1107279134ECBF6C1080D9F71997BBD9F88E7581061A14CF35A06A1FE895C7A
CCD96ABB68D999325F5DECB207E02669A6E598130744BBFE71F16FA311E05845
6E0E1F139AF488BEE9FFB1DE7113B024BB2C1A728807DA6179712958D1F81BEC
D4BDEAB5803ABBECF27C0AAD52F75E9E3A63777195ECAD77DA5757F4802781AD
3E57E0EF0321C0A911B7A4E8041B1A13FD2FAF42BB04685A3C539F5F10514603
62D2139AA65E82BA9E34D4C3B896C593F85FD6ADD812FE422306766413CC9D28
9E52451EEB20715A0647DB52992DE617DE4BC019BA60984E53DF1D4BA61A91B7
41B3C24B719486F719117362E24C324335A5407DDD307A3D2792741DF533D311
38784EDE07EF79F8FB877082FEE8F2884ED063CBD00B3AF0901C093A0100C2DB
33B93FEBB3E9556FFE694F096555177E3D695FF1A82CFB296BA40957708625D0
FEC49E71446B581332A84C3D18CE04D23884CD79843A6ACD48CF4594A13B2D30
D148D4A22C0108807B22CE506F582F60F9AFD81B375452E6FE5D58889A4104BC
29A0D7C2D193328DCF37A9396A0881303EB41EFC7395E84B12F1142BFE6521EF
ADF966976588FDC83A8F0DF94F448085BB9FCB550C9AC3591DBC485BE6F550F9
392446FD481D40C8DA930AFBC1AAE14543E72481692C9ADBB1289515F5618E25
5706EBF52F80616852BF40CE8672A37BD8F4DFB4C36227C1A5114AB1C388263F
356399D25395512C5367823D1575D04F9AAC61C8DEB870A8B4FC6C2623660BE0
3D00C04BBFAD0EC565F7DE7F981A5F158B4AD73F4A0D51B5FBA2844823F926F7
D564F75D948C7EA4105A252E3AFCEB539772847BE12A732B76CEF7D4FA688FA1
B9F5197DE1280A57E9AF64AFEE5FF928B84E71FFAF0958C607EC736E05A7DDA9
6A4E1AB3713754D4EC66B5F1F90F0B10B9704CC3FC4EE01C2E87402EAE901092
858735A0AC208D7366D05A7D8E2BCDF099DB23E5DA54E9306418CD7E16951094
0A98EE23CFD483BD7A7B0C2679A9C3DFF0D2EE0ACCCE43D8F8A8402797CF2A25
C5ABAF9D9E3489CC5173E662690A5C744292C2C54F8CC23B96C529908BC0FF14
DFADEA7931CB3794B3CCB05625CE02513B484F7AC957EF4565DDFA9136A016CF
0C48E35818FB07E86DAB7FA029F067A65A55BA1ED0D1787939E81B1CD168D60F
D35E06DE5CAD96B40D5D62AC4F5C2EAE78A61FCCABEB95FC93E0DADF6DD7BC4F
4D1B8E8F7CEF87BAE17077359249E35A45693755A8C60E07F72E620A208FBB70
13707224D9FF5495F231E450080716ED92AEECE422FE5F23D281BBFA27B6907A
18FF2EF9798A871C8708C2EF80C5220FFBD8FD47423EBAC360D81B7DC39FEF8B
47E7ED15293E0E46F193E78C1AFC9DDFC00C970ABEBFBB64F34C4D4BB7ECF5DF
E24B139494998F57D291E79246014A352D4F793EB76CC6A0884C2C17A7CD431B
B679CF75788080388BD3F177CB73C7BDB04AA22605653B69A0B27DD6F717211A
C59E6D564B052B0CCE2200BF059FC37FDDAB8D927CEE6C666631AE17DB4D791F
82A0DF4AF929B84C1867C57F83EF6400CDE727B1330E4024889B018469DFE590
A228E5A7AA577DBB49E135A4C88D0D781438AE712DB2E67E467FB37C7A96309E
02D6F5FFF7DF9472C5987811DFF2F57C704AE1307A9B4830F4995FC33D5D6E29
CA11F20F4AA976C8806796E308BB2A15990E3A45987F024EBE1308A01D054321
E6FF89F6B690274188DCE72138258FE2EAD62D855EBD76BC0C662656A007D54F
2A12E1C0DECA7B6CA86A0CC884772E5CFFDB723716A217722C4A06C2AD4CFBF4
3286D8E45E7474132BBE2DE02FFC3515225E471FC7A72D6E69069F73BAD96B89
9ABB071BFE498A578236D15CDDADAED2C7D498C227F374356AE341EF6E5AAA15
FF9A560C879FDDCF096473E51EF41B8178D45CC6F509F7DF900B32ECF19EFB00
353F04E4BB65F727E8B0555B43B5F73E9DD162EC8B773C12A8F8C55D4D2E9046
B3D7D259C1240C807E9727DDD03F574982EE6389DBD0B4C19ADD8226AA8288DE
EFF516C7F4D4C2D2E506C84E896E1FA498A0A67E3A351E00084C13C08A13012C
6B8389B5C8203FCC1E530623D16885A589FC95B80E850BF7447E411C842A3D61
C7815F06271D618FA74BF0B8E4DFB2332F31E27D25813ABA736CA409A24463E0
CFCE3159DD9A176318DCF1BC6C9229C54C44011FE98944F4F0DCA665B9AEEB07
FFA2102DB01FA47C041B52A0FAED2A6CB461A9D43E99481B90A4BA405AA01889
59D96F399FCB8E7817649012946227CEE29ECE62D3E940621D84F130C37820BA
B43D4BFF0291CEBBDDFB529780EFE743521D1CA9F09FDEEC439495E6B92C58BC
CF98F8D73B69B5A250033CEDF8DF389AF363A8D67761C0F2A1DD706974D2A948
E52227F67980C92FC469CC030BC1A6ABA95172DBEF053374D01E8E6D964A6CD0
D6EE00630EAD7137A71E9FC635A97C5A2C93EB5B54B5FD26EF7D426640589F5C
11B330B4C94657C5279043B23AEF6DB43045823E30DAB29449B42D35388C5D8C
2635D00206373CBF3A088C74C194CB2CA47D3D2D1E1FEDA48B197B121CFA0003
2C1C46029EB7F000DA9CB220AAE72FD4653F41FCC2EA5E79E1781A9E1FDAD12E
2FE4AC2173B73E7D30F6AF4BDF1543BBB1D0D9F5CE5A949CE42A6AC05B250302
BE7CC4FD908EF3619736ADAC8B11FFFDCE7F3FE6F3845521A115ED36DF0CF09F
C6260E5651091536FFAC43F0D3E5D466E8226C7EC9B0B2C42BBE5A01A4D014B8
466A8D22219481E6454A486BE1097AB91FD2CB5FD50817B81EEDEF8A11C702EC
301368FE4EAFF1CE03839C340D8C02C98B7E760A3DD64BBCF437DB53D1C47CA3
105049D278C4CC00FBB14C0DCAA264E9448988C136653A30D77F9FB4962E06D9
83C01825CD9C95590F26B6935D4D9781A60766DE10AB158618CFB2FC62B16BF9
349B86F3CB13A98F648FF65FA074AD2500BD03763F5608ACAB6A001374FE99A3
00E041D441ADF5FAC106B67E74C28D0283D1FAF55AA924AAD955C7526A993B0F
3C82BA6D5F35AB1CD114682C44276B76C91E92E6AC20CAF799D2402A16B2DA00
59097ED2E47A9725EC763E32D2E74E99A08C36AF8E5864D8C886E7B8BB1D5FD1
5C159B840A418074615F73776D77912CFC2812EB5A14D3D81053D9DDDB18821F
92375622B3967CDD77B44844915EE2EF025FDAEE59C1C033E1FB1F743CA205A0
CC56AEF7091E907F5615DF52524F9CF3375637C440436D22B11B8DB01F63F4F2
57409816311DB5E3BB4BB0A4C81748D360EEF28D140EF9AF38DC6618C5B2CE27
AEFD1FE7AAA64CA5048460E12E194490A4C13B5AD027226931620828B99F7730
5B3AAA579592AED5D6F05FF164B01B822780D96A595E5189A650690EC1802D41
AC83BDF394274671B6DA35508E5CF0EBB0DA86B3581FEDB1128B50C1A0C60F75
42550BB439428906E368EEDB75C1B29DDA38C6BFABD3FCFF378663D66AA743F9
DE2A18520919F96124E666A4614F00F3428FCE6C7D2E3451EF0E7D1E0F1D3091
B37F4FB223E2BA5BB0E57C04BDFEC15103EA47597FCC2A7AD2D7F9612ED8DEB0
B4E237F919152F8D9E86229BFCBB784DB2DCBC4AB72831F3CDE6728C071FC3FC
D30E5811F3E5B8FD5E0B08AD851A31D9BFD710DA64BE553250AF41749C979069
3C74A698EFC6A015BB3CDCF576A0689E9EA289FFAB96AD0636739049F78BE5C0
AEEC0C4BAE249BD5295A90F331BFB96FE305B9AAE7ACB3F0543813828CEB7BC0
E850A95333418619419AD0275CA05E1EC09B97FD98014544491E52865C4E8820
3D4EFE0E85508446D21DD84AE75C05893B870D4D6E8DE5D7DAF5518E3E835894
E9BC6AB4D041902FEF9DEE29AFAD535876DD15C315886DFB61E135B4FA038CFA
CCA0CD98EB6581A50B6A672503A45DC4A1907826D98FCBA579EE2A7FCB0C9F24
465DD39A710BE21EE92FA7DDBEBB2AEBED9AE61AFC1AF1B664E9BBAB13EEEB40
C3FED31E06372CDA1C65BDD9097F2C8D8C39EB6D342EA9E3EDD2C9C644CC5BF0
5C0F7D1CFD7389D267E9B5AE090C2E12AD5CE8840CEC82A0CB7D46F90924B9FD
409909E8708B0E281843FD50709F615EC830A4325072F4E38FA4D9C8D4305C56
B6562A13A5D8FA6277DE9A3DECD483E00BB9D0279C92C3926F8802E58D0AB347
60F8D136DB14CE10E042ABBC8BC0DB77E07FBE03B7E02878E1C388FB177CA3EC
829C6A0C71EDBC4D835760F3221A83A203F432A6F170A5FD7DC044A7E249980B
99E4D965E5BD0087BFA2F56ED6F1221B3A9BCD52FD18F45D29A6B34FA19918C8
AE7799F35377E9C384E1FFF899640C8E3C422AD6A6011E641B73BD918ABA33B4
805AC58464FF90CDAA4713C780780A44C90C0D02D519012417135D67D9ACBAB9
95BDD6574E8217A7D2BBE4184493FC6CD678FC5BFCBEC5E332DE6CDA501F4BA0
C82A8505D7205F3EC73721A43D8AF7050C30F8A894D62811BE8C622F05199F5E
B90286C57966CDEA0744101471FE8C18DF4A3CC10C8A3120EC7B4BF051591E06
26BAED7F065010F5AF9886EC5FF4A8073376B5C1509B5BDBED3A875068A09D14
4E9B78FA5A79BE99B109A67D0C27874555F5FCF839B2EC26372E16F431DF3C6A
7F5ED1F9FFC68F7C2DD01C10D44E84EED223DDD67E0A154F2B489FFF8DBAFFF3
C66C77DB2BECD582160EAD56B14D43C252C9B38EF49D1C2F0FFAB777CF57420C
4BB37016B9016812D4676F3EBE78C028F73E0289545AA5BA984F105C58A40710
879CB10B2751443B3B63FAEA058EE2D558E55D621FA7D5041D31F9DB8437532B
3BE2738E444B9F0D0716928756FC9BE3548C1911586F2061A45D8BEA5711A149
94DF9EAB93721CCFB55604F524D5A61FC313DAAA6A3DE2C2E28436CF9546D1A6
6FF7F379DDCCEA986AF342C5B273961C7CCB8ED08C246F3D9F9EE91BF5BD4940
6B7A1AE866B5B35E62C4A9208C21A104A218DA7B66FDC844264EC168C711BE52
591E70531636F1855CAD8D01980777BF866F3442616A4C5246E984AB91522AD1
9F8982639A22D4B5C3C5D3C21F4C467F7FB83486FAB7E75099FE6A4B3AEDF14E
ED0B547210B7F3E7C1A59F0EF9D615E8C67969A4577F00F4B7BCF0DE95D163FD
336CFFFA2FE14B88FA447CA76AE6A4BBB98B1F9D074028D0405FDE26EAB226C8
E2A55530832014EF931C354506C4D96C992155B5A86E3F8B4F51ADC3A90F91F4
066C65F8F487BEE65F053935C4A3E1DBDD1170C8A48628F3D67D327A1DA720DF
8E04A9D54BB47DDB23E9DF931AD9134FFB899EB54734A2A35C990AB0C485C8FB
CC63BCFE91578CA53E60C7FF03951FAFD3B9C99B000EDCF82BC26C0E1039D469
C16068D8B27C5778DCC07A5CAC7707BDE93B79046EBAC1DD1A77EE62D394ACD2
6B463F7C7EBE4EFE700FE8C5A846C7C44FDE5D45BF586978ACDA1D40E7D90C33
77584790AF5A8BAD5D9DBF69A44E2956AD3F3F2A58D12B0EADD3BD2203818F44
5B4CA2FCD347D13CF41A65E5907B295D9B362AF06864141314CE48952BD2E395
9751966C887D699E46DE6B388A9826C1C78142B90F315333168698A10F2496E5
9A377946AD908DCCB8287E17BBA4F8F7838274F21DA8E14C2C9E8672B0B40EAF
7E5DC25725ED4AA0F1784F6580135449D09D613D28D3C9F0043BEF0CF0B1EA3B
8DA7CE56F82FB4CAAA72F52B28E4EAA659E2FAEF7AA7DC66E7F2860EA451BF29
E8EF0DE163B63C38E57BAAA57A721CD5260E54AC35139A5696D4EA02FBD0199A
39224A68124C46840C4006B2DDA2BABBD2AAE9FCC9FA30B012030518C804CCE6
999E7FAAEA119AD271AF645A023408EA380C737C3037037D4C00F2C103F769CB
EC1B7ED0E2E1682C9C5F08D66485DA3089D6F69379EF72974634D91AB4F57BA7
28B2CEC9A0453DF27C9B579C5508BE836257E746FA0487DC187975A39B3C32BD
F8A354C9CEC1281F9670AD71B6DBB65B43DB328ADAC6BE4FDBCB67613664DD28
CD502881D30E137838B8BA1D37705F330217E29DB4F262050A11FE8B1CC61140
B84D6AB8483612F7CB94A0D0218BFE378C12D799E5A304E75C2D09248172C8D5
1AB46E01BDC256801F25694819EA9FDB9B1289ED26631738ECD812C47D7DBBF0
DFF5B8FB7D4539E862FD9A5698548EC65BF7A48ECCFAB7A0DE5D250A129B0F29
434DB668975904601397BAFF125835F9DE0709F655B94E5006349233EDE98FA5
1EEF5326849762C68AB009807C4F5749EECE2BA7DA0EE9B6D27FD2122F781465
1F22228A26B036B46FB20A1B56E834852D92BCA430AE206B5EF62972B5E23488
3E7CC49020829081CBFED009A2AF7A67981A3D830A3681F6951D8CA5E77CF810
6836E03BB6DE888AE4DEBF456198F17A4D1EE51D2289384749A7D88A354E69DA
6C2716B28F867AF11113B166874E842124F21362FD196FC91B921FB8BF661760
9DA7DD0EF8EA89875F1BA72CAF5504A73AE05B49F9F3C45B01F056552345D697
A7BD0194193F12F54843F070366AD98D5E21BAA7E3829561CCF5A72F78D221A4
8DFCCCAB5076028EBB5B768DCC141075B747F095AAAF63E0AB51908D892B6548
6D88D0C43DA207A331D22BC5865B762597372D77AD6BE928E3E809C75CC56CD2
E1A786CE64B207CB7B0A5BC4CB56F6FB109AFAF835F639F8F1043341A0E84DE8
20186C4ED33D753F60AC3ABC2DBE1569FB8F1FFDA11730BD7B1D79598C670C65
54C3C509E363007FB212839EDAED3AD5CB3F07FE63DFA87C42ACA6BBF226C2AB
2629796D755F41B5F4E5D10C08D7E082932182F83C4BDDF163BAF4EB9F9C00B8
279A16E5786CF498EB271C57922CF7404AAE0D1DFE36D3BF2828C1F79C796BE4
7854D809A0A9E1DD701C3969F4228CBCB426D2B1D627D9F3C0F2FC67F53E41FB
E5EA9D13FE9B11ED5A5F2EEAC14E0C831B20574D5911C4596399D648F19909A7
4AD6908F69EF86EB937CA56D494F7D403806BCDCAFB6F95614ADA0AC05886C96
4E125793B5144781E6C476A6425F257F4A154E2B04014F4B01ACB03240C4618E
0AF2E9D450350D839A7F1F67B2CF356B12D46E2DF7096A64C40D42571CD51145
D193695467D217777F1BFFD4AC5B27073C16AA8B80A61DF255239F9A34C7F773
3B15FEFE23CA179322EC34B9F36FC640E80E266500A2E411C90A03FD74F4C52F
6957C31A2E90EDFFBEE8A6DECA5D9AFE9032E9A17FEBFA33E424013FEB93E736
48AD59AB6E3E6FBACBA7A4ED77EE16B0D347102DEC18D9B1ABE91D086895D285
F6CD9319FCF53943439377E5831EFCEDE72354C0DDFB4F64C6FE46108547E6BD
140A575DAF0531EC6A4D83FAAAA649904EF1BC37B60243B355841A7D57E124AA
213439F2EE5B9B362AF09458933EB8B8B994C505CC1BC34F0EEC776361D53782
32B80FF96297C2958328EB7BB3B6CF99259D9C6941EC0A544F9580AF12E04700
9EADE16F4D9A5EBD33BC384D75497E5AB814AB2F809EA18F4FEA5F263C69B9FA
47CADC84E54C9D66DDFB6E2B81138A39F8A6B39A7B8283AE9C16E0E0BE90AEBF
0BC7878E1F8AAE5AA2C891E84F69C271A2C17BD20A6F2AA79ECF83EA560AA852
E44BB9D65F90321DBAE4FF24B9EC43B598F1781BC5DABB12E127F752E32F55C8
577B616C1D91271379C6A62A289AB064A9798111186D854668693D92EDFDB391
DCEDF4ABD224CAA895B61F7093897E0689A1B9AD8E60E2BB046E840BD21F60B3
6E028DF2BDF7BB10E02DFB16D595CEAB0C41591B07DF65BBAA0CBDB39A25E32D
2B6EF968FC802F9E2233E4B97E433D7294D60DC057AA1E9F1EA610213078C9FC
0353D33335E1F4EEA0CE62FADE03FC834E86D5A5F5C7FD6BF462F7237969FB28
E98D90D4BDF7A6C668D11C4D40F2053C105121BA54F53C4454B414BCD6FC7236
A8649186E76E149489B7BB33FBF58CC54E06033FE525867F98AE7B2E44BCB96B
E21A4B3F8C730DDDA104EBBBEAFC64646F73F8596E66DE15838F1239C8FE77C1
C1CFE5286947A8DB264256055ADBE39FE8751D090207E4596F282591EFDB2663
AA5B12136D500C9DFB9C9BCD24133019D8D619B88F6D9890C0AD7B30B9ADD7B0
4225B8342B6652681109C519D347215D425C1F89F91B9980FA6EE7D26A2D35F6
95ED5BF3948931015811DD7B6F86EC5D2984305D8568A85021C084A9733E969F
CD2836CE04250ED32558A15EB2BBFAB38238979072997C74587BE4DCC4DF9799
8767B2F2CF59ABA8198527F38C13F417C7E18C9AD1F6361E193DCB2E550CF4E1
1B621F8A3CE5CFAA3DF0C541BEBEEE9DC9895CD233E524180AF843563FA281CB
5BC10B90D35D2061FCBE8F49986652EDB62BE5CEFC03EA814FDAF9BB4273B9CC
66BEDF2E9FBE397B37C2AB9514E7945C40C04CFF4D027AEF6598E3A5CCCC9E5A
63E9A9370F83D2BAE4170A03697C5DACAB9506DBCF8EA3A54493EB795E791AC1
590377631F5F5EB6C2362835BA66EAA39F58A7D49EAA9E539CD65A5019BA2B1B
6DCEF2D0C6CBAAEFA72D184E5077B6328CD7B992D60C49CEC0F0EAC2586F6984
5E86D8046CA2E58C2C428D6C9EE99F8DF771BEF767B992226ED6D731B20C4C34
4B2150B2BF9620882D49B91DF47EF15826F22485FF8DF02CC9639171E537DECA
4403FC210C8061DDF00084044623CDBAEFDA578A46F7C0475C2F2DDE3CFC2ED8
203DCDAF807E82B29C72463B60CA3262268A9DFA8D16CF64A68B1EA22AF00BF0
AE3023992FEC5885B1B4D158BF7A9F9939F0AABEA8193DB3EB9BFAE0FFF0AC59
E19E021CCEC621B5574F2BAE72B69381CC2CF0CE8AD5BF5D45B75A8406646399
0A7D56C5E251F62528663F0689C146563910314F51E48A5870DE7191981ED929
28ED37F5BFC71EE6B438E77885B9D2E8B84319A43FEC99FF1E99CFA9BECDBDF6
0A429157FDA0B932DBF5668723F7ECAE6731B49CA226F4954AEC72E633173C38
5D2F0ED43087314D35D7CB32072B1559EBF40064AD674962590B7348A4DC28CB
DE510AA3B88607C9EE559E3C24448F366F8897714D7AE8A2410B997F033F22FD
F35B7516510B7F6200C41CD9BE0605F05AECBFD238BC735587C6635A9B533B74
68BFBDA7C40E0FC49D380E1BF70994A0F9FF59459A7E45F7AFD016B157FA50F9
8BB416C6A269DE2465D7516EEE3F28CFC94FB08FB9C04BFA1F216F258D4C07A7
0F941E77AAC4AE44FE5C682385985A026F4D83AB8022270A50514D452E174F9A
44B634137D1ACB368B0711FEC9F751BC6B8415CCE22804D76FE713CEF7D77F54
233A7509777E56486A578559694DF9ACF6F742370C3848C7D5E4DE9AFBFBC0C8
6731D35AFC80A6983CC9E6A6DDEDE39DB0BC54134B12A81BDB4441FFA56EC872
650C27992155ED3DF02D25825326C408D738AF799A1A64228C604F40B9CA5980
CCE1A5E1C1AB35CAA86CC6B107DA9FD96A5A8B9F711A2B2F92723EE9C830661D
38B4CF83142F2469B366894DF2C8F393B20752AC270363660896564BBF24D4A9
71B73BA57B28A4BBF21E1C7F5FA3382FCB42CAB2EC07F61C95072B7AF94C16A3
5DFE8F704DD5B844667C574383CA6F1C6D46C124BAA7C02300DE6458E79B8051
9BC549A603F3C11C3DA65F4B7356FCB6F355614E32C19E7FBB748F11C6034880
F94BBC933283CAC009DF2C6757D5561669D4C4C167131071186BF645521A3E88
C84DB297A74462B5984F1088B5DA82EA30C8A276CDCE7C469BC93767F4E7481F
62F73086C5EE327FE3C6FD0A8797FAB42A52702A13F649AF5AA555F19DAF7403
8C056DA99BD73BA4F3C751DEAE2D248A8B3D9432FA39DCA23ED5263D4C1D2A78
B32BB58F66813FC9E65B3097F5A74E686A0845B1879765695E1EAB75FE8ED265
5B46C449602876556C5FFA151ABE89457C9AE45CCA24FD0099E3ED85B250AAA1
5124D28770B331C1AD6B90F87A811C8970FD7CD93695E59A03A2FF1CBE33228D
09E78593F93943CC0328BC6EAF6AE3924910B7E8F89C5D440D7EA0FBB3B39E7A
9276D127F2EBD96C9069A9D587FF3DB430850E241BBF22B07FF9F0F8BF01FF17
A260C207BA6E12E273DC49DDF313D9EFE19E4A21549A840138F633E6D0265272
4663F1A224658B27A4035F027D92AFF76B9AEC06E24B1492E2EAF9985557C907
05CC23C1B98EFA96D3DA323D6B5A57A950C383DD7AD7CC6F47B643088A4FA471
FC59D63EC10272E0FABECD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSS1095
%!FontType1-1.0: SFSS1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss1095, tcss1095, lass1095, lbss1095, lcss1095, rxss1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-201 -321 1477 898}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839D875E6595524AE250B4BBCAAF88358
42414E09F7CD675ABDF96AF981110B63C2828AE397AB0AA97C0D36B4316AD714
87FF55BDD36ABB42613BAD3FAE0694C475D86E9E070C777B8A0E30A11C2B2FF9
FC63CFF9DFFA41BE0B97B741567C8D094A56CADF2C0312D7AE73FD1B0A32825A
9D284B11D225DBDBF36B22B7259B2368188D94E48FDE06B9765F0506A3591930
7003FB93745CB604ECF641423E6914B22F4438B899518565AF7FB18ECD248A9A
498B1344691D3A1C3FFC21C48C65A08206F5DAE61C8A5DCFCDC426F0E568F431
092FA359E319B476053EA5F160FABCB987F2B5CB0A3BA1C715596D2AB9947C60
579B980B09DF6E0979FE9608723811E9AE0AFD659308EF2AC9042B9600CBD293
A37F84667E7F3DFEE4CFE9D1A676A5728CAE9FF2FD6AC2E3D46EF000EEE19E10
EAD13C12B347F0C8F656C352CE9E25FD1DB2F1FB9965818541F694C65ADA45EB
805911EC74CECA83AD07803D129189FB1A09532349290F3B994839E260B4F8D7
84169359C4206458E198125D6D90557EAB5F57DF90D3A0322435898FD833873B
18ECAEE64FE29364E8B4204C39EFE2051A24CBEEFE58DA480FD74FD1FD86932A
FC4B969E2A5090480D95036E13BEC4562CE21073D35DE0DEE2C8224EEDF6CE40
9DE86D56344250AD374E336AC4F81F679E8AF6631BC115EBC4A73C99124201C6
403C2D57AF95943E9949DEAA1A9FB6A46838DB05717B5DBD1FDAF4C1B85C7C57
AD39D3C2D3C1CDD9528FC0DCAD47C282AD71BE2057562C540319DACB3D8F7E34
4D9FB3B5FC8655FFA080FB59EAF78BD04489F19407B749B97D5BE40675317A5F
64FABC1C7B0B4F66AA8C6A5ED038D26519E8D70C6D2001ED43D0D7D61DE7DDB8
C70CBC556E94AB7ADB6678B471B83F971A2DF109C896D355576B9BD8676CF776
7305CACA53903867AB4A8A3D138E5F331E6D52502BD71B368617A44F07BAC8A7
1E8F20774FC7703577029221953D0A0426C5357F7F712BE988DC8D8004107A87
0BD23F85BF28264658B8B6D57D9200B21AA2A22941B1A3B21D7EADEC32844428
757A3E5FD42AFA2E2FF2DC296595E10415FDFDADE4CBA2880D0352B2CB4C6D8B
A140B2CA30F4D80E239E749476B50500BA3FA3ED367DDDAC1FC668C7D3C89BFC
6908E53A6232F3F96D9B61434F999C4F13EF852DDC1EC09718B2041E48EEE78E
997C8BA9E9AD5317631AB2F750D81502ACAF2EBE1B1A63FE7AAEAD9CEFBA0B7D
1A78D50E363B81CF19262AF6A41D9B778700C60738496FB69C1F8EBE330D7CBF
ED87163CC679DC85C12FA2E90493D44981025F8881BD367DD8B46921C4474071
77929589CC50D44706649ABC33EFC47C1F25CA8F012BC32C60B35F160180886C
100396A0400DD37DD03D3C932989452681462034F5B0393A4EB59DE4F8C2E096
DBEED62C34E976BB30CD80C26C904A7ED4D48EB9DA24405824B936281E11C47E
51E1E4CE290E172C8AC420BD0DA240FDB4B1999A4BEB62DBAC95A053B2A38C80
CB0D5526A49FD62A998F77CBBC1D6C481FA61C453F89B2B4FE2342D6D2644C50
597F58D434D6A5171E4D5FE3010E26CF97B8EB2BAFBB078DDDDA14F7D1C88954
279E5FBEFAF85749F5F76D18BA91DA8186563C7B34DCE93061A34A70C274C3CD
492EE4DE7C295CA75750165C4DA08A49FB435D413A9BC9C74EE0BC48854DF648
EF2A0C6D013BB9E7FB4BC6EB0BDB87F4A55BFF1BDD573E57A24038F36C5BD8BA
61B868108A9C7D87357E4A905E9010B076C47FC697CAE14B39265000F53914FB
A14CB979454CF0E93E7A427464875AC325C859F32F318225AC897D19DF73099A
C15094F01EFAEFA7F3AC52BD2CD027F11005BC921F047E3C90AF2313F5930889
D5DD1403575110C328177D4FFB0701A45B8D9F0C090DD724EA32F31C5941774B
96F765A580341C445EB8A77528DC7DAD3699E9141F52D23E09B2BE5BAFB2F74E
139DAAD1AC10B7349186CDC274F0D9AFFBD3AE0EBBCED3530B1BB0722BBE22AA
64E6E96EF9807FAE8B8E5DDE117370F0F9FB94D4CB4C56B642917B94466AE530
7F8B58EE81341C97910B766B0D39E0E09CBCAD0EC56571F6540590062BE604C0
8AC67A79638E2360C3CD67BD93247426A746B5F212A5DC8AC9B37740A81128C9
8CD7E3DF02BE386B8A0F4A86724938F453324580BF518403134F42A259F0DBBA
440916246BB2D8C139C1C4482CC65D7E820D14BF7D7006340118E843EDAD38D8
AFB6C6023C6E77D7379F434A66BCB1898F12E8D2300ABF0F3503031FB4D5535B
A0D5895184306AB2BA381A8C30B19D130891F1BB55697B99FF88ABBAC52AD7BE
1B62A611EBCCDB6436205BEF39CDFAB6BCCD341B9A2BB4EA48FFC9D133F12D55
B62230FC4BD079834D21FFA31C62E54B10A984FAD0311BF204A1A3FC243E5E36
9A51BA298494B0BCEE5E7B4476E4CEB868F1AB22D5AD4E6D502FCD8E7D717FE4
664A10C6B426EF147AD8C526690DE5513BC01A92C3C69594738E851C20F38477
7D027C71522BD15FB905EBAAA952575EB5D694534DC319B4B59ECD41EECFFF28
11CF852B7BB54623DF0B866F7B8A761686B85CA96DA7689FFA350BA37E85AC59
4FB7D21F6BE904ECD3149F95A2324A3AE672290E29A1B1EED0B5FDED7D287D34
A1CF9A6197941B125539B418C26E10F395C72CF231995D772338E6E90F17906A
065504F5EBE68622562CE8E8E1F7863C436430AB17934572F977628B130CB286
543AB123A3EB65D1FA0EC2C8FF044C5D51FEBB2C205C205B35DEEB02E527963D
FA0C8D900426DA3CC71FC7A18B1F3DE5D7FA47B6954C944916934FCF323F1912
1DDA60091A0A163910873E8600B8E40667AD4990AEB14B34D2AAC5E78C7D2F4F
868DDD5FDF1959595A4B592301ABE52CAA79A84BC911D294B47A73CD8F5BEDCE
8E2EFF3F1913D29467BE32A43863502E8A12727F5D50F3C73B59970A70E7A5E3
82B3B3166F933FA2EA63F8DB9AE77AA6458C2FB8A3CA9CF5CE7A83D4A4248361
60F3B3ABFE4360955D64EB6EB77DD8DAC335FBA52A544430AC06BED405CBF1D7
60705FCA8115D5995032CCBCF27793ADF7B1BF3338F37B02530878CC7EE277DA
2413674511CC92AEFC15F75CBB0B8C8C8B4BA45E4B27AFEB868A5FC0E1FF5DA5
71CE07817F7C029E12E92E80AA5FEAD234BE9AC28611EE83825798AE723EAB2D
1B9F2F17A078F55FC5D546D8D65B0ED070420005A88CD39230C10F0D23102D33
75A4F6495F235BD056DD2CD2B0553C59D295A4EC726022D0F927138C1B8256CE
65253EAA542CC2D5F3EA80D8B9FB72B8EABF58EE9E2B2276C87FBB436219CEA1
97904BFF0081CD17E1B186282AB20ABDBD3E727A31B9FF45CBE471FFB02CE654
5C75EE7FF473140370CC7E73AF1342538B4CC99379C95E79B2811E41A533DF4B
DE68ADE20EBB752C9566CB17ED814D29ED2931E1D0F2D7D036990BB524171AAF
C5FAC093444CFE87CC23D0CC831CC5C9941294D3ED3502149A19650FCD559ADF
6B98858F33B3BD99B714FC1B25E5412FC4A75204A35DFBA2E4D68ACC926D7966
9B0469E3561BB789CD69E8157A86D7A280DEF90FC98CF4A0A340BFBC64F6E3B7
923144E3F023B94D85CAA9B56AA7065F69514B8B6AA528E7B5986A5713480B68
CF8F7AA3A9B624BC0852A8E136E8C8FA66E3436B11979C9FEA50A939A6023C8C
E8E6D9198658F56C2AF03BF3E36BEA6C0805CBA1C25BF1CA152F7F3D6349F4F5
2DE538CCD25449CF2CD2F277D1A76BDD781F814D8FC7441EE35F2477EB0DD6E6
0C5A52EF79799B8AFA0B208A66D8CA892386FC69EBEE8C82221F02B678460E14
C5957E64833D64CBCD6536BFEC998452E49EC8F17F0895E2B3EFAC2CEE1D6D1F
CF229848D32BF2E94954EF18875A81E18C2D5287C0B3EF5B367067FD4EAE03A7
82DA56A87803B532F149524F36431AE851CCD054615EA9050B81809A36186EEA
1CA1B9966C317173CE0A5F18363BFEF345A753959391CA66C901933C63DFD34D
E3C1C2EBBED0051433C67D02EBCE1090FB55CD7A55641AC0D43F1AA6501DCEF1
2C172A3448ACBEA2C2BAF04A0C965890BBD3EEED56AE70B54FD2F56C93D6EF92
CCEC737A14D9C699ACD605974A0B3707E448AEB075E3210DDE73C8F9B48568A1
F262545773B6C146E4222BEB3C08E4E7A40C25999272F27CC57835760E30B8BE
AA3AC8E48812F1A5245E37DAAD4E05A3D794B7D2AE8B5A66D04AEDFC0E8E2A09
85CEC6E0C5E97CDC0CAEE8F954BD7CED3A6048EE3B6885B4ADF413A5C6A02EEC
7D4064DA918225D1933AAB0BD1264119068A0BA4DEAE3FFFD034DCB0023E98BC
A1954246490A01F560170E0BB88C60420E3118FC8746E18A70133227A73527E0
F3C9033409F62DC4A7E06D4B08D8EBA5932846EC5AED3A487CD17A7172AC6FB7
908AECB140BDDF34E64D6E8F8B6C191B345B4C9F1990A831C6D7FEDCE271A305
ACFE825F72CC601EA21A396C24EE3098FF348180D58947CBAC192C2787656B2B
BFD3269F03BC404116370680D4EEF39E834EF26FFE38BCE0D709937FB10FDE2B
B53290AB46B939B110E435A6CAE8F30DA75B71E12928C235171074364EC87B8D
8F7E27CBD0B498B1FC0B22385B47D2B84023BC9738A5FEAF6EB34DE75B2CC3F9
0160DA5983291C3BF089602DD9ED79265063D3932FCBFF2A9621C0BC450FD145
2BD6E0BD2C46388C98F2362225FF7F84DFAD1442D426C85EFD2E4FA4FDED5C2A
FC4524BA4BCA43F7F61C412DD78E4013384D3DA97854CFC4F3D3FB30BE148D42
95C793C00FF33982467C96A1A6056D66E1F57750DE134EC083FD02FBFB3F45AF
03F004B65B02092582C3689B7F03CFB7C926DDD1139D8A35E953166ECB705D2B
910FEEFF1AAEC036756E82EE48D667AE444FA37853DE6965BA42D8F9A87A9F55
093F0FEE24ADF9B21AA9AC2E64220CA32DBD1A3F4D99A68C51C139D72BAF2BAD
C76F7B530281DBE0C1BC769ADAA75DC50E230FC9A4912110CD1B22DD8E44D326
AE18CC6A008C105135DC111D389D94D4EC6CF041C94C69C52A10CAC92B079707
3BE1CE62896D497C31D77FEA989ACF9F98AE7509983AF74431CD731C8A522180
2ACDF495C3822D79957F561E4EF1489083E9086DA91E13976BFE3958EE3D2FA8
E6F3F088037839241B4581749B536E7E34A8AC19BFD5346C96D67D48A6E1D833
E8496E88651E593A9AA62ABA6EF344788245856108F8E19EF27F8B4757C7C326
5348CB94D7FC7861C80CC36F672F2651A6E9A9A8FF21F36251BBB7866C7F47BA
59E6A82696B5D82B422343069A4F03FE04A62528116239C6C5BE8EDF6CFC6937
F086388C2A51F251EAABDE385107EDF798FC33A9624992FDD95412A61ECB7B1D
8481D71578651FFE6A23FC8529F41DB213568D3890232BE6C15C259AEC31E561
71CCD21873F8CB4A1C2D702C2275C4D31D7A101EF44B524732BE9B5B6E159B68
A2EF1EAF7D7C29469E213EF1012B427B8583B961EBA94D95AE790BD054BD9719
18903CEEEB13E41EC5140AEA2D43AF917D8D87F033A42FE5DC8C40FCBB2BB86A
CA3D96BE9DF0EEF82421682E26303F8ECE5F46A0C1D1C6D77620E675BF7899DD
76280312AA0240DE281FEB061D2F4C260873B7A5724888757918F49329D85F65
1BDEDC1B02D7D06B9B6561E2FA7D5CCD5CC9E600E8CFEEDACC9445D31BC54566
425D7E3CA88561CD4EBC1CC4BDB978BCBA97E42F78176404FD51F804DE1F2220
1659E8AFF804D131C2D53711A7442265F81809C98A1303E35B329BD3E99A0230
454A0559BB28AC6E176D5CB65F41B5F4E5D10FA2DFED3502149A19650FCD559A
DF6B988586FF84A195A2ED60781C858F6E6E37B1F58B6F1EE228F515462D64D0
0C21944F09342DFC0E8069D732A9531E043423500065E28C3C2C9D031C288311
347C1F388DA5C0278E27C4BFEF9A3D459E406FD08715419BE01ED50E41056F46
3416E51018DBB01E4B3BC41721A1168D6A4DABE65713AA35B25F17D84458A047
42058FE11B5042CD2CD08700741F1A2E3599AD8BF5E439EB78D448BB25079CA0
0FB20AD59BD5425C895F4D7616505CB27F53885AE2C67A86588C4BE73FB76562
AAEC6BE9B3EE555017127EA6658EAA3E0FD261C6931DD3792507E430DE2E62EB
53719DDE7A1BFE968FE6F957D1EBB6C0838FA40715EDAAA04F45E75F282FFBC1
DA4B7A9B55FF7D90E46897304570B49CFCC27269F11DB1F21C0B7C95A8539B44
2128764F9D7330ED1CA8845A3ED800C8AA83556A4B9F78502D13231B8CD8A08B
F419B7803C970E200965AB810A053EBF4AD2E4DF3C2E624F09F5C251CD099A59
FCF33022188CAA99C06701CCB874F753D1ED8A6CA1D7A20A94E5E83A6ACE31EC
86E23C5A7367DAE1B686E9C748C19309FEED8941A334CC973E134BCC282C35E5
4630C8A13BAC85BAD6B23814FBD400BF152560CF6ECBCF0ABB9233D4CDECB8A7
73C1BEB10E83AA759CCA28A1E598EC4AF553CB807739963C32EB0274AA8F120B
98D4B01CF95C95C85D3C6A6EF64E7B5671E9D631B0628FA575A6475BA57195F5
4C760841E4E082C2FCC19B3A00CF60A5C3CB806481908FE3346D51A6ED85C602
1D86D68B0588175590A7FAF22F14991C5721ED4A26971324F7FAB02D7C71E02E
5976E2AF4C4532B69695C4263703BD6A1A6B921C7527B57ED21821F45AB5BE76
33154C301DDA2FB93B10EDC7B2ECF6C2B3FB6700F4186ED33AD656664632B6E4
1849E409E6E5B0354D85CC21CE57B66BFE8F5AF110F80123F2A06D91E290A850
EAAA5D3FA5FD3FA2B10BD83509AA0A962FCB5BCE94E1810DB126AB5FE53812F1
B903240EF2A29FBE762C51A69960F313C93FB5555F3E688CB128C726211915F9
448C44D89F32A2ECD245DE91A4A8BC8CC6A8448397411AF6EE8E26240754DA31
7AA30828BE6B0047D28E14AA058A34FFA56E5DAE58920CEAFAD2321D07A2E8D1
7604A3D92696CAE2DC62F3525F287393BDE478FCA9451EA11D2BE04F348FB6DD
459C45B1587B3691681C7BCAC430BC1F108A89AE1597563DBB0E1B54CBF1A61A
245FDA07AEBD3058BADA083684730308362888BEE48AC0E50902D45D99FD5F0E
A4C01DF06B25ADBE01D848643AE861663188B50CBAD741F9A2B57B3F8174447A
9777CDC9C4D9CB1C5DCCC4B17CEAFE630A725827AC88EA178A537DE339D00AA5
1C09229B3711758E56978524B07C3B0402D51ED71F63668F432D0748CA04EF08
EC749FA9DB9CD2CC88938DFF2ACFCFFBE037F0D9501A3014CD898E9A4B10412D
F11C9719BDF2B79A695E89B5B4A33F87347ED5151C200C4A956DF880559CCCE8
B7A7AF5AAA1B1E22C2614EFC317D9CC680077D037EA8DC31714AB4CFAC6405DC
692F38E81FE57EA3DDA4B3CCB0149CE435AEAF34136E0DE665463C4214B86E9F
3C3D2AD4551810F9CD3C55E227BF0DDC551488CD275CA8BB73BA8C3D531D43BE
82C54F2654F596863F93A144170E89A0BEA1A7A8B9432852AC88D4C024EB3974
C26588628B03FFC88D670FADD8123B5474C4E428682FFA4758892E3C28CCE04B
3CFD3A72CBDDE458C17966CDEA0744101471FE8C18DF4A3F56F08F9ADC720460
B2830C1028E059DCBAAE83C778F34562D23517693CF1F228BB283D1BC5DDC448
D32F9BD233FDDE2C4273FD97C300665C90036DBDD7F75B65B3AF6283F5D0B8CC
4C8A553D79290A66AE5D870FEFF3F0BF64F1A2EAD1EB2EAC8E590F745712819B
56D3492D26324782F786D66629A994916E587E677981F6EB744D3FDDD905D1BA
C658087D5C722ED2F421B33BEA0EE8B650121ABAAFE0B32374E5E67D44D8941A
96774459247DE9465BCA79D8F6EDECE0E8BD8C7ECAA6D263E7C727A8E08919C9
E8B24E13468D1477C75733EC1299BF37185BDEC009B50703566E94AB7A712874
2591731C8050B5D2FF4AE01BFD89560FDD34CDC2B76DF26C2155723623D895FC
952E62CCC5BAD17EBCD052BE277FFCB439E6C980326593693816543C8150617E
AD85A52811063A18DE1E8B25173D97119C98ED76194C28DF9541B551290E46EE
893BBE0815AB8980B52AFEE846D9C122B6F75E2556D0C766579DAD52D6897670
B9B2B5B0E0E5660DC9507357B0C0EE3338E7FF32781DEAD1CC823871776F835D
686E3DE0473584728294101C4762D9ECD15ABA3B73337E0D1FF6E3B2E5004AA4
2A83A511730D93130B8188901B67E40986CD4864F268BC186848EEE2E4CE89CA
D91C50875B2AEE0C19B7D84109778F73820F99C207F3215F6495854188771CEB
08B9D15091C469A0250D7377B26B2CBC69994A576F55D849844B18658747CA56
89A71F71CDA3E19A22AF4E4785C25F3528E5F1CC96E65C452DBAE16F35763DDE
835E1E7AD116DDE1C99F8285E76A2CFCB6FE5382E07A03315848C4D7D128D423
F7B3FBE3776948F8D7C1150CAF610487430D951891FE84A6315BAFCEA8564DBF
7145BC5F59B4395881CCBEC4767D0760DDA666A65CA0D6EE1B33BBF1B23D58B8
559274352EDE610D488CBF10A6288B2E3E29D00D89E9D11F680B3067FD358B20
202DEBF0BC70A92D3B64D1FDF723DAC57021797C419082A4CCB553642D6C2D24
F334F8E5CE260BA610C85984F5C1CB17A51CA3C17FB8E306640DDE1AE69B3F43
33523BA40C5B18C16AA680BA60C19B94A56D2E89D2D25E949042DA15744BBF9C
D44C49474B152A427E2B52D292DBF343C5EBA02A9998FBB6F541FC64B0531AC7
D98A422438DFE4F1313D2405BC4A7C2D53B6DB3825AB1EBDD7E97BF4AEC7CCD0
268F14842D16062590E38A1E0B004534315E9D355618B8706C57EADA0A787E6F
0A17483480EEDD6B992E4EAD3DEC6EC827533377EE962B78D053778A81F183AF
761F112B5C25157E4D9109A0C24101AA6A0C81360B008ED22E9F0C98F8910B32
CB9CA544672A851F2534F4588E1C43C7B438E4B95B4A7E8F486355D95D3DF2A8
05FB9725E4EC6C9EB7F9DEC5AE5B6FD125F6E86381402F3727B47EB3D7F49138
5112D36848960E3A7BD6CA85EA8BC740C26F0A5DF57CE959DCCDC9D77F586200
7305BB91A865A73613DC3E3FC5AE6A48EF6358EC29D71C5F86588AA0B5C87DED
F27CFD603C275A1F76ED191DCB1C33493EEDDC0D3B2FB03C68D6DE6B6FDD824F
CCB58D386D4FB4DEEE7EFB11DC2B9C5C4FEBFB8B285058F0A08276F6AE500E0F
A6D94A42164FE5D6C797559384A4E60F587AACB0E431E03E170CBDA9FF1FC8E6
60F8D9EA9F089E727C5ED76A531AF2304D1401026763586484CAF2D9BE9D6B06
CD3E494CB2059F95B149E8822A8782CDF9E434D9FE21C2CF812CED3B67F6B175
46BACFB8AB7C02235C70B4BD7F4C72F0A343B79865D625EE5CBCCD1366941BE4
2D72C12127C287ED742FD3A5A753AD7B5638D765372577A0B2C7DFE6B3501821
A700488D7316A5EB1EA6768A808C765D65C8EC958D79CB30F3FDE68B5D2B9D86
3C4A0FA14A348D086E1C6218C453AEC1A77CD34288841ABDCC0825A72B9052D1
2EAD7DAEF0A1E84E146E383018447A70F829D848A269D832ADAC241FB11DA950
F2DA0494B0282FB142D6BB5ADCE74196CF251F0AB0FE0FAFCDCFA1B8E9523CF9
8B3DEBDDF740850474B126D19A9992FA11CE987CCFFC252EB7D1B85B203D71DC
802866F884E5F401701FCB0003EC0186A79CB288231E10BE61D336F8F972CC89
7CF9AE67B665A09A302E43FCB5796F576773E7922488522C9AB48A3B80D0F61F
2AC46E98508DDDFCB0220686CF2D5037C337BB10FE6EF2777062545CECEB411A
32BA1C00842B78D7003A85E2BF47E164F33EB202307968C5A4EFFB389F16A492
DBBDA93D3A0352DDA2BABBD2AAE8CE0C58C8DB20999CB4F217312D6BBBFAAFA6
C332B9F7F229D8FBC80ABCF115DA1535EFFDE031298F8F6B866E05081E15818E
915EE64E4F1343BD815921E958F4A959459E83CFE0234229DB7C8BFD0309F63F
C3832E408D42A035255964854B67CEA126ED773F8936EFDEB0C8BBB979C49CFE
B0423C4EC61A3A9613F7EDAB7589595B4CB9E46474D5E6FAFCE2C5EB7D6E812F
09465E34B0E5193B3844BC06577610497821BE256AECFE75B08EAF88C3174C32
5D1BA549101079D6A2D159485B87926416F5CD8B549A8D8054467A25BAA634B6
D413CBC814AF034D8886EA8030D902C2647F8A5B917701C3DA1CFC8366193352
170FB896A21F6CC7A175FEABD82F4D5F53A69EF65E4ACFE1313D783C2BC266A3
5604625B07BD1DBEDA64BCE4148D302130928B709B3AAF96C35AA6157DFE1893
93A318ACC6F917CD3B1D84115834CF09189BBD88BCB0EEBC694D3C26129CB619
B506A0B7FDE5BD56C9529B335533F70165983605CDB94341268F3B068CB013F4
685DAD3220D03098BBB94D811640B3A83A36DBB87355352683BECCA726554EDA
0526DBBE8E0892600E0304FDA2F86AD45761383E01E64D3DBD0E75216AD5F879
BF4942757D6D41759D73897102852918FA0166D70429F89E47DE30BEC9C15DA4
162F15F0627CB8D85DDE1843B36CCB12D9C2DD992478D62CF471224DDD6AB250
C6ECB7CB293E503F892E2AD1C98662ADE6F2342367F748E68AF9FE2FF9079746
CBD06A328177E9B6A5EEA99040E0664BCF70081DDCD73D7FBE3EBC32CB3D5AD9
4C6E86C73038FDCC6778936C98A23EA5FF4BFDA67F464A544179C5B5C7003A5D
357B592EC46BED28040DF2F0E0DDD7D183703D3604F7DF1603CFA2D61EBF6B92
73C89B9774FB095BFE6125C0D8549E8A1969099DEAEC13A0D9ABFB7C23E48F1C
C3DED8D44B39D6B6818A150B31854856FD7299F01B57762BEE5C870C15918C63
5C724756E56CCBB1D3F80348006E7E975FA527E4D0652A451702882750337419
7D0F27BD6976B311631848A4C968683D43DEF45B70B21CDB9B1E9BC609D876E5
7A4B649EAA40C56B7522CC4535A2DCF71EF04D39CE52C4D142F8F805C115F177
0FAD83AD308865AFD4F3E746DC873F8ED0B1389F3F2266E997B833B44C7CB14E
DBBBB3E6FAC43494F2F9EAEA19D1B5E449D69A2787CAE41D0CB836D20503A493
7761364C2DF9CF181890DCC0F709877191AD9EBF15FB0CC497A57902722A02F3
820F51B8AAF8F3E156D9AB478060A9E6742CF377412AF7B717C0E25B39F6FC64
997F2856F0AD889188515DF5A59AAE646F802EC384E45794CFBA2FD59E5A167C
74C38DF6A3B9C19C889DD737FD7DB78573E053082BC5D3F84265624EE918D831
03327E74F7921E407DEFF3670F5121A2FB4E4891C217C19A4EAF7A871CC23080
CBFB2C654A3BCCEA3FDF1243F6C28AB2742303CF0570A79126DED0AEF086D237
263788280EB5128147DF0C3B94AA20A702CE28A08FBFFA8712A85C219909874E
18CB646FCB20282BE8F1CE0C9195A720E07AEC756C0C8BB7CDA092E898BC9F57
AEBE0352EC15ECF77ED4D065B618605F80F238A09547F800F085812E02B582C3
1A8EAA3A62364DB26A441FD9838F321C1AA75F710F3BDDAF7C9CF303D1919810
41F56510F50A2EB86C3B2619416819028681A7E9767417D83C8362B700CEED40
F97145519D93FDD2F9CDBFEF55B0BC063B163EFCD7D6CDC88B8EA259B837AAFD
6B149E6BC39F002433C4BA51704B9D543B48CC71BB16FB0515F622619B6FA5DC
2592207DD09BA5F08BC4710D27C43902550A89C8E0B66AC9DA177ECBB8C018CD
9ED41CBE434B42390B717655BE751D9802C6808F93EC6AB08CF13FA50EA8B974
4590524E608CEB5A95BC9FBE54B3309135E9124752CB9E46397B9F18D55E2C4D
37374CEB6D0383F80DFC047750014B96371D278C205E9EA159C7AED472BC4935
063ABEF7CDEFEA98F01DEC6C902127A80010DEABAE112959B6C21C976201B7B0
58126EE4EFA00C2DE6050A22E2AA3E7F964F37357549AC7FDCE6BC89882C1214
B6F352BC743FB194CDBCB255920E4384FE5CAF7405CB61FBDE4A78F24B2653FE
DF9B6926000987CBDF206D2F985D96FFA8DBA636128616A59E3BFCDC526B6F1D
EBCDD36A614F57D091187485C1D79E19900CC8356691F376817F943AC86A668D
D0D0641EAF719DD556B1A8B9DE6F1E244D835DBD7BB1080883083C6DB68886AF
61B3B1798C5760EE9A117CF2544B77C29077E294C838FA1EA9E4B93AE8311388
E1806D285487EBE75748C4BA373033D5EAA610BA4584CA3CAEF93F517CD33FD9
38F0485FB615691BAE01C082DA9E0496573A1B7E4E5DD51E0D96221A25B27D7E
58335EDE8BFA2DD3F955390189A1CAD3B83125E5A161FFFE15A0558250AD8391
A5A6464EC16DE3962DCAD52E5CC4D2F4E6259C394BE65202FC11F91A4A695386
22992946D8F8D6098C8192FFAD7BA6248B3C61C544AAC3766EAD04A3848E278A
0E0CF91B1F3B10A48B610C98D7DE7B6799C1C6D129C631DD6926B257DA3C9AE8
655B38653B86C60C902E08382F41362E48337A3AB73AB1AA1C7557F6F68DBD15
48554EE2D8EF75277C4CC0D0363E4A33F026B519D9A83FC8EC19973D4FF6377C
A9A7FE6E2650F2FA902823DBFE0E1527C001C48F9F491F6F8EBA995C08D7C63F
69CDFB60765C5B17B02663E78A979A3765921EA8CDD163936123891DAD53F9D4
B2909168C19C7D77F12F0F1651BD3233E7B1A23A58E27BA2E22DF395E9A0A581
379D0B626B4F2B23F7E81D549CBAA7D0E5A59B3ECEB9234C6CB6F57080CF3292
208CB286990BDEE247AA17CE3DABD8DED27EA8584BED52FA5010D9DFC7C4CD16
5421E11FC4CE028323FAD34433A93AD3FFED8DEB246131CFAEBE3415B6F9DFDD
BD7F3707D4DCD7205CB17C1F8119AE4781532FA1A91B374D50FEED85DD241ED5
4FC429A9D509FEC01154FDE7B52F5CAEF86461F355C00B6BE45665E32E773D77
FB415ABF4CE97DB45EAFC5312AC91249B132A2D80CDBB26B3AFD4B6219D4464E
B766C692273DD70CD35457583568A6CA57F881FB71B6E01F1DDBA6D449060059
7BB72A49159A8DA40A137EF31EC34A3552B5B5B4C72FFDB8E26345D75A829629
7046BCA2AD540C421035DB33D4BB5F149B6756612D5E8E438335FFB407C4702D
F9A45232F023658BA1C4EC84DB587256DEFA68276F7B3F0C0D72087CCA36D0A7
D2257A2CD0F770DA102AD1BB121EA64FE5ACFA024774950A4D559C824136E0FA
99C3D10CDB941800D9A28752F4EDB02E5CEDC6EB193EEAB2A83B0B7EF7C75480
F8F8B1EF2B53FC65A8E34D30F6FE1DFFBBAEAE0E1652988A06ADBF94580D9FD2
0A4DB573EBBB23E29386038AC416A5EB7666278F72D69E505AC5B54CFF1FD358
DBCACE11E2B736EC902013A8933328AFAB194831984022CCCFED6FEC6ABADF77
9EC1D20776EF955E0682BDEF98A7E34AC61822A18242E50410C8124780841EF9
4BF5E96559E147F884D39CE739AE540C267CA974B7326014F46E2737A6507C7A
0E2FC3CFB00613B19A6D37BBE2FD6E670813C8D51226109C4D36E4257716319E
2B9B4D90CAE7019BB71C667038113D5BD7F005B77E4C1DBA5BDEBE342F8B88B1
A3A20BD4EF49BFC1CDB1F4CCDCD469A52F2F2010F0CC03FF8302AA6C8D52335C
140CF4EBDF323E9B4AA7C88B674B3B61B477A3F88FEF685712279D1219048EBE
806F5ECF2BA1956C000BBC55E708F3DCB0F7A4F7D587ED1B4BE5D070A8DF8ADF
7A75EBD1C05C80F97E566916A4305EAA501D4EA07852D752BFD44394D0CD3BD7
AB24069A7EBB4DEAF3D3E60E23D14115E7E6640845594694852600EBC38BF272
2276B9D10D0EBB0C2A41F1BF3A7E784E99F0AFBCD3DE53DE3A15572E698FCDF7
822D81AABB2BCA3739F4310831CB8A44596FCC7E92CD2E6171FE71D9D01D8179
7A734F83E495CE7746029ADAA293A57266B61AB46B144B55A3A39AA995A8B308
65340552D250DAB95F945DA59AB807EDCF5A6ED1E838E01B877F638499F33FD7
9ED594FFB050B68ED0FE7926D111695A7DA1DC533870C04AD2D96379CB8A715C
AC38CA3648BE701E689E873D92B749259185F600750EE019293B9047D8868858
E56749AD0C39934DEA327771175346DD8A427AA9EB5AFDF3A202993E05855994
E5E06B6FB4352AFBCDF642F12A8B68D1C8FA60D59F1C745A0224C340C48E67C9
F924E0C56229EB1DC53C0FF85B96F08FE2551BC6A908C6AFAACA3A80E5FF3D11
A4B5133A59CCD0758B374AC233882F0BC15F3673EDDEAC1DD57C4A0B816641F0
4937222AF024D6773205A8ADE2E7E1A0398E2012A04125EB86D931634868329F
8A1A8CA8E277989DF015B471AE90077AD10A2A5FD31EAAFA965EE0D5B9047373
0449D62DADD8A44917D6B580E448ACC1560744CFDDE8A55A04905C6A09133DCC
8E692E8928EDEFF49973FBEFD3437F5DF88F0022D17A2A18772D0CAC10721B2D
02ACA124A01FFD044DEFD0CFF897CFE4B2FDCA51C9704062914D76568233B01F
2D17E8344BD3DCB467D3F7A2B8A31951304313BB7F93C40FC5AD0C65589AF5A4
674A9A8ED29519B55FD7A99679B557DD3BA8DD9C834232F55D4AFFFAF80AF798
14E4DBFEB555AED35A90BD2F6692F24430A269838A63AF85DF2FDDD458EB586F
786CEA03DDA8E740710D122B06264F62DDC9380257C6267B4F5DC058B8ABFD62
3E8D5EB22BAFD51164ED3C648B547FF0939995FA098412543D4F9665A468FE70
C230B4DE37B4DCE6C2CE89B97DD3AA097B3F7128935B9E63C3FA07A1585BA0DC
54759AD4E5063A42F990D06C6B08FA6A93888B49CF625D2C7CE3C53719D7C396
88314056DB010C95D26F728909A0EDC47744B43E066011211635B91F16F7115E
F1105ED370C8CC44E8A1B01C9B7584ADB33912B68A5EB95BAE1D9C2745011190
91714B018BB1CD0EE7BC09078B71F49119CADEBA6021503066C703DEDF1A8425
8C7809C7A1DA8B47D53D5754835817395E45EC98F21564AC64712FF47D7D0463
89196344AFE3BBD8D9D2DD0CDE1FFB07243641FC9FCB9C25BD84750D0A6306D6
6C4890DC150FF2BE16872E0955844097051F08DE7FA63BA9B86DF51CEC7E4C33
58793BCBC52495812713EDA5CE47E89AB8CF8166F77C1A9AB7CA0EA8FF8B0FD2
F0A696149300562B4CE85FEA92026F7C1F75AEAF4001FC13A691CE3130149FBC
1C7B0479CD854D2914D9C2CE3181CB0C76C6E3F097E7E55C157E82F2936F050C
EE7443D7042DE38B6CBACD50AA8651F9023D04690D9DAE9CE7E4655E3C93F903
D88CF94B990829AC512CCC18167FC2A6A8DC2B7058BE79A565A620A86BA7C69E
488210ECED682EA02ECEE10CF9074244F69A3973697A96C447F75349DDDAFE78
BC24CE770142C1FB97DC4EFA08C4E664F570F96592B8BE2D51A813328993A662
189872AD73307514D74AC79FD2E35773ABC77CA03072E333CAE7033CD42D57A4
5AE2D111AEA02516328542D1CD887FBDFFC6E06724A1E460528E5DE6488E6CFD
12E8282E37388B58A054A20079202A17276ED58A679CDC08BC246C6378BAF774
EC09D0AE019883E307FB3EF0E7CD88FDACE2A60D6935FF2AEB2B12B3F679BDE5
A7A44C6BA55C47FFEE43C261EF808AC38F017FE9FC80CD22870B3492AA96EA4F
B8D87E625486999CFB6CD764541E727B052B6F8B1EBB01571352C064E56ED4B8
991C59EAD9D94DAB8009F74025F1A169AA2EDE70D10FDE28E2D7674520148256
FE094625C060D5E0809703CE95826B3F4D9CC293A1D2CA9B66F821B088BB2B29
3D053F191B128F08E8213026FC2D168404224959782BCE4142C5FE26B9DAF177
367188B9A973FE2F7553A0CE6E69E191522294745F654782DE2C742932F40C11
72EFA7C4B1386575BC97C17D7BFB87D8D5EAD44728CA0D630C6B0D51952FC757
FD8631C48BA23FFFDD1765DA84FFD9C23E6FAED0ADB59FD6F15B82603000D0B9
BC352B1B5F61B9975E4AD5A709C1DCD685D15C23039144D5DC8A168166649E62
78E740B94EC9716DE8A3A3FE181B55D6D70C93F1B19B2C7C6792BE62F56C0DF3
28F537069C416C102325C65ECAA60F0FFCE7532052799D596EE40EFCB7C7C5C3
5E3AD804A51DD56829664C7B381D7274F7D4F93961A8344E1B900E161AF9F866
D896623D80A9BF29A1B02E943BBC43265D9758D407516CF96D82A4ABB01AE67F
BCE6764B81403D91DBE04898FAF3026095C0F5248751A8FE66A948205D57F4B6
29077549F0A7007B9756834CCFCECD2864D82D9A1E56FD465080945CCD08DAAC
7CF78AA334F69E87551D2128EE65AAF5A7EF651971954C10F6184000C2AE06FD
006919822330B566488D7107104A102F837B106A76866A523E62396CF90F764F
93638E3C5D5992BD2A7F2FFA3100832B55B6DA723DDF8C61168701714DA0F936
CBA50E95554CB13CE1E7CA051DFE60229F44E1ABB6DD31CBC96BFC4213890A0F
5A83506D3EE407272B8D7EB1B213607C1FA6925A91F1E1E0BA4BC0FB68586C8D
F0B6215DC5821F38FE6BF162007AC54FD7FBE4285BC921C8B7521E072CB4BCB3
0606177D476F1207A3115544BF8C96E8D06637ADC8D2702847E200AACF0BA2B9
FA4630942AA3EC4E39A42F1CABE5F20053CB247F6392BD22ACB6FC468911E8BC
EB3864F0DD3C0F5F0DD125F5056AE606BD1D04ED36F99C6F1CFE6A4B9CC3CD4B
5165EB9990EC6E7276B7291DF64ED28988CF014BC04B54023D814735A73357EC
D873271EBF9887C6A6BE70DD9A79AC44CAAA129D2B7AE9E05013D824231523C5
442AB2C24E25148D5FA792CDD075A58830DAA567E7D89E69898419BBBDE925E0
1EC046D48490945A81A63C78DC8E5BF29A7D8652EA38424763692E8FFBC3E4A0
A8C8666B820E8E19C4DFEC079B709A1848C05DA2E6ABCDD6389404BB7D1A3ABF
120DCC97422875D388464746E241EDB802142DF42BFABC0C940A6C25BD92E1E7
0CB45D7190A0E990BC4405CBFA5489893973B86D60C707FCE0F049588CDF90C8
335953069DE5C548A68C43CDC45FE5CC7ECBC891C98D839F0FA421886F1C24A5
65B9616FBA8C0F10D99F480945491843E5B9BCBDF738E4691E64A559F8C4AD52
8E71FE54D102A091521214F7D932E1C12F9E13FCC511068C78959F5C2EFCC9E8
069F2BBB3C6A862D64E1F9E91F145306AC62F736ED033CA41B189F6466ECE62F
4D3D69BD9A679A978232462133047E075A13CB7276E519105C79443E0DA553AE
3D35A9FB3AEA885EC382529E92969B18AD9F419EE7D928B1FEAA67F4F025CB47
54568FA06D49442661381EF1ADDFBE46DEC35DDCBC350DAAA0215E24FE26DD67
C7B7199EE70E0136B0C671C493D51E164E3FFFD3D25B37FD273733E9096774E2
FAB8E514192CD9DE9ED715BF1326658C81A63D6EA22D8C772B0E67353034F6DB
986BD4C127E7BB3A0C4D1C2A95D99176D95B2998EBBE0AD4BFECF55956AC651D
1565D353D2DE48325AD03ADF4C2356CCC85CA5C40E847E137B6737ACFB79ECAF
BDB73795FB02E2A31ED74873712577745F82ABE10509682C906D0C86CB28E43A
D3E586054C26E4B5F4DE4144AB756853337BAA639797872AB816B32AC8F29786
930A578FA2F14B10F562F76660BB0ED83B459E2A491E63A8071891E42C8025BE
1AC0E5E660C98BE4067587DF30814F4D71B3BB4A2A43E2F3CDB04B0F4C4B4777
4A1D75BA56AB2F8CA721298A40F970FB5A73F7DDA63F89EF304C563CBB6DF0D5
266CF8CBEDA47598E2516B8DCB56B66CFB269D60D82768EBCA6F319013BA9B73
61FEEEEC66526110AC7569E205CB349BEF75DCF49B378195F7953B783D280349
08DF56F2D56C43109A6D4AEBC62591BA509E906331B23DFBABC61423742362AE
E5A0ACEFBFFAFB67A1197F762ED4CB3D3BF43D1C3A3144AE7DCAE9C7793015A3
2B2D30EA0C81145D534D7D8C712843A1716C38D8500DCFE60500CFBED5FEEE26
8D31FB0A2BD1A541BCA01AD60D811DD84AC5638A60640A6FD9B99140F42E721F
C7407794763D733FADCB0F34768388FE7B708039DB30D009E5A82E8B223B711C
3E3C2507591D6FF56B9B764949AB03E7FD00AF06DAEBC73EFFD878187A53E073
7A969938CD1E4A34934B336AE555BC267F6086D13618FD24FD6EF0FF75DDB9F8
52B865B6197E01D334F0ABD48671A74507E2190F97DD07D8EDF1576B6638DB78
FBEBCACC9E9084F85BE5F8DDA280DC3F0DAAC207282699432F9025D28A6DFD3A
73F01489C5F906E1CC31CE2EA2379BE8397EA7E84B0AD035D38FCE9E72FA9777
BA6CD1DDFDDEE74CEFB11534DC6E4E69C7D97788CCDB4A019FCD72E34F24F2BE
6ADA2CAEB348480EB150A96022FA89432641B10575F2D94F74506FE9F0F06361
DA43BA7E55A134528ADD2A72B53FB2A72581E50CF11D54082949F92C23DD1BCB
D3E0E899A7FDF29C8D6C1753CA6B3ACCA8D605D32779EC52BCC1A76878D05CA1
A335B4535EAF2ECBD192343B8C7AF0B4542FCC52A1F9111CCF3328317D889099
B00B996EEE85DEAE1536A38A7ACD5DCE3839598BB50B338D8C0B6420F29E47B3
2DCD9E4A5E27AF850B96BA3723F5B57B854BDAD3014A2968C75E2F910EE06B81
F828EA02AC6BEC0943FA0C0C204EE722CE4F8264B65B1648D64BCB3201C4CEBE
59EFBCEBF186A61E0619483C7D29A75B353022B18ACE5F3F43199B56492D9AFE
6522C388F1B0046380E1FBFA352FE771B7D3F07C2C1405FB74E3F91ABFC16C18
300055170C6FA3CA6D142A7B31A9B4A94F040E209AA81553870A61F22E10C9B7
92D5BC9007C47B6E716D836334894374286E989F8764431C88B6D4CB08AB216C
5AB2E595C0526E3A626EA24B9A66C0AA3BE9FB06C5A4040E9D59318DA297A16C
A4660A547E802D47F130445A85CF6ABEB30C537CE2D57DFAEA370665A8713472
D6ADB3CCB6BC2C446350A748F2B44571920AAB032315FBFD947B46F94B1504C1
C1778E578F799D35610F064FC6704CA715C0BBEB3AEEE6659E429AEE7F73B4AD
8023F76924A2B4923AF5A3C8F0255D5A8E712DB8DFB7A1884267FFB89ADB2F7D
CE6594878706C8FA4BE4E7C55E84C58C9815FF56DF3E737679A77C27A0EA593C
2984EEF7FBAA20E7C129B8CF228124545137476A85C96A251648566E8BB27F00
6DC71C264DAA2AD91F9DBEDFE96027B6F1F0B561CFEA1BF805AD3C2CC4A36940
C99AFADBC74DC9B1607A78D648A95CEBDB4E279868A7F0F1934C8FD79AFCD36E
D107FD197829B2BCE7BDBFA87326FC8C140DE0AE5A61205D8DE44A6D1CF1F8BA
5CCAD2D56F19585F3CB2679349B72A49D3970DF18E865F3321B95FC5A197A382
57C7B36EF06EBE691BCAD14BA5F618F6FCD7345BC514C8F5322A0DCBA3DBCD54
D204CA0FAF5FC970E871B05B47BD328EF24A777BA1B28B6F94CD7C92D97CED51
CFE26095212564DAD98C88382FCE2CB93BD75A4A7F53E6D435E40CFE57761D99
508830C7B8E6FA7A57D3DA0FBAA8C123E57B9B3D5757235D1C7033842348E8CF
EF7A1BF1C55D8F93D0BB33DBD3B67165B55C3360C9DC7545795B40D02B582F93
98FA1B080000594FD6DB00552586468DA0DD7F0B235BB8ED97F8C875840DACBE
279B9C35F068F404AC319F709CE5B4AE60FAB6692B6DD2E4BB119E38E408F50D
3F4EED4F4A01C6E0970CA7ECC1DB7D4078BB99F52E5DE17054801D83FFC1994F
F8407E8DDE327704E96B61A8A266C283F786956EAE0103D2AFE6B166883516DB
8EDFA1517EEE46762EAE47B07F8DC3EDFA95BDDD35239C10317AE7E8D0606A33
0EE3DBF730DD449BBDEFEA9AD04CCCB902EC1F6FDDF4573CD19D34FF6710A3A7
3973CE5F281CF58D4AAFB824CB870223DE01104987E14F04755053D74DB737C3
104E723C5A41D8F9AA82B131618DF00886FB1893EA08E03F684B8787A671F105
8635E761ACFAD2713C2450696189CD72F7FCC6D9B13FE7848F00EE75B5A79DCE
CB0C491FA3DC4A72BE4FACC3AC3F063D81277EDAABF56896284AEB53F4D6D752
311916241CBAE2023357292CDB1CDFC941E9FA20FBAD3138CF1F2BCD109031D1
EBC3F5D00166DFBF8718413493CAEEE8C6EE2F86EC23EC1F9D52EDFA6C8F8BCD
0EF1FE810B7B0AEAC6A4984662F207990F285235C4429808A399D69883762821
61D8CDFE47BA225FC5183879F783BE9EE6C74FD225139CEEBCE1DEE7124BF47C
5F6BDDF2B1599C0853025C77A3AE144E0836A03A28E846950BE41DA24AFDD32F
83227968E12D117DD0DC449EA07433A49D2E372DFFE277AA50EEF46FEEC48939
4AEE5C63A554ED954D164C5B144728E345C6D5EBAD3A6E3023EB24E48A00DF1F
E055025FC478601A946D0B595AA85D2DB39855568CD1596C96EC7740EC827068
05FE38526E914DDDEFE13DB245BCBC2AA306ABE2CDC2847F29208569C6C43DC6
7FDEEFC446C27D64C7E35ADE11333D295559F0F5105C975DE289029BCD385B96
147EA12DA787FEA526CB7F45A2FA019C0A4DF18D7491D2454FBB51B4A80A083E
DEA0EEC3007039B367E610DFD7CBDB69AF4FA6853B6B9F3DE58BED8B2D8F582C
E7E6F57BBB2BCD9D0AD19C2BE6E2FB3D038F0165777B6E090508FF70C30EE8ED
1B9C02BD0FD2B0A422C0D66AE0783EFBA896F09D0CADA3C511036858CEA9CF44
CC1972A9D85EBDD5DEBA8D475A476E2E17F8032917265E8855964060AC20A6ED
4EFD5B87ED4F9A1932A80B462DE258FCBB3C2CB218A259F72CA49FCFE4F892EA
AD11DBAC4FA8E47A1C7850E764A94E4DD7F24FB7D4915E3DDB0E144676C3CE6B
5A4CB83F9332BDFC7A4F90B57E3E0D421AD187B1BAFDA243447537EE268EB985
E9243591A5DEC5631E773C7FBDF04BC75A5CEBA5A934A01D4E7CF9F7BA3CA759
8E2E8BB2F3D1AC1AD5C42C1FB11EEDDA2C36ECE64B34D8AAF251C88A7DAA7965
1E88F58FEAB5D0AB1220E84B25D954E217D1B23B6FFFDF6D1151056B99E8D466
EA8443FF0FA5D758290BE9A2329C92B413B42C3348F7C038A5671CB3DB952932
B09D1644659AC7E1C1905D159A8222CF31F800C230D2E2F6BD5D4E2359615338
1419328D8168CBA208FB68039D8B69256BD83AB7A1A7413B3D1F0C0B847DD79F
9A1557FF7457651C38B1CA04B8AD07EA71E0DECDD948AA874520AB060AE96F0A
D0CA42D6A9AE10A6D9CC8E8B012B4D13409BF8D6A8658A4672355AD1A2E11F1E
B0D09C73F1E8E2E387E7C39C95EC87081D82511A7F2FC86BF951BC5ACAB6226A
CE35F6AF612C3098654BB4D05EEC923C43A0FBA55BA75DDFA32999D0DBE3AA54
6FD4EA2D34B6D2F6B239FA15E6CFEC1FC4F56EF5ECF031E729A8DBF2718C5FA5
7B39632A9D62E30188A419CC7E3E800197F302324FFFF722AE56B7509AB87B84
F19F830E6E6F65C078FC12278FA80B4DDAFCA7AC9C127462D6800E92143F5BCF
A2448F018DF12DDD7F697A6561FFCF2610182417D6F91869B000CC7C93BC7167
398DC3B0A3AF2AC1BFCA28D1A674675BF9DDB98280A61103BF521D2FD4BF6C7E
7FB566EB0359EAF6683BE5F8313C9C7B3A86F2E1131100CC4714479C29E0C9DE
1152A564B7CBE45227D74FF083A93E45E9180AED47DA229F05BDD6E446ADA11D
59E8459CABB3A26DE7679063CACE4057011CFC4ED4194CA04E79BC2BB66353F2
2C91793CBF44768FA1CB60357FCC89549187764EA632750BD3A95EF7AB16CD76
A0F693E471404F3B9AC607E3EA6E2F9D0582D7C8DE8C978FB4DBBE8D39A97E0E
07FF68DA5526EF0235938217C5A82C47C67DEAFB0B52B80FEC9B1DFCC0B00D5B
E3EC09BED7C790551A7C59202479E156224EAF503710F0ABA14295FD1680F17F
8C3F0116C7FF93B6A5F07CBF467D9EA3C21C3EB1563666B46C15B551B88C3F51
FF59D3304FD185039250BE75A935CDC3A6A0DAB4F291AFA214B1DE29D9FC35F3
5E1185EE734B0023DBCF761012ECC86FB37D3D90259ECD0DFDC77598C306BCB9
8E2ED8C6881F5EF5E3A7E8A5EDC9ED975B4C0BDB26ABA808C7B86C148219D896
EF9C03C8E72B5437A4F40ADA40F44D61507AD506BF1EC40052D6FE7A41E9E590
6D4BDA312716B1EA2F5858C8B1F7FE5E66EB3F7F23BB96BA8E175EAF227B0B41
85011A2D3C1CD4451402A02C44ABBB2FD2D6639E9DFF87EBD41931D0DA427A88
3D8DC3A46DBC45589A6F0003FE4860E99E3CC37DE8DFDCDB9BD68AB0CF15BC9B
60B65EA96CF02859DCF5BCC3C9BD124A98F98FDBD7FD4C88C21F18169EA6A932
8B528B58652813CD4F24A3AD546B1B55F78E0BF2095731393409746F0F0FDCD6
66295DAE5FC9007BACBE07EA92539E361C25ED05B4CE1F1F9CE03B3D8433A175
848DC2A442915CDD3A873281B91B17C5C9D0FB4491A9B9708293CA7EEC6483F6
D7D2A3BBC119F79BE742DA81E201487F5D7C9C36A7A39523B935C1323FC4F34D
D1758D44A5C03D6206C53E8C8BE90A4282CD2C8290B974F6817B8A333AA1E641
44C58F48019E575BA6325265B0EDD69C386130A6853FF5A2749641D0A4802D46
6E326D20A05832DD5BD3D8FED8068BCBBA2F202676EC35C27B381FF840EBD283
16E001B57CBE36F17134D2721D4B7ED73F27166BEC1E25562D798AF507953A28
EFFF8DD238E86B6AF0972949D53953CC574ABAC2D25831099B8F8C84AAA60DA9
0AB51546E6283D99298439CA4983668E060C47BC1334386A7B1DCB85909514FF
47BBA0CC4BAF4737C57F7D9C35EFB70EA880AD104BBA505EEC48EDC2A5FC8E26
839487ED85B8057B1954812622B54871CF509C1D93D0FB8B2482360EEE623777
33BB0E68201CAB3F948A51CB0613D2F95A921DD486F321922113190D8D131084
4BF2C1138BCA5E242695152C3229F6A5192D65F80C011C7449CFAE1CB63D3994
C8C6083089D5315BAEAC3D5D023A543251619A9CEA4100ED058B5FD73A3CC703
BCE925F5AD6FB497D2FBC4A57A3D2DF36C8A5902264898CD59C2880D77476473
5CC78CC080F03DC5537E2DE3D7AFB68085A875F06F157332610D5E013E976D08
10DBADF584F7B85770BCCAC6D3E590B5C9F3CB288A335FF854BC6208436AA105
57700787346F6F65C08E313E3893E858370F440045DF2AC270F4EE18A7410AA8
F90355169488C3BD85456D128F4BC7D8F78FD3709A45F32B8C00311D0335AF49
3FF218AE5B0E1B53280898298499ABA89D62BEB2D67802F950EC949F0A72B481
40E2B98057E014BEF753F43C9923D5B065EF11438AA2B8144A95B1838D3624E1
7F9066CDBC089B2481C5391327F3CC64C8DE40440614CA0FCDF41A4B0A0C07A7
2F938A943069358B3383A61A3A39404C1B729CE93631833E874440D85BE7D0BC
5BA1E79196E5E558501C2C75F5CFE7ACFAD6FE8E6BDE7A490238DD579B049E5B
06D0384497135FF840D96AADB2AFD2839B66666187C5A4D36F89235C5B2A5D43
EE802C8425EAA939A2FDC56113CDCDBA70F68EDCF7607F0F5546914368BBBDF6
DA09E51A5E73DE6D809F9E89F09B0105A762E3DAB99D43C0ADBA15EB3B55E3D5
B6900BE7FD98834FC0561BF6079C5B7A47B712C0AAF9FF41B5D2D1E291C5C149
16C29B70FCE05D312DEF7A04BCFA438E922952B5F1B1DE2ACC0BC5A66F844449
26E2D7AA18D2A573E13CF335CF5367848A6482885396E00F7C2C6D43CE48DA37
9EDD2FA4EDC0DA6BDD8DB067096A6649895F9AB3DDCC3F14EBC27CC17032BE52
7C47416076DC1166A3682822A9837D53CCA5A8BB50BDE1BD3B2AE0F12314B602
4C3E4F5C2D92EFD521DD7ABC522C62825CFA8C8DD962591218885A7DECBF99FD
A6A42920C26217C1D687A9CE5DE13DD8C7EA0FC96F0DBDF36976F862D248C0E5
E80DDBDAD2F8A3CF0F7DE86FF4F3CA42696FD7D5D26A93E3639E48119F02DDB2
5CF84B1593EC3FBEC08CAC592E7FCE4837E93D87267A5E5E649AFD5F79E512E1
F81F90C5A18E8F43FBE922B2961F8B52661809726BC2850B0EBFCBC6371F3114
3AE3269BD96EAB6C5DD291098F8B330F0E71C88F8054E86180D4F4939F13A7E4
37B51C849A3463B3605B1348DC9DE0E0F48B341998C9C186A11D01F36DDEC353
B4940943D13511C1594B241C42F6087A02EBCB37E6970B2B9A7754043A2A3878
AD468A9F8BC16042334EB4AEB1771DC8BF1F83F3C39EE3A89EF467D86F7F3FFD
A322F48F7563F5C4C3763EC4B30FB9BAF377910EFF6E5BCEE611E46C2DC67936
6D8B4571246CF3CD5993A1B7BA9A517225EA57815416F5DEFFAE96158252BC3C
CA345AA02C74CE3F63C306B946C7F7F9C7763BA58B87B02B8CDCAEC9F40A160D
A6E5EE6D248BF15C31C49DBB524EA41293C629B96EE69022363EE3F940255B5B
D7228B1A1ED8BBAD7C514F221BCE23AC1D29392D09F48E47B0D4DC8E1D846DB1
02B89951161D0539668B87A1ACC103CF8504D63D7C7F2C1A9820F72DD16CE8E7
05F8DF1D18B1BBD788E64B6A6564B5B68339D2B69656A472C06AD9267517EF11
A2DF13886BE8BADE3DB065CB7BDE88869A30AB964AF9CCE8BEABC6EB12DF7AEC
A612C1EE592BE69E50F802C16C78086E1D63CE7FC4E478FD50942DE7828E1C7F
D204F64560758039B41A98A23ADE8AF0CB30819201560D6D4581724D1EBD4D3C
7D5EF7C344AD697B72DD48C60B737532BA0EF1FD73061A03B061FBBD09A9B94C
F21DA5C711A27AC4F8BF3B9E6CAA59F81595D1DB258B65DBEE30EA415FFE3D51
567E8DD6CFA27043560297D1C253AA358B1A6ED7821026A252DCA9D52A8BAD75
61CA6A4D9AB55AA69DD7CE0E7181F8AECAE051F80897736F886AECFD56756394
24947D865CF3EF18CD05A3E707F962333FCD71333C48055C0F15C0B728F5E080
1CC2F6F2F630ADEBE6AE80A1AA5C64DFD8EACB6E63A1975459D7AEA4CC5518EB
3F2343260852C667DA746152E48F22FD521BEEF742C98E7060D1C6338509D4FD
DA528B6E4B004DA99E76FA59F45F61F8F2783F3320A7E2016C80BB0D1D82C639
AF940E31C72F450E29E271DB78CECE1C7072652FC4337ABD3B2436987D41EE60
CC733DE1B9AD1617EDBC71489828A4915B587474D409EDB0509930ED7D4576F4
76CA4487C1E08B003CF9D536768F62D2F18A3411452C436EF895AE0C01E918C3
FF5056FEAC7278681C4D35C8E20D19B7C60970FB7B7004F9C62CC1F6EB1BE163
5D875E1BFCB7C3DE838A5D71ED92A20269DAEF899F644F0DE9BA6D68D7CD017C
9B82327D3E3B884C9E0B140017A9B996B89F6DE1BEFD5D456E131BDEAFEF3735
3244DF365B3A5A256BDF26FE0E9012661B36880B2A5FEE13E8480745B4128888
8CB3A83AAB70FE26A712237566F180AAE190FFF7655F984CD2195655A0423A70
C511648F4A96076954B359A8938B21E7F1E9BD9B3EC987E287AAEC070E892A7C
B910D24F84F2A269FF21793FB38CBF029C0A1F9BE1D587FB2BA270CF96DDB0F4
E504A40816DC82F9C20696DC61EF730B2BA7AE21F126860AD99878CE3FD97E18
DF425C0BA5AB3F1FBD1946E126F1E6324CE7A23B55D70C2D3B74529DCA450007
01160FFB4FE380345A1CC6F16845BB05ABE0123A7E54FDE73B352006C236C17A
B641ACA2CD1E7299A2D6ACEE46B5AF5B2277B7135C01A6EA004870B7D880EE7B
4DEDF7BEDF891AADA986F27C83F31193B9E60997A0D94A6F3391A0CF4FEB0D37
691AE611D4D3D80F49A18BA77C2D4BB7E84EEE303C66948B72FC62C1C9B52CA7
C7EE17A89BC4FD948ACD37999A2C0BF8724473BC964CFC6536761919018282C1
5F88A328B825EDED0A70B2E8A5B01AE1F2B174AEA5128B7079D23300B18D46C8
7ADFD5325E57308C7EB56CE7B005BEB2D8D81B14AF887537A3C98287A349BC93
6B877B8C6A78242418A1961CAC64374AC2FD13AE49FD03073E892ABF055EAE88
C2EBA958EF63343C1E10EE91159546A71AF5EFE6880DA02F7A76130A238A8145
58AA033AD2F4D4D2B070730D996883B7F9C7341846B82ECDD100E90F1711C344
ABBBD82763274C4007A3F35C6D25E8F858646E886542913D0E2486F9BC3B4476
B0068461ED514C3B50F32763D6C4C1955DC46A316FE88905E38EC8FAFA95758D
F3CFB9AD9D88AF736E334C2750F1B09DAB91E4F796C9DD61EBB1FA0D7D0CFE36
427E78337E23230008F97CD8AE726472ABFAE5DA404664B32D91832E231B2590
ED92204B2D693F16FEE025533B4E240DCCFA799AD3B83E0FB43E00B1544B5E57
1CE984BA08BCCB13D6A1A6771CF031855ECFAF12CFFCD37302E58F21E3CF4394
5E0748989B6B762F6C2DFDB6BD77E14AA96E60BD8D02120EAB0A851AC9E89553
74B02001FF98EE025FA90991731E87009879B79F653608EDBB1564122D7E16E3
36262DCA7A1A21F19D9259D021A2054B83F1D3FB30BE82153F8547CEA3A6E0D6
5A3E9C4B1E025501670933124149DCB3BDA32D5F34B30FFB865A0F20432F8107
0DC10820DAEB93CFBCC3AF2FED596E89A210EC5B865C33345616ADD419C01A5B
3FD641604691EA4FE4231FC32386E34652C11F371CF83F5B68A7A34F60B3BD2E
88BFE03A70E540F16CF5D366513F5D8A9234A788294DB1EFD11840F087E6A606
3EEF5475B702DA53166F7F6081DB83A86D85C1B8B2D873C2654C8B7147D7BB37
ED0802EEEC134F35D53DBCC2D9A83F11B6BE56A9A15B5E89B5033B29E464BFA1
461C74C51AB5F137CB0B974595F1AF866991CE575EF1C9F644B199B5F472DCBE
FB35A47956AFBAAA70FED12198F1AA4048025EE541D3F4041A11D8AAB4B3ACC7
6655EFFBFEB83117D0040DB269D16038B5BC664A85EF88037D29015727774B95
55BF761702DEAC3BF3C7309ABCE7FAAD07A508FF85E17DA51347F5A9DCB710CE
3B3B366A9D20C3D50A7ECFC0551E71F904960BE3D5FDE94B3AA08B468365346F
84836A97194CF6BA92E88CEF9327BAB47CCE3673428DAC7D8C127C64FD7F7CD7
BB7C17DDA4844EA26B6166AFEF113C3B68F987F10BCE6F33E7211E4C9CC99487
C518C8F23ED8F78BB7708A26D3426A23703B634D94D19482C0A13780719DF67B
7B89F94A85388FD3C25F8DEA6B88A891A307BFB4593B65EC03BB4FAB9B7DF5B6
D5A89092AC352728F3A3F2A2825EF9B4D0C3D53D3E48544D6750217D5DD18040
99BC51BE20F183B50C16BC247AFEDDEBAED1FCDD0BD2A96B80D0AE704A08D0AF
CB63C0C5C432B075C3FE5D340D77E9B1AC8393A14DD9DF475893C24BD84A65E7
799DCEA9393BDD6AE341BDFFBF790E433DFFE545256FD921BB36EAD3BBFA2DBB
56F2F69B6DB4F84D52EA168646E7E048C00ACDB0956B099481E13694701A31DD
E2B97612093615CD2444D340E780BB8F136B6B6F241F2218ACB4981CBC545123
A9FAD7992F50616655BC7D9452CB8244E69F3AD32436FF0AFB73B311B863D002
0EDD383E7EC60A0A16C0EDB11C4F7AA4FB1E3290E285341E61D8214181D3D715
EAF285C5F61D90BA9AFB7885B4A0941B0EE1D456F34FE88C9B07CC7C6AB788CF
56979F60F4BE8F8B11811B7D86AF56E75162C8ADBF9F7C26417CD2542348BF58
7C97451E3472E0F2D61095A27538DE2876337DF9B82FB11D747C38D9ACAC2EDB
2AC5001266AD09B8825EA7C363B18A4188A1D0747552297E0553C8675A6A8B31
1BD59DC3B4DD9C87BAFF87F791ACF867D61337FACB04D20E1A82167BB15CCDEE
7FDE08F8B7A1EF8A65F82BB3FE7377A1AC77249E7DD2F9A4EFBB7D18195581E9
E8F529F3AB33F5821D19A2B891CF6AB03BE1541506AF8C0CD3D55F3E9D0B77BB
306F631E08C4B6DB8518F49584CF80723ACD0B84802AAB67ED1A162CC1D61A0B
2353754D3E89EB06EB19DE07142DB578A451F2D53B954087B384D2F5C6DB4848
EF3BEB75B985CC8A67D393612DE5AF2B308CC39BBBA16211AF8D32B57A0EBF8D
4993638E1A6FD94EE2A961C6335DE4C84A1713525DF611723A0C42331300D470
4F04A7091DAE02076960C528985AAF30DA33610F2B2D9E928B37E88FCAD49869
02609385989EBA9A66329F141730CDB7CF8CECD1B3E5B16441B2B2B905005E36
4D16D355D64454041F189C62427EEF5CDD6BC2A08A0EA3137C0EE05F919B5F71
4E0F392DA3ABEFCDB922664E873FF19806037AA438C62D18F116FBF8542501FD
E3C90C59976E6DA59D88CFD048D9C637CC6BBFEC561E526645090CBDA65572D1
6F6327A30A25C080A7C5A98664576135E38E56A37F270502327FC134B2AC4654
BB3304B43684C4DDC112F9535C196755F13DE2654826017B1AC6477BD2437D2F
5E4928D4D09B2110683ACF31B35A9E858A5224858A8494ADB0113FC07E5F932D
2B12855D2551FABEE9F8799DBBC90757FF3111D3928DF7EFCE7A883018C1CE26
7A640832A19BAF9F86083E1D41674A78E5A9B6D050FAC5DD82B2614FE945C428
17012064CD21F424E34CCFD82C07BB2B791A2EB725529F44D172BB656C1BC2DF
5EFD479C743DDE4DDD74CF39CEEDDF51FB09601D03C3EB08835C17C1ABB9B911
F5BBED0E564C2B0086441EEAB834DF46F375BA92FB263FC347BCB9D80181B305
0EB5816C27D7386718E57B5E727761683579EB641AABA2D408C926F58D29A0DF
1ACD71AC4A9312F15FAD71ED93A29732A75922A133EFB209E0954CD34FE126C4
551457080ECB25627D83BA10615B668C88A1415E3BE094EE2BAD0CDC12BDC2B2
4199D00FB28EE04C8248BED9F9920DDCA918CF51F78B6CD202A21BBA1F0188CA
99953DA1985F024390ABDCBD1530D4B2E10DFEE92F04F220CC83E16853DDDE45
685B14FF55AD2C1378A60B80D1188BF8F583ED4A7E3BA0327D16493318A9BE7F
729D0540415748F84727E8BF67DDEBC1B35259512086C0322080EC18B8875E79
3557A022726053B5BDDF821513100C8D7EAB07BD721E429F8516EFEC0540D9C7
CFA32BF1501BA8E287E045BFE97AFB3B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSS1440
%!FontType1-1.0: SFSS1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss1440, tcss1440, lass1440, lbss1440, lcss1440, rxss1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-187 -320 1390 881}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA6B96583CD563782FD7B9B76DB26D4EA3231A60C
5D1A5063C72A29B9EEA3CE067FA933F19A2FB323056D2391008D667B8B632D7E
FA8FF1641DBAD99C71EF8E4FF801756510F0F7F1B0AB9DF18A8893F26FA023F0
395681B346AAE99B67F5ACAA3E812231404B34BD667F0D7BD741881EF6709234
9E2FFBAC78CAC03B28D592660D190053F9A80D005BB24D3F7E27B59A1309872B
1CD9ED50E8B98903D3A78416990119EA857A21CFAA863F5D5421E7B47EADB891
DC9DC7D0F5DFDAE65C6EFB363B517EFB9BCB9F74093490E7C16B8E18C8EB1C22
AA1234E63389B0B0111506F7FE7A1AFFE52FC344CAE3E4D9BF993722C18E4848
F45BDEF3E5B7502D435B70BF9AD8DA30A6932F2484FACB85384C6862BEA851E6
DBB981CCBD10E9C49704599B78578FE6DD6D68CB2BF5EAC380685C3AF31B46EA
5B3B7A5ED4BB7F98318477633F782DA25776AE1CA1D2E967DF941770C66940B7
6869482019BECA21DB64DCB694DC152E589FB4407CA92BEFC59919863A02AEA0
461C267FDAF837BB8B90E0941025A574106DFAC58AA4C7B63FCF9FFD37A011DD
7652839088452F21540BDAD3A80D751E27942007A213E15112A6D5839B3B1AF0
07B0ED928AB992D48815D7B6CC89BE3B59870FBB0B7436EFB92872046D7B45A1
B78DB10AF6388776C314E73BCC291966182610E505B8FA5467431D3AA13AA768
C623B160A29C66E1AEC0C8FCDC90C1A13421253F4672A38F9AC450B1508355BF
198EFDCC3B7A733C92CA39CFE51F1A1610F75A30CFA8FA03B7D8B0034F0BFCD1
7A869E72B5E0663DE8B2EDDFBC90CBA8188D082B61883E196D05A2CFB125F33E
D8FB134A21534E0C509A8C0E723B7D58AA416C667FCAE4FA131A01D492DB3EBA
A82365202E4534F1EA08E9D5AF6885FB82236242017B6AD5B524A6E46D7B0C73
99B00ED45C0E1171826ED063E88655F94A96E78F87B64A61F70B56CC1B228362
1D7F3D5323B900C5842F219721E4A0527BAF61EC887132B3C8729E7690D9613A
A33B79837C0588F602DB9AB8EF9F26DBD3FD7E1D3CC51A1A8B660D07891586DB
A34BB7CF9F78FDE3292AC4B3211FAA5227E3FFDD02B2F98F2DA84F9DE926385E
9AA3749854DAEDF0CCA15D3B33FC3E90469E6920B9EB86E852D130DEA9026BF3
5852304878D9B361C5898E03AE31DBAA34354240DE315C15B52EF7B0247901EB
A8C4D6EA827FF69D90D0697D7858C28A24FC40976DF28B07DC1AA8B417FF47B6
7C75C8F2074DAF6267582C232B45DFA048B9E58288DA6C25992DE063A0B26806
1417DD8E016DDC6161E21679120CC4D597914BD4C8583294E1A35FA59944877C
6734FB041F30B91405E3CD4E8ACC22C9DF38E095B789C571D4821E9C70F4258E
6997790715EF139444D01CD4CF27DB2755B1E4B70993AA5DDE077781A9E736F7
57979D985B3EDB1390B9229E5CDE00456D2C4AEB8820227F8520EC2DEDB26E35
C97B1654A105DD84A54DD0385F310AF2C3DDBBF6E69E33A5D55B5133EFCE251C
016ADDFAD1F91780BFE3367E3993DAD79404D34D515BD3CC8D8924BAEFB62F76
2872730DECA5A3FA2F25E88429C5EA9106A3D328B3BEC1D6DE8DA7C0F7C67A6E
80DF83116B0E0D2264DB42318488EDD6B3FE13B500EC8577A7E164B1EFEBA3DF
695E6C2ECD03328C7D0F204A3B0C4768107221A07ECEA56F82191756BB89A0A9
54C8B70615EE92276E5655214FF49EFE62748DA8DF0DB42F11D464546F5E3985
2F05C90512E5E318AF478980B74F2E040D458B58BAA4A1DEF347A3B5B5E2E9BC
CA216C1EDEA19E78AC2773FEB605160EB3DF0B32274A4DDEA89E289AE3442329
78D1FC44373816A1331E7AF43F5470557B23B9D2E96F95EDC4010AC0B6B1D7F3
3D5B4AB717A73CDDB01EA1C7DED45F128280E2DC1CE74CCF9C5E829B05C8EAAC
6A53FD8717C3365D3CAFF44C3F8691AF23663CD8042877F347295D3323B962B2
9E516AA12346F033B8553008DFADFFF08BD037A91FEEEB14D174A3F799C17BC7
F3F3684BA1F178E8B3708872720FAF77116B70ED6B18BE6968F0E3FFB5228198
A1BC0A96DE32EF7B19A1FD8D9CE53BA9ED147C10150C7A54C5F6AC4C2520D8CB
1D59CA2129367D027E7948576563AD2F51D2218ED942638D842513A0459C1182
52A2354295A01A2D5F0D05429F02E90B6808E246A45B3EF74B76F7AC3CB68CBE
A43EF35301B51935C11E6A1B3FFF2E10DA7F6F6984D98C00B4B3323F7F251092
627CA0CA4F14BD696A6D68193E65C914313AB4546929F48AA861FCFC46211A01
A52467357AD80344DC704D04506536BCF433D4FD882124F21362FD196FC91B92
1FB8BF62DE429017BDB5C62ECBA7B89C85B9B0B76EE9F5515E6D8A869F9B7D6F
52481692C501454D103A4451F674148E2064C505956A5817FCCA713AFDCFDABE
9FEF9D998CD009891ED2C39508CD6E9245C61CF73CCCD2428906B46FE7EBC14D
2837DC778B28FC020607F2469418459D996A28775F0F963AC7313301E2304C20
4721E87B59F32A918872AD5119E3D31F6D7E24EE591639DCA89F516CFC27CC18
C1C11B90D698AE6380AD5C2EEEFA36C1FCDB9366284562FC859031DB7F4B6A74
DD81E8E39C67F7F0DD27F190B06EC053D712A35896D6403B6805753AFA1CB270
C63EEEB6581BBDD7A9C93F05FCE6092FE2119CE149FE7347C0DB72FAFBBE837B
1EDAC1619456D580F63197B3BE494349BB1B5862DAD30987825538908C30368C
FD3ADE4D4E642654F712E93BAA78B4CC011D1BB3A16B19690AEB1C1326D3E1A6
AD802B458DE21D110E3B58EFBE30D5D8613BBE29D9F730B1855DAB77A983118E
236AF72BEEFA992E9B547DC968E85BCA016BD81B8487E6B350662256D158D8C7
DCD2F7A074C9814154BE48341079B9121D1B79B88E8A1715026139E79E419A5B
7A0C01702BC20E9E8548FA77BF9DFEE2E0E999CE952A7A9F0CEEFC0E41E5B4E8
0F6AAB49C3569899B200D5E928A06AF83059A36D356911F3288CEC83CC64406D
E5D90A0596E9BAE18085228CCEE136CB4D628854AF7C071BED5C305FA94DD77E
8DDAA7E098E2B8C958E7C13721EED11DD7ADFC2F884D896AC402F737EC89B361
A9FD262DF82DD5E03C91CB9F74419D96D6140844FE7D375817221489D18806C1
5321387A388E68FFBAFB76338AD18ECA1E5F71D9E4D2BF86741FD9B90B61489C
E79C8D264E300B94D15AAEB99F4B4B59324F7E82CB87FFCDE8B4D3B658602C86
A7BEE83C0E3BAE6FA313F76E5EEA7A89A3C9E43DA4DDB5252D1DDF35FB1E0DE2
297031157184E1F24B85304F54925F4D9F0ADAB5213B4F0F359C59A019B99964
148A36B8744C99A2D4860A41F3636C82E0C0CB640F4235A2606102198ED89B92
58E54CADBBB706E1BBB1F18439136D44AB75725170764ACD56B6D724F4A40328
4E8596260CA0110EF40898D7E239E8350312E62603F1E45CD67344BF556781A4
4D87292FB695049A1310676CEEB2EC4F37D2FED84DC3206FF2CE6F371D04C18C
1831D631180CB338DE56D352A092CF380BC3822DDC41E023D259FFDB9AE77AA6
458C2FB8A3CA9CF5CE733D78A442F562597F43DDCA6F6BBD4476109C78DCDED0
BB512BF7AED3B59A6F1A07D3934F2DB64FE0234692E5167F82EE005226E61F60
A2B8C709B95580D66DCA0BBA0FF8F873B098E1488624D5DF1B0D9352AF457645
30F9C1079AD3F5A48FD206EDC4E1678E8E8A0AAD9EE05B2C429644742C186F98
80FDFEB6F051EF41ADB299E3F576C929E5680CAB0CF83AB35C3199CEEEC6E6E9
E4FD1EDDA965064887899C110A23D2970B441E2E0F5043D6B882B2210148D823
7FC68CAB8955504077683D3A23D1B1E70C8E399C6C3BB925D1561D3EE22BAC0C
AC310D61F570C56F1EB373BCF31B7117EDC696D7A2198080F5342BE62154E366
1B0247E7619B8C69F4254A48F4EDB3755B903A4D20E587F7F3E745D756CB94A2
A24CB89FEA081BB1F324654190680053E8B0F44062A650EEE33F12C2ABA609F9
703F040AC5F3E53024F925D8D13EEBD19E3FECC2A7A9CDEFF606A86D80257F36
AA67E42ADE79E3B7B026AA680E207F58DA7854ADCCBD2286360C270407007C60
74F9868D534376FB27B5BFC009FE3A21E38905EC11852227A06BDC84ABC8F798
837E414D12B7764A1E590FEA12378842BDF82E2A4FD2B4691FAE7A4A45148B7C
6480A2DBDFEFAB28F50A9BD7FE7526B9BEB8EB09AACAC1EF34F9CD573FABB51E
1434791AD4403859C1866A4E7F7AFAFB46B10BFC1384FB52A397814B0AB562D6
FE5CB1EAE1DCB88AAC36E7D2B54CCF0B6CFA4E5913528BA2CECFE9DF7260B6B7
799AFA802D90CCD50F9520BC4AF2EE46725E0DCDDFF1EDBC7FD64FF54827AF3E
A1B205AE03045C7B3F1FFF9E48EE3ADBF74840AD925B88AA1F57076E595EE9CA
D2D3D32E169F3B850D16B50260C9C30CFA7DD1FF20558F7D32CCCB8E6CA24FA1
90CD5F09A8700D9E5061A5137BB4EC002B9159F6EAE778299E96CF0A9E18BC8F
2564580C77D110B3A9707F3CB9506A9A208A83DB3E2C7FAB2361A2F86634CF72
69042A083EDF44B4052F8048A8A5867BE2F780F055807E106461DE99926730B3
41A140660587D30A6AB722351016B6A2107D6A48A8E4936337E317917F75439A
FE6F4D30326CDEB5F25B82699EE5F2AE5960B8A247E317F5590417570774EA61
957E2A5723396EBDB6670F6928D558FBACC2B174D830062C963EFCA33D5D1060
617621924EF1C3BDAAD0EE402A11F1402E9810D68B623984436B8E42CA103A91
9C1DC552B0CC5506A21236EC3D87B36491AAD257A22C777A0073E2147BC77353
1A00EE31E440A02A4F1CF65917EF12D6D2D2930D5B67D4FA8E29F71D0D7A92C2
9B3FB5281EE56694FF5772DC59A68E3121F7694EA405A0EC0B4B59EAA199C35A
EFEA3E742070386E71CE238414C9670BFE171A19C0FD35A1F7AFD34C23CAFBA1
4A7A7832E4C52544F193F89A09372174D6084DC896107A7C25FFA922B0D7C5AA
47761D0B89010C28128E68AD73CEBF350FDFA3A5F27A3B8B7C0DB4F41E4BF1AA
07C90E63C50D12F09F0BACAFD10C7AE0851990A88CA6F23D64DDB5F9EFDF4707
53CF03AAB61D96D31904EC711DFA2C5266C477513F9AAC20DD861F9390116352
B37D3A7F93480D2A919B919E4B02F3C5AE276CAE0AC787430A580E8F6D938DA0
28FFE3A47F0DFD2E9C60E874096210EB47836CE66EEB450BE2B47388F39B47A4
A4B8CFE2F9F255717E1DE30FC844BB196936091E7DE5E2834BFCBCEDD5A2F373
C6495AEA0F4C71ED652D54484396D67A971B326D1B6E21FC49DBC20DEE5533A0
F106FAC0FA773D36A06D34A75BDADB7749F637ECD69EA33D91DEA780559ED980
C3D1F322FC76329107705A3C1EB125213FC082E7DB5BE6FBBE02DB6DBDC2FEAA
CB504929D058177A10E96B8F449E49CF4D0785693D7D8A0806DA42B718546515
690FC2F4EF5A0DEF411CEEDE68ACD5499D1B49F6C5E00FDED4C9563112670F98
6799A8134BDE72B95C9DE37D04800D30650FDECF3E4543CE83C70D7E664B5095
42BD26D8E6775EA4D4210F607B7DFD514300B820FC36125AAF4DC080CA711D93
6D718188ABB0B4509D0462F1851D52E7555C457CE12F77F5E84EA074AB08A033
E6087ED0409088E8C020E10E25430C692FB9DB6EB2A339922DB2FAF4B21187A9
C4C99A0A8D4B311804C45519E9D37C0548D59D86D9AE8810D5AE9D5A9748EA90
C44BAC69FB3E17AE5EE83428E824B998247E9BF0D9C484F4006804B34D8598AB
B476962838DC3BAC3BDC288A0565023E85265C6BADFA0312A18706028ECB1F5B
660367D831E1F5147573A9673A2E6FC084D24FB579713455373936AEB206DCD7
0F472E9971A10D80B580379C072353CDE1267957975D12B91B7152395902DA4C
C237AC36EA58FDE9F23BB1B0AFB9C642E1B582CEB414A408219DE1981A13E4BA
79D5E5F65EAB15E85900224A8AE932994E1E17BB65862DFD696EC012DD2B46B4
80AE0F1983F346C2697DAB15502F0E5F2559B80C05304D99E0D22D74940A2E83
33F7F3335B41C02D9245A86D07D71A93498B0E9D4DC7DEF6DB63D9CF3E06C2F3
FB4ECC079AF17D82D31D13918BAFE4AD16C7B7EA86B8659F1C51D487F275DDA8
C5E2C1EE265460B6975C7258A2E2AFF354B7FC17392D47D476AB3294AFABF515
8C14ADDC25A56A15FD69C94283C204DC7FE9801CE10F04DDAFD041F09A550EE5
88F9E738F9A19CBDD354A9C64702695CA25C0F3A5E8AD38F130D1ED965A81AB8
9C297C6F0923392226EB62E0D5B306029DC6C245FEDA716DEE73E50D42952C0C
57E9ABEB896D046EDBE5599DC9498B3F3A220F56EFCBD2CCD0D120CEDAC6BA68
F0C42F2E39BD2C3DA1F4853DB88F74893F4DBAF8F71D5699E178C695730CB661
2000A6D941010F33D6988B85718CD65562B8CECE2A61607876FB1DC7F9D99C4C
591AFE9912B072CB1226D39D2C5647FD043B06E545F2820601206156101095AB
89C9BEC4D1D17A749A207280B60AD275DCD0494AFD90FFEE2700936CB84F8B3F
C6AD0C0ECB1E5431359249C57A5DBBC2DBA180206785C3746FB568B8E871434A
AEE45E41DEE8C30E0414BE35EA601A2603126438455BBAF475E762BAE909B047
C21DCA4F4FF7B2A50F843BA445215316B87161740BAC68E456677A86691479BE
233912841A8F857AF65D9C0279727E15F67EAF1426D28880E9756AA0C6D46DA4
0230F60956E0683CC4B14835D733BEEBEB22E6BEFE54BC83F3B59A4CA69B2039
8C20683C5D22849C67D1139B1DC0D1E6E01F6A1AF500B6CEE395AD96303F5122
EB90898C685FD18799DD3236B662EE266B473681384DD5C0C211654AA8604749
4409EB924F0E3D4A5678CA1262D412B7EF8C8DA268043F1518363D171B0DBD5A
54BAACD63AA1BE6124B8F07E59914A6D3C7C4507D5EBFB3173CEC9FE618D7649
3CCC0743DD2D4C5BC95F6379489EFAD7B2E18DAE0AACCAC3394658FDC7C3D66A
EF2F52CA90489B484DBAABB9F3C600FAE85A6037635673EC337C3B6DC8534626
21B927CE0104796727EFF8163345FDBF34DA899B7E70A4ED846F1ADB5785CFF5
62E2407ACF31EC9B6C6B788F03C1F05EEC12F7449890742F3DCE112715C80C0A
689C59D6F9F1AFC87275F163218B8BCCB6A238DAEC2859BF63D8C182A91D69DA
8A266B6D7322813BBAB313065ABD0F85E01DA3B526223832E5CFBD5223BE28D7
836178FB6B5D6D45198901DA37A1C497D641B7A89742B987D720FA45B3986734
287F9D449C9D26283D953BD7A72565813D5AAC07009E167F0E8C08CD9519667B
1A0B9691B219BF7CBB866107A735CB960588657DBDA39CF6C3CF4264E9C55E3A
123C6684E5CD7AD2F0A419F2B63BF20D897862B63D74DBD0D9065E91BD2B9CB3
254D92F0FE34D54E847DF6EBDADBEA471A35BA87AAFE8CF8CAA3A17278EDC012
E1EB9FF610E7C642263105FE50F3AD1AEC0305FCF23B861AA10E0571E2A09714
FAE1FF36C4C288747AA502844DFEF8450F2534E827500060E446055100780AE7
DFC47C16E3CEBEC8466027D92D74473259B516E272D27C61EF3437740C4C812B
5149515A0A76BAEA4C2F9854B382518B5E80385455E6372432C9C9C37BFAD5C4
C30FC0D5CD8206BE5BAC33DDE8BEE6346733F1C1BC72701A9CC91C06FFA3649A
B400FC7F125E7CABA5D10C1BB84CCF090BB79142E9D2E6557CF1EDBF9AD59933
8298728458D8C9A8F3D708D827FA317D6F4F81B941F5E45327955A0BB99552F7
B2A06F262F2C48E68D97BB05EB69B71B3BF9199FB383E5E25EA1D7FDDE86DB11
CD4095CB303848DFF88E8FB38C00696F8084BCEF8773A80BD892F0567F9C01C3
6904018ED1D74ECAF50E0E8FF779B8CA0D0D17A9CF9ADEC1005A3BD465CBA52D
B0464E3738512F97F5D38CB92979AFA50CDBAE39F637C826DACCC4007B45C34D
B2438ECDE9B2E3BE8338DE78E6416BCE574AEA469B84A6EB4FBC3F818EE592EB
20B382FF541B9A18A9AD6B82CDF943D693949226F8B6CD5B1A637716857D02A6
5142796351E71E8B34EF17282043ED2AFB65BCAC7ED791AD1C291F5077AC66F3
35D10D36805F524626D4AEFBC916A066EEC8283A3328DF0CAF9F28E6FCFB6D4C
A1A0FE6D02B041497762BEF227B03ECC6A7E3B1615B48C69A0D3DAF3C66EB4B1
18EED96675A4F1BE47A285FF15F7AFF0DFCD39CE8B9D8BF3AE33936EED3701E9
E80F8323CB8EE3563D6D1610478360AA460B92F566F3ADA7A308D6C62AEF5C59
6725DC947F3672270A580E955C1C7E8F03DF286C6BB36B85CE017BB9917D0F0E
5C7ED2F568E45938D3597358B182F42FD76A379EFF199284D69A814D75025A4A
4F5BB1D6C79121731750EA08336EDFB3ABB047BCE852323BDE1E1794C3B868D2
50267CD660386815E00C8625157CE76227BA38CA206E646D50243A87C123C2F3
703291EC14CB2531142B82E3D861A270745C4E773A5029505394EB0642889AAE
28F3F6C7CB83A762E1EF072775E9E5BD453EAB46608A1571B731D246A927BBE8
9E33A30DC39DBB0D901B9AAD046ED97A132024EE34C07EEE6BFF8B26DAEB043C
024E34C834CFCAC133D92C46C1E120A389EECE4517388E6847CE34FAFB9FE06F
C62F32A0981509062A86027F2096A0E52D9030AAFFF6A99C9CE24889A98D458F
A19D294FF5AEFBD246423B264FED205BD18C7F4354EE444F38A2A0A26ADC7AC7
EF292C3BDD3E3AF0A3A411780982FCA9CB3E8CB2761DDA3F032727D9820A9C6B
4F7FF7779D20ED07A40D8047EB07EEF16B81B9EE4E50FEDF4E17959D002ADAE3
903B6FE95B37612E953297A6A58EE2C3CA3B26B1B8E20E77AE38A37C47DEC9C4
FCE31A538D2C2388E9980BC7F9E6F316D42573DB26FD6CBAE3C61CF41A011BBC
2CD2EA2FFDF36AD41A5ECC1B9951E84C7DB6B76B35D44F3F474644C19E4F36BB
4D06CB171AEE0CB1E763F4C0A3C3E8A3A450090DED3513A0D0045926346AD24B
1391EDD0FB5D576AAF2339EF3FA47411034AA7093328ED7B489CA75A3CEA97AB
D945DB551F7DE8A30DAF0C76CDE4F9305ED514980DC677CA26220FF84BF7C1DD
39F0E0480480BBAD2DCABC2229760569ED2BF03A4766DF5B43759989172F9633
97037C96181000EDA45B86A6E9735C80173DF06FA25921B96525DE2A0C6BE5D1
2D3CB6D7E87F0E7FD34A6EF0F622AA208E8C0750A35BC30ACF2E84350154CD85
329BE01A974E0F8627C8590CCCBE6344C452C6E51920BA7932ECCDD26F4FD202
7B8D90C296866E90A15382CA415FB9BC0B3D7E82471187D147E7133E4EB1AE16
0D911D70E484FE841555B8759BF4C1669D2B08DED1ADF5DDBE3121B29AF7AFA1
62619564DEBCB5FC376F98F88A888CEFD6A2B50999301B0ADFB7E7583D3D9AF4
FBB70214EC84B8FE12F89AB621EADDEFE0C0BFF1B78D1C55EE34197C61DB32F6
64CF3333C36616674DDC943C1089B16DFDE9C3450A50B8A9720F17C5A12E1ED9
3FED12D94E24D2B1278D0E070F3B1DCB172B6C9AF0D4C7132A05CF218921ED63
62E0AFF398E8D8562E8C9EDBE403EDBED17800AB1AE0D11163D9EB4B27F2A109
8FDD39342C0817B7BF089FEBE7671A6F5CAF3D9706D78243837F4CBDDB9C1C5C
A1E9E428A11C5A317DCAA1040DC0495A819F7EC78CF3D5C0DF17C481617F075B
D86D086CE5A4D17A5356F22D85ED52D9A895CB606701F609096B1F39F1E69936
9EC78E7E2C519A6AF90FA0CD1F56ED143244732ABCF1FF81CC86FAAD845CA92B
FDA3F8AAF7F3EB28F00E9743A3B4BAE56AB37CD1F7CC5408EB9487C0DDF567FA
6800F29EE245FDB361A4211A6CCC698E6268B07BE978A8CACF86C48A25699C07
DCDE7751D1B9085F95337335BE50DD27F94116DDD3CE941E01B128AC187ADDEC
2B50CA9A00297F0AC56F883A3FBC2786E73AD3DC3DC852615910CC70378614E0
A8383643A129D69E745724E1B4F55A1EF6C633EBB3BD39BB48CD4396695AC49F
0EACE941AD992064E9F412574152CF8831004BB11859F07F668F989CC9BBCEF3
BE58D334B15A4831277E11A7CDB1E6D39AC082124EC55B1911A16188D6E59923
EFCC1ABAFE1300A763393DE046C6E6D7397E07D07E4531B5113483393CE25545
8238199C2C6DC9A1D0651E191525D5EEA848A822F7D5E195B093277CDAA7BE95
93B09CA4328CB7FE4354474E1C8705F5E05973A5DC41A31D38B6CEEC74C75197
BD1AB47E86DCB60F555C4D36088A1DD9BF516AFD9B3F46979A05C84E10A5B41F
903D008F70882A8C2B87048040C324D4699283BBA10508D3BCB3DEBBE01A3F02
3F73377DC2BF62F106BDB1F68F29F6720D8C14299639716190B058D34B6C10FA
8D6679178BF08D2C42D21EDE79F77562F393CFBC0250F8114BC0925D8A317B43
EBCBC533A6E26BA667E61584E2C4FF4A7EE9807193C10C722E8F28AE8887DE5F
4367D04479708CD168FCD6A67A96DAE1DFE7ED4132F5A239DE6F6D68DEA951EF
DEBE10C8C7E3781379B1D269776D0259F417D1FE2651C42E2F987473F9DF9972
F2B1D7451B7E82949EE8AFE510716004C5AFADFAC88B4C971553B57B30AA3637
065C507E7ED1E988373C1E727B396262E68648465030472243D132872296BC69
5F48168E93F149A36ABFBDB94B9BD3CA512237D1D18FD6D25810D0D0C41DFEA2
0E955293AA35FBD953B19DA80396D9E911B8094EC63F079DA89FF70C41F58CC4
D3C1A130FB164391CA82F9D2DB4DEE596933FE09A8109ECE95935D5DAEBEEFEA
A49682A6CA111CB01AFFAAEDC404E33DD1CCB09751D5E1D17326C985236A229E
595231D5081D637F0F00C3EA52AB30F41201D45E132475E893C19604D5639395
AA44BA2E5B6D433ADF40EB04BB30B8395D3833CA333423E8FEC6D1089509AB4E
BEEC0C3169476A13C86BC1EF0134F222CBE34C235AB9B2B3B1917D54030CBF55
6E170789CABE8A39CCD011D211980A2308D3B84896ECEA78986EF0B721DE9C37
83786CC7143E69E7D91816717C1BBA9F1C237C7DEA640310ABA05423B20A8BBF
66AD6D0405842AF00BEF64143B4A73085814BC581A76F34969F1DFC9016D8053
36822D384A0F60BFF3803BFAAED36857C2CA2C47A487A66459E91FBB8134B204
2E01D78E7A79E648BE34FBC93C126145EA11488935474C8C221725A6BCC67EB7
D90862C66749A83C38375F5AE4228709DE38BFEC88B7C6C621E5C32E1C7E0B01
C135DC9A0A5AA07DC988B419DA3DB59CB79D125C75FC92A945D498AF2F848DE7
F6F58D66512010BC755FAC85A340426E8F3FDBFB711C3D09B5FA5F1A88A1B1B3
562201F7DF05FEA5160818575CC0DB8423D9E3E3D1F4F3B37DA4D237E68780DA
6CBCA98E9BA5F706795931B9AB5D07B7D3F65B41E20AECFDFCC8C8D3197F44F5
D5D56B0505EAEC4DB9F90020AB46D9C99CF047F51E6FACCA52AB5C966C0788E0
5216E94ED046C6E47A27CD24128E5231C102AF8915857A926CD57557905492AC
A96ABBC6B2C4A41CBFAD8C246B131F98B85C4C67D87AF27D7FE9E07789D4CFC6
3CF3FC2A3A0B2C159DEA8E2BD8299D8B4CF1FCF6CE3388BAD40F3DBD7EEDA5A3
B4696528D03FB2AC354A38AF4399289040540B74265D5CB7314A2CDF59785FAE
8B822B7D0A0A5FFFBCB7ED149E1087CACC5D98EBB7AD86BF70B36A6F64735E9C
6F44636745F0141A79A3FC4119C3D4D0BF6B6987331DF88B45C210B5A4479B7F
964284E6CF5459B750E6872F41111CBC8F548E43EB30952C6E7663BDF93901E9
21582D2A55C95848160B5F40036DF6E3249D6518F191E6ADE8AC3731CAA2F3AC
60FB2D154CBA7CF4AF41F3C6A94EAE02A844F564908002DA80B95740ED8930B4
3E97C927CB01E10F963E4FEC469F11FF59F5CD3937A6CD55E4106CD4A4ED4904
1B951995CA05FB558E46FBEF3886DB1331D0A891FB4FE67406161CF3E0016510
9BC8E9EA4BB32C0D7ED3BAF68E24FA0079299A41B67CF64D9C7814E2B3FDD4E3
2B977F052CC7ECE7F7D273A74547BF2A9BA8752CC6EECF18F83F5848C3168DDB
03922754E0FD4DF9721B5459FD41670E2EA3A619A25B5FC1899B125612F443E3
FA7608E476093B5958EB79CE36051DCAB3536B9FEDA3C6F9A240CA0D80165B8D
D4D986C777941CEE51610303B590D30A98A13AA2CC462296100280AEA2BB4987
5D21181F4D76E64711B19BDFE81D30D3C9874CC9C6DE8A5ED3F71BB46C94C749
CAF0B084B3B23FD830C940B08D02432336B972B36104915AA5E4C2A0E974B607
C25FBDC14DBC4CFDC7B07CCE03150B72B1C4054CF8B729ADEE2C6C2860E433BE
F0FFB62FAE8331C597BD1F8D7D2D2AA14926D9EF68EC01716433AC9A9B5DB48F
8DBD449DCB2D989105355FAF661F5166BB1F372C2628765F12AA7CECF5B03E2F
2B5F52FAC6924634169979619A050F1CF09EFD20249D55762F484EEB094E77F1
8290953D1D8D01C58509D051D326C35FE14E937A6F1363471187A68DE5E8CE06
3CF63AE19AC66767DE1823386DCA34453DE21B7A7C6F9191D8DBE71C5DB0FB44
CBFDD3454FB7E9F942E12171369A079602D8EB76839B90882802012697161F2E
11C9BD6AE375F2E9A1081996410761B6B1176BE959241BAB91A1F6879DFE92A3
71D351FA93AA0AA5CB761B63B7E83DD60902A39C36C86407274E2F9416833626
D696301897D00797AE3048ABD4B88683983C74F53C8F5A8D8AE156B5EB1EBC22
68B74D761259939CDC81F49E0DC540B0C13215959BB74C7DDCB7C8606BCABFDE
FBD2E8D96B02B773155EEC683B0B971804144A8B231DFAC601809FFF9B1759C8
B18B070C2EDB72948C68C8119F5ED069CCA49D44EF680DC47536ED9603B88195
E1CBD619ED30DD76E1A2D4F2450E4E75252AE50430E29BF84A984E804156BF8E
FA7B35C0F957CD46BC3C3CD90C4CC89722248DA391D997A814684B17FB9DEB6D
3078007D40A481ED7E9F6C4D289A8F693F8495E15E3A01E9588BF79AD7F92194
806CE55CDBC45B21EA64BB15BC19C28895BA77122692C8293CAC43952D72184E
C6C772004FE33651A2C3D49CAE68447C21FC353ED23493CA911643EB9EA89E66
16D1FB4290F8F31137A8D4704712F365BF9910C7857429EB4873274171BFBCFD
7315DC52668AC37042B6625A7B2C2B0F86C414B4BE4F4E3453D558D57047DC73
BB82B1B7B736D6BB2FDA489EA9A3386C01E14CF413E845AFE79696DFCA7EF71F
7867F0025CC70938B2B4CD8D51962CE47B4EAE7F6C438754C0FC6751C6722225
F7F149023B1AF867F3A91A2B1A22C66C47D96D090AC19EA48D6441817AC531C5
5D579D99DD5AC7ACE05C9E223FE2C60C6E816051CE248F414950C5EC09D4842A
9ED8417EA62A0BC93417A6810ECEDADD0CC498F5982B9454177C33AB279C8363
CF8C1A95A8DFEB703C8A7F52B1434301DDF8EB7F472F7B687B95F2BF386C408E
1A999CAA6E18B6AE50F1892B2AFA21A92D7488B7DE386E058C70E4CDDA261D9E
1C22AF76D9792991675CB6574E80B18740794E3F98C263E72A6509E37F726635
5CC8EE199AB2CE296C08B7A6B1711A02AAA4ACCE3033D2298E12B2349BF4462D
0191BBE5D79BEB205A78548F5B48B89D881049487A6A1D3C7F76E48B5B866601
B5DA4610326018DFF68AC0A50309ECF1D91A626BA33D68C3E10891400ACB73D8
EB687A2C3A5F1BDBB97086D27620F98EF5E3943A37873277BE3F237465778E6C
A26D50A5389C68CB516416DED8C67EBF9FB7995E1BBDBF24F5CDDB98FBCB70E4
B58D356A761882FC64B487B812BAF2E6E6968A561C6836DA96702EADA554B0EC
ADABA2E4CC8628EE89319337EC18A10C446C54353DB9963E13D021E4DF2C5766
E8CA1F6A1B02DDA9C2E83F2BDD2E0B1937569E4929F7A3C8295E86A09347A755
D2114529D903C639CCB7D6C525A81BB6D035EFE0BBE7A004FE8243231BCE7589
AEADBE1159AC89B863F09EBAABC635EA636D210FE257D714070805E7D925BF04
41AFDE04864F2C9B03C999E6F8B41381CDDB54EE294AD04BA605C0837245AD86
E0396145D14EED36D04799EA1B018A43F167B16961732BCF917CD070E56C1983
BE11704A8EB0E57E97F01DC72191C8FB737FC339F4E236D439A3166D24F8DBF1
DE467D3A0118F4197AFD7246B5351C0D180AF0EF0B1E308D1E3939C7A6906D35
39E185C1ADF024027517A4D406CBD02D7EC1E8DF1281FD9FB58A3D6FBE29F05C
56C171870E3477DBC929A86204D160FE218C7F17D341D7585476B9E2F8332101
042670030409282CB32820BC6F5E959D0370AE31D6BCA71E671F8E3EDA685E3C
CA0C6A09641931CB93810616997C8555D90E0560EE92CD2A496EBE2AEC6757D0
7BAB434C41449669E795832CB50948977939A76465CE7C6350EFDDF4E0F02B8D
43096E3DDFF1FEE5A93610FB9225820AFB583F429D031E66FEEA2D8AFDD58A5C
A73B655DE0425E626C873D180B7D7CD969DFDF5A3802246D479852B9313A9585
1CA5694C1C40E6486661A2C01B06298DA648879E7C37FE6AC7B2CAB6E8212A54
1C9B93060A48C09D088C3681A187A014340C66ACFCE88E3E32E4D43C5052B6C3
B78A87F9C8BE3CAC105133CBD4DEC97DD43C8423B605D05AAFD685E3B81E628B
BD100413B383205E35A76D35ACB0A832C238D20161E3CB070F02DDADA78E61E4
FDAB35D314CD9482799421CE3B17AEDD0C1DBE9F772B05201A43A2B2A240D8ED
750B2B08B19016E844551359D9E08504668C941BB5848C405BECD04FD3EFB97D
075FAC8A1D8564B3237C523F56E1B52CD8BCBEE34C8462CEDCB4023CF32B2392
A1F8817F2B75AC1B7F1D77E72732FC5FE9F61A6A53C91C2391F73E3372BC2EC9
DF0EF30F096BB184141A44BF1CBE933355411B197B51723E612CA7A9EA5316EB
92C88A4DC5BE289A14E636D0E735352097D6432CCBAB6DE67B68926CE87540CE
4F31598B54E140C1BF886616CE558FE045DFAA7AC7CA7789EB013B771F6C95D6
2C9CE066E4379BD4EA8B473D69AA46AB36723459982A9EE073D51C0F61121B7F
25A061066FFF6D7DAE8DF684724D140D8B340A3453A7893021E620AAA9FABFBD
4B060E76E08D5DA58ADCBD2F73A18837ECEBB36FDD8C8DF9307C1D741D34E55B
7C61A5EC0CD836A36BCC0C638F1F19E63FA479ECE9F3D6606E23C37686AC0B70
D8CD8080A00C51E2A02E1FE3AFAB878F3473F707BFF5B97F4798685E08419F45
98CFF833EEE207C3A286D5224963E63F7A039D3A6F4853C6CA16B26747D5890B
58A339E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 23867906 17900936 1000 600 600 (comp.dvi)
@start /Fa 160[89 95[{ T1Encoding ReEncodeFont }1 119.552
/SFRM1440 rf /Fb 241[31 36 40 45 11[{}4 66.4176 /CMMI8
rf /Fc 207[19 48[{}1 58.1154 /CMSY7 rf /Fd 192[65 63[{}1
83.022 /MSBM10 rf /Fe 22[43 115[50 35 37 33 50 50 49
50 77 23 2[23 1[49 1[43 50 43 1[47 1[76 14[62 12[62 25[38
38 40[{ T1Encoding ReEncodeFont }22 99.6264 /SFSS1200
rf /Ff 160[105 95[{ T1Encoding ReEncodeFont }1 143.462
/SFSS1728 rf /Fg 145[32 110[{}1 58.1154 /CMSSI8 rf /Fh
196[20 47[43 11[{}2 58.1154 /CMMI7 rf /Fi 193[52 62[{}1
66.4176 /MSAM10 rf /Fj 212[55 43[{}1 66.4176 /CMSS8 rf
/Fk 196[23 23 18[54 10[36 1[43 2[41 5[41 36 1[37 43 47
53 11[{}12 83.022 /CMMI10 rf /Fl 172[76 42[73 13[68 26[{}3
90.9091 /CMEX10 rf /Fm 137[52 59 41 44 39 1[59 57 59
1[27 2[27 1[57 1[51 1[51 59 55 25[76 3[73 67[{ T1Encoding ReEncodeFont }
17 119.552 /SFSI1440 rf /Fn 162[24 1[24 29[65 1[23 23
14[65 1[32 32 40[{}8 83.022 /CMSS10 rf /Fo 135[38 1[38
5[43 9[25 37 33[53 67[{}6 83.022 /CMSSI10 rf /Fp 239[83
16[{}1 83.022 /MSAM10 rf /Fq 212[60 43[{}1 74.7198 /CMSS9
rf /Fr 212[39 43[{ T1Encoding ReEncodeFont }1 74.7198
/SFTT0900 rf /Fs 135[36 3[29 5[40 1[18 2[18 3[36 39[61
10[39 50[{ T1Encoding ReEncodeFont }8 74.7198 /SFSX0900
rf /Ft 239[75 16[{}1 74.7198 /MSAM10 rf /Fu 135[35 57[60
60 60 8[38 38 38 7[30 30 5[38 34[{ T1Encoding ReEncodeFont }10
74.7198 /SFSS0900 rf /Fv 150[30 30 7[47 40[0 21[77 24[60
8[{}6 74.7198 /CMSY9 rf /Fw 192[58 63[{}1 74.7198 /MSBM10
rf /Fx 137[34 7[38 8[35 39[59 61[{ T1Encoding ReEncodeFont }4
66.4176 /SFSX0800 rf /Fy 192[52 63[{}1 66.4176 /MSBM10
rf /Fz 144[45 1[75 8[50 40 22[56 76[{ T1Encoding ReEncodeFont }5
90.9091 /SFRM1095 rf /FA 207[19 44[35 3[{}2 66.4176 /CMSY8
rf /FB 165[61 26[71 63[{}2 90.9091 /MSBM10 rf /FC 144[45
1[72 8[47 4[25 1[26 1[26 29[71 1[25 25 14[71 1[35 35
33[66 5[49{}14 90.9091 /CMSS10 rf /FD 145[36 4[17 105[{}2
66.4176 /CMSSI8 rf /FE 194[45 1[25 25 18[59 4[42 1[59
3[40 52 47 2[45 4[43 45 40 37 40 47 51 58 11[{}18 90.9091
/CMMI10 rf /FF 135[33 1[33 36 25 27 24 1[36 35 36 1[17
2[17 3[31 36 2[34 10[47 6[52 1[62 38 7[51 45 47 47 11[35
35 35 35 35 35 35 3[55 35 7[35 34[{ T1Encoding ReEncodeFont }32
66.4176 /SFSS0800 rf /FG 201[71 9[71 27[91 16[{}3 90.9091
/MSAM10 rf /FH 133[40 42 42 62 42 3[31 47 47 45 47 6[45
28 40 1[40 47 44 14[59 1[58 3[49 5[52 2[58 1[61 65[{}22
90.9091 /CMSSI10 rf /FI 201[32 32 32 32 32 32 32 48[{
 T1Encoding ReEncodeFont }7 58.1154 /SFSS0700 rf /FJ
136[62 2[34 35 4[47 1[21 2[21 47 1[28 42 101[{ T1Encoding ReEncodeFont }
9 83.022 /SFSO1000 rf /FK 130[47 47 47 47 47 47 2[47
47 47 47 1[47 47 47 47 47 47 1[47 47 47 47 47 47 47 47
47 3[47 1[47 11[47 9[47 2[47 4[47 1[47 47 47 1[47 3[47
47 47 1[47 47 47 47 47 47 47 47 47 2[47 1[47 1[47 32[{
 T1Encoding ReEncodeFont }50 90.9091 /SFTT1095 rf /FL
22[37 37 30[50 79[38 38 1[38 43 30 32 28 43 43 42 43
66 20 41 1[20 1[42 25 37 43 37 43 40 1[65 11[46 2[53
61 2[45 8[53 7[23 12[23 28 23 2[32 32 23 10[44 28[{
 T1Encoding ReEncodeFont }39 83.022 /SFSI1000 rf /FM
131[44 1[44 44 44 44 1[44 44 44 44 1[44 44 44 44 44 2[44
44 44 44 44 44 44 44 44 12[44 4[44 9[44 2[44 3[44 44
44 44 44 44 1[44 1[44 2[44 44 1[44 44 44 1[44 44 44 44
44 4[44 1[44 32[{ T1Encoding ReEncodeFont }47 83.022
/SFTT1000 rf /FN 22[42 110[40 42 42 62 42 47 34 35 31
1[47 46 47 72 21 2[21 47 46 28 42 47 41 47 44 10[61 9[48
7[66 6[71 10[46 5[25 2[36 36 40[{ T1Encoding ReEncodeFont }32
83.022 /SFSX1000 rf /FO 21[46 46 46 7[48 101[43 46 46
68 46 51 36 38 34 51 51 50 51 79 24 2[24 51 50 31 46
51 45 51 48 13[56 64 74 64 74 71 87 54 6[59 1[64 1[66
1[47 1[78 10[50 3[28 1[28 2[39 39 28 9[53 53 28[{
 T1Encoding ReEncodeFont }49 90.9091 /SFSX1095 rf /FP
6[46 2[45 11[40 40 40 40 4[43 1[43 101[39 41 41 1[41
46 33 35 31 46 46 45 46 72 21 44 24 21 46 45 28 40 46
40 46 43 7[60 4[62 50 4[63 4[25 1[60 51 54 1[58 60 60
18[25 30 25 4[25 8[73 1[48 53 27[{ T1Encoding ReEncodeFont }51
90.9091 /SFSI1095 rf /FQ 6[43 4[42 9[37 37 37 7[40 98[42
1[42 36 38 38 57 38 43 30 32 28 43 43 42 43 66 20 41
22 20 43 42 25 37 43 37 43 40 1[65 51 24 42 24 51 2[78
55 57 56 46 54 61 53 61 59 73 45 2[23 59 1[47 50 60 53
55 55 1[39 1[65 1[23 23 42 1[42 1[42 1[42 42 42 42 42
23 28 23 65 42 32 32 23 4[42 4[44 44 28[{ T1Encoding ReEncodeFont }83
83.022 /SFSS1000 rf /FR 145[42 4[32 32 42 42 5[51 19[57
19[46 0 0 3[55 16[83 83 16[42 42 5[65 8[{}16 83.022 /CMSY10
rf /FS 145[45 3[25 35 35 45 45 5[56 1[61 2[61 8[77 74
4[63 6[48 3[73 7[51 51 0 0 3[61 8[91 7[91 91 5[71 7[71
2[45 45 5[71 5[71 25 71{}30 90.9091 /CMSY10 rf /FT 198[29
29 29 29 29 29 29 29 29 29 29 3[45 43[{ T1Encoding ReEncodeFont }12
49.8132 /SFSS0600 rf /FU 4[46 1[46 1[70 2[45 4[26 21
2[40 40 40 40 40 4[43 1[43 22[54 8[60 69[39 41 41 61
41 46 33 35 31 46 46 45 46 72 21 44 24 21 46 45 28 40
46 40 46 43 1[70 55 26 1[26 55 1[60 85 60 62 62 50 58
67 58 67 63 79 49 1[42 25 63 60 51 54 65 58 60 60 1[43
1[70 1[25 25 45 45 45 45 45 45 45 45 45 45 1[25 30 25
70 45 35 35 25 4[45 29 2[73 48 48 53 4[90 1[60 60 19[{
 T1Encoding ReEncodeFont }100 90.9091 /SFSS1095 rf /FV
8[89 2[57 4[33 5[51 51 5[55 1[55 22[68 78[50 52 52 1[52
59 41 44 39 59 59 57 59 90 27 1[30 27 59 57 35 51 59
51 59 55 1[89 8[76 78 77 63 73 84 73 84 81 100 62 2[32
1[76 65 68 82 73 1[76 1[54 1[89 15[38 32 89 1[44 44 32
10[61 66 4[114 22[{ T1Encoding ReEncodeFont }62 119.552
/SFSS1440 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467 -608 a
SDict begin H.S end
 -467 -608
a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -467 -608 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -600 1668 3024 2268 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2424 1668
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0.68 0.68 0.88
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray Black 0 TeXcolorgray -458 -600 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -458
-600 a -458 -600 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -458 -600 a -458 -600 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -458 -600
a -458 -600 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -458 -600 a -458 -600 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -458 -600 a -458
-600 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -458 -600 a -458 -600 a
SDict begin H.S end
 -458 -600 a -458 -600
a
SDict begin 13.6 H.A end
 -458 -600 a -458 -600 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -458 -600 a -458 -600 a
SDict begin [/Producer (dvips + Distiller)/Title (Interpr\351tation et compilation)/Subject
()/Creator (LaTeX with Beamer class)/Author (Christian Rinderknecht)/Keywords
() /DOCINFO pdfmark end
 -458
-600 a -458 -600 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(1)>>1<</P(2)>>2<</P(3)>>3<</P(4)>>4<</P(5)>>5<</P(6)>>6<</P(7)>>7<</P(8)>>8<</P(9)>>9<</P(10)>>10<</P(11)>>11<</P(12)>>12<</P(13)>>13<</P(14)>>14<</P(15)>>15<</P(16)>>16<</P(17)>>17<</P(18)>>18<</P(19)>>19<</P(20)>>20<</P(21)>>21<</P(22)>>22<</P(23)>>23<</P(24)>>24<</P(25)>>25<</P(26)>>26<</P(27)>>27<</P(28)>>28<</P(29)>>29<</P(30)>>30<</P(31)>>31<</P(32)>>32<</P(33)>>33<</P(34)>>34<</P(35)>>35<</P(36)>>36<</P(37)>>37<</P(38)>>38<</P(39)>>39<</P(40)>>40<</P(41)>>41<</P(42)>>42<</P(43)>>43<</P(44)>>44<</P(45)>>45<</P(46)>>46<</P(47)>>47<</P(48)>>48<</P(49)>>49<</P(50)>>50<</P(51)>>51<</P(52)>>52<</P(53)>>53<</P(54)>>54<</P(55)>>55<</P(56)>>56<</P(57)>>57<</P(58)>>58<</P(59)>>59<</P(60)>>60<</P(61)>>61<</P(62)>>62<</P(63)>>63<</P(64)>>64<</P(65)>>65<</P(66)>>66<</P(67)>>67<</P(68)>>68<</P(69)>>69<</P(70)>>70<</P(71)>>71<</P(72)>>72<</P(73)>>73<</P(74)>>74<</P(75)>>75<</P(76)>>76<</P(77)>>77<</P(78)>>78<</P(79)>>79<</P(80)>>80<</P(81)>>81<</P(82)>>82<</P(83)>>83<</P(84)>>84<</P(85)>>85<</P(86)>>86<</P(87)>>87<</P(88)>>88<</P(89)>>89<</P(90)>>90<</P(91)>>91<</P(92)>>92<</P(93)>>93<</P(94)>>94<</P(95)>>95<</P(96)>>96<</P(97)>>97<</P(98)>>98<</P(99)>>99<</P(100)>>100<</P(101)>>101<</P(102)>>102<</P(103)>>103<</P(104)>>104<</P(105)>>105<</P(106)>>106<</P(107)>>107<</P(108)>>108<</P(109)>>109<</P(110)>>110<</P(111)>>111<</P(112)>>112<</P(113)>>113<</P(114)>>114<</P(115)>>115<</P(116)>>116<</P(117)>>117<</P(118)>>118<</P(119)>>119<</P(120)>>120<</P(121)>>121<</P(122)>>122<</P(123)>>123<</P(124)>>124<</P(125)>>125<</P(126)>>126<</P(127)>>127<</P(128)>>128<</P(129)>>129<</P(130)>>130<</P(131)>>131<</P(132)>>132<</P(133)>>133<</P(134)>>134<</P(135)>>135<</P(136)>>136<</P(137)>>137<</P(138)>>138<</P(139)>>139<</P(140)>>140<</P(141)>>141<</P(142)>>142<</P(143)>>143<</P(144)>>144<</P(145)>>145<</P(146)>>146<</P(147)>>147<</P(148)>>148<</P(149)>>149<</P(150)>>150<</P(151)>>151<</P(152)>>152<</P(153)>>153<</P(154)>>]>>>>
/PUT pdfmark end
 -458 -600 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 230 76 a FV(Interp)m(r\351tation)36 b(et)i(compilation)p
0 TeXcolorgray 0 TeXcolorgray 483 397 a FU(Christian)31
b(Rinderknecht)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 594 745 a(25)f(Octob)s(er)g(2008)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2199 1639 a FT(1)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation2) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Pr\351requis)36 b(et)i(sources)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Ce)30 b(cours)g(supp)s(ose)g(que)h(vous)g(a)m(y)m(ez)h(comp)m(ris)f
(les)f(cours)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -120 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 -110 a FU(algo)m(rithmique)i(et)e(p)m(rogrammation,)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 18 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 28 a FU(p)m(rogrammation)g
(fonctionnelle)j(en)d(Objective)h(Caml.)p 0 TeXcolorgray
-458 166 a(Ce)f(cours)g(s'inspire)h(de)f(ceux)i(de)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 294 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
304 a FU(Ma)m(rtin)e(Odersky)g(\(\311cole)h(P)m(olytechnique)i
(F\351d\351rale)f(de)f(Lausanne\),)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 432 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 442 a FU(Luc)f(Ma)m(ranget,)h(Didier)g(R\351my)g(\(INRIA,)f
(\311cole)h(P)m(olytechnique\),)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 569 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 579 a FU(F)m(ran\347ois)g(P)m(ottier,)f(Xavier)h(Lero)m(y)g(et)f
(Michel)h(Mauny)g(\(INRIA\).)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2199 1639 a FT(2)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation3) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(P)m(ourquoi)37 b(\351tudier)g(les)g(compilateurs)19
b(?)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(T)-8 b(r\350s)29 b(p)s(eu)i(de)g(p)m(rofessionnels)g
(\351crivent)g(des)f(compilateurs.)-458 -35 y(Alo)m(rs)g(p)s(ourquoi)i
(app)m(rendre)g(\340)e(construire)h(des)f(compilateurs)15
b(?)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 93 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
103 a FU(Un)30 b(b)s(on)g(info)m(rmaticien)i(comp)m(rend)g(les)e
(langages)h(de)g(haut)g(niveau)h(ainsi)-276 216 y(que)f(le)f
(mat\351riel.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 344 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
354 a FU(Un)g(compilateur)h(relie)g(ces)f(deux)h(asp)s(ects.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 481 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 491 a FU(C'est)e(p)s(ourquoi)j(comp)
m(rendre)f(les)f(techniques)i(de)f(compilation)g(c'est)-276
604 y(comp)m(rendre)g(l'interaction)h(entre)e(les)g(langages)i(de)e(p)m
(rogrammation)h(et)f(les)-276 717 y(o)m(rdinateurs.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 845 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 855 a FU(Beaucoup)i(d'applications)h
(contiennent)f(de)e(p)s(etits)g(langages)h(p)s(our)g(leur)-276
968 y(con\034guration)h(ou)f(rendre)f(souple)h(leur)g(contr\364le)g
(\(macros)f(W)m(o)m(rd,)h(scripts)-276 1081 y(p)s(our)f(le)g(graphisme)
h(et)f(l'animation,)i(les)e(descriptions)h(des)g(structures)e(de)-276
1194 y(donn\351es)i(etc.\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2199 1639 a FT(3)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation4) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(P)m(ourquoi)37 b(\351tudier)g(les)g(compilateurs)19
b(?)37 b(\(suite\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 -198 a FU(Les)29 b(techniques)j(de)f(compilation)h(sont)e
(n\351cessaires)g(p)s(our)g(l'implantation)-276 -85 y(de)g(tels)g
(langages.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
43 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 53
a FU(Les)f(fo)m(rmats)h(de)g(donn\351es)i(sont)e(aussi)g(des)g
(langages)i(fo)m(rmels)e(\(langages)-276 166 y(de)g(sp)s
(\351ci\034cation)i(de)e(donn\351es\),)i(tels)e(que)h(HTML,)f(XML,)f
(ASN.1)i(etc.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 294 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
304 a FU(Les)e(techniques)j(de)f(compilation)h(sont)e(n\351cessaires)g
(p)s(our)g(lire,)h(traiter)f(et)-276 417 y(\351crire)g(des)g
(donn\351es,)i(mais)e(aussi)g(p)s(our)g(migrer)g(des)g(applications)
-276 530 y(\(r\351ing\351nierie\).)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 657 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 667 a FU(\300)g(pa)m(rt)g(cela,)h(les)g(compilateurs)f(sont)g
(d'excellents)i(exemples)f(de)g(grands)-276 780 y(syst\350mes)d
(complexes)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -182 910 a FR(\017)p 0 TeXcolorgray 0 TeXcolorgray
-95 922 a FQ(qui)g(p)r(euvent)f(\352tre)h(sp)r(\351ci\034\351s)g
(rigoureusement,)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-182 1009 a FR(\017)p 0 TeXcolorgray 0 TeXcolorgray -95
1021 a FQ(qui)g(ne)f(p)r(euvent)h(\352tre)g(r\351alis\351s)e(qu'en)i
(combinant)e(th\351o)n(rie)h(et)g(p)n(ratique.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2199 1639 a FT(4)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation5) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Le)37 b(r\364le)h(d'un)f(compilateur)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 -208 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 -198 a FU(Le)30 b(r\364le)g(d'un)i
(compilateur)f(est)e(de)i(traduire)g(des)f(textes)g(d'un)h(langage)-276
-85 y FP(source)f FU(en)h(un)g(langage)g FP(cible)p FU(.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 43 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 53 a FU(Souvent)g(le)g(langage)g
(source)g(est)e(plus)i(abstrait)f(\(p.ex.)i(langage)g(de)-276
166 y(p)m(rogrammation\))f(que)g(le)f(langage)i(cible)g(\(p.ex.)f
(assembleur\).)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 294 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
304 a FU(N\351anmoins,)g(on)g(nomme)f(pa)m(rfois)g(les)h(compilateurs)f
(des)h FP(traducteurs)-276 417 y FU(lo)m(rsqu'ils)g(traduisent)g(des)f
(p)m(rogrammes)g(entre)g(langages)i(de)e(m\352me)-276
530 y(niveau)i(d'abstraction.)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 657 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 667 a FU(Une)e(pa)m(rtie)h(du)g(travail)g(d'un)g(compilateur)h
(est)d(de)i(v\351ri\034er)g(la)f(validit\351)i(du)-276
780 y(p)m(rogramme)e(source.)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 908 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 918 a FU(La)g(sp)s(\351ci\034cation)h(d'un)h(compilateur)f(est)f
(constitu\351e)g(pa)m(r)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -182 1047 a FR(\017)p 0 TeXcolorgray
0 TeXcolorgray -95 1059 a FQ(une)e(sp)r(\351ci\034cation)e(des)i
(langages)e(source)h(et)g(cible,)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -182 1147 a FR(\017)p 0 TeXcolorgray 0 TeXcolorgray
-95 1159 a FQ(une)h(sp)r(\351ci\034cation)e(de)i(la)f(traduction)g(des)
g(p)n(rogrammes)g(de)g(l'un)g(vers)-95 1259 y(l'autre.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2199 1639 a FT(5)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation6) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Langages)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 -198 a FU(F)m(o)m(rmellement,)31 b(un)g(langage)h(est)e(un)h
(ensemble)f(de)h FP(phrases)p FU(.)g(Une)f(phrase)-276
-85 y(est)f(une)i(suite)f(de)h FP(mots)p FU(.)e(Un)h(mot)g(est)f(une)i
(suite)g(de)f FP(ca)m(ract\350res)-276 28 y FU(appa)m(rtenant)i(\340)e
(un)h FP(alphab)s(et)h FU(\(ensemble)f(de)f(symb)s(oles)g(\034ni)h(non)
g(vide\).)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
156 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 166
a FU(Chaque)g(phrase)g(p)s(oss\350de)f(une)h(structure)f(qui)h(p)s(eut)
f(\352tre)g(d\351crite)h(pa)m(r)g(un)-276 279 y(a)m(rb)m(re.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 407 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 417 a FU(Les)e(r\350gles)i(de)f
(construction)h(d'une)h(phrase)f(s'exp)m(riment)g(\340)f(l'aide)i
(d'une)-276 530 y FP(grammaire)p FU(.)p 0 TeXcolorgray
-458 692 a(Ainsi,)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 820 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 830 a FU(les)e(phrases)g(d'un)i(langage)f(de)g(p)m(rogrammation)g
(sont)f(des)g(p)m(rogrammes)15 b(;)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 958 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 968 a FU(les)30 b(mots)f(d'un)i(p)m(rogrammes)f(sont)g(app)s
(el\351s)h FP(lex\350mes)15 b FU(;)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 1096 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 1106 a FU(les)30 b(lex\350mes)g(suivent)h(aussi)g(des)f(r\350gles)
g(qui)h(p)s(euvent)h(\352tre)d(donn\351es)j(pa)m(r)-276
1219 y(une)f(grammaire.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2199 1639 a FT(6)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation7) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Structure)37 b(simpli\034\351e)h(d'un)f(compilateur)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-392 -198 a FU(1.)p 0 TeXcolorgray 0 TeXcolorgray 46
w(Analyse)31 b(lexicale)h(:)e(texte)g(source)h FS(7!)f
FU(suite)g(de)g(lex\350mes)15 b(;)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -392 -60 a(2.)p 0 TeXcolorgray 0 TeXcolorgray
46 w(Analyse)30 b(syntaxique)h(:)e(suite)h(de)g(lex\350mes)f
FS(7!)g FU(a)m(rb)m(re)i(de)f(syntaxe)g(abstraite)15
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -392 78
a(3.)p 0 TeXcolorgray 0 TeXcolorgray 46 w(Analyses)30
b(s\351mantiques)h(sur)f(l'a)m(rb)m(re)i(de)e(syntaxe)h(abstraite)g(:)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-246 219 a FQ(3.1)p 0 TeXcolorgray 0 TeXcolorgray 44
w(V\351ri\034cation)d(de)f(la)h(p)r(o)n(rt\351e)f(des)g
(identi\034cateurs)g(\(gestion)g(des)-95 319 y(environnements\))14
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -246 418
a(3.2)p 0 TeXcolorgray 0 TeXcolorgray 44 w(V\351ri\034cation)27
b(ou)e(inf\351rence)i(des)f(t)n(yp)r(es)g(\(optionel\))f(:)i(a)n(rb)n
(re)f FR(7!)h FQ(a)n(rb)n(re)f(d\351co)n(r\351.)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -392 573 a FU(4.)p
0 TeXcolorgray 0 TeXcolorgray 46 w(Pro)s(duction)k(de)h(co)s(de)f
(interm\351diaire)i(:)e(a)m(rb)m(re)h([d\351co)m(r\351)15
b(?])32 b FS(7!)e FU(co)s(de)-276 686 y(interm\351diaire)15
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -392 824
a(5.)p 0 TeXcolorgray 0 TeXcolorgray 46 w(Optimisations)30
b(intrins\350ques)h(du)g(co)s(de)f(interm\351diaire)15
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -392 961
a(6.)p 0 TeXcolorgray 0 TeXcolorgray 46 w(Pro)s(duction)30
b(de)h(co)s(de)f(cible)i(\(objet\),)e(p.ex.)i(assembleur)15
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -392 1099
a(7.)p 0 TeXcolorgray 0 TeXcolorgray 46 w(Optimisations)30
b(du)h(co)s(de)f(cible)i(\(d\351p)s(endantes)f(de)g(la)g(machine)g
(cible\))15 b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-392 1237 a(8.)p 0 TeXcolorgray 0 TeXcolorgray 46 w(\311dition)31
b(de)g(liens)g(\(statique\))f(:)h(co)s(de)f(cible)i(+)e
(biblioth\350ques)j FS(7!)d FU(co)s(de)-276 1350 y(ex\351cutable.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2199 1639 a FT(7)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation8) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Rema)m(rques)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 -198 a FU(L'analyseur)31 b(lexical)h(\()p FP(lexer)p
FU(\))g(reconna\356t)f(les)f(espaces,)h(les)f(ca)m(ract\350res)g(de)
-276 -85 y(contr\364le)g(et)g(les)g(commentaires)g(mais)g(n'en)h(fait)f
(pas)h(des)f(lex\350mes)-276 28 y(\()p FP(tok)m(ens)p
FU(\).)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
156 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 166
a FU(L'a)m(rb)m(re)f(de)f(syntaxe)h(abstraite)f(est)f(app)s(el\351)i
FP(Abstract)f(Syntax)h(T)-8 b(ree)28 b FU(\(AST\).)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 294 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 304 a FU(Les)h(trois)h(p)m
(remi\350res)g(\351tap)s(es)g(constituent)h(la)g FP(phase)g(d'analyse)p
FU(.)h(Les)-276 417 y(restantes)c(constituent)j(la)f
FP(phase)h(de)f(synth\350se)g FU(\(de)g(co)s(de\).)h(On)f(pa)m(rle)h
(aussi)-276 530 y(de)f FP(phase)h(frontale)g FU(p)s(our)f(les)g
(\351tap)s(es)g(jusqu'\340)h(la)g(p)m(ro)s(duction)h(de)f(co)s(de)-276
643 y(interm\351diaire)g(incluse,)g(et)f(de)h FP(phase)g(\034nale)h
FU(p)s(our)e(les)g(suivantes.)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 770 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 780 a FU(L'asso)s(ciation)g(d'un)i(t)m(yp)s(e)e(aux)i
(constructions)e(du)h(langage)h(s'app)s(elle)f(le)-276
893 y FP(t)m(ypage)p FU(.)f(Il)f(ga)m(ranti)i(que)f(les)f(p)m
(rogrammes)g(ne)h(p)m(rovo)s(queront)g(pas)g(d'erreurs)-276
1006 y(\340)g(l'ex\351cution)i(p)s(our)f(cause)f(d'incoh\351rence)j
(sur)d(leurs)g(donn\351es)-276 1119 y(\(n\351anmoins,)h(une)g(division)
h(pa)m(r)f(z\351ro)g(restera)e(p)s(ossible\).)i(Selon)g(la)g(\034nesse)
-276 1232 y(du)f(t)m(ypage,)i(plus)f(ou)g(moins)f(de)h(p)m(rogrammes)f
(valides)h(sont)f(rejet\351s.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2199 1639 a FT(8)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation9) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Interp)m(r\351tation)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(Un)30 b
FP(interp)m(r\350te)h FU(transfo)m(rme)e(un)i(\034chier)g(source)g(en)f
(une)i(donn\351e,)f(pa)m(r)g(exemple)-458 -135 y(un)g(a)m(rb)m(re)g(de)
g(syntaxe)g(abstraite)f(ou)h(du)g(co)s(de)f(interm\351diaire,)h(que)g
(l'on)h(passe)-458 -22 y(ensuite)f(\340)f(un)h(p)m(rogramme,)f(dit)h
FP(machine)g(virtuelle)p FU(,)h(qui)f(l'ex\351cutera)h(en)-458
91 y(mimant)e(\(donc)h(abstraitement\))f(une)h(machine)g(r\351elle)g
(\(physique\).)-458 304 y FO(Rema)m(rques)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 457 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 467 a FU(Non)g(\340)f(l'ho)m(rrible)
i(anglicisme)g(\023)e(interp)m(r\351teur)h(\024)15 b(!)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 594 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 604 a FU(Le)30 b(co)s(de)g
(interm\351diaire)i(est)d(pa)m(rfois)i(app)s(el\351)g
FP(b)m(yte-co)s(de)p FU(.)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 732 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 742 a FU(L'a)m(rb)m(re)g(de)g(syntaxe)g(abstraite)f(n'est)g(pas)g
(toujours)g(construit,)h(ou)f(pas)-276 855 y(compl\350tement,)g(selon)h
(les)f(langages)h(ou)g(les)f(strat\351gies)g(d'implantation.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 983 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 993 a FU(Un)g(interp)m(r\350te)h
(contient)g(donc)g(les)f(p)m(remi\350res)g(phases)h(d'un)h
(compilateur.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2199 1639 a FT(9)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation10) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Lexique)37 b(et)h(syntaxe)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 -198 a FU(L'ensemble)30 b(des)h(lex\350mes)f(d'un)i
(langage)g(est)d(app)s(el\351)i FP(lexique)p FU(.)p 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 -70 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 -60 a FU(La)f FP(syntaxe)h
(concr\350te)g FU(d\351crit)f(comment)g(assembler)g(les)g(lex\350mes)g
(en)-276 53 y(phrases)g(p)s(our)g(constituer)h(des)f(p)m(rogrammes.)g
(En)g(pa)m(rticulier,)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -182 182 a FR(\017)p 0 TeXcolorgray
0 TeXcolorgray -95 194 a FQ(elle)d(ne)h(donne)f(pas)g(de)g(sens)g(aux)h
(phrases)14 b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-182 282 a FR(\017)p 0 TeXcolorgray 0 TeXcolorgray -95
294 a FQ(plusieurs)27 b(notations)e(sont)i(p)r(ossibles)f(p)r(our)h
(signi\034er)g(la)g(m\352me)f(chose,)h(p.ex.)-95 393
y(en)h(OCaml)f(:)h('a')g(et)f('\\097')n(,)h(ou)f(\()h(.)14
b(.)g(.)g(\))28 b(et)f FN(b)s(egin)g FQ(.)14 b(.)g(.)41
b FN(end)p FQ(.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-182 481 a FR(\017)p 0 TeXcolorgray 0 TeXcolorgray -95
493 a FQ(ce)28 b(qu'elle)f(d\351crit)g(est)h FN(lin\351aire)g
FQ(\(le)f(co)r(de)h(source)f(est)g(du)g(texte\))h(et)g(utilise)-95
593 y(g\351n\351ralement)f(des)g(pa)n(renth\350ses.)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 737 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
747 a FU(La)i FP(syntaxe)h(abstraite)f FU(d\351crit)g(des)g
FO(a)m(rb)m(res)h FU(qui)g(capturent)g(la)f(structure)g(des)-276
860 y(p)m(rogrammes)g(\(p.ex.)j(les)e(imb)m(rications)i(co)m(rresp)s
(ondent)f(\340)f(des)-276 973 y(sous-a)m(rb)m(res\).)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(10)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation11) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(\311tude)37 b(d'une)g(calculette)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 -221 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 -211 a FO(Syntaxe)32
b(concr\350te)d FU(\(dans)i(le)g(st)m(yle)g FP(Backus-Naur)g(F)m(o)m
(rm)g FU(\(BNF\)\))p 0 TeXcolorgray 0 TeXcolorgray -276
-86 a FM(Expression)39 b(::=)j(integer)290 13 y(|)h(Expression)d(BinOp)
h(Expression)290 113 y(|)i("\(")f(Expression)e("\)")-276
212 y(BinOp)h(::=)h("+")h(|)g("-")f(|)h("*")g(|)g("/")-276
450 y FU(P)m(our)30 b(l'analyse)i(syntaxique,)g(les)e(p)m(rio)m
(rit\351s)i(des)e(op)s(\351rateurs)g(est)f(celle)-276
563 y(habituelle.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 677 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
687 a FO(Syntaxe)j(abstraite)f FU(\(en)f(OCaml\))p 0
TeXcolorgray 0 TeXcolorgray -276 812 a FN(t)m(yp)s(e)c
FL(exp)n(r)37 b FQ(=)27 b(Const)g FN(of)34 b FL(int)96
912 y FM(|)48 b FQ(BinOp)28 b FN(of)34 b FL(bin_op)29
b FM(*)e FL(exp)n(r)37 b FM(*)27 b FL(exp)n(r)-276 1011
y FN(and)f FL(bin_op)j FQ(=)f(A)n(dd)f FM(|)g FQ(Sub)h
FM(|)f FQ(Mult)g FM(|)g FQ(Div)q(;;)p 0 TeXcolorgray
-458 1174 a FO(Rema)m(rque)121 b FU(On)30 b(utilisera)h(pa)m(rfois)g
(la)g(p)s(olice)g(des)f(a)m(rb)m(res)h(de)g(syntaxe)-458
1287 y(abstraite)f(p)s(our)g(le)h(co)s(de)f(source.)h(P)m(a)m(r)f
(exemple)i(\(1)p FK(+)p FU(7\))p FK(*)p FU(9)e(\(p)s(olices)h
(m\352l\351es\))f(au)-458 1400 y(lieu)h(de)g FK(\(1+7\)*9)p
FU(.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(11)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation12) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Un)38 b(exemple)g(d'exp)m(ression)e(a)m(rithm\351tique)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (exemple_expr_arith) cvn /DEST pdfmark
end
 -458 -360 a 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 -198 a FU(Il)29 b(faudrait)g(d\351\034nir)i(l'ensemble)f(de)f
(lex\350mes)h(d\351not\351)g(pa)m(r)h FK(integer)e FU(dans)g(la)-276
-85 y(grammaire.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 43 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
53 a FU(L'analyse)i(lexico-syntaxique)j(transfo)m(rme)29
b(l'extrait)i FM("\(1+2\)*\(5/1\)")25 b FU(en)-276 166
y(syntaxe)31 b(concr\350te)f(ou)h FM("\(1)42 b(+2\)*\(5)f(/)i(1\)")29
b FU(en)i(le)f FP(terme)g FU(\(c.-\340-d.)h(la)-276 279
y(valeur)g(OCaml\))p 0 TeXcolorgray 0 TeXcolorgray -188
417 a FQ(BinOp)c(\(Mult,)h(BinOp)f(\(A)n(dd,)h(Const)f(1,)g(Const)g
(2\),)h(BinOp)f(\(Div,)h(Const)f(5,)836 530 y(Const)g(1\)\))-276
654 y FU(qui)k(est)e(le)i(pa)m(rcours)g(p)m(r\351\034xe)h(gauche)f(de)g
(l'a)m(rb)m(re)h(de)f(syntaxe)g(abstraite)p 0 TeXcolorgray
0 TeXcolorgray 705 805 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 705 805 a FQ(BinOp)21 971 y
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 19.9118 9.9559 3.11034
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end

21 971 a FQ(Mult)104 945 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 104 945 a 363 971 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 363 971
a FQ(BinOp)474 945 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 474 945 a 44 1137 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 16.71814 8.35907 3.11034
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 44 1137 a FQ(A)n(dd)113
1111 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 113 1111 a 360 1137 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 360 1137 a FQ(Const)459
1111 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 459 1111 a 438 1303 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-1-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 438 1303 a FQ(1)459 1277
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-1 /N@T-0-1-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 459 1277 a 736 1137 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-1-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 736 1137 a FQ(Const)836 1111
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 836 1111 a 815 1303 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-1-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 815 1303 a FQ(2)836 1277 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-2 /N@T-0-1-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 836
1277 a 1417 971 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1417 971 a FQ(BinOp)1528 945 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1528
945 a 1113 1137 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.3576 7.1788 3.11034
} false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1113 1137 a FQ(Div)1172 1111 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1172
1111 a 1409 1137 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-2-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1409 1137 a FQ(Const)1508 1111 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1508
1111 a 1487 1303 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-2-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1487 1303 a FQ(5)1508 1277 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1508
1277 a 1785 1137 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-2-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1785 1137 a FQ(Const)1885 1111 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1885
1111 a 1864 1303 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-2-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1864 1303 a FQ(1)1885 1277 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1885
1277 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(12)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation13) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(des)g(p)m(rogrammes)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(La)30 b(s\351mantique)h(consiste)f(\340)h(donner)g(un)g(sens)f(aux)h
(p)m(rogrammes.)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -95 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -276 -85 a FU(S\351mantique)g(info)m(rmelle)p
0 TeXcolorgray 31 w(Exemples)g(:)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -182 44 a FR(\017)p 0 TeXcolorgray
0 TeXcolorgray -95 56 a FL(La)d(conditionnelle)d(est)i(de)h(la)f(fo)n
(rme)h FJ(if)f FL(exp)n(r)h FJ(then)f FL(instr)1663 68
y FI(1)1727 56 y FJ(else)i FL(instr)2049 68 y FI(2)2085
56 y FL(.)e(Si)-95 156 y(l'exp)n(ression)g(exp)n(r)h(est)f(vraie,)h
(alo)n(rs)f(l'instruction)f(instr)1614 168 y FI(1)1678
156 y FL(est)h(ex\351cut\351e)14 b(;)-95 256 y(sinon)27
b(l'instruction)f(instr)702 268 y FI(2)766 256 y FL(est)i
(ex\351cut\351e.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-182 343 a FR(\017)p 0 TeXcolorgray 0 TeXcolorgray -95
355 a FL(L'it\351ration)f(non)g(b)r(o)n(rn\351e)g(est)h(de)f(la)g(fo)n
(rme)h FJ(while)g FL(\(exp)n(ression\))-95 455 y(instruction.)f(La)g
(sous-instruction)e(est)j(ex\351cut\351e)f(de)g(mani\350re)g(r\351p)r
(\351t\351e)h(tant)-95 555 y(que)g(la)f(valeur)h(de)f(l'exp)n(ression)g
(reste)g(non)g(nulle.)g(On)h(teste)f(l'exp)n(ression)-95
654 y(avant)h(d'ex\351cuter)g(la)f(sous-instruction.)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 799 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 809 a FU(S\351mantique)k(fo)m(rmelle)p
0 TeXcolorgray 31 w(Elle)g(consiste)f(en)g(l'emploi)i(de)f(th\351o)m
(ries)-276 922 y(math\351matiques)f(ou)h(de)f(logique)i(fo)m(rmelle)f
(p)s(our)f(suppl\351er)i(les)-276 1034 y(imp)m(r\351cisions)f(ou)g(les)
f(ambigu\357t\351s)h(de)f(la)h(s\351mantique)g(info)m(rmelle)g(\(\023)g
(Si)g(\024)-8 b(,)-276 1147 y(\023)30 b(est)f(vraie)i(\024)-8
b(,)31 b(\023)g(reste)e(non)i(nulle)h(\024)e(etc.\).)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(13)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation14) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 -208 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 -198 a FU(La)30 b(s\351mantique)h
(op)s(\351rationnelle)h(est)e(une)h(s\351mantique)g(fo)m(rmelle.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 -70 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 -60 a FU(Elle)f(d\351\034nit)i(un)f
(ensemble)g(de)f(valeurs)h(puis)g(une)g(relation)g(d')p
FP(\351valuation)-276 53 y FU(entre)f(les)g(p)m(rogrammes)g(et)g(les)g
(valeurs)h(\(c.-\340-d.)g(les)g(r\351sultats\).)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 181 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 191 a FU(L'\351valuation)h(est)e(d\351\034nie)h
(inductivement)h(sur)e(la)h(syntaxe)g(abstraite)f(du)-276
304 y(langage,)g(c.-\340-d.)g(que)g(la)g(valeur)g(d'une)g(construction)
g(d\351p)s(end)g(de)g(la)f(fo)m(rme)-276 417 y(de)h(celle-ci)i(de)f(la)
f(valeur)i(de)e(ses)g(pa)m(rties.)h(En)f(d'autres)h(termes)e(enco)m
(re,)i(la)-276 530 y(valeur)g(d'un)g(AST)f(d\351p)s(end)i(de)f(la)f(fo)
m(rme)g(de)h(sa)f(racine)h(et)f(des)g(valeurs)h(de)-276
643 y(ses)e(sous-a)m(rb)m(res.)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 770 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 780 a FU(F)m(o)m(rmellement,)i(un)g(interp)m(r\350te)g(est)f
(l'implantation)i(d'une)f(s\351mantique)-276 893 y(op)s
(\351rationnelle)h(\(qui)f(est)f(alo)m(rs,)h(pa)m(r)g(construction,)g
(d\351\034nie)g(en)g(termes)e(de)-276 1006 y(la)h(s\351mantique)h(du)g
(langage)h(d'implantation\).)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(14)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation15) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(La)37 b(calculette)g(est)g(un)h(interp)m(r\350te)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (la_calculette_est_un_interprete)
cvn /DEST pdfmark end
 -458 -360 a 113 x FU(Les)30 b(valeurs)h(sont)f(les)g(entiers)g
(:)g FN(t)m(yp)s(e)d FL(value)33 b FQ(=)27 b FL(int)6
b FQ(;;)-458 -135 y FU(L'interp)m(r\350te,)31 b(c.-\340-d.)g(la)g
(fonction)g(d'\351valuation,)i(est)c(:)p 0 TeXcolorgray
0 TeXcolorgray -458 65 a FN(let)f(rec)f FQ(eval)h(e)f(=)g
FN(match)f FQ(e)i FN(with)-333 164 y FQ(Const)e(n)i FR(!)g
FQ(n)-458 264 y FM(|)81 b FQ(BinOp)27 b(\(op,e)93 276
y FI(1)129 264 y FQ(,e)189 276 y FI(2)226 264 y FQ(\))g
FR(!)h FQ(\(*)g(L'o)n(rdre)f(d'\351valuation)f(de)i(e)1359
276 y FI(1)1423 264 y FQ(et)f(e)1554 276 y FI(2)1618
264 y FQ(n'est)g(pas)h(sp)r(\351ci\034\351)f(:)h(*\))-250
364 y FN(let)f FQ(v)-88 376 y FI(1)-23 364 y FQ(=)g(eval)g(e)268
376 y FI(1)332 364 y FN(and)g FQ(v)535 376 y FI(2)599
364 y FQ(=)g(eval)h(e)891 376 y FI(2)-250 463 y FN(in)f(b)s(egin)g
(match)f FQ(op)h FN(with)-72 563 y FQ(A)n(dd)h FR(!)f
FQ(v)244 575 y FI(1)309 563 y FM(+)g FQ(v)419 575 y FI(2)483
563 y FM(|)h FQ(Sub)f FR(!)h FQ(v)864 575 y FI(1)928
563 y FM(-)f FQ(v)1038 575 y FI(2)1103 563 y FM(|)g FQ(Mult)g
FR(!)h FQ(v)1517 575 y FI(1)1581 563 y FM(*)f FQ(v)1691
575 y FI(2)1756 563 y FM(|)g FQ(Div)i FR(!)f FQ(v)2124
575 y FI(1)2188 563 y FM(/)f FQ(v)2298 575 y FI(2)-155
662 y FN(end)g FQ(;;)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(15)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation16) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Une)38 b(interp)m(r\351tation)e(simple)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Rep)m(renons)c(l'exemple)f FM("\(1+2\)*\(5/1\)")25
b FU(\(cf.)30 b(page)h(12\).)g(Soit)f FH(e)37 b FU(l'AST.)-458
-135 y(Son)31 b(\351valuation)h(\(cf.)e(page)h(15\))g(est)e(interp)m
(r\351t\351e)i(pa)m(r)g(\023)g(eval)g FH(e)37 b FU(\024)30
b(et)g(est)-458 -22 y(rep)m(r\351sent\351e)f(en)g(couleur)h(:)f(les)g
(r\351sultats)f(\(des)h(app)s(els)g(r\351cursifs\))f(sont)h(en)g
(rouge.)p 0 TeXcolorgray 0 TeXcolorgray 574 203 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } /N@root true /N@T-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 574
203 a FQ(BinOp)p 1 0 0 TeXcolorrgb 837 196 a
tx@Dict begin  tx@NodeDict begin {7.46346 0.0 33.54736 16.77368 3.11034
} false /N@fifteen 16 {InitRnode } /NodeScale {} def NewNode end  end
 837 196
a FQ(3*5)p FN(=)p FQ(15)p 0 TeXcolorgray -67 369 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 19.9118 9.9559 3.11034
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 -67
369 a FQ(Mult)15 344 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 15 344 a 222 369 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 222 369 a FQ(BinOp)p
1 0 0 TeXcolorrgb 486 378 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.83313 31.32568 15.66284
3.11034 } false /N@three 16 {InitRnode } /NodeScale {} def NewNode
end  end
 486 378 a FQ(1+2)p FN(=)p
FQ(3)p 0 TeXcolorgray 334 344 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 334 344 a -86 536 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 16.71814 8.35907 3.11034
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 -86
536 a FQ(A)n(dd)-17 510 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -17 510 a 177 536 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 177 536
a FQ(Const)p 1 0 0 TeXcolorrgb 418 561 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@one 16 {InitRnode } /NodeScale {} def NewNode end  end
 418 561 a FQ(1)p
0 TeXcolorgray 277 510 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 277 510 a 256 702 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} /N@leaf_one true /N@T-0-1-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 256 702
a FQ(1)277 676 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-1 /N@T-0-1-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 277 676 a 584 536 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-1-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 584 536 a FQ(Const)p
1 0 0 TeXcolorrgb 825 561 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@two 16 {InitRnode } /NodeScale {} def NewNode end  end
 825 561 a FQ(2)p 0 TeXcolorgray
684 510 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 684 510 a 663 702 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} /N@leaf_two true /N@T-0-1-2-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 663 702 a FQ(2)684 676
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-2 /N@T-0-1-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 684 676 a 1243 369 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1243 369 a FQ(BinOp)p 1 0 0 TeXcolorrgb
1507 378 a
tx@Dict begin  tx@NodeDict begin {7.46346 2.49939 28.54858 14.27429
3.11034 } false /N@div 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1507 378 a FQ(5/1)p FN(=)p FQ(5)p 0 TeXcolorgray
1354 344 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1354 344 a 949 536 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.3576 7.1788 3.11034
} false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 949 536 a FQ(Div)1009
510 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1009 510 a 1193 536 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-2-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1193 536 a FQ(Const)p 1 0 0
TeXcolorrgb 1434 561 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@five 16 {InitRnode } /NodeScale {} def NewNode end  end
 1434 561 a FQ(5)p 0 TeXcolorgray
1293 510 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1293 510 a 1272 702 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} /N@leaf_five true /N@T-0-2-1-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1272 702 a FQ(5)1293
676 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1293 676 a 1600 536 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-2-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1600 536 a FQ(Const)p 1 0 0
TeXcolorrgb 1840 561 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@app 16 {InitRnode } /NodeScale {} def NewNode end  end
 1840 561 a FQ(1)p 0 TeXcolorgray
1699 510 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1699 510 a 1678 702 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} /N@leaf_x true /N@T-0-2-2-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1678 702 a FQ(1)1699
676 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1699 676 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@leaf_one /N@one InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0
 3.0  0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 1910 178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@leaf_two /N@two InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0
 3.0  0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 1910
178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@leaf_five /N@five InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0
 3.0  0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 1910 178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@leaf_x /N@app InitNC { NCLine  } if end  gsave 0.8 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 1910 178 a 1910
178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@one /N@three InitNC { yB yA sub xB xA sub Atan dup 8.
 add /AngleA exch def 8.  sub 180 add /AngleB exch def 0.67  0.67 
NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1910 178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@two /N@three InitNC { /AngleA 130.  def /AngleB 340.
 def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1910 178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@five /N@div InitNC { yB yA sub xB xA sub Atan dup 8.
 add /AngleA exch def 8.  sub 180 add /AngleB exch def 0.67  0.67 
NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1910
178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@app /N@div InitNC { NCLine  } if end  gsave 0.8 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1910 178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 1.0 0 0 /N@three /N@fifteen InitNC { yB yA sub xB xA sub Atan dup
8.  add /AngleA exch def 8.  sub 180 add /AngleB exch def 0.67  0.67
 NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1910 178 a 1910
178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@div /N@fifteen InitNC { yB yA sub xB xA sub Atan dup
-5.  add /AngleA exch def -5.  sub 180 add /AngleB exch def 0.67  0.67
 NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1910 178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@root_env /N@B InitNC { NCLine  } if end  gsave 0.8 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1910 178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@B /N@BB InitNC { NCLine  } if end  gsave 0.8 SLW 0 0
1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1910
178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@B /N@BC InitNC { NCLine  } if end  gsave 0.8 SLW 0 0
1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1910 178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@root_env /N@C InitNC { yB yA sub xB xA sub Atan dup
-8.  add /AngleA exch def -8.  sub 180 add /AngleB exch def 0.67  0.67
 NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1910 178 a 1910
178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@C /N@CB InitNC { NCLine  } if end  gsave 0.8 SLW 0 0
1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1910 178 a 1910 178 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@C /N@CC InitNC { NCLine  } if end  gsave 0.8 SLW 0 0
1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1910 178 a 912 710 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@CC /N@rho InitNC { yB yA sub xB xA sub Atan dup -35.
 add /AngleA exch def -35.  sub 180 add /AngleB exch def 0.67  0.67
 NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 912
710 a -458 922 a FU(Le)h(\035ot)g(de)h(contr\364le)g(est)e(descendant)j
(\(la)f(racine)g(est)e(examin\351e)j(avant)f(les)-458
1035 y(sous-a)m(rb)m(res\))g(et)f(le)g(\035ot)g(de)h(donn\351es)h(est)d
(ascendant)j(\(eval)f(ne)g(p)m(rend)g(aucun)-458 1148
y(a)m(rgument\).)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(16)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation17) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Les)37 b(r\350gles)g(d'inf\351rence)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Une)30 b(autre)g(p)m(r\351sentation,)i(plus)f(math\351matique,)g
(consiste)f(\340)g(d\351\034nir)i(une)-458 -135 y(relation)f
FH(e)h FG(\020)25 b FH(v)40 b FU(\(dite)30 b FP(jugement)p
FU(\),)h(qui)g(se)f(lit)h(\023)f(L'exp)m(ression)i FH(e)k
FU(s'\351value)c(en)e(la)-458 -22 y(valeur)h FH(v)40
b FU(\024)-8 b(,)31 b(pa)m(r)g(des)f FP(r\350gles)h(d'inf\351rence)p
FU(.)-458 91 y(Ce)f(sont)g(des)g(implications)i(logiques)f
FH(P)874 105 y FF(1)934 91 y FS(^)20 b FH(P)1073 105
y FF(2)1132 91 y FS(^)g FE(:)15 b(:)g(:)22 b FS(^)d FH(P)1478
105 y FD(n)1545 91 y FS(\))26 b FH(C)41 b FU(p)m(r\351sent\351es)-458
204 y(sous)30 b(la)g(fo)m(rme)g(:)440 292 y FH(P)498
306 y FF(1)719 292 y FH(P)777 306 y FF(2)997 292 y FE(:)15
b(:)g(:)181 b FH(P)1341 306 y FD(n)p 440 340 943 4 v
877 430 a FH(C)-458 592 y FU(Les)30 b(p)m(rop)s(ositions)h
FH(P)234 606 y FD(i)291 592 y FU(sont)f(alo)m(rs)h(nomm\351es)f
FP(p)m(r\351misses)p FU(,)g(et)f FH(C)42 b FU(la)30 b
FP(conclusion)p FU(.)-458 705 y(Lo)m(rsqu'il)h(n'y)g(a)g(pas)f(de)h(p)m
(r\351misses,)f(alo)m(rs)h FH(C)41 b FU(est)29 b(un)i
FP(axiome)g FU(et)f(on)h(le)f(note)-458 818 y(simplement)g
FH(C)11 b FU(.)-458 931 y(Lecture)30 b(calculatoire)i(:)e(p)s(our)h
(\351valuer)g FH(C)11 b FU(,)30 b(il)h(faut)f(d'ab)s(o)m(rd)i
(\351valuer)f(les)g FH(P)2026 945 y FD(i)-458 1044 y
FU(\(l'o)m(rdre)g(n'\351tant)g(pas)f(sp)s(\351ci\034\351\).)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(17)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation18) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.18) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Les)37 b(r\350gles)g(d'inf\351rence)e(\(suite\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Les)30 b(r\350gles)g(et)g(axiomes)g(p)s(euvent)h
(contenir)h(des)e(va)m(riables)i(non)f(quanti\034\351es)h(\(pa)m(r)-458
-135 y FS(8)d FU(ou)i FS(9)p FU(\))f(explicitement.)i(Dans)e(ce)g(cas)h
(elles)f(sont)g(implicitement)h(quanti\034\351es)-458
-22 y(universellement)h(en)e(t\352te)g(de)h(r\350gle.)f(P)m(a)m(r)h
(exemple)g(l'axiome)g FH(A)p FC(\()p FH(x)8 b FC(\))31
b FU(signi\034e)p 0 0 1 TeXcolorrgb -458 91 a FS(8)p
FH(x)8 b FE(:)p 0 TeXcolorgray FH(A)p FC(\()p FH(x)g
FC(\))30 b FU(et)g(la)h(r\350gle)602 201 y FH(P)660 215
y FF(1)700 201 y FC(\()p FH(x)8 b FC(\))181 b FH(P)1059
215 y FF(2)1099 201 y FC(\()p FH(y)10 b FC(\))p 602 250
620 4 v 772 340 a FH(P)e FC(\()p FH(x)g FE(;)15 b FH(y)10
b FC(\))-458 504 y FU(signi\034e)p 0 0 1 TeXcolorrgb
31 w FS(8)p FH(x)e FE(;)15 b FH(y)10 b FE(:)p FC(\()p
0 TeXcolorgray 1 w FH(P)141 518 y FF(1)180 504 y FC(\()p
FH(x)e FC(\))37 b FS(^)d FH(P)490 518 y FF(2)530 504
y FC(\()p FH(y)10 b FC(\))26 b FS(\))f FH(P)8 b FC(\()p
FH(x)g FE(;)15 b FH(y)10 b FC(\))p 0 0 1 TeXcolorrgb(\))p
0 TeXcolorgray 1 w FU(.)-458 617 y(\311tant)30 b(donn\351)h(un)g
(ensemble)g(de)g(r\350gles)f(d'inf\351rence)i(p)s(o)m(rtant)e(sur)g
(une)h(ou)-458 730 y(plusieurs)g(relations,)g(on)f(d\351\034nit)i(alo)m
(rs)e(celles-ci)i(comme)d(\351tant)i(les)f FP(plus)h(p)s(etites)-458
843 y(relations)f FU(satisfaisant)g(les)g(r\350gles.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(18)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation19) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.19) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Plus)37 b(p)s(etites)g(relations)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -360 a
SDict begin H.S end

-458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (pair_impair) cvn /DEST pdfmark
end
 -458
-360 a 113 x FU(Soient)31 b(les)f(r\350gles)g(suivantes,)h(p)s(o)m
(rtant)g(sur)e(les)i(p)m(r\351dicats)g(P)m(air)p FC(\()p
FH(n)r FC(\))g FU(et)-458 -135 y(Impair)p FC(\()p FH(n)r
FC(\))f FU(:)-81 131 y(P)m(air)q FC(\()p FU(0)p FC(\))600
62 y FU(Impair)p FC(\()p FH(n)r FC(\))p 565 110 426 4
v 565 200 a FU(P)m(air)q FC(\()p FH(n)22 b FC(+)e FU(1)p
FC(\))1503 62 y FU(P)m(air)p FC(\()p FH(n)r FC(\))p 1381
110 514 4 v 1381 200 a FU(Impair)p FC(\()p FH(n)i FC(+)e
FU(1)p FC(\))-458 395 y FU(Il)30 b(faut)g(les)g(lire)h(comme)e(les)i
(conditions)g(:)779 594 y(P)m(air)p FC(\()p FU(0)p FC(\))352
732 y FS(8)p FH(n)r FE(:)p FC(\()p FU(Impair)p FC(\()p
FH(n)r FC(\))25 b FS(\))g FU(P)m(air)q FC(\()p FH(n)d
FC(+)e FU(1)p FC(\)\))352 870 y FS(8)p FH(n)r FE(:)p
FC(\()p FU(P)m(air)p FC(\()p FH(n)r FC(\))26 b FS(\))f
FU(Impair)p FC(\()p FH(n)d FC(+)e FU(1)p FC(\)\))-458
1207 y FU(De)30 b(nomb)m(reux)i(p)m(r\351dicats)f(satisfont)f(ces)g
(conditions,)h(p.ex.)h(P)m(air)p FC(\()p FH(n)r FC(\))e
FU(et)-458 1320 y(Impair)p FC(\()p FH(n)r FC(\))g FU(vrais)h(p)s(our)f
(tout)g FH(n)r FU(.)g(Mais)g(les)g(plus)h(p)s(etits)e(p)m(r\351dicats)i
(\(ceux)h(vrais)e(le)-458 1433 y(moins)g(souvent\))h(satisfaisant)f
(sont)g(P)m(air)p FC(\()p FH(n)r FC(\))c FG(,)e FC(\()p
FH(n)63 b FC(mo)s(d)30 b FU(2)c FC(=)f FU(0)p FC(\))30
b FU(et)-458 1546 y(Impair)p FC(\()p FH(n)r FC(\))25
b FG(,)g FC(\()p FH(n)63 b FC(mo)s(d)30 b FU(2)c FC(=)f
FU(1)p FC(\))p FU(.)p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(19)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation20) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.20) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Arb)m(res)36 b(de)i(p)m(reuve)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Un)30 b FP(a)m(rb)m(re)h(de)g(p)m(reuve)h FU(est)d(un)i(a)m(rb)m(re)
h(p)s(o)m(rtant)e(\340)g(chaque)i(n\367ud)g(la)f(conclusion)-458
-135 y(d'une)g(r\350gle)g(d'inf\351rence)h(dont)e(les)h(p)m
(r\351misses)e(co)m(rresp)s(ondent)j(aux)f(\034ls)f(de)h(ce)-458
-22 y(n\367ud.)g(Les)f(feuilles)h(de)g(l'a)m(rb)m(re)h(p)s(o)m(rtent)e
(donc)h(des)g(axiomes.)f(La)h(conclusion)h(de)-458 91
y(la)e(p)m(reuve)i(est)e(la)h(racine)g(de)f(l'a)m(rb)m(re.)i(Celle-ci)g
(est)d(rep)m(r\351sent\351e)i(en)g(bas)f(de)h(la)-458
204 y(page.)d(P)m(a)m(r)g(exemple,)h(voici)g(la)f(p)m(reuve)i(de)e
(Impair)p FC(\()p FU(3)p FC(\))g FU(avec)h(le)f(syst\350me)e(page)j(19)
f(:)779 496 y(P)m(air)p FC(\()p FU(0)p FC(\))p 735 544
354 4 v 735 634 a FU(Impair)p FC(\()p FU(1)p FC(\))p
725 683 374 4 v 779 772 a FU(P)m(air)p FC(\()p FU(2)p
FC(\))p 715 821 394 4 v 735 911 a FU(Impair)p FC(\()p
FU(3)p FC(\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(20)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation21) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.21) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)g(de)g(la)h
(calculette)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458
-360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (semantique_operationnelle) cvn
/DEST pdfmark end
 -458 -360 a 113 x FU(Une)30 b FP(m\351ta-va)m
(riable)i FU(est)e(une)h(va)m(riable)h(du)f(langage)h(de)f
(description,)g(ici)g(la)-458 -135 y(logique)g(fo)m(rmelle,)e(et)g(non)
h(pas)f(une)h(va)m(riable)h(du)f(langage)h(d\351crit)e(\(ici)h(le)f
(langage)-458 -22 y(d'exp)m(ressions)i(de)g(la)g(calculette\).)g(Ainsi)
p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 131 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
141 a FU(les)f(exp)m(ressions,)h(c.-\340-d.)g(les)g(valeurs)g(du)g(t)m
(yp)s(e)f FP(exp)m(r)p FU(,)i(sont)e(not\351es)g FH(e)21
b FU(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
269 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 279
a FU(les)30 b(valeurs)h(sont)f(not\351es)g FH(v)40 b
FU(\()p FH(v)35 b FS(2)25 b FB(Z)p FU(\))15 b(;)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 407 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 417 a FU(les)30 b(entiers)g(math\351matiques)g
(asso)s(ci\351s)g(\340)g(leur)h(rep)m(r\351sentation)g(OCaml)f
FH(n)-276 530 y FU(sont)f(not\351s)50 b FC(_)-44 b FH(n)31
b FU(\()19 b FC(_)-44 b FH(n)27 b FS(2)e FB(Z)p FU(\).)p
0 TeXcolorgray -458 692 a(Donc)31 b FH(e)6 b FU(,)30
b FH(v)10 b FU(,)30 b FH(n)i FU(et)49 b FC(_)-44 b FH(n)32
b FU(sont)e(des)g(m\351ta-va)m(riables.)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 845 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 855 a FU(Les)f(jugements)h(sont)g
(de)h(la)g(fo)m(rme)e FH(e)j FG(\020)25 b FH(v)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(21)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation22) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.22) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)g(de)g(la)h
(calculette)f(\(suite)g(et)h(\034n\))p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -264 1 a FU(Const)24 b
FH(n)j FG(\020)44 b FC(_)-44 b FH(n)110 b FQ(const)968
-69 y FH(e)1008 -55 y FF(1)1073 -69 y FG(\020)25 b FH(v)1231
-55 y FF(1)1451 -69 y FH(e)1491 -55 y FF(2)1556 -69 y
FG(\020)h FH(v)1715 -55 y FF(2)p 795 -20 1133 4 v 795
70 a FU(BinOp)16 b(\(A)m(dd)q FE(;)f FH(e)1316 84 y FF(1)1357
70 y FE(;)g FH(e)1437 84 y FF(2)1477 70 y FU(\))25 b
FG(\020)g FH(v)1695 84 y FF(1)1755 70 y FC(+)20 b FH(v)1888
84 y FF(2)1962 1 y FQ(add)447 291 y FH(e)487 305 y FF(1)553
291 y FG(\020)25 b FH(v)711 305 y FF(1)931 291 y FH(e)971
305 y FF(2)1036 291 y FG(\020)g FH(v)1194 305 y FF(2)p
278 339 1126 4 v 278 429 a FU(BinOp)16 b(\(Sub)q FE(;)f
FH(e)792 443 y FF(1)832 429 y FE(;)g FH(e)912 443 y FF(2)953
429 y FU(\))25 b FG(\020)g FH(v)1171 443 y FF(1)1231
429 y FS(\000)20 b FH(v)1364 443 y FF(2)1438 360 y FQ(sub)-259
651 y FH(e)-219 665 y FF(1)-154 651 y FG(\020)25 b FH(v)4
665 y FF(1)224 651 y FH(e)264 665 y FF(2)329 651 y FG(\020)g
FH(v)487 665 y FF(2)p -447 699 1161 4 v -447 789 a FU(BinOp)16
b(\(Mult)p FE(;)f FH(e)103 803 y FF(1)143 789 y FE(;)g
FH(e)223 803 y FF(2)264 789 y FU(\))25 b FG(\020)g FH(v)482
803 y FF(1)542 789 y FS(\002)20 b FH(v)675 803 y FF(2)749
720 y FQ(mult)1228 651 y FH(e)1268 665 y FF(1)1333 651
y FG(\020)25 b FH(v)1491 665 y FF(1)1711 651 y FH(e)1751
665 y FF(2)1817 651 y FG(\020)g FH(v)1975 665 y FF(2)p
1099 699 1045 4 v 1099 789 a FU(BinOp)16 b(\(Div)q FE(;)f
FH(e)1598 803 y FF(1)1638 789 y FE(;)g FH(e)1718 803
y FF(2)1759 789 y FU(\))25 b FG(\020)g FH(v)1977 803
y FF(1)2016 789 y FE(=)p FH(v)2103 803 y FF(2)2178 720
y FQ(div)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(22)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 23 23
TeXDict begin 23 22 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation23) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.23) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Implantation)37 b(des)g(s\351mantiques)g(op)s
(\351rationnelles)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(La)30 b(fa\347on)h(syst\351matique)f(de)h
(p)m(rogrammer)f(une)h(s\351mantique)g(op)s(\351rationnelle)h(en)-458
-135 y(OCaml)d(consiste)i(\340)f(\351crire)g(un)h(motif)f(de)g
(\034ltre)g(pa)m(r)h(r\350gle)g(d'inf\351rence,)h(comme)-458
-22 y(le)e(sugg\350re)447 175 y FH(e)487 189 y FF(1)553
175 y FG(\020)25 b FH(v)711 189 y FF(1)931 175 y FH(e)971
189 y FF(2)1036 175 y FG(\020)g FH(v)1194 189 y FF(2)p
278 223 1126 4 v 278 313 a FU(BinOp)16 b(\(Sub)q FE(;)f
FH(e)792 327 y FF(1)832 313 y FE(;)g FH(e)912 327 y FF(2)953
313 y FU(\))25 b FG(\020)g FH(v)1171 327 y FF(1)1231
313 y FS(\000)20 b FH(v)1364 327 y FF(2)1438 244 y FQ(sub)-458
517 y FU(qui)30 b(devient)121 b FM(|)26 b FQ(BinOp)h(\(Sub,e)616
529 y FI(1)652 517 y FQ(,e)712 529 y FI(2)749 517 y FQ(\))g
FR(!)f FN(let)h FQ(v)1079 529 y FI(1)1142 517 y FQ(=)g(eval)f(e)1432
529 y FI(1)1495 517 y FN(and)g FQ(v)1697 529 y FI(2)1760
517 y FQ(=)g(eval)h(e)2050 529 y FI(2)2113 517 y FN(in)f
FQ(v)2245 529 y FI(1)-458 630 y FM(-)h FQ(v)-349 642
y FI(2)-458 743 y FU(Note)j(:)g(page)i(15)e(nous)h(avons)g(regroup)s
(\351)f(toutes)g(les)g(r\350gles)g(avec)h(BinOp)h(en)-458
856 y(conclusion)g(p)s(our)e(ne)h(fo)m(rmer)f(qu'un)h(seul)g(motif.)
-458 969 y(Il)f(faut)g(se)g(souvenir)h(que)g(l'\351valuation)i(des)d
(\034ltres)g(OCaml)g(est)f(sp)s(\351ci\034\351e)i(\(c'est)-458
1082 y(l'o)m(rdre)g(d'\351criture)g(des)f(motifs\))f(alo)m(rs)i(qu'il)h
(n'y)f(a)f(pas)g(de)h(telle)g(notion)g(dans)g(la)-458
1195 y(s\351mantique)g(op)s(\351rationnelle)h(:)e FP(les)g(r\350gles)h
(ne)f(sont)g(pas)h(o)m(rdonn\351es)p FU(.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(23)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation24) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.24) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(D\351terminisme)p 0.2 0.2 0.7 TeXcolorrgb 0
TeXcolorgray 0 TeXcolorgray -458 -247 a FU(Il)30 b(est)f(imp)s(o)m
(rtant)i(que)g(les)f(m\352mes)f(donn\351es)i(conduisent)h(toujours)e
(au)h(m\352me)-458 -135 y(r\351sultat.)f(Cette)f(p)m(rop)m(ri\351t\351)
j(s'app)s(elle)f(le)g FP(d\351terminisme)p FU(.)f(F)m(o)m(rmellement,)i
(une)-458 -22 y(s\351mantique)f(op)s(\351rationnelle)h(d\351terministe)
e FH(e)i FG(\020)25 b FH(v)40 b FU(v\351ri\034e)31 b(la)g(p)m(rop)m
(ri\351t\351)p 0 TeXcolorgray 0 TeXcolorgray 290 191
a FP(Si)g FH(e)h FG(\020)25 b FH(v)40 b FP(et)29 b FH(e)j
FG(\020)25 b FH(v)1004 158 y FA(0)1058 191 y FP(alo)m(rs)30
b FH(v)35 b FC(=)25 b FH(v)1485 158 y FA(0)1508 191 y
FP(.)-458 403 y FU(En)30 b(d'autres)h(termes,)e(l'\351valuation)k(est)c
(alo)m(rs)i(une)g FP(fonction)g(pa)m(rtielle)h FU(\(des)-458
516 y(exp)m(ressions)f(vers)f(les)g(valeurs\).)h(Autrement)f(dit)h
(enco)m(re,)g(les)f(m\352mes)f(donn\351es)-458 629 y(conduisent)j
(toujours)e(aux)h(m\352mes)e(r\351sultats.)-458 742 y(P)m(our)h
(d\351montrer)g(cette)g(p)m(rop)m(ri\351t\351,)i(on)f(raisonne)g(pa)m
(r)g(r\351currence)g(structurelle)-458 855 y(sur)f(les)g(a)m(rb)m(res)h
(de)g(p)m(reuve)g(de)g FH(e)h FG(\020)25 b FH(v)40 b
FU(et)30 b FH(e)i FG(\020)25 b FH(v)1180 822 y FA(0)1203
855 y FU(,)30 b(ainsi)h(que)g(pa)m(r)g(cas)f(sur)g(la)-458
968 y(fo)m(rme)f(de)i FH(e)6 b FU(.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(24)k(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation25) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.25) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Ajout)38 b(des)f(va)m(riables)g(et)h(de)f(la)h(liaison)g(lo)s
(cale)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -261 a FU(Dans)30 b(le)h(but)f(de)h(simpli\034er)g(l'\351criture)g
(des)f(exp)m(ressions,)h(on)g(souhaite)g(nommer)-458
-161 y(des)f(sous-exp)m(ressions,)h(comme)f(dans)h(l'extrait)f(de)h
(syntaxe)g(concr\350te)p 0 TeXcolorgray 0 TeXcolorgray
258 13 a FM(let)42 b(x)i(=)f(1+2*7)e(in)i(9*x*x)e(-)j(x)f(+)g(2)-458
201 y FU(P)m(our)30 b(cela)h(il)g(faut)f(ajouter)p 0
TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
354 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 364
a FU(les)g FP(identi\034cateurs)h FU(\()p FK(x)p FU(\))p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 491 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 501 a FU(et)e(la)i
FP(liaison)h(lo)s(cale)f FU(\()p FK(let)47 b(...)g(in)g(...)p
FU(\))p 0 TeXcolorgray -458 664 a(\340)30 b(la)h(syntaxe)g(concr\350te)
f(des)h(exp)m(ressions.)-458 777 y FO(Rema)m(rque)121
b FU(On)30 b(emploie)h(le)g(terme)e(de)i FP(va)m(riable)h
FU(p)s(our)f(quali\034er)h(les)-458 890 y(identi\034cateurs)f(au)g
(niveau)h(de)f(la)g(syntaxe)g(abstraite)f(p)s(our)g(des)g(raisons)-458
1003 y(histo)m(riques)h(\(ca)m(r)g(rien)g(de)f(va)m(rie)i(ici\),)f
(mais)f FP(une)h(va)m(riable)i(est)c(un)i(nom)p FU(,)f(pas)h(un)-458
1116 y(objet.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(25)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 26 26
TeXDict begin 26 25 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation26) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.26) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Ajout)38 b(des)f(va)m(riables)g(et)h(de)f(la)h(liaison)g(lo)s
(cale)f(\(suite\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458
-360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (let_in_et_var) cvn /DEST pdfmark
end
 -458 -360 a 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 -221 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb -276 -211 a FU(Syntaxe)31
b(concr\350te)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-276 -86 a FM(Expression)39 b(::=)j(...)86 b(|)43 b(ident)608
b(/*)43 b(identifier)c(*/)290 13 y(|)k("let")f(ident)f("=")h
(Expression)e("in")i(Expression)-276 209 y FU(Il)30 b(faudrait)h
(d\351\034nir)g(l'ensemble)g(de)g(lex\350mes)f(d\351not\351)h(pa)m(r)i
FK(ident)p FU(.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 374 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 384 a FU(Syntaxe)e(abstraite)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -276 508 a FN(t)m(yp)s(e)26
b FL(exp)n(r)37 b FQ(=)27 b FM(...)g(|)g FQ(V)n(a)n(r)i
FN(of)k FL(string)119 b FQ(\(*)28 b(On)f(pa)n(rle)h(plut\364t)e(de)i
FL(va)n(riable)f FQ(ici.)g(*\))347 608 y FM(|)g FQ(Let)g
FN(of)34 b FL(string)i FM(*)27 b FL(exp)n(r)37 b FM(*)27
b FL(exp)n(r)9 b FQ(;;)-276 795 y FU(Les)29 b(va)m(riables)k(sont)c
(not\351es)i FH(x)8 b FU(.)30 b(Il)g(ne)h(faut)f(pas)g(confondre)i
FH(x)-276 908 y FU(\(m\351ta-va)m(riable)g(d\351notant)f(n'imp)s(o)m
(rte)g(quelle)g(va)m(riable\),)i(V)m(a)m(r)f("x")f(\(l'AST)-276
1021 y(d'une)g(va)m(riable)i(pa)m(rticuli\350re)f(du)f(langage)h
(d\351crit\))e(et)g("x")h(ou)g FK(x)f FU(\(co)s(de)-276
1134 y(source)g(de)h(la)f(va)m(riable)j(p)m(r\351c\351dente\).)p
0 TeXcolorgray -458 1347 a FO(Quelle)f(s\351mantique)i(op)s
(\351rationnelle)e(p)s(our)i(ces)f(exp)m(ressions)h(avec)-458
1459 y(va)m(riables)16 b(?)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(26)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 27 27
TeXDict begin 27 26 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation27) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.27) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Environnements)p 0.2 0.2 0.7 TeXcolorrgb 0
TeXcolorgray 0 TeXcolorgray -458 -247 a FU(Un)30 b FP(environnement)i
FU(asso)s(cie)e(des)g(va)m(riables)i(\340)f(des)f(valeurs)h(\(pa)m(r)g
(construction,)-458 -135 y FP(leur)f FU(valeur\).)i(Une)e(telle)h(asso)
s(ciation)g(est)e(une)i FP(liaison)p FU(.)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 18 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 28 a FU(Une)f(liaison)h(est)f(une)h
(paire)g FC(\()p FH(x)8 b FE(;)15 b FH(v)10 b FC(\))p
FU(.)31 b(P)m(a)m(r)g(abus)g(de)g(langage)g(on)g(la)g(notera)-276
141 y FH(x)i FS(7!)25 b FH(v)10 b FU(,)30 b(comme)g(un)h(environnement)
h(au)e(domaine)i(r\351duit)f(\340)f(une)h(seule)-276
254 y(va)m(riable.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 382 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
392 a FU(Un)f(environnement)i(est)d(une)i(fonction)g(pa)m(rtielle)h
(des)e(va)m(riables)j(vers)d(les)-276 505 y(valeurs.)h(On)f(p)s(eut)g
(implanter)h(l'environnement)h(vide)g(en)e(OCaml)g(pa)m(r)h(:)142
618 y FN(let)d FQ(empt)n(y_env)g(=)f FN(fun)g FQ(x)g
FR(!)h FQ(raise)g(Not_found)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 745 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 755 a FU(L'ajout)i(d'une)i(liaison)f FH(x)j FS(7!)25
b FH(v)40 b FU(\340)30 b(un)h(environnement)h FE(\032)e
FU(se)g(note)-276 868 y FE(\032)18 b FS(\010)g FC(\()p
FH(x)34 b FS(7!)25 b FH(v)10 b FC(\))p FU(.)30 b(Si)g
FH(x)37 b FU(\351tait)29 b(d\351j\340)h(li\351e)g(dans)g
FE(\032)p FU(,)g(c.-\340-d.)g(si)g FE(\032)p FC(\()p
FH(x)8 b FC(\))30 b FU(\351tait)f(d\351\034nie,)-276
981 y(alo)m(rs)h(cette)g(nouvelle)j(liaison)e(cache)g(l'ancienne,)i
(c.-\340-d.)-276 1094 y FC(\()p FE(\032)20 b FS(\010)g
FH(x)34 b FS(7!)25 b FH(v)10 b FC(\)\()p FH(x)e FC(\))26
b(=)f FH(v)40 b FU(m\352me)29 b(si)h FE(\032)p FC(\()p
FH(x)8 b FC(\))27 b FS(6)p FC(=)e FH(v)10 b FU(.)29 b(Implantation)j(:)
-121 1207 y FN(let)c FQ(extend)f(env)i(\(x,v)q(\))g(=)e
FN(fun)g FQ(y)i FR(!)f FN(if)34 b FQ(x)28 b(=)f(y)i FN(then)e
FQ(v)i FN(else)g FQ(env)f(y)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 1335 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 1345 a FU(Les)h(jugements)h(sont)g(maintenant)h(de)g(la)g(fo)m
(rme)f FE(\032)25 b FS(`)g FH(e)31 b FG(\020)26 b FH(v)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(27)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 28 28
TeXDict begin 28 27 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation28) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.28) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)g(\351tendue)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (semantique_operationnelle_etendue)
cvn /DEST pdfmark end
 -458 -360 a -131 1 a FE(\032)25 b FS(`)g FU(Const)g
FH(n)h FG(\020)44 b FC(_)-43 b FH(n)109 b FQ(const)1256
-69 y FH(x)34 b FS(2)24 b Fz(dom)q FC(\()p FE(\032)p
FC(\))p 1148 -20 667 4 v 1148 70 a FE(\032)h FS(`)g FU(V)m(a)m(r)h
FH(x)33 b FG(\020)25 b FE(\032)p FC(\()p FH(x)8 b FC(\))1850
1 y FQ(va)n(r)290 291 y FE(\032)26 b FS(`)e FH(e)483
305 y FF(1)549 291 y FG(\020)h FH(v)707 305 y FF(1)927
291 y FE(\032)g FS(`)g FH(e)1120 305 y FF(2)1185 291
y FG(\020)g FH(v)1343 305 y FF(2)p 194 339 1286 4 v 194
429 a FE(\032)g FS(`)g FU(BinOp)16 b(\(A)m(dd)q FE(;)f
FH(e)868 443 y FF(1)908 429 y FE(;)g FH(e)988 443 y FF(2)1029
429 y FU(\))25 b FG(\020)g FH(v)1247 443 y FF(1)1307
429 y FC(+)20 b FH(v)1440 443 y FF(2)1514 360 y FQ(add)294
651 y FE(\032)26 b FS(`)e FH(e)487 665 y FF(1)553 651
y FG(\020)h FH(v)711 665 y FF(1)931 651 y FE(\032)g FS(`)g
FH(e)1124 665 y FF(2)1189 651 y FG(\020)g FH(v)1347 665
y FF(2)p 201 699 1279 4 v 201 789 a FE(\032)h FS(`)e
FU(BinOp)16 b(\()q(Sub)q FE(;)f FH(e)869 803 y FF(1)909
789 y FE(;)g FH(e)989 803 y FF(2)1029 789 y FU(\))25
b FG(\020)h FH(v)1248 803 y FF(1)1307 789 y FS(\000)20
b FH(v)1440 803 y FF(2)1515 720 y FQ(sub)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(28)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 29 29
TeXDict begin 29 28 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation29) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.29) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)g(\351tendue)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
274 -69 a FE(\032)25 b FS(`)g FH(e)467 -55 y FF(1)532
-69 y FG(\020)g FH(v)690 -55 y FF(1)910 -69 y FE(\032)g
FS(`)g FH(e)1103 -55 y FF(2)1168 -69 y FG(\020)h FH(v)1327
-55 y FF(2)p 163 -20 1314 4 v 163 70 a FE(\032)f FS(`)g
FU(BinOp)16 b(\(Mult)p FE(;)f FH(e)866 84 y FF(1)906
70 y FE(;)g FH(e)986 84 y FF(2)1026 70 y FU(\))26 b FG(\020)f
FH(v)1245 84 y FF(1)1305 70 y FS(\002)19 b FH(v)1437
84 y FF(2)1512 1 y FQ(mult)302 291 y FE(\032)25 b FS(`)g
FH(e)495 305 y FF(1)560 291 y FG(\020)g FH(v)718 305
y FF(1)938 291 y FE(\032)h FS(`)f FH(e)1132 305 y FF(2)1197
291 y FG(\020)g FH(v)1355 305 y FF(2)p 250 339 1198 4
v 250 429 a FE(\032)g FS(`)g FU(BinOp)16 b(\(Div)q FE(;)f
FH(e)902 443 y FF(1)942 429 y FE(;)g FH(e)1022 443 y
FF(2)1062 429 y FU(\))25 b FG(\020)h FH(v)1281 443 y
FF(1)1320 429 y FE(=)p FH(v)1407 443 y FF(2)1482 360
y FQ(div)118 651 y FE(\032)f FS(`)g FH(e)311 665 y FF(1)376
651 y FG(\020)g FH(v)534 665 y FF(1)754 651 y FE(\032)20
b FS(\010)g FH(x)34 b FS(7!)25 b FH(v)1146 665 y FF(1)1210
651 y FS(`)g FH(e)1331 665 y FF(2)1396 651 y FG(\020)h
FH(v)1555 665 y FF(2)p 118 699 1477 4 v 419 789 a FE(\032)f
FS(`)g FU(Let)15 b(\()p FH(x)8 b FE(;)15 b FH(e)874 803
y FF(1)915 789 y FE(;)g FH(e)995 803 y FF(2)1035 789
y FU(\))25 b FG(\020)g FH(v)1253 803 y FF(2)1629 720
y FQ(let)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(29)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 30 30
TeXDict begin 30 29 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation30) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.30) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Interp)m(r\351tation)36 b(\351tendue)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -360 a
SDict begin H.S end

-458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (interpretation_etendue) cvn /DEST
pdfmark end
 -458
-360 a 0 TeXcolorgray 0 TeXcolorgray 199 x FN(let)28
b(rec)f FQ(eval)h FN(env)g FQ(e)g(=)f FN(match)f FQ(e)h
FN(with)-333 -61 y FQ(Const)f(n)i FR(!)g FQ(n)-458 38
y FM(|)81 b FQ(BinOp)27 b(\(op,e)93 50 y FI(1)129 38
y FQ(,e)189 50 y FI(2)226 38 y FQ(\))g FR(!)-250 138
y FN(let)g FQ(v)-88 150 y FI(1)-23 138 y FQ(=)g(eval)g
FN(env)i FQ(e)428 150 y FI(1)492 138 y FN(and)d FQ(v)694
150 y FI(2)758 138 y FQ(=)i(eval)f FN(env)i FQ(e)1210
150 y FI(2)-250 237 y FN(in)e(b)s(egin)g(match)f FQ(op)h
FN(with)-72 337 y FQ(A)n(dd)h FR(!)f FQ(v)244 349 y FI(1)309
337 y FM(+)g FQ(v)419 349 y FI(2)483 337 y FM(|)h FQ(Sub)f
FR(!)h FQ(v)864 349 y FI(1)928 337 y FM(-)f FQ(v)1038
349 y FI(2)1103 337 y FM(|)g FQ(Mult)g FR(!)h FQ(v)1517
349 y FI(1)1581 337 y FM(*)f FQ(v)1691 349 y FI(2)1756
337 y FM(|)g FQ(Div)i FR(!)f FQ(v)2124 349 y FI(1)2188
337 y FM(/)f FQ(v)2298 349 y FI(2)-155 437 y FN(end)-458
536 y FM(|)81 b FN(V)m(a)m(r)32 b(x)d FR(!)i FN(env)g(x)-458
636 y FM(|)81 b FN(Let)30 b(\(x,e)-34 648 y FI(1)2 636
y FN(,e)69 648 y FI(2)106 636 y FN(\))g FR(!)h FN(let)f(v)456
648 y FI(1)523 636 y FN(=)g(eval)h(env)g(e)1008 648 y
FI(1)1075 636 y FN(in)f(eval)g(\(extend)f(env)j(\(x,v)1980
648 y FI(1)2015 636 y FN(\)\))d(e)2158 648 y FI(2)2195
636 y FQ(;;)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(30)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 31 31
TeXDict begin 31 30 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation31) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.31) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Interp)m(r\351tation)36 b(\351tendue)g(\(suite\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-198 a FU(Notez)30 b(le)h(co)s(dage)g(de)f FE(\032)21
b FS(\010)f FH(x)33 b FS(7!)25 b FH(v)867 -184 y FF(1)937
-198 y FU(pa)m(r)32 b FQ(extend)27 b(env)i(\(x,v)1620
-186 y FI(1)1658 -198 y FQ(\))p FU(.)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 -70 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 -60 a FU(L'\351valuation)j(de)f(l'exp)m(ression)h
(initiale)g(doit)e(se)g(faire)g(dans)h(un)-276 53 y(environnement)h
(vide.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
181 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 191
a FU(Les)d(valeurs)i(dans)g(la)g(s\351mantique)g(sont)f(dans)h
FB(Z)f FU(alo)m(rs)g(que)h(dans)-276 304 y(l'interp)m(r\350te)g(elles)g
(sont)e(de)i(t)m(yp)s(e)g FP(int)p FU(,)f FP(donc)i(p)s(euvent)f
(d\351b)s(o)m(rder)p FU(.)g(On)-276 417 y(n'ab)s(o)m(rdera)g(pas)g(ce)f
(p)m(robl\350me)i(ici.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(31)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 32 32
TeXDict begin 32 31 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation32) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.32) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Un)38 b(exemple)g(simple)f(d'\351valuation)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (une_interpretation_moins_simple)
cvn /DEST pdfmark end
 -458 -360 a 79 x FU(Rep)m(renons)32 b(l'exemple)f(page)g(12,)g
(en)g(intro)s(duisant)g(une)g(va)m(riable)h(qui)f(lie)-458
-189 y(l'exp)m(ression)h(:)e FM("let)42 b(x)h(=)g(1)g(in)g
(\(1+2\)*\(5/x\)")p FU(.)25 b(Soit)31 b FH(e)36 b FU(l'a)m(rb)m(re)c
(de)f(syntaxe)-458 -97 y(abstraite)f(asso)s(ci\351.)g(Son)h
(\351valuation)h(est)e(interp)m(r\351t\351e)h(pa)m(r)g(\023)f(eval)h
(empt)m(y_env)-458 -3 y FH(e)36 b FU(\024)-8 b(.)31 b(D\351notons)g
(empt)m(y_env)i(pa)m(r)p 0 0 1 TeXcolorrgb 31 w FB(?)p
0 TeXcolorgray 30 w FU(et)d FQ(extend)d(empt)n(y_env)h(\("x",1\))i
FU(pa)m(r)p 0 0 1 TeXcolorrgb 31 w(env)p 0 TeXcolorgray
1 w(.)-458 93 y(Les)g(r\351sultats)f(sont)h(en)h(rouge.)p
0 TeXcolorgray 0 TeXcolorgray 30 256 a
tx@Dict begin  tx@NodeDict begin {4.65332 0.65332 6.22224 3.11111 2.56767
} false /N@empty_env 16 {InitRnode } /NodeScale {} def NewNode end
 end
 30 256 a Fy(?)123
267 y
tx@Dict begin  tx@NodeDict begin {5.5542 0.0 11.46942 5.73471 2.48827
} false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 123 267 a FF(Let)p 1 0 0 TeXcolorrgb 260 254 a
tx@Dict begin  tx@NodeDict begin {5.23483 0.0 8.49792 4.24896 2.48827
} false /N@top_fifteen 16 {InitRnode } /NodeScale {} def NewNode end
 end

260 254 a FF(15)p 0 TeXcolorgray -438 433 a
tx@Dict begin  tx@NodeDict begin {5.69305 0.0 12.41364 6.20682 2.48827
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 -438 433
a FF("x")-386 413 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -386 413 a -285 422 a
tx@Dict begin  tx@NodeDict begin {4.65332 0.65332 6.22224 3.11111 2.56767
} false /N@empty_env_down 16 {InitRnode } /NodeScale {} def NewNode
end  end
 -285 422 a
Fy(?)-192 433 y
tx@Dict begin  tx@NodeDict begin {5.5542 0.0 20.39224 10.19612 2.48827
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -192 433 a FF(Const)p 1 0 0 TeXcolorrgb
19 420 a
tx@Dict begin  tx@NodeDict begin {5.23483 0.0 4.24896 2.12448 2.48827
} false /N@x_val_up 16 {InitRnode } /NodeScale {} def NewNode end 
end
 19 420 a FF(1)p 0 TeXcolorgray -107 413 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -107
413 a -125 599 a
tx@Dict begin  tx@NodeDict begin {5.23483 0.0 4.24896 2.12448 2.48827
} /N@x_val true /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 -125 599 a FF(1)-107 579 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -107 579
a 484 422 a
tx@Dict begin  tx@NodeDict begin {3.66812 0.0 13.10504 6.55252 2.56767
} false /N@subexpr_env 16 {InitRnode } /NodeScale {} def NewNode end
 end
 484 422 a Fx(env)634 433 y
tx@Dict begin  tx@NodeDict begin {5.5542 1.55518 22.74445 11.37222
2.48827 } /N@subexpr true /N@T-0-2 16 {InitRnode } /NodeScale {} def
NewNode end  end
 634 433 a FF(BinOp)p
1 0 0 TeXcolorrgb 864 420 a
tx@Dict begin  tx@NodeDict begin {5.97076 0.0 28.30911 14.15456 2.48827
} false /N@fifteen 16 {InitRnode } /NodeScale {} def NewNode end  end
 864 420 a FF(3*5)p Fx(=)p
FF(15)p 0 TeXcolorgray 728 413 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 728 413 a -40 599 a
tx@Dict begin  tx@NodeDict begin {5.69305 0.0 16.89865 8.44933 2.48827
} false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end

-40 599 a FF(Mult)30 579 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 30 579 a 150 604 a
tx@Dict begin  tx@NodeDict begin {3.66812 0.0 13.10504 6.55252 2.56767
} false /N@B 16 {InitRnode } /NodeScale {} def NewNode end  end
 150 604
a Fx(env)301 599 y
tx@Dict begin  tx@NodeDict begin {5.5542 1.55518 22.74445 11.37222
2.48827 } false /N@T-0-2-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 301 599 a FF(BinOp)p 1 0 0 TeXcolorrgb
531 603 a
tx@Dict begin  tx@NodeDict begin {5.23483 0.83313 26.42068 13.21034
2.48827 } false /N@three 16 {InitRnode } /NodeScale {} def NewNode
end  end
 531 603 a FF(1+2)p Fx(=)p FF(3)p 0 TeXcolorgray
395 579 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 395 579 a -59 765 a
tx@Dict begin  tx@NodeDict begin {5.69305 0.0 14.20486 7.10243 2.48827
} false /N@T-0-2-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 -59 765 a FF(A)n(dd)0 745
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 0 745 a 109 787 a
tx@Dict begin  tx@NodeDict begin {3.66812 0.0 13.10504 6.55252 2.56767
} false /N@BB 16 {InitRnode } /NodeScale {} def NewNode end  end
 109 787 a Fx(env)259 765 y
tx@Dict begin  tx@NodeDict begin {5.5542 0.0 20.39224 10.19612 2.48827
} false /N@T-0-2-1-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 259 765
a FF(Const)p 1 0 0 TeXcolorrgb 470 786 a
tx@Dict begin  tx@NodeDict begin {5.23483 0.0 4.24896 2.12448 2.48827
} false /N@one 16 {InitRnode } /NodeScale {} def NewNode end  end
 470 786 a FF(1)p
0 TeXcolorgray 344 745 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 344 745 a 326 932 a
tx@Dict begin  tx@NodeDict begin {5.23483 0.0 4.24896 2.12448 2.48827
} /N@leaf_one true /N@T-0-2-1-1-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 326 932
a FF(1)344 911 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1 /N@T-0-2-1-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 344 911 a 555 787 a
tx@Dict begin  tx@NodeDict begin {3.66812 0.0 13.10504 6.55252 2.56767
} false /N@BC 16 {InitRnode } /NodeScale {} def NewNode end  end
 555 787 a Fx(env)706
765 y
tx@Dict begin  tx@NodeDict begin {5.5542 0.0 20.39224 10.19612 2.48827
} false /N@T-0-2-1-2 16 {InitRnode } /NodeScale {} def NewNode end
 end
 706 765 a FF(Const)p 1 0 0 TeXcolorrgb 916 786
a
tx@Dict begin  tx@NodeDict begin {5.23483 0.0 4.24896 2.12448 2.48827
} false /N@two 16 {InitRnode } /NodeScale {} def NewNode end  end
 916 786 a FF(2)p 0 TeXcolorgray 790 745 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 790 745 a
772 932 a
tx@Dict begin  tx@NodeDict begin {5.23483 0.0 4.24896 2.12448 2.48827
} /N@leaf_two true /N@T-0-2-1-2-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 772 932 a FF(2)790 911 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-2 /N@T-0-2-1-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 790 911 a 1181 621
a
tx@Dict begin  tx@NodeDict begin {3.66812 0.0 13.10504 6.55252 2.56767
} false /N@C 16 {InitRnode } /NodeScale {} def NewNode end  end
 1181 621 a Fx(env)1332 599 y
tx@Dict begin  tx@NodeDict begin {5.5542 1.55518 22.74445 11.37222
2.48827 } false /N@T-0-2-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1332 599 a FF(BinOp)p
1 0 0 TeXcolorrgb 1562 603 a
tx@Dict begin  tx@NodeDict begin {5.97076 1.99951 24.06015 12.03008
2.48827 } false /N@div 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1562 603 a FF(5/1)p Fx(=)p
FF(5)p 0 TeXcolorgray 1426 579 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1426 579 a 1001 765
a
tx@Dict begin  tx@NodeDict begin {5.5542 0.0 12.19841 6.0992 2.48827
} false /N@T-0-2-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1001 765 a FF(Div)1052 745 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1052 745 a 1152 787 a
tx@Dict begin  tx@NodeDict begin {3.66812 0.0 13.10504 6.55252 2.56767
} false /N@CB 16 {InitRnode } /NodeScale {} def NewNode end  end

1152 787 a Fx(env)1303 765 y
tx@Dict begin  tx@NodeDict begin {5.5542 0.0 20.39224 10.19612 2.48827
} false /N@T-0-2-2-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1303 765 a FF(Const)p 1 0 0
TeXcolorrgb 1514 786 a
tx@Dict begin  tx@NodeDict begin {5.23483 0.0 4.24896 2.12448 2.48827
} false /N@five 16 {InitRnode } /NodeScale {} def NewNode end  end
 1514 786 a FF(5)p 0 TeXcolorgray
1387 745 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1387 745 a 1369 932 a
tx@Dict begin  tx@NodeDict begin {5.23483 0.0 4.24896 2.12448 2.48827
} /N@leaf_five true /N@T-0-2-2-1-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1369 932 a FF(5)1387
911 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-1 /N@T-0-2-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1387 911 a 1599 787 a
tx@Dict begin  tx@NodeDict begin {3.66812 0.0 13.10504 6.55252 2.56767
} false /N@CC 16 {InitRnode } /NodeScale {} def NewNode end  end
 1599 787 a Fx(env)1749 765
y
tx@Dict begin  tx@NodeDict begin {5.5542 0.0 12.29561 6.1478 2.48827
} false /N@T-0-2-2-2 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1749 765 a FF(V)n(a)n(r)p 1 0 0 TeXcolorrgb 1893 786
a
tx@Dict begin  tx@NodeDict begin {3.52692 0.0 12.19841 6.0992 2.48827
} false /N@rho 16 {InitRnode } /NodeScale {} def NewNode end  end
 1893 786 a FF(env)2017 786 y
tx@Dict begin  tx@NodeDict begin {5.69305 0.0 29.39218 14.69609 2.48827
} false /N@app 16 {InitRnode } /NodeScale {} def NewNode end  end
 2017 786 a FF("x")24 b
Fx(=)f FF(1)p 0 TeXcolorgray 1800 745 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1800 745 a 1748
932 a
tx@Dict begin  tx@NodeDict begin {5.69305 0.0 12.41364 6.20682 2.48827
} /N@leaf_x true /N@T-0-2-2-2-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1748 932 a FF("x")1800 911 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2 /N@T-0-2-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1800 911 a 912 940
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@x_val_up /N@subexpr_env InitNC { yB yA sub xB xA sub
Atan dup 20.  add /AngleA exch def 20.  sub 180 add /AngleB exch def
0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore  grestore
end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@empty_env /N@empty_env_down InitNC { NCLine  } if end
 gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@fifteen /N@top_fifteen InitNC { NCLine  } if end  gsave
0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore  grestore end
 912 940 a 912
940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@x_val /N@x_val_up InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0
 3.0  0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@leaf_one /N@one InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0
 3.0  0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@leaf_two /N@two InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0
 3.0  0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 912 940
a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@leaf_five /N@five InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0
 3.0  0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@leaf_x /N@app InitNC { NCLine  } if end  gsave 0.8 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@one /N@three InitNC { yB yA sub xB xA sub Atan dup 8.
 add /AngleA exch def 8.  sub 180 add /AngleB exch def 0.67  0.67 
NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 912
940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@two /N@three InitNC { /AngleA 130.  def /AngleB 340.
 def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@five /N@div InitNC { yB yA sub xB xA sub Atan dup 8.
 add /AngleA exch def 8.  sub 180 add /AngleB exch def 0.67  0.67 
NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 912 940 a 912 940
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@app /N@div InitNC { NCLine  } if end  gsave 0.8 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 1.0 0 0 /N@three /N@fifteen InitNC { yB yA sub xB xA sub Atan dup
8.  add /AngleA exch def 8.  sub 180 add /AngleB exch def 0.67  0.67
 NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@div /N@fifteen InitNC { yB yA sub xB xA sub Atan dup
-5.  add /AngleA exch def -5.  sub 180 add /AngleB exch def 0.67  0.67
 NCCurve  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 912 940 a 912
940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@subexpr_env /N@B InitNC { NCLine  } if end  gsave 0.8
SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@B /N@BB InitNC { NCLine  } if end  gsave 0.8 SLW 0 0
1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@B /N@BC InitNC { NCLine  } if end  gsave 0.8 SLW 0 0
1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 912 940
a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@subexpr_env /N@C InitNC { yB yA sub xB xA sub Atan dup
-8.  add /AngleA exch def -8.  sub 180 add /AngleB exch def 0.67  0.67
 NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@C /N@CB InitNC { NCLine  } if end  gsave 0.8 SLW 0 0
1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 912 940 a 912 940 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@C /N@CC InitNC { NCLine  } if end  gsave 0.8 SLW 0 0
1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 912
940 a 912 1019 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@CC /N@rho InitNC { yB yA sub xB xA sub Atan dup -35.
 add /AngleA exch def -35.  sub 180 add /AngleB exch def 0.67  0.67
 NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 912 1019 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(32)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 33 33
TeXDict begin 33 32 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation33) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.33) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Une)38 b(notation)f(plus)h(lisible)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(A\034n)30 b(de)h(simpli\034er)g(la)g(p)m(r\351sentation)g(des)f
(\351valuations)j(nous)d(p)s(ouvons)i(utiliser)-458 -135
y(une)e(fonction)h(auxiliaire,)i(des)d(cha\356nes)h(de)f(ca)m
(ract\350res)g(vers)g(les)g(exp)m(ressions,)h(qui)-458
-22 y(co)m(rresp)s(ond)g(\340)f(la)h(comp)s(osition)f(de)h(l'analyse)h
(lexicale)g(et)e(syntaxique.)i(Nous)f(la)-458 91 y(noterons)f
FS(h)-15 b(h)p FU(_)q FS(i)g(i)31 b FU(:)f FP(string)40
b FS(!)30 b FP(exp)m(r)11 b FU(,)30 b(mais)g(nous)g(omettrons)g(les)g
(guillemets)h(de)f(la)-458 204 y(cha\356ne)i(:)-458 317
y FS(h)-15 b(h)p FK(let)47 b(x)g(=)g(1)g(in)g(let)g(y)g(=)g(2)g(in)g(x)
g(+)g(y)p FS(i)-15 b(i)-351 521 y FC(=)25 b FS(h)-15
b(h)p FO(let)30 b FU(x)g(=)h(1)f FO(in)g(let)g FU(y)h(=)g(2)f
FO(in)g FU(x)g FK(+)h FU(y)q FS(i)-15 b(i)-351 659 y
FC(=)25 b FQ(Let)i(\("x",)h(Const)e(1,)i(Let)f(\("y",)g(Const)g(2,)h
(BinOp)f(\(A)n(dd,)h(V)n(a)n(r)h("x",)e(V)n(a)n(r)i("y"\))-14
b(\))g(\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(33)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 34 34
TeXDict begin 34 33 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation34) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.34) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Une)38 b(notation)f(plus)h(lisible)f(\(suite\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Des)30 b(m\351ta-va)m(riables)p 279 -299
47 4 v 31 w FH(e)37 b FU(p)s(euvent)31 b(appa)m(ra\356tre)h(dans)f(la)g
(syntaxe)g(concr\350te)f(p)s(our)-458 -135 y(d\351signer)h(des)f
(cha\356nes)i(de)e(ca)m(ract\350res)h(p)m(ro)s(duites)g(pa)m(r)g(la)f
(r\350gle)h(de)g(grammaire)-458 -22 y FK(Expression)f
FU(:)116 91 y FS(h)-15 b(h)p FO(let)25 b FU(x)h(=)f(2)h
FO(in)p 635 40 V 25 w FH(e)7 b FS(i)-15 b(i)25 b FC(=)g
FU(Let)g(\("x")q FE(;)15 b FU(Const)g(2)p FE(;)g FS(h)-15
b(h)p 1584 40 V FH(e)8 b FS(i)-15 b(i)g FU(\))-458 304
y(P)m(our)30 b(simpli\034er)h(enco)m(re,)g(on)g(\351crira)g
FH(e)36 b FU(au)31 b(lieu)g(de)g FS(h)-15 b(h)p 1296
253 V FH(e)7 b FS(i)-15 b(i)p FU(.)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(34)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 35 35
TeXDict begin 35 34 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation35) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.35) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Une)38 b(notation)f(plus)h(lisible)f(\(suite\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Nous)27 b(p)s(ouvons)h(en)f(fait)f(ais\351ment)h(donner)
h(une)f(d\351\034nition)i(fo)m(rmelle)e(de)g(l'analyse)-458
-135 y(lexico-syntaxique)33 b(sur)d(les)g(p)m(rogrammes...)f(dont)i(la)
f(syntaxe)h(est)e(d\351j\340)h(co)m(rrecte.)338 70 y
FS(h)-15 b(h)p 393 18 49 4 v FH(n)r FS(i)g(i)26 b FC(=)f
FU(Const)15 b(\(int_of_string)g(\()p 1461 18 V 1 w FH(n)q
FU(\))-15 b(\))26 b FC(=)e FU(Const)15 b(\()p FH(n)r
FU(\))137 208 y FS(h)-15 b(h)p 192 156 47 4 v FH(e)240
222 y FF(1)294 208 y FK(+)p 356 156 V 15 w FH(e)403 222
y FF(2)442 208 y FS(i)g(i)26 b FC(=)f FU(BinOp)16 b(\(A)m(dd)q
FE(;)f FS(h)-15 b(h)p 1155 156 V FH(e)1203 222 y FF(1)1242
208 y FS(i)g(i)p FE(;)15 b FS(h)-15 b(h)p 1392 156 V
FH(e)1440 222 y FF(2)1480 208 y FS(i)g(i)g FU(\))137
345 y FS(h)g(h)p 192 294 V FH(e)240 359 y FF(1)294 345
y FK(-)p 356 294 V 15 w FH(e)403 359 y FF(2)442 345 y
FS(i)g(i)26 b FC(=)f FU(BinOp)16 b(\(Sub)q FE(;)f FS(h)-15
b(h)p 1148 294 V FH(e)1196 359 y FF(1)1235 345 y FS(i)g(i)p
FE(;)15 b FS(h)-15 b(h)p 1385 294 V FH(e)1433 359 y FF(2)1473
345 y FS(i)g(i)g FU(\))137 483 y FS(h)g(h)p 192 432 V
FH(e)240 497 y FF(1)294 483 y FK(*)p 356 432 V 15 w FH(e)403
497 y FF(2)442 483 y FS(i)g(i)26 b FC(=)f FU(BinOp)16
b(\(Mult)p FE(;)f FS(h)-15 b(h)p 1184 432 V FH(e)1232
497 y FF(1)1271 483 y FS(i)g(i)p FE(;)15 b FS(h)-15 b(h)p
1421 432 V FH(e)1469 497 y FF(2)1508 483 y FS(i)g(i)g
FU(\))137 621 y FS(h)g(h)p 192 570 V FH(e)240 635 y FF(1)294
621 y FK(/)p 356 570 V 15 w FH(e)403 635 y FF(2)442 621
y FS(i)g(i)26 b FC(=)f FU(BinOp)16 b(\(Div)q FE(;)f FS(h)-15
b(h)p 1133 570 V FH(e)1180 635 y FF(1)1220 621 y FS(i)g(i)p
FE(;)15 b FS(h)-15 b(h)p 1370 570 V FH(e)1418 635 y FF(2)1457
621 y FS(i)g(i)g FU(\))336 759 y FS(h)g(h)p FH(x)8 b
FS(i)-15 b(i)27 b FC(=)e FU(V)m(a)m(r)16 b(\()p FH(x)8
b FU(\))-212 897 y FS(h)-15 b(h)p FO(let)25 b FH(x)33
b FU(=)p 145 845 V 26 w FH(e)191 911 y FF(1)256 897 y
FO(in)p 356 845 V 25 w FH(e)403 911 y FF(2)442 897 y
FS(i)-15 b(i)26 b FC(=)f FU(Let)15 b(\()p FH(x)8 b FE(;)15
b FS(h)-15 b(h)p 936 845 V FH(e)984 911 y FF(1)1023 897
y FS(i)g(i)p FE(;)15 b FS(h)-15 b(h)p 1173 845 V FH(e)1221
911 y FF(2)1261 897 y FS(i)g(i)g FU(\))270 1034 y FS(h)g(h)p
FU(\()p 361 983 V 1 w FH(e)6 b FU(\))p FS(i)-15 b(i)26
b FC(=)f FS(h)-15 b(h)p 674 983 V FH(e)7 b FS(i)-15 b(i)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(35)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 36 36
TeXDict begin 36 35 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation36) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.36) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Des)37 b(r\350gles)g(plus)h(lisibles)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -360 a
SDict begin H.S end

-458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (semantique_operationnelle_etendue_lisible)
cvn /DEST pdfmark end
 -458
-360 a -62 1 a FE(\032)25 b FS(`)g(h)-15 b(h)p 146 -51
49 4 v -1 x FH(n)195 1 y FS(i)g(i)26 b FG(\020)44 b FC(_)-44
b FH(n)110 b FQ(const)1208 -69 y FH(x)34 b FS(2)24 b
Fz(dom)q FC(\()p FE(\032)p FC(\))p 1121 -20 624 4 v 1121
70 a FE(\032)h FS(`)g(h)-15 b(h)p FH(x)8 b FS(i)-15 b(i)27
b FG(\020)e FE(\032)p FC(\()p FH(x)8 b FC(\))1780 1 y
FQ(va)n(r)-418 291 y FE(\032)25 b FS(`)g FH(e)-225 305
y FF(1)-160 291 y FG(\020)g FH(v)-2 305 y FF(1)218 291
y FE(\032)g FS(`)g FH(e)411 305 y FF(2)476 291 y FG(\020)g
FH(v)634 305 y FF(2)p -418 339 1092 4 v -337 429 a FE(\032)h
FS(`)e(h)-15 b(h)p -129 378 47 4 v FH(e)-81 443 y FF(1)-27
429 y FK(+)p 35 378 V 15 w FH(e)82 443 y FF(2)121 429
y FS(i)g(i)26 b FG(\020)f FH(v)360 443 y FF(1)420 429
y FC(+)20 b FH(v)553 443 y FF(2)709 360 y FQ(add)1007
291 y FE(\032)25 b FS(`)g FH(e)1200 305 y FF(1)1265 291
y FG(\020)g FH(v)1423 305 y FF(1)1643 291 y FE(\032)h
FS(`)e FH(e)1836 305 y FF(2)1902 291 y FG(\020)h FH(v)2060
305 y FF(2)p 1007 339 1092 4 v 1089 429 a FE(\032)g FS(`)g(h)-15
b(h)p 1297 378 47 4 v FH(e)1344 443 y FF(1)1398 429 y
FK(-)p 1461 378 V 16 w FH(e)1507 443 y FF(2)1547 429
y FS(i)g(i)25 b FG(\020)h FH(v)1786 443 y FF(1)1845 429
y FS(\000)20 b FH(v)1978 443 y FF(2)2134 360 y FQ(sub)-425
651 y FE(\032)25 b FS(`)g FH(e)-232 665 y FF(1)-167 651
y FG(\020)g FH(v)-9 665 y FF(1)211 651 y FE(\032)g FS(`)g
FH(e)404 665 y FF(2)469 651 y FG(\020)g FH(v)627 665
y FF(2)p -425 699 1092 4 v -344 789 a FE(\032)h FS(`)e(h)-15
b(h)p -136 738 47 4 v FH(e)-88 803 y FF(1)-34 789 y FK(*)p
28 738 V 15 w FH(e)75 803 y FF(2)114 789 y FS(i)g(i)26
b FG(\020)f FH(v)353 803 y FF(1)413 789 y FS(\002)20
b FH(v)546 803 y FF(2)702 720 y FQ(mult)1030 651 y FE(\032)25
b FS(`)g FH(e)1223 665 y FF(1)1288 651 y FG(\020)g FH(v)1446
665 y FF(1)1666 651 y FE(\032)g FS(`)g FH(e)1859 665
y FF(2)1924 651 y FG(\020)g FH(v)2082 665 y FF(2)p 1030
699 1092 4 v 1144 789 a FE(\032)g FS(`)g(h)-15 b(h)p
1352 738 47 4 v FH(e)1399 803 y FF(1)1454 789 y FK(/)p
1516 738 V 15 w FH(e)1562 803 y FF(2)1602 789 y FS(i)g(i)26
b FG(\020)f FH(v)1841 803 y FF(1)1880 789 y FE(=)p FH(v)1967
803 y FF(2)2157 720 y FQ(div)118 1010 y FE(\032)g FS(`)g
FH(e)311 1024 y FF(1)376 1010 y FG(\020)g FH(v)534 1024
y FF(1)754 1010 y FE(\032)20 b FS(\010)g FH(x)34 b FS(7!)25
b FH(v)1146 1024 y FF(1)1210 1010 y FS(`)g FH(e)1331
1024 y FF(2)1396 1010 y FG(\020)h FH(v)1555 1024 y FF(2)p
118 1059 1477 4 v 313 1149 a FE(\032)f FS(`)g(h)-15 b(h)p
FO(let)25 b FH(x)34 b FU(=)p 823 1097 47 4 v 25 w FH(e)870
1163 y FF(1)934 1149 y FO(in)p 1035 1097 V 26 w FH(e)1081
1163 y FF(2)1121 1149 y FS(i)-15 b(i)25 b FG(\020)g FH(v)1359
1163 y FF(2)1629 1080 y FQ(let)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(36)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 37 37
TeXDict begin 37 36 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation37) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.37) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Un)38 b(exemple)g(complexe)f(d'\351valuation)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (un_exemple_complexe) cvn /DEST
pdfmark end
 -458 -360 a 113 x FU(Soit)30 b(l'extrait)h(de)f(syntaxe)h
(concr\350te)-458 -135 y FM("let)42 b(x)h(=)g(1)g(in)g(\(\(let)e(x)i(=)
h(2)f(in)f(x\))h(+)g(x\)")p FU(.)-458 65 y(L'a)m(rb)m(re)28
b(de)f(syntaxe)h(abstraite)f(p)m(ro)s(duit)h(pa)m(r)f(l'analyseur)i
(lexico-syntaxique)i(est)26 b(:)p 0 TeXcolorgray 0 TeXcolorgray
622 265 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 622 265 a FQ(Let)80 431 y
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 80 431 a FQ("x")141
405 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 141 405 a 379 431 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 379 431 a FQ(Const)478 405
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 478 405 a 457 597 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 457 597 a FQ(1)478 571 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 478 571
a 1103 431 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1103 431 a FQ(BinOp)1214 405 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1214 405
a 676 597 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 16.71814 8.35907 3.11034
} false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 676 597 a FQ(A)n(dd)745 571 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 745 571 a 992
597 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} false /N@T-0-2-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 992 597 a FQ(Let)1048 571 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1048 571 a 650 763
a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 650 763 a FQ("x")711 737 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 711 737 a 949 763 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-2-1-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 949
763 a FQ(Const)1048 737 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1048 737 a 1027 929 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-2-1-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1027
929 a FQ(2)1048 903 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1 /N@T-0-2-1-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1048 903 a 1325 763 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} false /N@T-0-2-1-2 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1325 763
a FQ(V)n(a)n(r)1385 737 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1385 737 a 1324 929 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-1-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1324
929 a FQ("x")1385 903 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-2 /N@T-0-2-1-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1385 903 a 1623 597 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} false /N@T-0-2-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1623 597
a FQ(V)n(a)n(r)1683 571 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1683 571 a 1622 763 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1622
763 a FQ("x")1683 737 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1683 737 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(37)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 38 38
TeXDict begin 38 37 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation38) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.38) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Arb)m(re)37 b(de)g(p)m(reuve)g(de)h(l'\351valuation)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(On)30 b(combine)h(les)f(r\350gles)h(d'inf\351rence)g(p)s
(our)g(\351valuer)g(l'exp)m(ression)h(:)e(on)h(obtient)-458
-135 y(un)g FP(a)m(rb)m(re)g(de)g(p)m(reuve)h FU(\(de)e
(l'\351valuation)j(de)e(l'exp)m(ression)h(en)f(la)f(valeur)i(3\),)e(ou)
-458 -22 y FP(d\351rivation)p FU(.)694 308 y Fw(?)21
b Fv(`)h(h)-13 b(h)p Fu(1)p Fv(i)g(i)21 b Ft(\020)g Fu(1)-508
399 y(")p 1 0 0 TeXcolorrgb(x)p 0 TeXcolorgray(")i Fv(7!)e
Fu(1)g Fv(`)h(h)-13 b(h)p Fs(2)p Fv(i)g(i)21 b Ft(\020)g
Fu(2)154 b(")p 1 0 0 TeXcolorrgb(x)p 0 TeXcolorgray(")23
b Fv(7!)e Fu(1)c Fv(\010)g Fu(")p Fs(x)p Fu(")22 b Fv(7!)f
Fu(2)h Fv(`)f(h)-13 b(h)p Fu(x)p Fv(i)g(i)22 b Ft(\020)f
Fu(2)p -508 439 1812 4 v -237 513 a(")p 1 0 0 TeXcolorrgb(x)p
0 TeXcolorgray(")i Fv(7!)e Fu(1)g Fv(`)h(h)-13 b(h)p
Fs(let)75 b(x)f(=)h(2)f(in)49 b Fu(x)p Fv(i)-13 b(i)22
b Ft(\020)f Fu(2)358 b(")p 1 0 0 TeXcolorrgb(x)p 0 TeXcolorgray(")22
b Fv(7!)f Fu(1)h Fv(`)f(h)-13 b(h)p 0 0 1 TeXcolorrgb
Fu(x)p 0 TeXcolorgray 1 w Fv(i)g(i)21 b Ft(\020)g Fu(1)p
-211 553 2246 4 v 136 626 a(")p 1 0 0 TeXcolorrgb(x)p
0 TeXcolorgray(")i Fv(7!)e Fu(1)g Fv(`)h(h)-13 b(h)p
Fu(\()p Fs(let)74 b(x)h(=)f(2)h(in)22 b Fu(x\))g Fr(+)p
0 0 1 TeXcolorrgb 21 w Fu(x)p 0 TeXcolorgray 1 w Fv(i)-13
b(i)21 b Ft(\020)g Fu(2)c Fq(+)g Fu(1)p -221 666 2266
4 v 87 740 a Fw(?)22 b Fv(`)f(h)-13 b(h)p Fs(let)p 1 0 0
TeXcolorrgb 22 w Fu(x)p 0 TeXcolorgray 22 w(=)21 b(1)g
Fs(in)h Fu(\(\()p Fs(let)75 b(x)f(=)h(2)g(in)21 b Fu(x)q(\))g
Fr(+)p 0 0 1 TeXcolorrgb 21 w Fu(x)p 0 TeXcolorgray 1
w(\))p Fv(i)-13 b(i)21 b Ft(\020)g Fu(3)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(38)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 39 39
TeXDict begin 39 38 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation39) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.39) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Construction)37 b(de)g(l'a)m(rb)m(re)f(de)i(p)m(reuve)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(L'a)m(rb)m(re)30 b(de)e(p)m(reuve)j(se)d(construit)g(de)
h(bas)g(en)g(haut,)g(c.-\340-d.)h(de)f(la)g(racine)g(vers)g(les)-458
-135 y(feuilles,)g(en)h(fonction)f(de)h(la)f(fo)m(rme)f(des)h
(conclusions)i(et)d(on)i(en)f(d\351duit)h(\340)f(chaque)-458
-22 y(\351tap)s(e)h(des)g(\351quations)i(sur)e(les)g(m\351ta-va)m
(riables)i(d\351notant)f(les)f(valeurs.)-458 191 y(Puis)g(ces)g
(\351quations)h(sont)f(r\351solues)h(et)e(donnent)j(la)f(valeur)g
(recherch\351e,)h(c.-\340-d.)-458 304 y(le)e(r\351sultat)g(de)h
(l'\351valuation.)-458 516 y(Soit)f FH(v)40 b FU(la)31
b(valeur)g(du)g(terme)e(initial)j FS(h)-15 b(h)p FO(let)30
b FU(x)h(=)f(1)g FO(in)g FU(\(\()p FO(let)g FU(x)h(=)f(2)g
FO(in)g FU(x\))h FK(+)f FU(x\))p FS(i)-15 b(i)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(39)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 40 40
TeXDict begin 40 39 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation40) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.40) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Construction)37 b(de)g(l'a)m(rb)m(re)f(de)i(p)m(reuve)f
(\(suite\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray -458 -247 a FU(La)30 b(seule)h(r\350gle)f(qui)i(p)s(eut)e
(avoir)h(une)g(conclusion)h(de)f(cette)f(fo)m(rme)g(est)f
FQ(let)-458 -135 y FU(\(p.)h(36\).)h(Nous)g(appliquons)i(donc)e(une)g
(instance)g(de)g(celle-ci)h(\(avec)f(un)-458 -22 y(environnement)h
(vide\))f(:)-347 180 y FB(?)25 b FS(`)f(h)-15 b(h)p FU(1)q
FS(i)g(i)26 b FG(\020)f FU(1)181 b(")p 1 0 0 TeXcolorrgb(x)p
0 TeXcolorgray(")26 b FS(7!)f FU(1)g FS(`)g(h)-15 b(h)p
FO(\(let)95 b(x)f(=)h(2)f(in)h(x\))25 b FK(+)p 0 0 1
TeXcolorrgb 25 w FU(x)p 0 TeXcolorgray FS(i)-15 b(i)26
b FG(\020)f FH(v)p -347 228 2519 4 v -140 318 a FB(?)g
FS(`)f(h)-15 b(h)p FO(let)p 1 0 0 TeXcolorrgb 26 w FU(x)p
0 TeXcolorgray 25 w(=)26 b(1)f FO(in)g FU(\()q FO(\(let)93
b(x)i(=)f(2)h(in)f(x\))25 b FK(+)p 0 0 1 TeXcolorrgb
26 w FU(x)p 0 TeXcolorgray(\))p FS(i)-15 b(i)26 b FG(\020)f
FH(v)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(40)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 41 41
TeXDict begin 41 40 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation41) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.41) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Construction)37 b(de)g(l'a)m(rb)m(re)f(de)i(p)m(reuve)f
(\(suite)g(et)h(\034n\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -261 a FU(La)30 b(seconde)h(p)m(r\351misse)f(ne)h
(p)s(eut)f(\352tre)g(qu'une)i(conclusion)g(de)f(la)g(r\350gle)f
FQ(add)-458 -161 y FU(\(p.)g(36\))h(:)-249 23 y FQ(")p
1 0 0 TeXcolorrgb(x)p 0 TeXcolorgray(")23 b FR(7!)g FQ(1)f
FR(`)h(h)-14 b(h)p FN(let)87 b(x)f(=)g(2)g(in)55 b FQ(x)q
FR(i)-14 b(i)24 b Fp(\020)f Fo(v)1171 35 y FI(1)1373
23 y FQ(")p 1 0 0 TeXcolorrgb(x)p 0 TeXcolorgray(")g
FR(7!)g FQ(1)f FR(`)h(h)-14 b(h)p 0 0 1 TeXcolorrgb FQ(x)p
0 TeXcolorgray 1 w FR(i)g(i)24 b Fp(\020)f FQ(1)p -249
66 2322 4 v 32 146 a(")p 1 0 0 TeXcolorrgb(x)p 0 TeXcolorgray(")g
FR(7!)g FQ(1)f FR(`)h(h)-14 b(h)p FQ(\()q FN(let)87 b(x)e(=)i(2)e(in)23
b FQ(x)q(\))g FM(+)p 0 0 1 TeXcolorrgb 22 w FQ(x)p 0
TeXcolorgray 1 w FR(i)-14 b(i)24 b Fp(\020)f Fo(v)1612
158 y FI(1)1667 146 y Fn(+)18 b FQ(1)-428 341 y FU(et)30
b(l'\351quation)i(que)f(l'on)g(d\351duit)h(est)d(alo)m(rs)i(simplement)
f FH(v)35 b FC(=)25 b FH(v)1679 355 y FF(1)1739 341 y
FC(+)20 b FU(1.)-458 441 y(La)30 b(p)m(remi\350re)h(p)m(r\351misse)f
(ne)h(p)s(eut)f(\352tre)g(que)h(la)f(conclusion)j(d'une)e(r\350gle)g
FQ(let)-458 541 y FU(\(p.)f(36\))h(:)-72 725 y FQ(")p
1 0 0 TeXcolorrgb(x)p 0 TeXcolorgray(")22 b FR(7!)h FQ(1)g
FR(`)f(h)-14 b(h)p FN(2)q FR(i)g(i)24 b Fp(\020)f FQ(2)165
b(")p 1 0 0 TeXcolorrgb(x)p 0 TeXcolorgray(")23 b FR(7!)g
FQ(1)18 b FR(\010)g FQ(")p FN(x)p FQ(")j FR(7!)i FQ(2)g
FR(`)g(h)-14 b(h)p FQ(x)q FR(i)g(i)23 b Fp(\020)g FQ(2)p
-72 768 1969 4 v 200 847 a(")p 1 0 0 TeXcolorrgb(x)p
0 TeXcolorgray(")g FR(7!)g FQ(1)f FR(`)h(h)-14 b(h)p
FN(let)87 b(x)f(=)g(2)g(in)56 b FQ(x)p FR(i)-14 b(i)24
b Fp(\020)f FQ(2)-428 1035 y FU(d'o\371)31 b FH(v)-193
1049 y FF(1)-128 1035 y FC(=)25 b FU(2.)30 b(En)g(substituant)h
FH(v)688 1049 y FF(1)757 1035 y FU(pa)m(r)g(sa)f(valeur,)i(il)f(vient)g
FH(v)k FC(=)25 b FU(2)20 b FC(+)g FU(1)25 b FC(=)g FU(3.)-458
1148 y(QED)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(41)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 42 42
TeXDict begin 42 41 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation42) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.42) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(F)m(o)m(rmalisation)37 b(des)g(erreurs)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -360 a
SDict begin H.S end

-458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (formalisation_des_erreurs) cvn
/DEST pdfmark end
 -458
-360 a 113 x FU(Lo)m(rs)30 b(de)g(l'\351valuation)j(p)m(r\351sent\351e)
e(\340)g(la)g(page)g(32,)f(plusieurs)h(p)m(robl\350mes)g(auraient)-458
-135 y(pu)g(se)f(p)m(r\351senter)g(:)g(x)h(aurait)g(pu)g(valoir)g(0)f
(\(division)i(pa)m(r)f(z\351ro\))g(ou)-458 -22 y("x")26
b FS(62)f Fz(dom)p FC(\()p FE(\032)p FC(\))p FU(.)31
b(Dans)g(le)f(p)m(remier)h(cas,)f(la)h(r\350gle)g(est)e(:)302
180 y FE(\032)c FS(`)g FH(e)495 194 y FF(1)560 180 y
FG(\020)g FH(v)718 194 y FF(1)938 180 y FE(\032)h FS(`)f
FH(e)1132 194 y FF(2)1197 180 y FG(\020)g FH(v)1355 194
y FF(2)p 302 228 1092 4 v 417 318 a FE(\032)g FS(`)g(h)-15
b(h)p 625 267 47 4 v FH(e)672 332 y FF(1)726 318 y FK(/)p
789 267 V 16 w FH(e)835 332 y FF(2)874 318 y FS(i)g(i)26
b FG(\020)f FH(v)1113 332 y FF(1)1153 318 y FE(=)p FH(v)1240
332 y FF(2)1429 249 y FQ(div)-458 522 y FU(On)30 b(p)s(eut)g(fo)m
(rmaliser)g(les)g(cas)h(co)m(rrects,)f(et)f(\351ventuellement)j(les)f
(erreurs)e(:)-398 719 y FE(\032)c FS(`)g FH(e)-205 733
y FF(1)-140 719 y FG(\020)g FH(v)18 733 y FF(1)238 719
y FE(\032)g FS(`)g FH(e)431 733 y FF(2)496 719 y FG(\020)h
FH(v)655 733 y FF(2)p 0 0 1 TeXcolorrgb 875 719 a FH(v)917
733 y FF(2)981 719 y FS(6)p FC(=)f FU(0)p 0 TeXcolorgray
-398 767 1521 4 v -69 857 a FE(\032)g FS(`)g(h)-15 b(h)p
139 806 47 4 v FH(e)186 871 y FF(1)240 857 y FK(/)p 302
806 V 15 w FH(e)349 871 y FF(2)388 857 y FS(i)g(i)26
b FG(\020)f FH(v)627 871 y FF(1)667 857 y FE(=)p FH(v)754
871 y FF(2)1575 719 y FE(\032)g FS(`)g FH(e)1768 733
y FF(2)1833 719 y FG(\020)g FU(0)p 1348 767 874 4 v 1348
857 a FE(\032)g FS(`)g(h)-15 b(h)p 1556 806 47 4 v FH(e)1603
871 y FF(1)1658 857 y FK(/)p 1720 806 V 15 w FH(e)1766
871 y FF(2)1806 857 y FS(i)g(i)26 b FG(\020)p 1 0 0 TeXcolorrgb
25 w FP(erreur)p 0 TeXcolorgray -458 1057 a FU(P)m(our)k(fo)m(rmaliser)
p 1 0 0 TeXcolorrgb 30 w FP(erreur)p 0 TeXcolorgray 30
w FU(on)h(remplace)g(la)g(relation)g FE(\032)25 b FS(`)g
FH(e)32 b FG(\020)25 b FH(v)40 b FU(pa)m(r)31 b FE(\032)25
b FS(`)g FH(e)31 b FG(\020)26 b FH(r)10 b FU(,)-458 1170
y(o\371)30 b FH(r)40 b FU(est)30 b(une)h FP(r\351p)s(onse)p
FU(.)f(Les)g(r\351p)s(onses)g(sont)g(d\351so)m(rmais)h(des)f(valeurs)h
(ou)g(des)-458 1283 y FP(erreurs)p FU(.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(42)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 43 43
TeXDict begin 43 42 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation43) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.43) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(F)m(o)m(rmalisation)37 b(des)g(erreurs)f(\(p)m(ro)s(duction)i
(des)f(erreurs\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458
-360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (production_des_erreurs) cvn /DEST
pdfmark end
 -458 -360 a 113 x FU(Nous)30 b(allons)i
(consid\351rer)f(\340)f(pa)m(rtir)h(de)g(maintenant)g(que)g(les)f
(valeurs)h(dans)g(la)-458 -135 y(s\351mantique)g(sont)f(de)g(t)m(yp)s
(e)h FP(int)37 b FU(au)31 b(lieu)g(de)g(l'ensemble)g(math\351matique)g
FB(Z)p FU(,)f(ca)m(r)-458 -22 y(nous)g(n'avons)i(pas)e(b)s(esoin)h(de)g
(tant)f(d'abstraction)h(et)f(cela)h(nous)g(rapp)m(ro)s(chera)-458
91 y(de)f(l'implantation,)j(c.-\340-d.)e(de)g(l'interp)m(r\350te.)-458
204 y FO(t)m(yp)s(e)f FP(value)38 b FU(=)30 b FP(int)7
b FU(;;)-458 317 y FO(t)m(yp)s(e)30 b FP(erro)m(r)40
b FU(=)30 b(DivByZero)i FK(|)e FU(F)m(ree)-8 b(V)m(a)m(r)34
b FO(of)i FP(string)10 b FU(;;)-458 430 y FO(t)m(yp)s(e)30
b FP(result)36 b FU(=)31 b(V)m(al)g FO(of)37 b FP(value)g
FK(|)30 b FU(Err)h FO(of)37 b FP(erro)m(r)10 b FU(;;)-458
543 y(Les)30 b(r\350gles)g(qui)h(p)s(euvent)g(p)m(ro)s(duire)h(des)e
(erreurs)g(sont)450 739 y FE(\032)25 b FS(`)g FH(e)643
753 y FF(2)708 739 y FG(\020)g FU(V)m(al)16 b(\()q(0\))p
135 788 1257 4 v 135 878 a FE(\032)26 b FS(`)e(h)-15
b(h)p 343 826 47 4 v FH(e)391 892 y FF(1)445 878 y FK(/)p
507 826 V 15 w FH(e)554 892 y FF(2)593 878 y FS(i)g(i)26
b FG(\020)f FU(Err)15 b(\(DivByZero)q(\))1427 809 y FQ(div-zero)527
1099 y FH(x)34 b FS(62)25 b Fz(dom)q FC(\()p FE(\032)p
FC(\))p 251 1147 1004 4 v 251 1237 a FE(\032)g FS(`)g(h)-15
b(h)p FH(x)8 b FS(i)-15 b(i)26 b FG(\020)f FU(Err)15
b(\(F)m(ree)-8 b(V)m(a)m(r)18 b FH(x)8 b FU(\))1289 1168
y FQ(free-va)n(r)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(43)i(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 44 44
TeXDict begin 44 43 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation44) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.44) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(F)m(o)m(rmalisation)37 b(des)g(erreurs)f(\(p)m(ro)s(duction)i
(des)f(valeurs\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 95 -69 a FE(\032)25 b FS(`)g FH(e)288
-55 y FF(1)353 -69 y FG(\020)g FU(V)m(al)16 b(\()p FH(v)683
-55 y FF(1)723 -69 y FU(\))180 b FE(\032)26 b FS(`)f
FH(e)1132 -55 y FF(2)1197 -69 y FG(\020)g FU(V)m(al)16
b(\()p FH(v)1527 -55 y FF(2)1566 -69 y FU(\))p 95 -20
1507 4 v 297 70 a FE(\032)25 b FS(`)g(h)-15 b(h)p 505
18 47 4 v FH(e)552 84 y FF(1)607 70 y FK(/)p 669 18 V
15 w FH(e)715 84 y FF(2)755 70 y FS(i)g(i)26 b FG(\020)f
FU(V)m(al)16 b(\()p FH(v)1166 84 y FF(1)1221 70 y FK(/)f
FH(v)1325 84 y FF(2)1364 70 y FU(\))1637 1 y FQ(div)66
291 y FE(\032)26 b FS(`)f FH(e)260 305 y FF(1)325 291
y FG(\020)g FU(V)m(al)16 b(\()p FH(v)655 305 y FF(1)694
291 y FU(\))181 b FE(\032)25 b FS(`)g FH(e)1103 305 y
FF(2)1168 291 y FG(\020)h FU(V)m(al)16 b(\()p FH(v)1499
305 y FF(2)1538 291 y FU(\))p 66 339 1507 4 v 269 429
a FE(\032)25 b FS(`)g(h)-15 b(h)p 477 378 47 4 v FH(e)524
443 y FF(1)579 429 y FK(*)p 641 378 V 15 w FH(e)687 443
y FF(2)727 429 y FS(i)g(i)25 b FG(\020)h FU(V)m(al)16
b(\()p FH(v)1138 443 y FF(1)1192 429 y FK(*)g FH(v)1297
443 y FF(2)1336 429 y FU(\))1608 360 y FQ(mult)83 651
y FE(\032)25 b FS(`)g FH(e)276 665 y FF(1)341 651 y FG(\020)g
FU(V)m(al)16 b(\()q FH(v)672 665 y FF(1)711 651 y FU(\))181
b FE(\032)25 b FS(`)g FH(e)1120 665 y FF(2)1185 651 y
FG(\020)g FU(V)m(al)16 b(\()p FH(v)1515 665 y FF(2)1555
651 y FU(\))p 83 699 1507 4 v 285 789 a FE(\032)26 b
FS(`)e(h)-15 b(h)p 493 738 47 4 v FH(e)540 803 y FF(1)595
789 y FK(+)p 657 738 V 15 w FH(e)704 803 y FF(2)743 789
y FS(i)g(i)26 b FG(\020)f FU(V)m(al)16 b(\()p FH(v)1154
803 y FF(1)1209 789 y FK(+)f FH(v)1313 803 y FF(2)1352
789 y FU(\))1625 720 y FQ(add)87 1010 y FE(\032)25 b
FS(`)g FH(e)280 1024 y FF(1)345 1010 y FG(\020)g FU(V)m(al)16
b(\()q FH(v)676 1024 y FF(1)715 1010 y FU(\))181 b FE(\032)25
b FS(`)g FH(e)1124 1024 y FF(2)1189 1010 y FG(\020)g
FU(V)m(al)16 b(\()p FH(v)1519 1024 y FF(2)1559 1010 y
FU(\))p 87 1059 1507 4 v 289 1149 a FE(\032)26 b FS(`)e(h)-15
b(h)p 497 1097 47 4 v FH(e)544 1163 y FF(1)599 1149 y
FK(-)p 661 1097 V 15 w FH(e)708 1163 y FF(2)747 1149
y FS(i)g(i)26 b FG(\020)f FU(V)m(al)16 b(\()p FH(v)1158
1163 y FF(1)1213 1149 y FK(-)f FH(v)1317 1163 y FF(2)1356
1149 y FU(\))1629 1080 y FQ(sub)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(44)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 45 45
TeXDict begin 45 44 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation45) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.45) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(F)m(o)m(rmalisation)37 b(des)g(erreurs)f(\(p)m(ro)s(duction)i
(des)f(valeurs)g(\026)h(suite)f(et)-529 -274 y(\034n\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-228 150 a FE(\032)26 b FS(`)e(h)-15 b(h)p -20 99 49
4 v FH(n)r FS(i)g(i)26 b FG(\020)f FU(V)m(al)17 b(\()p
FH(n)r FU(\))108 b FQ(const)1270 81 y FH(x)34 b FS(2)25
b Fz(dom)p FC(\()p FE(\032)p FC(\))p 1080 129 832 4 v
1080 219 a FE(\032)g FS(`)g(h)-15 b(h)p FH(x)8 b FS(i)-15
b(i)26 b FG(\020)f FU(V)m(al)17 b(\()p FE(\032)p FC(\()p
FH(x)8 b FC(\))p FU(\))1946 150 y FQ(va)n(r)-90 440 y
FE(\032)26 b FS(`)e FH(e)103 454 y FF(1)169 440 y FG(\020)h
FU(V)m(al)16 b(\()p FH(v)499 454 y FF(1)538 440 y FU(\))181
b FE(\032)20 b FS(\010)g FH(x)34 b FS(7!)25 b FH(v)1146
454 y FF(1)1210 440 y FS(`)g FH(e)1331 454 y FF(2)1396
440 y FG(\020)h FU(V)m(al)16 b(\()p FH(v)1727 454 y FF(2)1766
440 y FU(\))p -90 489 1891 4 v 209 579 a FE(\032)25 b
FS(`)g(h)-15 b(h)p FO(let)25 b FH(x)34 b FU(=)p 719 527
47 4 v 25 w FH(e)766 593 y FF(1)831 579 y FO(in)p 931
527 V 25 w FH(e)977 593 y FF(2)1017 579 y FS(i)-15 b(i)26
b FG(\020)f FU(V)m(al)16 b(\()p FH(v)1428 593 y FF(2)1467
579 y FU(\))1836 510 y FQ(let)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(45)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 46 46
TeXDict begin 46 45 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation46) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.46) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(F)m(o)m(rmalisation)37 b(des)g(erreurs)f(\(p)m(ropagation)h
(des)h(erreurs\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 148 -69 a FE(\032)26 b FS(`)e FH(e)341
-55 y FF(1)406 -69 y FG(\020)i FU(Err)14 b(\()p FH(z)8
b FU(\))181 b FE(\032)25 b FS(`)g FH(e)1145 -55 y FF(2)1210
-69 y FG(\020)g FH(r)p 148 -20 1219 4 v 306 70 a FE(\032)g
FS(`)g(h)-15 b(h)p 514 18 47 4 v FH(e)561 84 y FF(1)616
70 y FK(*)p 678 18 V 15 w FH(e)724 84 y FF(2)764 70 y
FS(i)g(i)26 b FG(\020)f FU(Err)14 b(\()q FH(z)8 b FU(\))1402
1 y FQ(add-err)1649 13 y FI(1)148 291 y FE(\032)26 b
FS(`)e FH(e)341 305 y FF(1)406 291 y FG(\020)i FH(r)190
b FE(\032)25 b FS(`)g FH(e)937 305 y FF(2)1002 291 y
FG(\020)g FU(Err)15 b(\()p FH(z)8 b FU(\))p 148 339 1219
4 v 306 429 a FE(\032)25 b FS(`)g(h)-15 b(h)p 514 378
47 4 v FH(e)561 443 y FF(1)616 429 y FK(+)p 678 378 V
15 w FH(e)724 443 y FF(2)764 429 y FS(i)g(i)26 b FG(\020)f
FU(Err)14 b(\()q FH(z)8 b FU(\))1402 360 y FQ(add-err)1649
372 y FI(2)-458 633 y FO(Rema)m(rques)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 761 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 771 a FU(Il)30 b(faut)g(deux)h
(r\350gles)g(ca)m(r)f(deux)i(p)m(r\351misses)e(p)s(euvent)h
(s'\351valuer)g(en)g(des)-276 884 y(erreurs)e(et)h(la)h(s\351mantique)g
(n'exp)m(rime)h(pas)e(la)h(commutativit\351)f(de)-276
997 y(l'addition.)i(Les)e(autres)g(cas)g(sont)g(similaires.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 1125 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 1135 a FU(En)g(cas)g(d'erreurs)g
(multiples,)h(seule)g(une)g(sera)f(p)m(ropag\351e.)i(L'o)m(rdre)-276
1248 y(d'\351valuation)h(n'\351tant)d(volontairement)i(pas)e
(compl\350tement)g(sp)s(\351ci\034\351,)h(on)-276 1361
y(ne)f(p)s(eut)g(dire)h FP(a)g(p)m(rio)m(ri)g FU(quelle)h(erreur)e
(sera)g(p)m(ropag\351e.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(46)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 47 47
TeXDict begin 47 46 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation47) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.47) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Implantation)37 b(de)h(la)f(gestion)h(d'erreur)e(dans)h
(l'interp)m(r\350te)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -261 a FU(P)m(our)30 b(simpli\034er,)h(nous)g
(utilisons)g(le)f(syst\350me)g(d'exception)i(du)f(langage)-458
-161 y(d'implantation,)h(s'il)f(existe)f(\(et)g(nous)h(nous)f(passons)h
(donc)g(du)g(t)m(yp)s(e)g FP(result)7 b FU(\).)-458 -61
y(C'est)29 b(le)i(cas)f(en)g(OCaml)g(:)p 0 TeXcolorgray
0 TeXcolorgray -458 113 a FN(exception)c FQ(Err)j FN(of)34
b FL(erro)n(r)9 b FQ(;;)-458 212 y FN(let)28 b(rec)f
FQ(eval)h(env)h(e)e(=)g FN(match)f FQ(e)i FN(with)f FM(...)-458
312 y(|)81 b FQ(V)n(a)n(r)28 b(x)g FR(!)p 0 1 0 TeXcolorrgb
28 w FN(b)s(egin)f(try)p 0 TeXcolorgray 28 w FQ(env)h(x)p
0 1 0 TeXcolorrgb 28 w FN(with)f FQ(Not_found)f FR(!)i
FQ(raise)f(\(Err)q(\(F)n(ree)-7 b(V)n(a)n(r)30 b(x\)\))f
FN(end)p 0 TeXcolorgray -458 412 a FM(|)81 b FQ(BinOp)27
b(\()p FN(Div)q FQ(,e)138 424 y FI(1)175 412 y FQ(,e)235
424 y FI(2)271 412 y FQ(\))h FR(!)g FN(let)g FQ(v)605
424 y FI(1)669 412 y FQ(=)f(eval)h(env)g(e)1107 424 y
FI(1)1171 412 y FN(and)f FQ(v)1374 424 y FI(2)1438 412
y FQ(=)g(eval)h(env)h(e)1877 424 y FI(2)442 511 y FN(in)p
0 1 0 TeXcolorrgb 27 w(if)34 b FQ(v)658 523 y FI(2)723
511 y FQ(=)27 b(0)g FN(then)g FQ(raise)g(\(Err)q(\(DivByZero\)\))j
FN(else)p 0 TeXcolorgray 28 w FQ(v)2105 523 y FI(1)2142
511 y FQ(/v)2222 523 y FI(2)-458 611 y FM(|)43 b(...)-458
799 y FO(Rema)m(rque)31 b FU(Nous)f(p)s(ourrions)h(acc\351l\351rer)g
(le)g(traitement)e(d'erreur)i(en)f(\351valuant)-458 912
y(d'ab)s(o)m(rd)h(e)-105 926 y FF(2)-35 912 y FU(puis)g(e)184
926 y FF(1)254 912 y FU(seulement)f(si)g(v)785 926 y
FF(2)855 912 y Fu(<>)g FU(0.)g(L'interp)m(r\350te)h(\034xe)g(alo)m(rs)g
(l'o)m(rdre)-458 1024 y(d'\351valuation)i(des)d(a)m(rguments)h(de)f(la)
h(division,)h(mais)e(o\036ciellement)i(l'usager)f(de)-458
1137 y(l'interp)m(r\350te)g(ne)g(doit)f(s'en)h(tenir)f(qu'\340)h(la)g
(s\351mantique)g(op)s(\351rationnelle)h(\(qui)g(ne)-458
1250 y(\034xe)f(pas)f(l'o)m(rdre\).)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(47)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 48 48
TeXDict begin 48 47 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation48) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.48) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(L'o)m(rdre)36 b(d'\351valuation)h(des)g(a)m(rguments)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-198 a FU(Si)30 b(l'o)m(rdre)h(d'\351valuation)i(est)d(sp)s
(\351ci\034\351)h(pa)m(r)g(la)f(s\351mantique)h(\(p.ex.)h(Java\),)-276
-85 y(alo)m(rs)e(celle-ci)i(est)e(dite)g(non)h(ambigu\353.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 43 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 53 a FU(Si)f(non)h(\(p.ex.)h(C)d(et)
h(Caml\),)h(l'auteur)g(du)g(compilateur)g(p)s(eut)f(optimiser.)p
0 TeXcolorgray -458 216 a(La)g(s\351mantique)h(op)s(\351rationnelle)h
(semble)f(pa)m(rfois)f(ne)h(rien)g(dire,)g(mais)e(elle)j(p)s(eut)-458
329 y(exp)m(rimer)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 481 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 491 a FU(les)e(d\351p)s(endances)i(entre)e(les)g(\351valuations)i
(\(cf.)f(r\350gle)f FQ(let)g FU(p.)h(36\),)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 619 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 629 a FU(les)f(\351valuations)i(en)f(p)m
(r\351sence)g(d'erreurs)f(:)g(compa)m(rez)h(avec)h(page)f(43)f(la)-276
742 y(r\350gle)228 1034 y FE(\032)25 b FS(`)g FH(e)421
1048 y FF(1)486 1034 y FG(\020)h FH(r)634 1048 y FF(1)854
1034 y FE(\032)f FS(`)g FH(e)1047 1048 y FF(2)1112 1034
y FG(\020)g FU(V)m(al)16 b(\(0\))p 226 1082 1257 4 v
226 1172 a FE(\032)25 b FS(`)g(h)-15 b(h)p 434 1121 47
4 v FH(e)481 1186 y FF(1)536 1172 y FK(/)p 598 1121 V
15 w FH(e)645 1186 y FF(2)684 1172 y FS(i)g(i)26 b FG(\020)f
FU(Err)15 b(\(DivByZero)q(\))1518 1103 y FQ(div-zero)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(48)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 49 49
TeXDict begin 49 48 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation49) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.49) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(V)m(a)m(riables)36 b(lib)m(res)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -360 a
SDict begin H.S end

-458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (variables_libres) cvn /DEST pdfmark
end
 -458
-360 a 113 x FU(Il)30 b(est)f(p)s(ossible)i(de)g(d\351terminer)f(si)g
(des)g(va)m(riables)j(sont)d(lib)m(res)h(dans)g(une)-458
-135 y(exp)m(ression)g FP(avant)g(d'\351valuer)i(celle-ci)p
FU(,)e(et)f(donc)i(d'\351viter)f(l'erreur)g(F)m(ree)-8
b(V)m(a)m(r)34 b(\340)-458 -22 y(l'ex\351cution.)e(Ce)e(t)m(yp)s(e)h
(d'analyse)h(est)d(dite)i FP(statique)g FU(ca)m(r)f(elle)h(a)g(lieu)g
(\340)f(la)-458 91 y(compilation.)-458 204 y(Soit)g FS(L)g
FU(la)h(fonction)g(qui)g(asso)s(cie)f(une)h(exp)m(ression)h(\340)e(ses)
f(va)m(riables)k(lib)m(res.)e(On)-458 317 y(p)s(eut)f(noter)g
FS(Lh)-15 b(h)p FU(_)q FS(i)g(i)30 b FU(au)h(lieu)g(de)g
FS(L)p FC(\()p FS(h)-15 b(h)p FU(_)q FS(i)g(i)p FC(\))p
FU(.)31 b(Elle)g(est)e(d\351\034nie)j(pa)m(r)f(les)g(\351quations)-458
430 y(\(la)g(p)m(rio)m(rit\351)g(de)g FS(n)f FU(est)g(plus)h(grande)g
(que)g(celle)g(de)g FS([)p FU(\))f(:)658 634 y FS(Lh)-15
b(h)p 776 583 49 4 v FH(n)r FS(i)g(i)26 b FC(=)f FB(?)657
772 y FS(Lh)-15 b(h)p FH(x)8 b FS(i)-15 b(i)26 b FC(=)f
FS(f)p FH(x)8 b FS(g)418 910 y(Lh)-15 b(h)p 536 859 47
4 v FH(e)582 924 y FF(1)p 647 859 52 4 v 647 910 a FH(o)p
739 859 47 4 v 47 w(e)786 924 y FF(2)825 910 y FS(i)g(i)26
b FC(=)f FS(L)p FC(\()p FH(e)1140 924 y FF(1)1180 910
y FC(\))20 b FS([)g(L)p FC(\()p FH(e)1454 924 y FF(2)1494
910 y FC(\))108 1048 y FS(Lh)-15 b(h)p FO(let)25 b FH(x)33
b FU(=)p 528 996 V 26 w FH(e)574 1062 y FF(1)639 1048
y FO(in)p 739 996 V 25 w FH(e)786 1062 y FF(2)825 1048
y FS(i)-15 b(i)26 b FC(=)f FS(L)p FC(\()p FH(e)1140 1062
y FF(1)1180 1048 y FC(\))20 b FS([)g(L)p FC(\()p FH(e)1454
1062 y FF(2)1494 1048 y FC(\))p FS(nf)p FH(x)8 b FS(g)-458
1252 y FU(o\371)p -337 1201 52 4 v 30 w FH(o)37 b FU(d\351signe)31
b(une)g(cha\356ne)h(de)f(ca)m(ract\350re)g(p)m(ro)s(duite)g(pa)m(r)g
(la)g(r\350gle)g(grammaticale)-458 1365 y FK(BinOp)p
FU(.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(49)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 50 50
TeXDict begin 50 49 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation50) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.50) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Exp)m(ressions)36 b(closes)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(Rep)m(renons)c(l'exemple)f
(page)g(37)g(:)-458 -135 y FK("let)47 b(x)g(=)g(1)f(in)h(\(\(let)g(x)g
(=)g(2)g(in)g(x\))g(+)g(x\)")p FU(.)-458 28 y FS(Lh)-15
b(h)p FO(let)25 b FU(x)g(=)h(1)f FO(in)g FU(\(\()q FO(let)f
FU(x)i(=)f(2)h FO(in)f FU(x\))h FK(+)f FU(x\))q FS(i)-15
b(i)93 232 y FC(=)25 b FS(Lh)-15 b(h)p FU(1)q FS(i)g(i)36
b([)f(Lh)-15 b(h)p FU(\()p FO(let)25 b FU(x)g(=)h(2)f
FO(in)h FU(x\))f FK(+)h FU(x)p FS(i)-15 b(inf)p FU("x")r
FS(g)93 370 y FC(=)25 b FB(?)36 b FS([)e FC(\()p FS(Lh)-15
b(h)p FO(let)26 b FU(x)f(=)h(2)f FO(in)g FU(x)q FS(i)-15
b(i)36 b([)f(Lh)-15 b(h)p FU(x)p FS(i)g(i)p FC(\))p FS(nf)p
FU("x")s FS(g)93 508 y FC(=)25 b(\()p FS(Lh)-15 b(h)p
FU(2)q FS(i)g(i)36 b([)f(Lh)-15 b(h)p FU(x)q FS(i)g(inf)p
FU("x")r FS(g)36 b([)f(f)p FU("x")q FS(g)p FC(\))p FS(nf)p
FU("x")r FS(g)93 646 y FC(=)25 b(\()p FB(?)36 b FS([)f(f)p
FU("x")q FS(gnf)p FU("x")r FS(g)h([)f(f)p FU("x")q FS(g)p
FC(\))p FS(nf)p FU("x")r FS(g)93 784 y FC(=)25 b FB(?)-458
988 y FU(L'exp)m(ression)31 b(ne)g(contient)g(donc)g(aucune)h(va)m
(riable)h(lib)m(re.)e(P)m(a)m(r)g(d\351\034nition,)h(une)-458
1101 y(telle)e(exp)m(ression)i(est)e(dite)g FP(close)p
FU(.)h(De)f(plus,)h(l'exp)m(ression)h(ne)f(contenant)g(aucune)-458
1214 y(division,)h(nous)f(avons)g(p)m(rouv\351)h(qu'il)f(n'y)g(aura)g
(pas)g(d'erreurs)f(lo)m(rs)g(de)-458 1327 y(l'\351valuation.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(50)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 51 51
TeXDict begin 51 50 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation51) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.51) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Rep)m(r\351sentation)36 b(graphique)h(des)g(liaisons)g(dans)g
(une)g(exp)m(ression)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458
-360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (binding_sample) cvn /DEST pdfmark
end
 -458 -360 a 99 x FU(P)m(our)30 b(le)h(moment,)e(le)i
(constructeur)g(Let)f(est)g(le)g(seul)h(\340)f(ajouter)h(des)f
(liaisons)-458 -161 y(dans)h(l'environnement)h(\(p.)f(36\))f(:)g(on)h
(le)g(dit)f(\023)h(liant)g(\024)-8 b(.)31 b(Rep)m(renons)g(l'AST)g(de)
-458 -53 y(l'exemple)g(page)g(37.)g(\300)f(pa)m(rtir)h(de)f(chaque)i(o)
s(ccurrence)f(de)g(va)m(riable)h(\(V)m(a)m(r)q(\),)-458
47 y(remontons)e(vers)g(la)g(racine.)i(Si)e(nous)h(trouvons)g(un)g(Let)
e(liant)j(cette)d(va)m(riable,)-458 146 y(cr\351ons)h(un)h(a)m(rc)g
(entre)f(celle-ci)i(et)e(le)g(Let)g(liant.)h(Si,)g(\340)f(la)h(racine,)
g(aucun)h(Let)e(n'a)-458 246 y(\351t\351)g(trouv\351,)g(la)h(va)m
(riable)i(est)c(lib)m(re)j(dans)f(l'exp)m(ression.)p
0 TeXcolorgray 0 TeXcolorgray 608 446 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} /N@outer-let true /N@T-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 608 446 a FQ(Let)66
612 y
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 66 612 a FQ("x")127 586 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 127 586 a 365 612 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 365
612 a FQ(Const)464 586 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 464 586 a 443 778 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 443 778
a FQ(1)464 753 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 464 753 a 1089 612 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1089 612 a FQ(BinOp)1200
586 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1200 586 a 662 778 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 16.71814 8.35907 3.11034
} false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 662 778 a FQ(A)n(dd)732 753
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 732 753 a 978 778 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} /N@inner-let true /N@T-0-2-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 978 778 a FQ(Let)1034 753 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1034
753 a 636 944 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 636 944 a FQ("x")697 919 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 697 919 a
935 944 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-2-1-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 935 944 a FQ(Const)1034 919 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1034 919 a 1013
1110 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-2-1-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1013 1110 a FQ(2)1034 1085 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1 /N@T-0-2-1-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1034 1085 a 1311
944 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@inner-var true /N@T-0-2-1-2 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1311 944 a FQ(V)n(a)n(r)1371 919 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1371 919 a 1310
1110 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-1-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1310 1110 a FQ("x")1371 1085 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-2 /N@T-0-2-1-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1371 1085 a 1609
778 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@outer-var true /N@T-0-2-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1609 778 a FQ(V)n(a)n(r)1669 753 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1669 753 a 1608
944 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1608 944 a FQ("x")1669 919 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1669 919 a 1757 420
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@inner-var /N@inner-let InitNC { yB yA sub xB xA sub
Atan dup -40.  add /AngleA exch def -40.  sub 180 add /AngleB exch
def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1757 420 a 1757 420 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@outer-var /N@outer-let InitNC { yB yA sub xB xA sub
Atan dup -40.  add /AngleA exch def -40.  sub 180 add /AngleB exch
def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1757 420 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(51)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 52 52
TeXDict begin 52 51 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation52) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.52) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Une)38 b(conditionnelle)e(avec)i(test)f(\340)h(z\351ro)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Revenons)31 b(au)g(syst\350me)e(page)j(36)e(et)g(une)h
(conditionnelle)i(avec)e(test)f(\340)g(z\351ro.)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 -108 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb -276
-98 a FU(Syntaxe)h(concr\350te)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -276 27 a FM(Expression)39 b(::=)-189
126 y(...)j(|)h("ifz")f(Expression)d("then")i(Expression)813
226 y("else")g(Expression)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 379 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -276 389 a FU(Syntaxe)31 b(abstraite)p
0 TeXcolorgray -276 501 a FO(t)m(yp)s(e)f FP(exp)m(r)41
b FU(=)30 b FK(...)g(|)g FU(Ifz)g FO(of)37 b FP(exp)m(r)k
FK(*)30 b FP(exp)m(r)41 b FK(*)30 b FP(exp)m(r)10 b FU(;;)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 629 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb -276
639 a FU(Analyse)31 b(syntaxique)p 0 TeXcolorgray -276
752 a FS(h)-15 b(h)p FO(ifz)p -98 701 47 4 v 25 w FH(e)-51
766 y FF(1)13 752 y FO(then)p 223 701 V 26 w FH(e)270
766 y FF(2)334 752 y FO(else)p 513 701 V 25 w FH(e)559
766 y FF(3)599 752 y FS(i)g(i)26 b FC(=)f FU(Ifz)14 b(\()-15
b FS(h)g(h)p 957 701 V FH(e)1004 766 y FF(1)1044 752
y FS(i)g(i)p FE(;)15 b FS(h)-15 b(h)p 1194 701 V FH(e)1242
766 y FF(2)1281 752 y FS(i)g(i)p FE(;)15 b FS(h)-15 b(h)p
1431 701 V FH(e)1479 766 y FF(3)1519 752 y FS(i)g(i)g
FU(\))p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 880
a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb
-276 890 a FU(V)m(a)m(riables)32 b(lib)m(res)p 0 TeXcolorgray
-276 1003 a FS(Lh)-15 b(h)p FO(ifz)p -35 952 V 25 w FH(e)11
1017 y FF(1)76 1003 y FO(then)p 286 952 V 26 w FH(e)332
1017 y FF(2)397 1003 y FO(else)p 576 952 V 25 w FH(e)622
1017 y FF(3)662 1003 y FS(i)g(i)25 b FC(=)g FS(L)p FC(\()p
FH(e)976 1017 y FF(1)1016 1003 y FC(\))36 b FS([)f(L)p
FC(\()p FH(e)1321 1017 y FF(2)1361 1003 y FC(\))g FS([)g(L)p
FC(\()p FH(e)1665 1017 y FF(3)1705 1003 y FC(\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(52)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 53 53
TeXDict begin 53 52 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation53) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.53) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Une)38 b(conditionnelle)e(avec)i(test)f(\340)h(z\351ro)f
(\(suite\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -276 -198 a FU(S\351mantique)31 b(op)s
(\351rationnelle)p 0 TeXcolorgray 349 -1 a FE(\032)26
b FS(`)f FH(e)543 13 y FF(1)608 -1 y FG(\020)g FU(0)181
b FE(\032)25 b FS(`)g FH(e)1143 13 y FF(2)1208 -1 y FG(\020)g
FH(v)1366 13 y FF(2)p 224 47 1307 4 v 224 137 a FE(\032)g
FS(`)g(h)-15 b(h)p FO(ifz)p 555 86 47 4 v 25 w FH(e)602
151 y FF(1)667 137 y FO(then)p 877 86 V 26 w FH(e)923
151 y FF(2)988 137 y FO(else)p 1166 86 V 24 w FH(e)1213
151 y FF(3)1252 137 y FS(i)g(i)26 b FG(\020)f FH(v)1491
151 y FF(2)1566 68 y FQ(if-then)164 358 y FE(\032)g FS(`)g
FH(e)357 372 y FF(1)422 358 y FG(\020)44 b FC(_)-44 b
FH(n)201 b FC(_)-44 b FH(n)27 b FS(6)p FC(=)e FU(0)181
b FE(\032)25 b FS(`)g FH(e)1356 372 y FF(3)1421 358 y
FG(\020)g FH(v)1579 372 y FF(3)p 164 407 1455 4 v 238
497 a FE(\032)g FS(`)g(h)-15 b(h)p FO(ifz)p 569 445 47
4 v 25 w FH(e)616 511 y FF(1)680 497 y FO(then)p 890
445 V 26 w FH(e)937 511 y FF(2)1001 497 y FO(else)p 1180
445 V 25 w FH(e)1227 511 y FF(3)1266 497 y FS(i)g(i)26
b FG(\020)f FH(v)1505 511 y FF(3)1654 428 y FQ(if-else)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(53)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 54 54
TeXDict begin 54 53 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation54) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.54) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Calculette)37 b(+)g(fonctions)g(=)h(mini-ML)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Ajoutons)30 b(\340)g(la)h(calculette)g(des)g(fonctions)f
(\()p FP(abstractions)p FU(\))h(et)f(leur)g(app)s(el)-458
-135 y(\()p FP(application)p FU(\).)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 -20 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb -276
-10 a FU(Syntaxe)h(concr\350te)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -276 115 a FM(Expression)39 b(::=)j(...)29
214 y(|)h("fun")e(ident)h("->")g(Expression)d(/*)k(abstraction)38
b(*/)29 314 y(|)43 b(Expression)c(Expression)301 b(/*)43
b(application)38 b(*/)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 467 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 477 a FU(Syntaxe)31 b(abstraite)p 0
TeXcolorgray -276 589 a FO(t)m(yp)s(e)f FP(exp)m(r)41
b FU(=)30 b FK(...)g(|)g FU(F)m(un)i FO(of)37 b FP(string)j
FK(*)30 b FP(exp)m(r)41 b FK(|)30 b FU(App)h FO(of)37
b FP(exp)m(r)k FK(*)30 b FP(exp)m(r)10 b FU(;;)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 767 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb -276 777 a FU(Analyse)31
b(syntaxique)p 0 TeXcolorgray -276 890 a(La)f(p)m(rio)m(rit\351)h(de)g
(l'abstraction)g(\(resp.)g(l'application\))i(est)c(inf\351rieure)j
(\(resp.)-276 1003 y(sup)s(\351rieure\))e(\340)h(celle)g(des)f(op)s
(\351rateurs.)367 1207 y FS(h)-15 b(h)p FO(fun)26 b FH(x)34
b FS(!)p 773 1156 47 4 v 25 w FH(e)6 b FS(i)-15 b(i)26
b FC(=)f FU(F)m(un)17 b(\()p FH(x)8 b FE(;)15 b FS(h)-15
b(h)p 1333 1156 V FH(e)8 b FS(i)-15 b(i)g FU(\))567 1345
y FS(h)g(h)p 622 1294 V FH(e)669 1359 y FF(1)p 733 1294
V 733 1345 a FH(e)780 1359 y FF(2)819 1345 y FS(i)g(i)26
b FC(=)f FU(App)16 b(\()-15 b FS(h)g(h)p 1239 1294 V
FH(e)1286 1359 y FF(1)1325 1345 y FS(i)g(i)p FE(;)15
b FS(h)-15 b(h)p 1475 1294 V FH(e)1524 1359 y FF(2)1563
1345 y FS(i)g(i)g FU(\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(54)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 55 55
TeXDict begin 55 54 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation55) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.55) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Mini-ML)37 b(et)h(le)f Fm(b)s(o)s(otstrap)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-198 a FU(F)m(un)31 b(\()p FH(x)8 b FU(,)31 b FH(e)6
b FU(\))31 b(d\351signe)g(une)g(fonction)g(qui)h(\340)e(la)h(va)m
(riable)h FH(x)39 b FU(\(le)30 b FP(pa)m(ram\350tre)p
FU(\))-276 -85 y(asso)s(cie)f(l'exp)m(ression)k FH(e)j
FU(\(le)31 b FP(co)m(rps)p FU(\).)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 43 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 53 a FU(App)f(\()p FH(e)-19 67 y FF(1)21 53 y FU(,)h
FH(e)117 67 y FF(2)156 53 y FU(\))g(d\351signe)g(l'application)i(d'une)
f(exp)m(ression)f FH(e)1693 67 y FF(1)1763 53 y FU(\(dont)g(on)-276
166 y(attend)f(qu'elle)i(s'\351value)g(en)e(une)h(abstraction\))g(\340)
g(une)g(exp)m(ression)g FH(e)2035 180 y FF(2)-276 279
y FU(\(l')p FP(a)m(rgument)p FU(\).)p 0 TeXcolorgray
-458 442 a(Nous)f(souhaitons)i(en)e(fait)g(que)h(le)g(langage)h(de)f
(notre)f(calculette)h(fonctionnelle)-458 555 y(aie)g(la)f(m\352me)g
(s\351mantique)h(op)s(\351rationnelle)h(que)f(le)g(sous-ensemble)f(de)h
(OCaml,)-458 667 y(nomm\351)f(mini-ML,)g(avec)h(lequel)h(sa)e(syntaxe)h
(se)f(confond.)-458 880 y(L'implantation)i(d'un)f(interp)m(r\350te)g
(ou)g(d'un)g(compilateur)g(dans)g(le)g(m\352me)-458 993
y(langage)h(qu'il)f(interp)m(r\350te)g(ou)g(compile)g(se)f(nomme)g(un)h
FP(b)s(o)s(otstrap)e FU(\(une)-458 1106 y(auto-g\351n\351ration\).)j(P)
m(a)m(r)f(exemple,)g(le)g(compilateur)g(OCaml)e(est)h(lui-m\352me)-458
1219 y(auto-g\351n\351r\351,)h(un)g(p)m(remier)g(compilateur)g
(\351tant)f(\351crit)g(en)h(langage)h(C.)p 0 0 1 TeXcolorrgb
-458 1332 a(Quelle)f(s\351mantique)g(op)s(\351rationnelle)h(p)s(our)f
(l'abstraction)g(et)f(l'application)15 b(?)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(55)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 56 56
TeXDict begin 56 55 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation56) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.56) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(V)m(a)m(riables)36 b(lib)m(res)h(d'une)g(abstraction)f(et)i
(d'une)f(application)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(On)30 b(p)s(eut)g(\351tendre)h(la)g
(d\351\034nition)h(p.)764 -247 y
SDict begin H.S end
 764 -247 a 0 TeXcolorgray
FU(49)p 0 TeXcolorgray 855 -307 a
SDict begin H.R end
 855 -307 a 855 -247
a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (variables_libres) cvn H.B /ANN pdfmark end
 855 -247 a 30 w FU(ainsi)f(:)261 -127 y Fl(\()334 -40
y FS(Lh)-15 b(h)p FO(fun)26 b FH(x)33 b FS(!)p 802 -91
47 4 v 25 w FH(e)7 b FS(i)-15 b(i)26 b FC(=)f FS(L)p
FC(\()p FH(e)6 b FC(\))p FS(nf)p FH(x)i FS(g)543 98 y(Lh)-15
b(h)p 661 46 V FH(e)708 112 y FF(1)p 763 46 V 763 98
a FH(e)809 112 y FF(2)849 98 y FS(i)g(i)26 b FC(=)f FS(L)p
FC(\()p FH(e)1164 112 y FF(1)1204 98 y FC(\))20 b FS([)g(L)p
FC(\()p FH(e)1478 112 y FF(2)1518 98 y FC(\))-458 310
y FO(Exemple)120 b FS(Lh)-15 b(h)p FO(fun)26 b FU(y)f
FS(!)p 1 0 0 TeXcolorrgb 26 w FU(x)p 0 TeXcolorgray 25
w FK(+)g FU(\()q FO(fun)g FU(x)h FS(!)f FU(x\))h(y)p
FS(i)-15 b(i)26 b FC(=)f FS(f)p 1 0 0 TeXcolorrgb FU(x)p
0 TeXcolorgray 1 w FS(g)p FU(.)30 b(Graphiquement)j(:)p
0 TeXcolorgray 0 TeXcolorgray 565 511 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 15.74615 7.87308 3.11034
} /N@outer-fun true /N@T-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 565 511 a FQ(F)n(un)395
668 y
tx@Dict begin  tx@NodeDict begin {7.22046 1.94397 14.60754 7.30377
3.11034 } false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 395 668 a FQ("y")456 642 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 456 642 a 693 668 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode
end  end

693 668 a FQ(BinOp)804 642 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 804 642 a 319 826 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 16.71814 8.35907 3.11034
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 319
826 a FQ(A)n(dd)388 800 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 388 800 a 1 0 0 TeXcolorrgb
634 826 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 634 826 a FQ(V)n(a)n(r)695 800 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 695 800 a
634 984 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-1-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 634 984 a FQ("x")695 958 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-1
/N@T-0-1-1-0 InitNC { NCLine  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 695 958 a 0 TeXcolorgray
1151 826 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 16.99585 8.49792
3.11034 } false /N@T-0-1-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1151 826 a FQ(App)1221 800 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1221 800 a 932
984 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 15.74615 7.87308 3.11034
} /N@inner-fun true /N@T-0-1-2-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 932 984 a FQ(F)n(un)998 958 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-2 /N@T-0-1-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 998 958 a 788 1142
a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-1-2-0-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 788 1142 a FQ("x")849 1116 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-2-0 /N@T-0-1-2-0-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 849 1116 a 1087 1142 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@inner-var true /N@T-0-1-2-0-1 16 {InitRnode } /NodeScale {} def
NewNode end  end

1087 1142 a FQ(V)n(a)n(r)1147 1116 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-2-0 /N@T-0-1-2-0-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1147 1116 a 1086
1299 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-1-2-0-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1086 1299 a FQ("x")1147 1273 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-2-0-1 /N@T-0-1-2-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1147 1273 a 1384
984 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@outer-var true /N@T-0-1-2-1 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1384 984 a FQ(V)n(a)n(r)1444 958 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-2 /N@T-0-1-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1444 958 a 1383
1142 a
tx@Dict begin  tx@NodeDict begin {7.22046 1.94397 14.60754 7.30377
3.11034 } false /N@T-0-1-2-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1383 1142 a FQ("y")1444 1116 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1-2-1 /N@T-0-1-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1444 1116 a -458
1382 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@inner-var /N@inner-fun InitNC { /AngleA 45.  def /AngleB
0.  def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 -458 1382 a -458 1382 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@outer-var /N@outer-fun InitNC { yB yA sub xB xA sub
Atan dup -40.  add /AngleA exch def -40.  sub 180 add /AngleB exch
def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 -458 1382 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(56)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 57 57
TeXDict begin 57 56 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation57) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.57) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)g(de)g(l'abstraction)
g(\026)g(p)m(remier)h(jet)p 0.2 0.2 0.7 TeXcolorrgb 0
TeXcolorgray 0 TeXcolorgray -458 -247 a FU(Essa)m(y)m(ons)69
-135 y FE(\032)26 b FS(`)e(h)-15 b(h)p FO(fun)27 b FH(x)33
b FS(!)p 628 -186 47 4 v 25 w FH(e)7 b FS(i)-15 b(i)26
b FG(\020)f FS(h)-15 b(h)p FO(fun)26 b FH(x)33 b FS(!)p
1278 -186 V 26 w FH(e)6 b FS(i)-15 b(i)109 b FQ(abs-dyn)-458
32 y FU(P)m(a)m(r)30 b(ailleurs)i(remplacer)e(une)h(va)m(riable)i
FH(x)38 b FU(pa)m(r)31 b(sa)f(valeur)i(laisse)e(inva)m(riante)j(la)-458
145 y(valeur)e(de)g(l'exp)m(ression)h(contenant)f FH(x)39
b FU(\(on)30 b(pa)m(rle)i(de)f FP(transpa)m(rence)-458
258 y(r\351f\351rentielle)p FU(\).)g(C'est)e(une)i(p)m(rop)m
(ri\351t\351)h(tr\350s)d(d\351sirable.)-458 471 y(En)h(conjonction)i
(avec)f FQ(abs-dyn)p FU(,)f(cela)h(implique)h(alo)m(rs)e(que)i(les)e
(deux)-458 584 y(p)m(rogrammes)g(suivants)g(sont)g(\351quivalents)j(:)
1018 584 y


 gsave nulldevice


 1018 584 a


 grestore


 -600 697 a


 gsave nulldevice


 -600 697 a


 grestore


 0 TeXcolorgray
0 TeXcolorgray -230 871 a FN(let)27 b FQ(x)h(=)g(1)f
FN(in)-147 970 y(let)g FQ(f)34 b(=)27 b FN(fun)g FQ(y)i
FR(!)f FQ(x)g FM(+)f FQ(y)i FN(in)-147 1070 y(let)e FQ(x)h(=)g(2)-230
1170 y FN(in)p 0 0 1 TeXcolorrgb 27 w FQ(f)p 0 TeXcolorgray
34 w(x)727 697 y


 gsave nulldevice


 727 697 a


 grestore


 727 697 a


 gsave nulldevice


 727 697 a


 grestore


 727 697
a


 gsave nulldevice


 727 697 a


 grestore


 727 697 a


 gsave nulldevice


 727 697 a


 grestore


 0 TeXcolorgray 0 TeXcolorgray
1097 871 a FN(let)f FQ(x)h(=)g(1)f FN(in)1180 970 y(let)g
FQ(f)34 b(=)27 b FN(fun)g FQ(y)i FR(!)f FQ(x)g FM(+)f
FQ(y)i FN(in)1180 1070 y(let)e FQ(x)h(=)g(2)1097 1170
y FN(in)p 0 0 1 TeXcolorrgb 27 w FQ(\()p FN(fun)f FQ(y)i
FR(!)f FQ(x)g FM(+)f FQ(y)q(\))p 0 TeXcolorgray 28 w(x)2054
697 y


 gsave nulldevice


 2054 697 a


 grestore


 2054 697 a


 gsave nulldevice


 2054 697 a


 grestore


 2054 697 a


 gsave nulldevice


 2054
697 a


 grestore


 -458 1200 a


 gsave nulldevice


 -458 1200 a


 grestore


 -458 1200 a


 gsave nulldevice


 -458 1200 a


 grestore



-458 1200 a


 gsave nulldevice


 -458 1200 a


 grestore


 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(57)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 58 58
TeXDict begin 58 57 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation58) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.58) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Arb)m(re)37 b(de)g(syntaxe)h(abstraite)f(du)g(p)m(remier)h(p)
m(rogramme)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray -458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458
-360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (AST_premier_prog) cvn /DEST pdfmark
end
 -458 -360 a 0 TeXcolorgray 0 TeXcolorgray
298 -135 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} /N@outer-x-let true /N@T-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 298 -135 a FQ(Let)-300 31 y
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 -300 31 a FQ("x")-239
5 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -239 5 a -1 31 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -1 31 a FQ(Const)98 5 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 98 5 a 77
197 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 77 197 a FQ(1)98 171 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 98 171 a 890 31 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} /N@f-let true /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 890 31
a FQ(Let)946 5 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 946 5 a 296 197 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 13.05237 6.52618 3.11034
} false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 296 197 a FQ("f")350
171 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 350 171 a 582 197 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 15.74615 7.87308 3.11034
} /N@fun true /N@T-0-2-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 582 197 a FQ(F)n(un)647 171
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 647 171 a 412 363 a
tx@Dict begin  tx@NodeDict begin {7.22046 1.94397 14.60754 7.30377
3.11034 } false /N@T-0-2-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 412 363 a FQ("y")473 337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 473
337 a 710 363 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-2-1-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 710 363 a FQ(BinOp)821 337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 821 337
a 449 529 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 16.71814 8.35907 3.11034
} false /N@T-0-2-1-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 449 529 a FQ(A)n(dd)519 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1 /N@T-0-2-1-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 519 503 a 765
529 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@outer-x-occur true /N@T-0-2-1-1-1 16 {InitRnode } /NodeScale {}
def NewNode end  end
 765 529 a FQ(V)n(a)n(r)825 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1 /N@T-0-2-1-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 825 503 a 764
695 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-1-1-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 764 695 a FQ("x")825 669 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1-1 /N@T-0-2-1-1-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 825 669 a 1064 529 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@y true /N@T-0-2-1-1-2 16 {InitRnode } /NodeScale {} def NewNode
end  end

1064 529 a FQ(V)n(a)n(r)1124 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1 /N@T-0-2-1-1-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1124 503 a 1063 695
a
tx@Dict begin  tx@NodeDict begin {7.22046 1.94397 14.60754 7.30377
3.11034 } false /N@T-0-2-1-1-2-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1063 695 a FQ("y")1124 669 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1-2 /N@T-0-2-1-1-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1124 669 a 1486 197 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} /N@inner-x-let true /N@T-0-2-2 16 {InitRnode } /NodeScale {} def
NewNode end  end

1486 197 a FQ(Let)1542 171 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1542 171 a 1110 363 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1110
363 a FQ("x")1170 337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1170 337 a 1408 363 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-2-2-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1408 363
a FQ(Const)1508 337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1508 337 a 1487 529 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-2-2-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1487 529
a FQ(2)1508 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-1 /N@T-0-2-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1508 503 a 1844 363 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 16.99585 8.49792
3.11034 } false /N@T-0-2-2-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1844 363 a FQ(App)1914
337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1914 337 a 1706 529 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@f-occur true /N@T-0-2-2-2-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1706 529 a FQ(V)n(a)n(r)1766
503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2 /N@T-0-2-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1766 503 a 1712 695 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 13.05237 6.52618 3.11034
} false /N@T-0-2-2-2-0-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1712 695 a FQ("f")1766 669
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-0 /N@T-0-2-2-2-0-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1766 669 a 2003 529 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@inner-x-occur true /N@T-0-2-2-2-1 16 {InitRnode } /NodeScale {}
def NewNode end  end
 2003 529 a FQ(V)n(a)n(r)2063
503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2 /N@T-0-2-2-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2063 503 a 2002 695 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-2-2-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 2002 695 a FQ("x")2063 669
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-1 /N@T-0-2-2-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2063 669 a -458 819 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@y /N@fun InitNC { yB yA sub xB xA sub Atan dup -20.
 add /AngleA exch def -20.  sub 180 add /AngleB exch def 0.67  0.67
 NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -458 819 a -458 819 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@inner-x-occur /N@inner-x-let InitNC { yB yA sub xB xA
sub Atan dup -60.  add /AngleA exch def -60.  sub 180 add /AngleB exch
def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 -458 819
a -458 819 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@f-occur /N@f-let InitNC { /AngleA 225.  def /AngleB
270.  def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 -458 819 a -458 819 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@outer-x-occur /N@outer-x-let InitNC { /AngleA 225. 
def /AngleB 225.  def 1.2  1.2  NCCurve  } if end  gsave 0.8 SLW 0
0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 -458 819 a 0 TeXcolorgray
0 TeXcolorgray 149 x FN(let)28 b FQ(x)g(=)f(1)g FN(in)-375
1068 y(let)h FQ(f)33 b(=)28 b FN(fun)e FQ(y)j FR(!)f
FQ(x)g FM(+)f FQ(y)i FN(in)111 b FQ(\(*)27 b(Ce)h(x)g(est)f(li\351)g
(\340)h(1.)f(*\))-375 1168 y FN(let)h FQ(x)g(=)f(2)-458
1267 y FN(in)g FQ(f)34 b(x)111 b(\(*)27 b(Ce)h(x)g(est)f(li\351)g(\340)
h(2.)f(*\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(58)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 59 59
TeXDict begin 59 58 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation59) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.59) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Arb)m(re)37 b(de)g(syntaxe)h(du)g(second)e(p)m(rogramme)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 185 -135 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} /N@outer-x-let true /N@T-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 185 -135 a FQ(Let)-429
31 y
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 -429 31 a FQ("x")-369 5 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -369 5 a -131 31 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -131
31 a FQ(Const)-31 5 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -31 5 a -52 197 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 -52 197 a FQ(1)-31
171 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -31 171 a 794 31 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 794 31 a FQ(Let)850 5 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 850
5 a 167 197 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 13.05237 6.52618 3.11034
} false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 167 197 a FQ("f")221 171 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 221 171 a 0 1 0
TeXcolorrgb 452 197 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 15.74615 7.87308 3.11034
} /N@outer-fun true /N@T-0-2-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 452 197 a FQ(F)n(un)518 171 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 518
171 a 282 363 a
tx@Dict begin  tx@NodeDict begin {7.22046 1.94397 14.60754 7.30377
3.11034 } false /N@T-0-2-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 282 363 a FQ("y")343 337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1
/N@T-0-2-1-0 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 343 337 a
581 363 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-2-1-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 581 363 a FQ(BinOp)692 337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1
/N@T-0-2-1-1 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 692 337 a 320
529 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 16.71814 8.35907 3.11034
} false /N@T-0-2-1-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 320 529 a FQ(A)n(dd)389 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1
/N@T-0-2-1-1-0 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 389 503 a 636 529
a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@in-outer-fun-x true /N@T-0-2-1-1-1 16 {InitRnode } /NodeScale
{} def NewNode end  end
 636 529 a FQ(V)n(a)n(r)696 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1
/N@T-0-2-1-1-1 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 696 503 a 635 695
a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-1-1-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 635 695 a FQ("x")696 669 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1-1
/N@T-0-2-1-1-1-0 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 696 669 a 934 529 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@in-outer-fun-y true /N@T-0-2-1-1-2 16 {InitRnode } /NodeScale
{} def NewNode end  end
 934
529 a FQ(V)n(a)n(r)994 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1
/N@T-0-2-1-1-2 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 994 503 a 933 695 a
tx@Dict begin  tx@NodeDict begin {7.22046 1.94397 14.60754 7.30377
3.11034 } false /N@T-0-2-1-1-2-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 933
695 a FQ("y")994 669 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1-2
/N@T-0-2-1-1-2-0 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 994 669 a 0 TeXcolorgray 1423
197 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} /N@inner-x-let true /N@T-0-2-2 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1423 197 a FQ(Let)1479 171 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1479 171 a 980 363
a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 980 363 a FQ("x")1041 337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1041 337 a 1279 363 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-2-2-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1279
363 a FQ(Const)1378 337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1378 337 a 1357 529 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-2-2-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1357
529 a FQ(2)1378 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-1 /N@T-0-2-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1378 503 a 1846 363 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 16.99585 8.49792
3.11034 } false /N@T-0-2-2-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1846 363
a FQ(App)1917 337 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1917 337 a 0 1 0 TeXcolorrgb 1604
529 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 15.74615 7.87308 3.11034
} /N@inner-fun true /N@T-0-2-2-2-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1604 529 a FQ(F)n(un)1669 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2 /N@T-0-2-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1669 503 a 1434
695 a
tx@Dict begin  tx@NodeDict begin {7.22046 1.94397 14.60754 7.30377
3.11034 } false /N@T-0-2-2-2-0-0 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1434 695 a FQ("y")1495 669 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-0
/N@T-0-2-2-2-0-0 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1495 669 a 1732 695
a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-2-2-2-0-1 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1732 695 a FQ(BinOp)1844 669 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-0
/N@T-0-2-2-2-0-1 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1844 669 a 1472 861
a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 16.71814 8.35907 3.11034
} false /N@T-0-2-2-2-0-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1472 861 a FQ(A)n(dd)1541 835 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-0-1
/N@T-0-2-2-2-0-1-0 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0 
setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore  grestore end
 1541 835 a 1788 861
a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@in-inner-fun-x true /N@T-0-2-2-2-0-1-1 16 {InitRnode } /NodeScale
{} def NewNode end  end
 1788 861 a FQ(V)n(a)n(r)1848 835 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-0-1
/N@T-0-2-2-2-0-1-1 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0 
setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore  grestore end
 1848 835 a 1787
1027 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-2-2-0-1-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1787 1027 a FQ("x")1848 1001 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-0-1-1
/N@T-0-2-2-2-0-1-1-0 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore  grestore end
 1848 1001 a 2086
861 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@in-inner-fun-y true /N@T-0-2-2-2-0-1-2 16 {InitRnode } /NodeScale
{} def NewNode end  end
 2086 861 a FQ(V)n(a)n(r)2146 835 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-0-1
/N@T-0-2-2-2-0-1-2 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0 
setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore  grestore end
 2146 835 a 2085
1027 a
tx@Dict begin  tx@NodeDict begin {7.22046 1.94397 14.60754 7.30377
3.11034 } false /N@T-0-2-2-2-0-1-2-0 16 {InitRnode } /NodeScale {}
def NewNode end  end
 2085 1027 a FQ("y")2146 1001 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-0-1-2
/N@T-0-2-2-2-0-1-2-0 InitNC { NCLine  } if end  gsave 0.8 SLW 0 1 0
 setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore  grestore end
 2146 1001 a 0 TeXcolorgray
2132 529 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@inner-x-occur true /N@T-0-2-2-2-1 16 {InitRnode } /NodeScale {}
def NewNode end  end
 2132 529 a FQ(V)n(a)n(r)2192 503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2 /N@T-0-2-2-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2192 503
a 2131 695 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-2-2-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 2131 695 a FQ("x")2192 669 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2-2-1 /N@T-0-2-2-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2192 669 a
-458 819 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@in-inner-fun-x /N@outer-x-let InitNC { /AngleA 225.
 def /AngleB 180.  def 1.25  1.25  NCCurve  } if end  gsave 0.8 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] -2 0 add  DashLine  grestore  grestore end
 -458 819 a -458 932 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@inner-x-occur /N@inner-x-let InitNC { yB yA sub xB xA
sub Atan dup -60.  add /AngleA exch def -60.  sub 180 add /AngleB exch
def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 -458 932 a -458 1045
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@in-outer-fun-x /N@outer-x-let InitNC { /AngleA 225.
 def /AngleB 225.  def 1.2  1.2  NCCurve  } if end  gsave 0.8 SLW 0
0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 -458 1045 a -458 1158 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@in-outer-fun-y /N@outer-fun InitNC { yB yA sub xB xA
sub Atan dup -20.  add /AngleA exch def -20.  sub 180 add /AngleB exch
def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 -458 1158 a -458 1158 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 0.0 0 0 /N@in-inner-fun-y /N@inner-fun InitNC { yB yA sub xB xA
sub Atan dup -20.  add /AngleA exch def -20.  sub 180 add /AngleB exch
def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 -458
1158 a -458 1158 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@in-inner-fun-x /N@inner-x-let InitNC { /AngleA 225.
 def /AngleB 210.  def 1.5  1.5  NCCurve  } if end  gsave 0.8 SLW 1
0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 -458 1158 a 0 TeXcolorgray 0 TeXcolorgray
-299 x FN(let)28 b FQ(x)g(=)f(1)g FN(in)-375 958 y(let)h
FQ(f)33 b(=)p 0 1 0 TeXcolorrgb 28 w FN(fun)26 b FQ(y)j
FR(!)f FQ(x)g FM(+)f FQ(y)p 0 TeXcolorgray 29 w FN(in)-375
1058 y(let)h FQ(x)g(=)f(2)-458 1158 y FN(in)p 0 1 0 TeXcolorrgb
27 w FQ(\()p FN(fun)g FQ(y)i FR(!)f FQ(x)g FM(+)f FQ(y)q(\))p
0 TeXcolorgray 29 w(x)110 b(\(*)28 b(Les)f(deux)h(x)g(sont)f(li\351s)g
(\340)g(2.)55 b(*\))p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(59)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 60 60
TeXDict begin 60 59 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation60) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.60) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Capture)37 b(de)g(va)m(riable,)g(liaison)h(statique)f(et)g
(dynamique)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray -458 -247 a FU(On)30 b(dit)g(que)i(la)e(va)m(riable)j(x)d
(sous)g(le)h FN(fun)e FU(a)h(\351t\351)g FP(captur\351e)h
FU(\(pa)m(r)h(le)e(troisi\350me)g FN(let)p FU(\).)-458
-135 y(En)g(d'autre)h(termes,)e(avec)i(notre)f(s\351mantique)h
FQ(abs-dyn)p FU(,)f(la)h(valeur)g(d'une)-458 -22 y(va)m(riable)h(p)s
(eut)e(changer)i(au)f(cours)f(de)h(l'\351valuation)h(\(selon)f
(l'environnement)-458 91 y(courant\))g(:)f(c'est)g(la)g
FP(liaison)i(dynamique)p FU(.)-458 304 y(P)m(eu)e(de)h(langages)h
(l'emploient)f(\(Lisp,)g(macros)e(C\),)i(ca)m(r)f(les)g(p)m(rogrammes)g
(sont)-458 417 y(alo)m(rs)g(plus)h(di\036ciles)h(\340)f(comp)m(rendre)g
(et)f(\340)g(maintenir.)-458 629 y(En)g(g\351n\351ral)i(on)e(p)m
(r\351f\350re)h(la)g FP(liaison)g(statique)g FU(\(dite)f(aussi)h
FP(lexicale)p FU(\))h(:)e(la)h(valeur)-458 742 y(des)f(va)m(riables)i
(lib)m(res)f(dans)g(le)f(co)m(rps)h(des)f(fonctions)h(est)e(\034g\351e)
i(au)f(moment)g(de)g(la)-458 855 y(d\351\034nition.)i(Le)e(p)m(remier)h
(p)m(rogramme)f(s'\351valuerait)i(alo)m(rs)e(en)h(3)f(et)g(le)h(second)
g(en)-458 968 y(4.)-458 1181 y FP(Nous)f(devons)i(donc)f(trouver)f(une)
h(s\351mantique)g(de)g(l'abstraction)g(qui)h(resp)s(ecte)-458
1293 y(la)e(transpa)m(rence)i(r\351f\351rentielle)f(et)f(la)h(liaison)g
(statique.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(60)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 61 61
TeXDict begin 61 60 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation61) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.61) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)g(de)g(l'application)
p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -261 a FU(Si)29 b(les)g(fonctions)g(sont)g(des)g(valeurs,)h(elles)
f(p)s(euvent)h(\352tre)f(retourn\351es)g(en)g(r\351sultat)-458
-161 y(\(c.-\340-d.)i(\352tre)f(la)h(valeur)g(d'une)h(application\).)h
(P)m(a)m(r)d(exemple)i(:)p 0 TeXcolorgray 0 TeXcolorgray
-458 13 a FN(let)c FQ(add)f(=)g FN(fun)g FQ(x)h FR(!)f
FN(fun)g FQ(y)i FR(!)f FQ(x)g FM(+)f FQ(y)i FN(in)-375
113 y(let)f FQ(incr)g(=)g(add)f(\(1\))83 b(\(*)27 b(incr)i(est)f(une)f
(fonction.)f(*\))-458 212 y FN(in)h FQ(incr)i(\(5\))-458
400 y FU(On)h(pa)m(rle)h(d'application)j FP(pa)m(rtielle)e
FU(\(pa)m(r)f(opp)s(osition)g(\340)g(application)h FP(compl\350te)p
FU(,)-458 513 y(qui)f(ne)g(retourne)f(pas)h(de)f(fonction,)h(comme)f
(add)h(1)f(5\).)-458 726 y FP(Nous)g(devons)i(donc)f(trouver)f(une)h
(s\351mantique)g(de)g(l'application)i(qui)f(p)s(ermette)-458
838 y(l'application)h(pa)m(rtielle.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(61)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 62 62
TeXDict begin 62 61 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation62) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.62) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(F)m(ermetures,)36 b(erreurs)g(de)i(t)m(ypage)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (erreurs_de_typage) cvn /DEST pdfmark
end
 -458 -360 a 113 x FU(La)30 b(solution)h(g\351n\351rale)h(aux)f
(contraintes)g(p)s(os\351es)e(pa)m(r)i(l'abstraction)g(et)-458
-135 y(l'application)i(consiste)d(\340)h(\351valuer)g(les)f(fonctions)h
(en)g(des)f FP(fermetures)p FU(.)-458 78 y(Une)g(fermeture)f(Clos)15
b(\()p FH(x)8 b FE(;)15 b FH(e)6 b FE(;)15 b(\032)p FU(\))32
b(est)e(fo)m(rm\351e)g(\340)g(pa)m(rtir)h(d'une)g(exp)m(ression)-458
191 y(fonctionnelle)h(F)m(un)17 b(\()p FH(x)8 b FE(;)15
b FH(e)6 b FU(\))32 b(et)d(d'un)j(environnement)g FE(\032)p
FU(.)e(Il)g(faut)g(donc)i(red\351\034nir)f(le)-458 304
y(t)m(yp)s(e)f(des)h(valeurs)-458 516 y FO(t)m(yp)s(e)f
FP(value)38 b FU(=)30 b(Int)g FO(of)37 b FP(int)g FK(|)30
b FU(Clos)g FO(of)36 b FP(string)k FK(*)30 b FP(exp)m(r)41
b FK(*)31 b FU(\()p FP(string)40 b FS(!)30 b FP(value)6
b FU(\);;)-458 729 y(et)30 b(aussi)g(l'implantation)i(de)f(la)g
(fonction)g(OCaml)e(eval.)-458 941 y FO(Rema)m(rque)121
b FU(D\351so)m(rmais,)30 b(les)g(exp)m(ressions)i(p)s(euvent)f(\352tre)
f(incoh\351rentes)h(\(on)-458 1054 y(pa)m(rle)g(d')p
FP(erreurs)f(de)h(t)m(ypage)p FU(\))h(:)e(il)h(faut)f(s'assurer)f
(qu'on)j(n'op)s(\350re)f(que)g(sur)f(des)-458 1167 y(entiers,)g(et)g
(qu'on)h(n'app)s(elle)i(que)e(des)f(fonctions.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(62)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 63 63
TeXDict begin 63 62 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation63) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.63) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)g(de)g(l'abstraction)
g(et)g(de)-529 -274 y(l'application)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -211 a
SDict begin H.S end
 -458 -211 a
-458 -211 a
SDict begin H.R end
 -458 -211 a -458 -211 a
SDict begin [/View [/XYZ H.V]/Dest (abs-app) cvn /DEST pdfmark end
 -458 -211 a 165 81
a FE(\032)25 b FS(`)g(h)-15 b(h)p FO(fun)26 b FH(x)33
b FS(!)p 724 29 47 4 v 26 w FH(e)6 b FS(i)-15 b(i)26
b FG(\020)f FU(Clos)15 b(\()p FH(x)8 b FE(;)15 b FH(e)6
b FE(;)15 b(\032)p FU(\))110 b FQ(abs)363 302 y FE(\032)25
b FS(`)g FH(e)556 316 y FF(1)621 302 y FG(\020)g FU(Clos)15
b(\()p FH(x)988 316 y FF(0)1028 302 y FE(;)g FH(e)1108
316 y FF(0)1148 302 y FE(;)g(\032)1235 316 y FF(0)1275
302 y FU(\))63 415 y FE(\032)25 b FS(`)g FH(e)256 429
y FF(2)321 415 y FG(\020)g FH(v)479 429 y FF(2)699 415
y FE(\032)746 429 y FF(0)806 415 y FS(\010)20 b FH(x)939
429 y FF(0)1004 415 y FS(7!)25 b FH(v)1162 429 y FF(2)1226
415 y FS(`)g FH(e)1347 429 y FF(0)1412 415 y FG(\020)g
FH(v)1570 429 y FF(0)p 63 463 1547 4 v 494 553 a FE(\032)h
FS(`)e(h)-15 b(h)p 702 502 47 4 v FH(e)749 567 y FF(1)p
814 502 V 814 553 a FH(e)861 567 y FF(2)900 553 y FS(i)g(i)26
b FG(\020)f FH(v)1139 567 y FF(0)1645 484 y FQ(app)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(63)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 64 64
TeXDict begin 64 63 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation64) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.64) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)g(de)g(l'abstraction)
g(et)g(de)-529 -274 y(l'application)g(\(suite\))p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -98 a
FO(Rema)m(rques)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 30 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 40 a FU(Dans)30 b(une)h(fermeture)e(Clos)15 b(\()p
FH(x)8 b FE(;)15 b FH(e)6 b FE(;)15 b(\032)p FU(\))32
b(on)f(p)s(eut)f(restreindre)-276 153 y(l'environnement)i
FE(\032)e FU(aux)h(va)m(riables)h(lib)m(res)g(de)e(la)h(fonction)g(F)m
(un)17 b(\()p FH(x)8 b FE(;)15 b FH(e)6 b FU(\))31 b(:)-91
266 y FE(\032)25 b FS(`)g(h)-15 b(h)p FO(fun)26 b FH(x)33
b FS(!)p 467 214 47 4 v 25 w FH(e)7 b FS(i)-15 b(i)15
b FO(as)h FH(f)45 b FG(\020)25 b FU(Clos)15 b(\()p FH(x)8
b FE(;)15 b FH(e)6 b FE(;)15 b(\032)p FS(jL)p FC(\()p
FH(f)22 b FC(\))p FU(\))108 b FQ(abs-opt)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 393 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 403 a FU(L'implantation)31 b(devrait)g(\351valuer)h
FH(e)919 417 y FF(1)989 403 y FU(avant)f FH(e)1266 417
y FF(2)1336 403 y FU(a\034n)g(de)g(v\351ri\034er)g(d'ab)s(o)m(rd)-276
516 y(que)g FH(e)-73 530 y FF(1)-3 516 y FU(s'\351value)g(bien)h(en)e
(une)h(fermeture)e(\(si)i(ce)f(n'est)g(pas)h(le)f(cas,)g(on)-276
629 y(gagne)h(du)g(temps)e(en)i(signalant)g(l'erreur)g(au)g(plus)g
(t\364t\).)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(64)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 65 65
TeXDict begin 65 64 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation65) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.65) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Strat\351gies)37 b(d'app)s(el)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Dans)30 b(la)h(r\350gle)g(de)f(l'application)k(\(c.-\340-d.)d(app)s
(el)g(de)g(fonction\),)g(l'a)m(rgument)g FH(e)2182 -233
y FF(2)-458 -135 y FU(est)e(d'ab)s(o)m(rd)j(\351valu\351)g(en)e
FH(v)414 -121 y FF(2)454 -135 y FU(,)g(et)g(cette)g(valeur)h(est)e
(pass\351e)i(ensuite)g(\340)f(la)-458 -22 y(fermeture)f(r\351sultant)h
(de)h(l'\351valuation)i(de)d FH(e)1021 -8 y FF(1)1061
-22 y FU(.)g(C'est)g(la)g(strat\351gie)g(d')p FP(app)s(el)i(pa)m(r)-458
91 y(valeur)p FU(,)f(emplo)m(y)m(\351e)i(dans)d(des)h(langages)g(comme)
f(OCaml)f(et)h(Java.)i(On)e(pa)m(rle)-458 204 y(aussi)g(de)h
FP(strat\351gie)f(stricte)p FU(.)-458 417 y(D'autres)g(langages,)h
(comme)f(Hask)m(ell,)i(emploient)f(une)g(strat\351gie)f(dite)g(d')p
FP(app)s(el)-458 530 y(pa)m(r)g(nom)p FU(,)g(qui)h(consiste)e(\340)h
(passer)g(l'a)m(rgument)g FP(non)h(\351valu\351)g FU(\340)f(la)g
(fonction)g(:)g(il)g(ne)-458 643 y(sera)e(\351valu\351)j(que)e(s'il)g
(est)f(n\351cessaire)i(au)f(calcul)i(du)e(r\351sultat)g(de)g(la)g
(fonction.)h(On)-458 755 y(pa)m(rle)h(aussi)g(de)f FP(strat\351gie)g
(pa)m(resseuse)p FU(.)-458 968 y(Une)g(optimisation)h(de)g(l'app)s(el)g
(pa)m(r)g(nom)g(est)e(l')p FP(app)s(el)j(pa)m(r)f(n\351cessit\351)f
FU(qui)h(ne)-458 1081 y(recalcule)h(pas)e(deux)h(fois)f(le)h(m\352me)e
(app)s(el)i(\(les)g(r\351sultats)e(sont)h(m\351mo)m(ris\351s\).)g(On)
-458 1194 y(pa)m(rle)h(aussi)g(de)f FP(strat\351gie)g(pleinement)i(pa)m
(resseuse)p FU(.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(65)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 66 66
TeXDict begin 66 65 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation66) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.66) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Non-terminaison)p 0.2 0.2 0.7 TeXcolorrgb 0
TeXcolorgray 0 TeXcolorgray -458 -247 a FU(En)30 b(th\351o)m(rie,)h
(nous)g(p)s(ouvons)g(d'o)m(res)g(et)f(d\351j\340)h(calculer)h(avec)f
(notre)f(calculette)-458 -135 y(tout)g(ce)g(qui)h(est)f(calculable)j
(avec)e(l'o)m(rdinateur)h(sous-jacent.)f(P)m(a)m(r)f(exemple,)-458
-22 y(nous)g(avons)h(d\351j\340)g(la)g(r\351currence,)g(comme)f(le)g
(montre)g(le)g(p)m(rogramme)h(suivant)-458 91 y(qui)g(ne)g(termine)f
(pas)g(:)139 204 y FN(let)e FQ(omega)e(=)i FN(fun)e FQ(f)34
b FR(!)28 b FQ(f)34 b(f)f FN(in)28 b FQ(omega)e(\(omega\))-458
317 y FU(Notre)k(st)m(yle)h(de)f(s\351mantique)h(qui)h(\351value)f
(directement)g(une)g(exp)m(ression)g(en)g(sa)-458 430
y(valeur)g(n'est)f(pas)h(p)m(ratique)h(p)s(our)e(\351tudier)h(la)g
(non-terminaison.)g(P)m(our)g(le)-458 543 y(p)m(rogramme)f(p)m
(r\351c\351dent,)i(cela)f(se)f(manifesterait)g(pa)m(r)h(l'o)s
(ccurrence)g(dans)g(la)-458 656 y(d\351rivation)h(de)54
834 y FE(\032)26 b FS(`)e(h)-15 b(h)p FU(f)16 b FS(i)-15
b(i)25 b FG(\020)h FH(v)545 848 y FF(1)765 834 y FE(\032)20
b FS(\010)g FU("f")25 b FS(7!)g FH(v)1224 848 y FF(1)1289
834 y FS(`)f(h)-15 b(h)p FU(f)26 b(f)15 b FS(i)-15 b(i)25
b FG(\020)h FH(v)p 54 883 1716 4 v 635 973 a FE(\032)g
FS(`)e(h)-15 b(h)p FU(f)26 b(f)15 b FS(i)-15 b(i)25 b
FG(\020)h FH(v)-458 1175 y FU(Le)k(p)m(remi\350re)h(p)m(r\351misse)f
(dit)g(que)h FE(\032)p FC(\()p FU("f")q FC(\))25 b(=)g
FH(v)1049 1189 y FF(1)1089 1175 y FU(,)30 b(donc)h FE(\032)25
b FC(=)g FE(\032)20 b FS(\010)g FU("f")26 b FS(7!)f FH(v)1980
1189 y FF(1)2019 1175 y FU(,)30 b(donc)p 0 0 1 TeXcolorrgb
-458 1287 a(la)g(conclusion)j(et)d(la)g(seconde)h(p)m(r\351misse)g
(sont)f(identiques,)i(donc)f(le)f(calcul)i(de)f FH(v)-458
1400 y FU(b)s(oucle.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(66)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 67 67
TeXDict begin 67 66 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation67) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.67) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(T)-9 b(uring-compl\351tude)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -360 a
SDict begin H.S end
 -458 -360 a
-458 -360 a
SDict begin H.R end
 -458 -360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (turing) cvn /DEST pdfmark end
 -458 -360 a 113 x
FU(Un)30 b(langage)i(muni)f(de)f(la)h(conditionnelle)i(et)d(de)h(la)g
(r\351currence)g(\(ou)f(seulement)-458 -135 y(du)h(b)m(ranchement)h
(conditionnel\))h(p)s(ermet)c(de)i(sp)s(\351ci\034er)f(tous)g(les)g
(calculs)i(qui)-458 -22 y(sont)e(p)s(ossibles)g(pa)m(r)h(l'o)m
(rdinateur)h(sous-jacent)f(:)f(on)h(le)f(dit)h FP(T)-8
b(uring-complet)p FU(.)-458 191 y(Cette)29 b(p)m(rop)m(ri\351t\351)j
(est)d(tr\350s)h(utile)h(mais)e(elle)i(implique)h(n\351cessairement)
-458 304 y(l'existence)e(de)f(p)m(rogrammes)f(qui)h(ne)h(terminent)e
(pas)h(\(p)s(our)g(certaines)f(donn\351es\))-458 417
y(et)i(l'inexistence)i(de)f(p)m(rogrammes)e(p)s(ermettant)h(de)g(les)g
(reconna\356tre)i(tous)-458 530 y(\()p FP(incompl\351tude)g(de)f(G\366)
s(del)p FU(\).)g(L'id\351e)g(est)f(la)g(suivante.)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(67)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 68 68
TeXDict begin 68 67 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation68) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.68) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(T)-9 b(uring-compl\351tude)36 b(\(suite\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Raisonnons)c(pa)m(r)f(l'absurde.)-458
-35 y(Supp)s(osons)g(donc)g(l'existence)h(d'un)f(p)m(r\351dicat)h(de)e
(terminaison.)h(Soit)g FH(f)49 b FU(la)-458 78 y(fonction)31
b(telle)f(que)h(p)s(our)g(toute)f(fonction)h FH(g)10
b FU(,)30 b(si)g FH(g)41 b FU(termine)30 b(toujours)g(\(c.-\340-d.)-458
191 y FS(8)p FH(x)8 b FE(:)p FH(g)i FC(\()p FH(x)e FC(\))31
b FU(est)f(d\351\034ni\))h(alo)m(rs)g FH(f)20 b FC(\()p
FH(g)10 b FC(\))31 b FU(ne)g(termine)f(pas,)g(sinon)h
FH(f)20 b FC(\()p FH(g)10 b FC(\))31 b FU(termine.)f(Dans)-458
304 y(ce)g(cas,)g FH(f)20 b FC(\()p FH(f)g FC(\))30 b
FU(ne)h(termine)f(pas)g(si)g FH(f)50 b FU(termine,)30
b(et)g FH(f)19 b FC(\()p FH(f)h FC(\))31 b FU(termine)f(si)g
FH(f)49 b FU(ne)31 b(termine)-458 417 y(pas,)f(ce)h(qui)g(est)e
(contradictoire.)j(Donc)f(un)g(tel)f(p)m(r\351dicat)i(n'existe)f(pas.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(68)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 69 69
TeXDict begin 69 68 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation69) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.69) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Probl\350mes)37 b(ind\351cidables)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -360 a
SDict begin H.S end

-458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (indecidabilite) cvn /DEST pdfmark
end
 -458
-360 a 113 x FU(On)30 b(dit)g(que)i(le)e(p)m(robl\350me)i(de)e(la)h
(terminaison)g(\(ou)f(de)h(l')p FP(a)m(rr\352t)g(de)f(la)h(machine)g
(de)-458 -135 y(T)-8 b(uring)p FU(\))31 b(est)f FP(ind\351cidable)p
FU(.)-458 78 y(La)g(n\351gation)i(de)e(tout)g(p)m(robl\350me)i
(ind\351cidable)h(est)d(ind\351cidable)j(aussi.)-458
291 y(Il)d(est)f(imp)s(o)m(rtant)i(de)f(conna\356tre)i(quelques-uns)g
(de)f(ces)f(p)m(robl\350mes)h(ca)m(r)g(ils)f(n'ont)-458
403 y FP(th\351o)m(riquement)h FU(pas)g(de)g(solution)g(en)f
(g\351n\351ral.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(69)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 70 70
TeXDict begin 70 69 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation70) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.70) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Probl\350mes)37 b(ind\351cidables)f(\(suite\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(P)m(our)30 b(les)g(p)m(rogrammes)g(des)h(langages)g(T)-8
b(uring-complets,)32 b(sont)e(ind\351cidables)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 -120 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 -110 a FU(la)g(terminaison)15
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 18
a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 28 a FU(la)30
b(valeur)i(d'une)f(va)m(riable)i(\340)d(un)h(moment)f(donn\351)h(de)g
(l'ex\351cution)h(\(en)-276 141 y(pa)m(rticulier)g(savoir)e(si)g(elle)h
(est)f(initialis\351e)i(ou)f(non,)g(si)f(le)g(p)m(robl\350me)i(se)e(p)s
(ose)-276 254 y(dans)g(le)h(langage)h(consid\351r\351)f(\026)g(compa)m
(rez)g(OCaml,)e(C)h(et)g(Java\))15 b(;)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 382 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 392 a FU(l'app)s(el)31 b(d'une)h(fonction)f(\(en)g
(pa)m(rticulier)h(le)e(p)m(robl\350me)i(du)f FP(co)s(de)f(mo)m(rt)p
FU(\).)p 0 TeXcolorgray -458 530 a FO(Rema)m(rque)121
b FU(On)30 b(p)s(eut)g(pa)m(rfois)h(r\351soudre)g(ces)f(p)m
(robl\350mes)h(sur)f(des)g(cas)-458 643 y(pa)m(rticuliers.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(70)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 71 71
TeXDict begin 71 70 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation71) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.71) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Les)37 b(termes)g(non-clos)g(revus)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Nous)30 b(avons)h(p)m(r\351sent\351)g(une)g(analyse)h(statique)f
(\(p.)1269 -247 y
SDict begin H.S end
 1269 -247 a 0 TeXcolorgray FU(49)p
0 TeXcolorgray 1360 -307 a
SDict begin H.R end
 1360 -307 a 1360 -247 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (variables_libres) cvn H.B /ANN pdfmark end
 1360
-247 a FU(\))f(qui)h(nous)g(donne)h(les)-458 -135 y(va)m(riables)g(lib)
m(res)f(d'une)h(exp)m(ression.)f(Nous)g(avons)g(vu)g(qu'une)h(exp)m
(ression)g(close)-458 -22 y(ne)e(p)s(eut)h(\351chouer)g(pa)m(r)g
(absence)g(de)g(liaison.)h(T)-8 b(ous)30 b(les)g(compilateurs)h
(\(comme)-458 91 y(OCaml\))e(rejettent)h(les)g(p)m(rogrammes)g
(non-clos,)i(mais,)d(du)i(coup,)h(rejettent)-458 204
y(d'inno)s(cents)f(p)m(rogrammes,)f(comme)g FO(if)36
b(true)30 b(then)h FU(1)f FO(else)g FU(x.)-458 417 y(P)m(our)g
(accepter)h(ce)f(t)m(yp)s(e)h(d'exemple)h(\(non-clos\),)g(il)e
(faudrait)h(p)s(ouvoir)g(p)m(r\351dire)h(le)-458 530
y(\035ot)e(de)h(contr\364le)f(\(ici,)i(quelle)f(b)m(ranche)i(de)d(la)h
(conditionnelle)i(est)d(emp)m(runt\351e)-458 643 y(p)s(our)f(toutes)g
(les)g(ex\351cutions\).)h(Dans)g(le)f(cas)h(ci-dessus)f(cela)h(est)e
(trivial,)j(mais)d(en)-458 755 y(g\351n\351ral)j(le)g(p)m(robl\350me)g
(est)f(ind\351cidable,)j(et)d(ce)g(ne)h(p)s(eut)f(donc)i(\352tre)d(une)
i(analyse)-458 868 y(statique)f(\(ca)m(r)h(la)g(compilation)h(doit)e
(toujours)g(terminer\).)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(71)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 72 72
TeXDict begin 72 71 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation72) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.72) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(F)m(onctions)37 b(r\351cursives)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(P)m(our)30 b(mettre)f(en)i(\351vidence)h(la)f(puissance)g(de)g
(mini-ML,)f(vo)m(y)m(ons)j(comment)-458 -135 y(d\351\034nir)e(des)f
(fonctions)h(r\351cursives)f(\340)h(l'aide)h(de)e(la)h(fonction)g
(auto-applicative)-458 -22 y(omega.)-458 191 y(D\351\034nissons)g(d'ab)
s(o)m(rd)g(une)g(fonction)g(\034x,)g(traditionnellement)h(app)s
(el\351e)g(le)-458 304 y FP(combinateur)f(Y)f(de)h(p)s(oint)f(\034xe)h
(de)g(Curry)f FU(:)p 0 TeXcolorgray 0 TeXcolorgray -458
503 a FN(let)e FQ(omega)e(=)h FN(fun)g FQ(f)34 b FR(!)27
b FQ(f)34 b(f)g FN(in)-375 603 y(let)28 b FQ(\034x)g(=)f
FN(fun)g FQ(g)h FR(!)g FQ(omega)e(\()p FN(fun)h FQ(h)h
FR(!)p 0 0 1 TeXcolorrgb 28 w FN(fun)e FQ(x)i FR(!)p
0 TeXcolorgray 28 w FQ(g)g(\(h)g(h\))p 0 0 1 TeXcolorrgb
28 w(x)p 0 TeXcolorgray(\))g FN(in)-375 702 y FM(...)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(72)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 73 73
TeXDict begin 73 72 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation73) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.73) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(P)m(oint)37 b(\034xe)i(d'une)d(fonction)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(On)30 b(d\351montre)g(\(p)s(\351niblement\))i(que)f(l'\351valuation)
i(de)e(\(\034x)g(f)36 b(x\))30 b(a)h(la)f(fo)m(rme)g(:)210
329 y FE(:)15 b(:)g(:)517 44 y(:)g(:)g(:)182 b(\032)25
b FS(`)g(h)-15 b(h)p FU(f)25 b(\(\034x)h(f\))f(x)q FS(i)-15
b(i)25 b FG(\020)h FH(v)p 517 93 1077 4 v 1002 182 a
FE(:)15 b(:)g(:)1043 268 y FS(\001)1043 308 y(\001)1043
348 y(\001)p 210 377 1403 4 v 543 467 a FE(\032)26 b
FS(`)e(h)-15 b(h)p FU(\()q(\034x)26 b(f\))f(x)p FS(i)-15
b(i)26 b FG(\020)f FH(v)-458 669 y FU(En)k(d'autre)g(termes,)e(p)s(our)
i(tout)f(x)h(on)h(a)e(\(\034x)i(f)6 b(\))28 b(x)h(=)g(f)34
b(\(\034x)c(f)6 b(\))28 b(x,)h(soit)g(\(\034x)g(f)6 b(\))28
b(=)h(f)-458 782 y(\(\034x)i(f)6 b(\).)30 b(D'autre)g(pa)m(rt,)h(pa)m
(r)g(d\351\034nition,)h(le)f(p)s(oint)g(\034xe)g FH(p)i
FU(d'une)f(fonction)f FH(f)-458 894 y FU(v\351ri\034e)g
FH(p)e FC(=)c FH(f)19 b FC(\()p FH(p)t FC(\))p FU(.)-458
1107 y(Donc)31 b(le)f(p)s(oint)h(\034xe)g(d'une)g(fonction)g(f,)f
FP(s'il)h(existe)p FU(,)f(est)g(\(\034x)g(f)6 b(\).)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(73)k(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 74 74
TeXDict begin 74 73 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation74) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.74) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(F)m(acto)m(rielle)36 b(et)i(cas)f(g\351n\351ral)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(P)m(osons)p 0 TeXcolorgray 0 TeXcolorgray
-375 -48 a FN(let)28 b FQ(p)n(re_fact)f(=)g FN(fun)g
FQ(f)33 b FR(!)28 b FN(fun)f FQ(n)g FR(!)h FN(ifz)f FQ(n)h
FN(then)f FQ(1)g FN(else)i FQ(n)e FM(*)g FQ(f)34 b(\(n)p
FM(-)p FQ(1\))27 b FN(in)-375 51 y(let)h FQ(fact)f(=)h(\034x)g(\(p)n
(re_fact\))g FN(in)f FM(...)-458 264 y FU(Donc)k(fact)e(est)h(le)g(p)s
(oint)h(\034xe)g(de)g(p)m(re_fact,)g(s'il)f(existe,)h(c'est-\340-dire)
-260 477 y FQ(fact)c(=)h(p)n(re_fact)f(\(fact\))h(=)f
FN(fun)g FQ(n)h FR(!)f FN(ifz)h FQ(n)f FN(then)g FQ(1)g
FN(else)i FQ(n)e FM(*)h FQ(fact)f(\(n)p FM(-)p FQ(1\))-458
689 y FU(Donc)k(fact)e(est)h(la)h(fonction)g(facto)m(rielle)g
(\(\351quation)h(de)f(r\351currence\).)-458 902 y(On)f(p)s(eut)g(donc)h
(p)m(r\351d\351\034nir)i(un)e(op)s(\351rateur)f(de)h(p)s(oint)f(\034xe)
h(\034x)g(\(qui)g(n'est)f(pas)-458 1014 y(fo)m(rc\351ment)g(celui)h(de)
g(Curry\))f(et)g(p)s(ermettre)f(au)i(p)m(rogrammeur)f(de)h(s'en)f
(servir)-458 1127 y(directement.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(74)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 75 75
TeXDict begin 75 74 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation75) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.75) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Liaison)37 b(lo)s(cale)g(r\351cursive)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(P)m(our)30 b(plus)h(de)g(commo)s(dit\351,)e(\351tendons)j(la)e
(syntaxe)h(avec)g(une)g(liaison)h(lo)s(cale)-458 -135
y(r\351cursive.)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -20 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -276 -10 a FU(Syntaxe)f(concr\350te)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -276 115
a FM(Expression)39 b(::=)j(...)g(|)-189 214 y("let")f("rec")h(ident)f
("=")h(Expression)e("in")i(Expression)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 417 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb -276 427 a FU(Syntaxe)31
b(abstraite)p 0 TeXcolorgray -276 540 a FO(t)m(yp)s(e)f
FP(exp)m(r)41 b FU(=)30 b FK(...)g(|)g FU(LetRec)h FO(of)36
b FP(string)k FK(*)30 b FP(exp)m(r)42 b FK(*)30 b FP(exp)m(r)10
b FU(;;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
717 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb
-276 727 a FU(Analyse)31 b(syntaxique)p 0 TeXcolorgray
-276 840 a FS(h)-15 b(h)p FO(let)25 b(rec)f FH(x)34 b
FU(=)p 230 789 47 4 v 25 w FH(e)277 854 y FF(1)341 840
y FO(in)p 442 789 V 26 w FH(e)488 854 y FF(2)528 840
y FS(i)-15 b(i)25 b FC(=)g FU(LetRec)16 b(\()p FH(x)8
b FE(;)15 b FS(h)-15 b(h)p 1160 789 V FH(e)1208 854 y
FF(1)1247 840 y FS(i)g(i)p FE(;)15 b FS(h)-15 b(h)p 1397
789 V FH(e)1445 854 y FF(2)1485 840 y FS(i)g(i)g FU(\))p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 1018 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb -276
1028 a FU(V)m(a)m(riables)32 b(lib)m(res)p 0 TeXcolorgray
-276 1141 a FS(Lh)-15 b(h)p FO(let)24 b(rec)h FH(x)33
b FU(=)p 293 1089 V 26 w FH(e)340 1155 y FF(1)404 1141
y FO(in)p 504 1089 V 25 w FH(e)551 1155 y FF(2)590 1141
y FS(i)-15 b(i)26 b FC(=)f(\()p FS(L)p FC(\()p FH(e)940
1155 y FF(1)980 1141 y FC(\))c FS([)f(L)p FC(\()p FH(e)1255
1155 y FF(2)1295 1141 y FC(\)\))p FS(nf)p FH(x)8 b FS(g)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(75)i(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 76 76
TeXDict begin 76 75 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation76) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.76) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(op)s(\351rationnelle)g(de)g(la)h(liaison)g
(lo)s(cale)f(r\351cursive)p 0.2 0.2 0.7 TeXcolorrgb 0
TeXcolorgray 0 TeXcolorgray -458 -247 a FU(On)30 b(p)s(eut)g
(d\351\034nir)i(la)e(s\351mantique)h(de)g(cette)f(construction)h(de)f
(deux)i(fa\347ons.)-458 -135 y(La)e(p)m(remi\350re)h(consiste)f(\340)g
(ne)h(pas)g(la)f(consid\351rer)h(comme)f(\351l\351mentaire)h(\(ou)-458
-22 y FP(native)p FU(\))g(et)f(exp)m(rimer)h(sa)f(s\351mantique)h(en)g
(fonction)g(de)f(celle)i(d'une)f(autre)-458 91 y(construction,)g(en)f
(l'o)s(ccurrence)i(\(en)e(supp)s(osant)h(que)g(l'op)s(\351rateur)h
(\034x)f(est)-458 204 y(p)m(r\351d\351\034ni)h(dans)f(l'interp)m
(r\350te\))h(:)-5 406 y FE(\032)25 b FS(`)g(h)-15 b(h)p
FO(let)25 b FH(x)34 b FU(=)25 b(\034x)h(\()p FO(fun)g
FH(x)33 b FS(!)p 1006 354 47 4 v 26 w FH(e)1052 420 y
FF(1)1092 406 y FU(\))25 b FO(in)p 1252 354 V 25 w FH(e)1299
420 y FF(2)1338 406 y FS(i)-15 b(i)26 b FG(\020)f FH(v)p
-5 454 1592 4 v 188 544 a FE(\032)g FS(`)g(h)-15 b(h)p
FO(let)25 b(rec)g FH(x)33 b FU(=)p 848 493 47 4 v 26
w FH(e)894 558 y FF(1)959 544 y FO(in)p 1059 493 V 25
w FH(e)1106 558 y FF(2)1145 544 y FS(i)-15 b(i)26 b FG(\020)f
FH(v)1622 475 y FQ(let-rec)-458 748 y FU(La)30 b(seconde)h(consiste)f
(\340)h(consid\351rer)g(cette)f(construction)g(comme)g(di\033\351rente)
-458 861 y(des)g(autres)g(:)-139 1040 y FE(\032)20 b
FS(\010)g FH(x)33 b FS(7!)26 b FH(v)253 1054 y FF(1)317
1040 y FS(`)f FH(e)438 1054 y FF(1)503 1040 y FG(\020)g
FH(v)661 1054 y FF(1)881 1040 y FE(\032)20 b FS(\010)g
FH(x)34 b FS(7!)25 b FH(v)1273 1054 y FF(1)1338 1040
y FS(`)f FH(e)1458 1054 y FF(2)1524 1040 y FG(\020)h
FH(v)1682 1054 y FF(2)p -139 1088 1861 4 v 173 1178 a
FE(\032)g FS(`)g(h)-15 b(h)p FO(let)25 b(rec)g FH(x)33
b FU(=)p 833 1127 47 4 v 26 w FH(e)880 1192 y FF(1)944
1178 y FO(in)p 1044 1127 V 25 w FH(e)1091 1192 y FF(2)1130
1178 y FS(i)-15 b(i)26 b FG(\020)f FH(v)1369 1192 y FF(2)1756
1109 y FQ(let-rec)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(76)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 77 77
TeXDict begin 77 76 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation77) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.77) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Interp)m(r\351tation)36 b(de)h(la)h(liaison)g(lo)s(cale)f
(r\351cursive)g(native)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(L'implantation)32 b(imm\351diate)e(des)g
(exp)m(ressions)i(r\351cursives)e(natives)h(est)p 0 TeXcolorgray
0 TeXcolorgray -458 -48 a FN(let)d(rec)f FQ(eval)h(env)h(e)e(=)g
FN(match)f FQ(e)i FN(with)f FM(...)-458 51 y(|)81 b FQ(LetRec)26
b(\(x,e)63 63 y FI(1)100 51 y FQ(,e)160 63 y FI(2)197
51 y FQ(\))i FR(!)-250 151 y FN(let)f(rec)h FQ(env')g(=)f(extend)g(env)
i(\(x,v)811 163 y FI(1)849 151 y FQ(\))166 b(\(*)27 b
Fk(\032)19 b FR(\010)f Fo(x)31 b FR(7!)23 b Fo(v)1506
163 y FI(1)1570 151 y FQ(*\))-250 251 y FN(and)j FQ(v)-47
263 y FI(1)17 251 y FQ(=)i(eval)f(env')h(e)478 263 y
FI(1)708 251 y FQ(\(*)f Fk(\032)19 b FR(\010)f Fo(x)31
b FR(7!)23 b Fo(v)1167 263 y FI(1)1226 251 y FR(`)g Fo(e)1337
263 y FI(1)1396 251 y Fp(\020)h Fo(v)1541 263 y FI(1)1605
251 y FQ(*\))-250 350 y FN(in)j FQ(eval)h(env')f(e)213
362 y FI(2)443 350 y FQ(\(*)h Fk(\032)18 b FR(\010)g
Fo(x)31 b FR(7!)23 b Fo(v)902 362 y FI(1)962 350 y FR(`)g
Fo(e)1073 362 y FI(2)1132 350 y Fp(\020)g Fo(v)1276 362
y FI(2)1340 350 y FQ(*\))-458 563 y FU(P)m(our)30 b(des)g(raisons)h
(techniques)h(li\351es)e(au)h(t)m(ypage)h(de)e(OCaml,)g(il)h(faut)f
(\351crire)g(en)-458 676 y(fait)p 0 TeXcolorgray 0 TeXcolorgray
-458 875 a FN(let)e(rec)f FQ(eval)h(env)h(e)e(=)g FN(match)f
FQ(e)i FN(with)f FM(...)-458 975 y(|)81 b FQ(LetRec)26
b(\(x,e)63 987 y FI(1)100 975 y FQ(,e)160 987 y FI(2)197
975 y FQ(\))i FR(!)-250 1074 y FN(let)f(rec)h FQ(env')g(=)p
0 0 1 TeXcolorrgb 27 w FN(fun)f FQ(x)h FR(!)p 0 TeXcolorgray
27 w FQ(extend)g(env)h(\(x,)f(v)1165 1086 y FI(1)p 0 0 1
TeXcolorrgb 1202 1074 a FQ(\(\))p 0 TeXcolorgray(\))p
0 0 1 TeXcolorrgb 28 w(x)p 0 TeXcolorgray -250 1174 a
FN(and)e FQ(v)-47 1186 y FI(1)17 1174 y FQ(=)p 0 0 1
TeXcolorrgb 28 w FN(fun)g FQ(\(\))j FR(!)p 0 TeXcolorgray
27 w FQ(eval)f(env')g(e)830 1186 y FI(1)-250 1274 y FN(in)f
FQ(eval)h(env')f(e)213 1286 y FI(2)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(77)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 78 78
TeXDict begin 78 77 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation78) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.78) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Les)37 b(exp)m(ressions)f(mutuellement)i(r\351cursives)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (expressions_mutuellement_recursives)
cvn /DEST pdfmark end
 -458 -360 a 113 x FU(Le)30 b FO(let)f(rec)h FU(multiple)h
(\(avec)g FO(and)p FU(\))g(p)s(eut)f(toujours)g(se)g(ramener)g(\340)h
(un)g FO(let)e(rec)-458 -135 y FU(simple)h(\(avec)h FO(in)p
FU(\))g(en)f(pa)m(ram\351trant)h(l'une)g(des)g(d\351\034nitions)h(pa)m
(r)f(rapp)s(o)m(rt)f(\340)-458 -22 y(l'autre.)h(P)m(osons)303
91 y FO(let)f(rec)f FH(x)38 b FU(=)p 774 40 47 4 v 31
w FH(e)820 105 y FF(1)890 91 y FO(and)31 b FH(y)39 b
FU(=)p 1253 40 V 31 w FH(e)1299 105 y FF(2)1369 91 y
FO(in)p 1474 40 V 30 w FH(e)-458 204 y FU(o\371)30 b
FH(x)k FS(6)p FC(=)25 b FH(y)10 b FU(,)30 b(est)f(\351quivalent)k(\(pa)
m(r)e(d\351\034nition\))i(\340)p 0 TeXcolorgray 0 TeXcolorgray
186 314 a FO(let)c(rec)g FH(x)39 b FU(=)p 0 0 1 TeXcolorrgb
30 w FO(fun)31 b FH(y)40 b FS(!)p 0 TeXcolorgray 1023
263 V 30 w FH(e)1069 328 y FF(1)1139 314 y FO(in)321
427 y(let)30 b(rec)f FH(y)40 b FU(=)p 0 0 1 TeXcolorrgb
30 w FO(let)30 b FH(x)38 b FU(=)30 b FH(x)39 b FU(\()p
FH(y)10 b FU(\))30 b FO(in)p 0 TeXcolorgray 1447 376
V 30 w FH(e)1494 441 y FF(2)1563 427 y FO(in)p 0 0 1
TeXcolorrgb 321 540 a(let)g FH(x)38 b FU(=)30 b FH(x)39
b FU(\()p FH(y)10 b FU(\))p 0 TeXcolorgray 0 0 1 TeXcolorrgb
186 653 a FO(in)p 0 TeXcolorgray 291 602 V 30 w FH(e)-458
762 y FU(On)28 b(p)s(eut)h(ensuite)h(co)s(der)e(les)h
FO(let)f(rec)g FU(simples)h(avec)g(\034x)h(ou)f(les)g(consid\351rer)g
(natifs)-458 874 y(dans)i(le)f(langage)i(interp)m(r\351t\351.)f(Dans)g
(les)f(deux)h(cas,)g(il)f(n'y)h(a)g(pas)f(b)s(esoin)-458
987 y(d'\351tendre)h(la)g(s\351mantique)g(op)s(\351rationnelle.)h(Il)e
(faut)g(n\351anmoins)i(p)s(enser)e(\340)-458 1100 y(g\351n\351raliser)h
(notre)f(\351quivalence)j(syntaxique)g(\340)d FH(n)i
FU(va)m(riables)g(:)e FO(let)f(rec)h FH(x)1962 1114 y
FF(1)2031 1100 y FU(=)p 2132 1049 V 31 w FH(e)2178 1114
y FF(1)-458 1213 y FO(and)h FH(x)-235 1227 y FF(2)-166
1213 y FU(=)p -66 1162 V 30 w FH(e)-19 1227 y FF(2)50
1213 y FO(and)g FU(.)15 b(.)g(.)46 b FO(and)31 b FH(x)605
1227 y FD(n)676 1213 y FU(=)p 777 1162 V 31 w FH(e)823
1227 y FD(n)895 1213 y FO(in)p 1000 1162 V 30 w FH(e)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(78)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 79 79
TeXDict begin 79 78 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation79) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.79) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Les)37 b(exp)m(ressions)f(pa)m(rall\350les)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (expressions_paralleles) cvn /DEST
pdfmark end
 -458 -360 a 113 x FU(Nous)30 b(p)s(ouvons)i(aussi)e(ajouter)g
(\340)h(notre)f(langage)i(la)f(construction)178 -135
y FO(let)e FH(x)39 b FU(=)p 494 -186 47 4 v 30 w FH(e)541
-121 y FF(1)610 -135 y FO(and)31 b FH(y)40 b FU(=)p 973
-186 V 30 w FH(e)1020 -121 y FF(2)1089 -135 y FO(in)p
1194 -186 V 30 w FH(e)67 b FU(o\371)31 b FH(x)i FS(6)p
FC(=)25 b FH(y)-458 -22 y FU(Si)30 b FH(x)k FS(2)25 b(L)p
FC(\()p FH(e)-57 -8 y FF(2)-17 -22 y FC(\))p FU(,)30
b(nous)h(la)g(d\351\034nissons)g(comme)e(\351tant)i(\351quivalente)h
(\340)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb
408 88 a FO(let)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 29
w FH(z)38 b FU(=)30 b FH(x)39 b FO(in)p 0 TeXcolorgray
543 201 a(let)30 b FH(x)38 b FU(=)p 860 150 V 31 w FH(e)906
215 y FF(1)976 201 y FO(in)543 314 y(let)30 b FH(y)40
b FU(=)p 0 0 1 TeXcolorrgb 30 w FO(let)30 b FH(x)38 b
FU(=)30 b FH(z)38 b FO(in)p 0 TeXcolorgray 1360 263 V
30 w FH(e)1406 328 y FF(2)408 427 y FO(in)p 513 376 V
30 w FH(e)-458 538 y FU(o\371)30 b FH(z)j FS(62)25 b(L)p
FC(\()p FH(e)-40 552 y FF(1)0 538 y FC(\))20 b FS([)g(L)p
FC(\()p FH(e)274 552 y FF(2)314 538 y FC(\))h FS([)f(L)p
FC(\()p FH(e)6 b FC(\))p FU(,)31 b(p)s(our)f(n'\352tre)g(captur\351)h
(ni)g(pa)m(r)g FH(e)1728 552 y FF(1)1768 538 y FU(,)f(ni)h(pa)m(r)g
FH(e)2109 552 y FF(2)2149 538 y FU(,)f(ni)-458 650 y(pa)m(r)h
FH(e)6 b FU(.)-458 763 y(Il)30 b(n'y)h(a)f(donc)i(pas)e(b)s(esoin)h
(d'\351tendre)g(la)g(s\351mantique)g(op)s(\351rationnelle)h(p)s(our)
-458 876 y(traiter)d(cette)h(construction)h(:)f(une)h(\351quivalence)j
(entre)c(a)m(rb)m(res)h(de)f(syntaxe)-458 989 y(abstraite)g(su\036t)g
(p)s(our)g(donner)i(le)e(sens.)g(Il)h(faut)f(n\351anmoins)h(p)s(enser)f
(\340)-458 1102 y(g\351n\351raliser)h(l'\351quivalence)j(:)-458
1215 y FO(let)29 b FH(x)-281 1229 y FF(1)-211 1215 y
FU(=)p -111 1164 V 30 w FH(e)-64 1229 y FF(1)5 1215 y
FO(and)i FH(x)228 1229 y FF(1)297 1215 y FU(=)p 398 1164
V 31 w FH(e)444 1229 y FF(2)514 1215 y FO(and)g FU(.)15
b(.)g(.)45 b FO(and)31 b FH(x)1068 1229 y FD(n)1140 1215
y FU(=)p 1240 1164 V 30 w FH(e)1287 1229 y FD(n)1358
1215 y FO(in)p 1463 1164 V 30 w FH(e)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(79)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 80 80
TeXDict begin 80 79 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation80) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.80) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Plus)37 b(loin)h(avec)g(le)f(rasoir)h(d'Occam)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (occam) cvn /DEST pdfmark end
 -458 -360 a 113 x FU(En)30 b(observant)h(les)f(r\350gles)h
FQ(let)o FU(,)g(d'une)g(pa)m(rt,)g(et)f FQ(abs)f FU(et)h
FQ(app)g FU(d'autre)h(pa)m(rt,)g(on)-458 -135 y(p)s(eut)f(se)g(rendre)h
(compte)f(que)h(la)f(r\350gle)h FQ(let)f FU(p)s(eut)g(\352tre)g(supp)m
(rim\351e)h(sans)-458 -22 y(cons\351quence)h(sur)e(l'exp)m
(ressivit\351)i(du)f(langage.)h(Plus)e(p)m(r\351cis\351ment,)h(nous)f
(allons)-458 91 y(p)m(rouver)h(que)g(les)g(constructions)f
FO(let)g FH(x)38 b FU(=)p 982 40 47 4 v 30 w FH(e)1029
105 y FF(1)1099 91 y FO(in)p 1204 40 V 30 w FH(e)1250
105 y FF(2)1320 91 y FU(et)30 b(\()p FO(fun)g FH(x)38
b FS(!)p 1822 40 V 30 w FH(e)1869 105 y FF(2)1908 91
y FU(\))p 1974 40 V 31 w FH(e)2020 105 y FF(1)2090 91
y FU(sont)-458 204 y(\351quivalentes)32 b(du)f(p)s(oint)g(de)f(vue)h
(de)g(l'\351valuation)i(\026)d(c'est-\340-dire)h(que)g(l'une)-458
317 y(p)m(ro)s(duit)g(une)g(valeur)g FH(v)40 b FU(si)30
b(et)g(seulement)h(si)f(l'autre)h(p)m(ro)s(duit)g(\351galement)g
FH(v)10 b FU(.)-458 430 y(La)30 b(r\350gle)h FQ(app)e
FU(\(p.)i(63\))g(p)s(eut)f(se)g(r\351\351crire)g(en)h(intervertissant)f
FH(e)1643 444 y FF(1)1713 430 y FU(et)g FH(e)1856 444
y FF(2)1926 430 y FU(:)-425 631 y FE(\032)25 b FS(`)g
FH(e)-232 645 y FF(2)-167 631 y FG(\020)g FU(Clos)15
b(\()p FH(x)200 645 y FF(0)239 631 y FE(;)g FH(e)319
645 y FF(0)360 631 y FE(;)g(\032)447 645 y FF(0)487 631
y FU(\))180 b FE(\032)26 b FS(`)e FH(e)895 645 y FF(1)960
631 y FG(\020)i FH(v)1119 645 y FF(1)1339 631 y FE(\032)1386
645 y FF(0)1445 631 y FS(\010)20 b FH(x)1578 645 y FF(0)1643
631 y FS(7!)25 b FH(v)1801 645 y FF(1)1866 631 y FS(`)f
FH(e)1986 645 y FF(0)2051 631 y FG(\020)i FH(v)2210 645
y FF(0)p -425 680 2675 4 v 570 770 a FE(\032)f FS(`)g(h)-15
b(h)p 778 718 47 4 v FH(e)825 784 y FF(2)p 890 718 V
890 770 a FH(e)936 784 y FF(1)976 770 y FS(i)g(i)25 b
FG(\020)h FH(v)1215 784 y FF(0)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(80)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 81 81
TeXDict begin 81 80 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation81) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.81) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Une)38 b(p)m(reuve)f(d'\351quivalence)e(\(suite\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(En)30 b(substituant)h FO(fun)25 b FH(x)34
b FS(!)p 485 -299 47 4 v 40 w FH(e)532 -233 y FF(2)601
-247 y FU(\340)p 675 -299 V 31 w FH(e)721 -233 y FF(2)791
-247 y FU(il)c(vient)197 -55 y FE(\032)25 b FS(`)g(h)-15
b(h)p FO(fun)26 b FH(x)34 b FS(!)p 771 -106 V 40 w FH(e)818
-41 y FF(2)857 -55 y FS(i)-15 b(i)26 b FG(\020)f FU(Clos)15
b(\()p FH(x)1305 -41 y FF(0)1344 -55 y FE(;)g FH(e)1424
-41 y FF(0)1465 -55 y FE(;)g(\032)1552 -41 y FF(0)1591
-55 y FU(\))139 58 y FE(\032)25 b FS(`)g FH(e)332 72
y FF(1)397 58 y FG(\020)g FH(v)555 72 y FF(1)775 58 y
FE(\032)822 72 y FF(0)881 58 y FS(\010)20 b FH(x)1014
72 y FF(0)1079 58 y FS(7!)25 b FH(v)1237 72 y FF(1)1302
58 y FS(`)g FH(e)1423 72 y FF(0)1488 58 y FG(\020)g FH(v)1646
72 y FF(0)p 139 106 1547 4 v 352 196 a FE(\032)g FS(`)g(h)-15
b(h)p FU(\()q FO(fun)25 b FH(x)34 b FS(!)p 961 145 47
4 v 40 w FH(e)1008 210 y FF(2)1047 196 y FU(\))p 1107
145 V 25 w FH(e)1154 210 y FF(1)1193 196 y FS(i)-15 b(i)26
b FG(\020)f FH(v)1432 210 y FF(0)-458 409 y FU(Or)k(l'axiome)j
FQ(abs)d FU(dit)i FE(\032)25 b FS(`)g(h)-15 b(h)p FO(fun)26
b FH(x)34 b FS(!)p 843 357 V 25 w FH(e)889 423 y FF(2)929
409 y FS(i)-15 b(i)25 b FG(\020)h FU(Clos)15 b(\()p FH(x)8
b FE(;)15 b FH(e)1465 423 y FF(2)1505 409 y FE(;)g(\032)p
FU(\))31 b(donc)g FH(x)j FC(=)25 b FH(x)2080 423 y FF(0)2119
409 y FU(,)-458 522 y FH(e)-418 536 y FF(2)-353 522 y
FC(=)g FH(e)-217 536 y FF(0)-147 522 y FU(et)30 b FE(\032)25
b FC(=)g FE(\032)171 536 y FF(0)210 522 y FU(,)30 b(d'o\371,)i(en)e
(rempla\347ant)h(dans)g(la)g(p)s(\351nulti\350me)g(r\350gle)g(et)f(en)
-458 635 y(renommant)g FH(v)42 649 y FF(0)111 635 y FU(en)h
FH(v)270 649 y FF(2)339 635 y FU(:)232 827 y FE(\032)26
b FS(`)e(h)-15 b(h)p FO(fun)26 b FH(x)34 b FS(!)p 806
776 V 40 w FH(e)853 841 y FF(2)892 827 y FS(i)-15 b(i)26
b FG(\020)f FU(Clos)15 b(\()p FH(x)8 b FE(;)15 b FH(e)1428
841 y FF(2)1469 827 y FE(;)g(\032)p FU(\))174 940 y FE(\032)25
b FS(`)g FH(e)367 954 y FF(1)432 940 y FG(\020)g FH(v)590
954 y FF(1)810 940 y FE(\032)20 b FS(\010)g FH(x)34 b
FS(7!)25 b FH(v)1202 954 y FF(1)1266 940 y FS(`)g FH(e)1387
954 y FF(2)1452 940 y FG(\020)h FH(v)1611 954 y FF(2)p
174 988 1477 4 v 352 1078 a FE(\032)f FS(`)g(h)-15 b(h)p
FU(\()q FO(fun)25 b FH(x)34 b FS(!)p 961 1027 47 4 v
40 w FH(e)1008 1092 y FF(2)1047 1078 y FU(\))p 1107 1027
V 25 w FH(e)1154 1092 y FF(1)1193 1078 y FS(i)-15 b(i)26
b FG(\020)f FH(v)1432 1092 y FF(2)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(81)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 82 82
TeXDict begin 82 81 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation82) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.82) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Une)38 b(p)m(reuve)f(d'\351quivalence)e(\(suite)j(et)g
(\034n\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Un)30 b(axiome)h(\351tant)f(pa)m(r)h(d\351\034nition)h
(vrai,)f(on)g(p)s(eut)f(le)h(supp)m(rimer)g(d'une)-458
-135 y(p)m(r\351misse)f(:)174 62 y FE(\032)25 b FS(`)g
FH(e)367 76 y FF(1)432 62 y FG(\020)g FH(v)590 76 y FF(1)810
62 y FE(\032)20 b FS(\010)g FH(x)34 b FS(7!)25 b FH(v)1202
76 y FF(1)1266 62 y FS(`)g FH(e)1387 76 y FF(2)1452 62
y FG(\020)h FH(v)1611 76 y FF(2)p 174 110 1477 4 v 352
200 a FE(\032)f FS(`)g(h)-15 b(h)p FU(\()q FO(fun)25
b FH(x)34 b FS(!)p 961 149 47 4 v 40 w FH(e)1008 214
y FF(2)1047 200 y FU(\))p 1107 149 V 25 w FH(e)1154 214
y FF(1)1193 200 y FS(i)-15 b(i)26 b FG(\020)f FH(v)1432
214 y FF(2)-458 402 y FU(Or)k(la)i(r\350gle)g FQ(let)e
FU(\(p.)i(36\))g(est)e(:)118 603 y FE(\032)c FS(`)g FH(e)311
617 y FF(1)376 603 y FG(\020)g FH(v)534 617 y FF(1)754
603 y FE(\032)20 b FS(\010)g FH(x)34 b FS(7!)25 b FH(v)1146
617 y FF(1)1210 603 y FS(`)g FH(e)1331 617 y FF(2)1396
603 y FG(\020)h FH(v)1555 617 y FF(2)p 118 651 1477 4
v 313 741 a FE(\032)f FS(`)g(h)-15 b(h)p FO(let)25 b
FH(x)34 b FU(=)p 823 690 47 4 v 25 w FH(e)870 755 y FF(1)934
741 y FO(in)p 1035 690 V 26 w FH(e)1081 755 y FF(2)1121
741 y FS(i)-15 b(i)25 b FG(\020)g FH(v)1359 755 y FF(2)1629
672 y FQ(let)-458 946 y FU(Les)30 b(p)m(r\351misses)f(sont)h(les)g
(m\352mes)g(que)h(dans)f(la)h(r\350gle)g(p)m(r\351c\351dente,)h(donc)f
(les)-458 1058 y(conclusions)h(sont)e(identiquement)i(vraies)e([QED].)h
(Il)f(est)f(donc)i(en)g(th\351o)m(rie)-458 1171 y(p)s(ossible)f(de)h
(se)f(passer)g(de)h(la)f(liaison)i(lo)s(cale)f(dans)g(notre)f(langage,)
i(que)f(ce)f(soit)-458 1284 y(au)h(niveau)h(de)e(la)h(s\351mantique,)g
(de)g(la)g(syntaxe)g(abstraite)f(ou)g(concr\350te.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(82)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 83 83
TeXDict begin 83 82 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation83) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.83) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Discussion)37 b(sur)g(les)g(constructions)g
(non-\351l\351mentaires)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(De)30 b(fa\347on)h(g\351n\351rale,)g(lo)m
(rsqu'on)h(d\351couvre)g(qu'une)g(construction)f(a)f(la)h(m\352me)-458
-135 y(s\351mantique)g(qu'une)h(combinaison)g(d'autres)e(constructions)
h(\(pp.)g(78,79,80\),)g(il)-458 -22 y(vaut)g(mieux)f(conserver)h(cette)
f(construction)h(dans)g(la)f(syntaxe)h(abstraite)g(ca)m(r)-458
91 y(cela)g(p)s(ermet)e(d'y)i(adjoindre)h(les)e(p)s(ositions)g(des)h
(lex\350mes)f(co)m(rresp)s(ondants)h(dans)-458 204 y(le)f(co)s(de)g
(source,)g(p)s(our)h(l'\351ventualit\351)h(d'un)f(message)e(d'erreur.)h
(En)h(e\033et,)e(l'autre)-458 317 y(solution,)i(qui)g(consiste)f(\340)h
(p)m(ro)s(duire)g(l'AST)g(de)f(la)h(combinaison)h(lo)m(rs)e(de)-458
430 y(l'analyse)i(syntaxique,)g(p)s(erd)e(cette)g(info)m(rmation.)-458
643 y(Il)g(est)f(utile)i(pa)m(rfois)g(de)g(simpli\034er)g(la)f
(s\351mantique.)h(P)m(a)m(r)g(exemple,)g(ici,)g(d\351\034nir)h(:)296
839 y FE(\032)25 b FS(`)g(h)-15 b(h)p FU(\()q FO(fun)25
b FH(x)34 b FS(!)p 905 788 47 4 v 40 w FH(e)952 853 y
FF(2)991 839 y FU(\))p 1051 788 V 25 w FH(e)1098 853
y FF(1)1137 839 y FS(i)-15 b(i)26 b FG(\020)f FH(v)1376
853 y FF(2)p 296 887 1120 4 v 313 977 a FE(\032)g FS(`)g(h)-15
b(h)p FO(let)25 b FH(x)34 b FU(=)p 823 926 47 4 v 25
w FH(e)870 991 y FF(1)934 977 y FO(in)p 1035 926 V 26
w FH(e)1081 991 y FF(2)1121 977 y FS(i)-15 b(i)25 b FG(\020)g
FH(v)1359 991 y FF(2)1451 908 y FQ(let)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(83)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 84 84
TeXDict begin 84 83 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation84) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.84) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Programmation)38 b(imp)s(\351rative)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Jusqu'\340)32 b(p)m(r\351sent)e(les)h(va)m(riables)h(m\351ritaient)e
(mal)g(leur)h(nom)f(p)s(our)g(des)h(raisons)-458 -135
y(histo)m(riques,)g(ca)m(r)g(elles)g(d\351notaient)g(des)g(constantes)f
(ou)h(des)f(fonctions.)g(Nous)-458 -22 y(allons)h(rendre)g(les)f(va)m
(riables)i(vraiment)f(va)m(riables,)h(c'est-\340-dire)f
FP(mutables)f FU(dans)-458 91 y(le)g(ja)m(rgon)i(de)e(OCaml.)-458
304 y(Le)g(st)m(yle)h(de)f(p)m(rogrammation)h(qui)h(fait)d(usage)i(de)g
(telles)f(va)m(riables)i(se)e(nomme)-458 417 y FP(imp)s(\351ratif)p
FU(.)-458 629 y(Bien)h(que)g(nous)g(souhaitons)g(rendre)f(toutes)g(les)
g(va)m(riables)j(mutables)d(\(p)s(our)g(des)-458 742
y(raisons)g(d'unifo)m(rmit\351)h(de)g(p)m(r\351sentation)h(ici\),)f
(nous)f(souhaitons)i(n\351anmoins)-458 855 y(distinguer)f(pa)m(r)g(la)g
(syntaxe)g(concr\350te)f(leur)h(mo)s(di\034cation)g(imp)s(\351rative)g
(pa)m(r)g(le)-458 968 y(truchement)f(d')p FP(a\033ectations)p
FU(.)-458 1081 y FO(Exemple)120 b(let)29 b FU(x)i(=)f(1)h
FO(in)f(let)f FU(y)j(=)e(\(x)h(:=)f(x)h FK(+)f FU(2\))g
FO(in)g FU(x)61 b(s'\351value)31 b(en)g(Int)f(\(3\).)-458
1194 y(L'a\033ectation)h(est)e(ici)61 b(x)31 b(:=)f(x)h
FK(+)f FU(2)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(84)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 85 85
TeXDict begin 85 84 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation85) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.85) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Un)38 b(mo)s(d\350le)g(fonctionnel)e(p)s(our)i(les)f(va)m
(riables)h(mutables)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(P)m(our)30 b(mo)s(d\351liser)g(de)h
(fa\347on)g(fonctionnelle)h(ce)e(nouveau)j(pa)m(radigme)f(de)-458
-135 y(p)m(rogrammation,)f(nous)f(devons)i(intro)s(duire)f(les)f
(notions)h(d')p FP(adresse)f FU(et)g(de)-458 -22 y FP(m\351moire)p
FU(.)f(Une)i(adresse)f(est)f(un)i(\351l\351ment)g(d'un)g(ensemble)g
(in\034ni)h(d\351nomb)m(rable.)-458 91 y(Une)e(m\351moire)g
FE(\033)j FU(lie)e(les)f(adresses)g FH(a)h FU(aux)g(valeurs)g
FH(v)10 b FU(.)30 b(Un)g(environnement)i FE(\032)e FU(lie)-458
204 y(maintenant)h(une)g(va)m(riable)h FH(x)39 b FU(\340)30
b(son)h(adresse)f FH(a)q FU(,)f FP(et)h(non)h(plus)g(\340)g(sa)f
(valeur)-458 317 y(directement)p FU(.)-458 530 y FP(C'est)f(ainsi)i
(que)g(l'on)g(p)s(eut)g(cacher)g(une)g(liaison)g(pa)m(r)g(une)g(autre)g
(dans)f(la)-458 643 y(m\351moire)f(sans)h(changer)i(l'environnement,)g
(ce)f(qui)g(mo)s(d\351lise)f(l'a\033ectation)i(de)-458
755 y(fa\347on)e(fonctionnelle)p FU(.)j(Nous)e(n'avons)g(donc)g(pas)g
(b)s(esoin)g(d'une)g(notion)g(native)-458 868 y(p)s(our)f
(l'a\033ectation)h(dans)g(la)g(s\351mantique.)g(Quant)g(\340)f
(l'interp)m(r\350te,)h(s'il)g(est)e(\351crit)-458 981
y(dans)i(un)g(langage)g(fonctionnel,)h(ce)f(langage)h(n'est)e(pas)g
(contraint)h(de)g(p)s(oss\351der)-458 1094 y(non)g(plus)g(d'une)g
(notion)h(d'a\033ectation)f(native.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(85)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 86 86
TeXDict begin 86 85 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation86) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.86) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Instructions)36 b Fm(versus)h FV(exp)m(ressions)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(On)30 b(p)s(eut)g(ensuite)h(soit)f(intro)s(duire)h(la)f
(notion)i(d')p FP(instruction)f FU(\(C,)f(Java\),)i(soit)-458
-135 y(rester)d(avec)i(celle)g(d'exp)m(ression)h(\(OCaml\).)e(Dans)h
(ce)f(dernier)h(cas,)f(il)h(nous)g(faut)-458 -22 y(ajouter)f(une)h
(valeur)h(sp)s(\351ciale)f(qui)g(est)e(le)i(r\351sultat)f(de)g
(l'\351valuation)j(d'une)-458 91 y FP(a\033ectation)e
FU(:)f(la)g(valeur)j(Unit.)-458 304 y FO(Exemple)120
b FU(x)30 b(:=)h(2)60 b(s'\351value)32 b(en)e(Unit.)-458
516 y(P)m(a)m(r)g(souci)h(de)g(g\351n\351ralit\351)g(et)f(de)h(commo)s
(dit\351,)f(il)g(est)g(b)s(on)g(d'ajouter)h(aussi)g(une)-458
629 y(exp)m(ression)g(qui)g(s'\351value)g(imm\351diatement)f(en)g
(Unit.)g(Nous)g(suivrons)h(la)f(syntaxe)-458 742 y(de)g(OCaml)g(p)s
(our)g(la)h(noter)h(\(\).)-458 955 y FO(Exemple)120 b(let)29
b FU(f)36 b(=)31 b FO(fun)f FU(x)h FS(!)f FU(1)g FO(in)g
FU(f)36 b(\(\))-458 1167 y(A)m(ttention,)31 b(il)f(faut)g(distinguer)i
(la)e FP(valeur)42 b FU(Unit)30 b(et)g(l')p FP(exp)m(ression)-458
1280 y FU(co)m(rresp)s(ondante,)h(que)g(nous)g(noterons)g(U)e(dans)i
(la)g(syntaxe)g(abstraite.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(86)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 87 87
TeXDict begin 87 86 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation87) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.87) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(A\033ectation)37 b(et)h(s\351mantique)f(avec)g(mutables)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 -198 a FU(Syntaxe)31 b(concr\350te)p
0 TeXcolorgray -276 -85 a FM(Expression)39 b(::=)j(...)g(|)i(ident)d
(":=")h(Expression)d(|)k(\(\))p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 43 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -276 53 a FU(Syntaxe)31 b(abstraite)p
0 TeXcolorgray -276 166 a FN(t)m(yp)s(e)26 b FL(exp)n(r)37
b FQ(=)27 b FM(...)g(|)g FQ(Assign)g FN(of)33 b FL(string)j
FM(*)28 b FL(exp)n(r)36 b FM(|)28 b FQ(U;;)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 294 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb -276 304 a FU(Analyse)j(syntaxique)p
0 TeXcolorgray -276 417 a FS(h)-15 b(h)p FH(x)34 b FU(:=)p
-25 365 47 4 v 25 w FH(e)7 b FS(i)-15 b(i)26 b FC(=)f
FU(Assign)15 b(\()p FH(x)8 b FE(;)15 b FS(h)-15 b(h)p
636 365 V FH(e)8 b FS(i)-15 b(i)g FU(\))60 b(et)g FS(h)-15
b(h)p FU(\(\))q FS(i)g(i)26 b FC(=)f FU(U)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 545 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb -276 555 a FU(V)m(a)m(riables)32
b(lib)m(res)p 0 TeXcolorgray -276 667 a FS(Lh)-15 b(h)p
FH(x)33 b FU(:=)p 38 616 V 26 w FH(e)6 b FS(i)-15 b(i)26
b FC(=)f FS(f)p FH(x)8 b FS(g)22 b([)d(L)p FC(\()p FH(e)6
b FC(\))62 b FU(et)e FS(Lh)-15 b(h)p FU(\(\))p FS(i)g(i)26
b FC(=)f FB(?)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 795 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 805 a FU(S\351mantique)31 b(op)s(\351rationnelle)p
0 TeXcolorgray -276 918 a(Il)f(nous)g(faut)h(revoir)f(notre)g(jugement)
h(et)f(nos)g(r\350gles)g(d'inf\351rence.)i(Soit)-276
1031 y(maintenant)f FE(\032=\033)e FS(`)24 b FH(e)32
b FG(\020)25 b FH(v)10 b FE(=\033)771 998 y FA(0)795
1031 y FU(,)30 b(se)g(lisant)h(\023)f(Dans)h(l'environnement)h
FE(\032)e FU(et)-276 1144 y(la)f(m\351moire)f FE(\033)s
FU(,)i(l'\351valuation)h(de)f FH(e)35 b FU(p)m(ro)s(duit)30
b(une)g(valeur)g FH(v)39 b FU(et)29 b(une)h(nouvelle)-276
1257 y(m\351moire)f FE(\033)129 1224 y FA(0)153 1257
y FU(.)h(\024)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(87)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 88 88
TeXDict begin 88 87 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation88) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.88) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(avec)h(mutables)f(\(unit\351)h(et)g(va)m
(riables\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray -458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458
-360 a -458 -360 a
SDict begin [/View [/XYZ H.V]/Dest (invariant_ref) cvn /DEST pdfmark
end
 -458 -360 a 113 x FU(V)m(oici)31 b(d'ab)s(o)m(rd)h
(les)e(r\350gles)g(d'inf\351rence)i(les)e(plus)h(simples)f(\(compa)m
(rez)i FQ(va)n(r)f FU(avec)-458 -135 y(p.)f(36\))h(:)-410
136 y FE(\032=\033)e FS(`)24 b(h)-15 b(h)p FU(\()q(\))p
FS(i)g(i)26 b FG(\020)f FU(Unit)p FE(=\033)112 b FQ(unit)887
67 y FH(x)34 b FS(2)25 b Fz(dom)p FC(\()p FE(\032)p FC(\))182
b FE(\032)p FC(\()p FH(x)8 b FC(\))26 b FS(2)f Fz(dom)p
FC(\()p FE(\033)s FC(\))p 887 115 1207 4 v 1007 205 a
FE(\032=\033)k FS(`)c(h)-15 b(h)p FH(x)8 b FS(i)-15 b(i)27
b FG(\020)e FE(\033)e FS(\016)e FE(\032)p FC(\()p FH(x)8
b FC(\))q FE(=\033)2129 136 y FQ(va)n(r)-458 405 y FU(P)m(our)30
b(acc\351der)h(au)g(contenu)h(d'une)f(va)m(riable)i(il)d(faut)g(donc)i
(passer)e(via)-458 518 y(l'environnement)i(puis)f(la)g(m\351moire,)e
(c'est)h(p)s(our)h(cela)g(qu'il)g(faut)f(s'assurer)g(que)-458
631 y FH(x)j FS(2)25 b Fz(dom)q FC(\()p FE(\032)p FC(\))31
b FU(et)f FE(\032)p FC(\()p FH(x)8 b FC(\))26 b FS(2)f
Fz(dom)p FC(\()p FE(\033)s FC(\))p FU(.)31 b(G\351n\351ralement,)h
(notre)e(nouveau)i(jugement)-458 744 y FE(\032=\033)d
FS(`)24 b FH(e)32 b FG(\020)25 b FH(v)10 b FE(=\033)135
711 y FA(0)189 744 y FU(doit)31 b(v\351ri\034er)g(la)g(p)m(rop)m
(ri\351t\351)g(:)g FP(si)f Fz(co)s(dom)p FC(\()p FE(\032)p
FC(\))c FS(\022)f Fz(dom)q FC(\()p FE(\033)s FC(\))31
b FP(alo)m(rs)-458 857 y Fz(dom)p FC(\()p FE(\033)s FC(\))c
FS(\022)e Fz(dom)p FC(\()p FE(\033)220 824 y FA(0)244
857 y FC(\))p FU(,)31 b(c.-\340-d.)g(que)g(l'\351valuation)i(p)s(eut)d
(o)s(cculter)h(une)g(liaison)-458 970 y(pa)m(r)g(une)g(autre)f(en)h
(m\351moire,)f(ou)g(en)h(ajouter)f(de)h(nouvelles,)h(mais)e(pas)g(en)
-458 1083 y(retirer.)f(Autrement)h(dit)g(enco)m(re,)i(lo)m(rsque)f
(l'\351valuation)i(termine,)d(les)h(va)m(riables)-458
1195 y(ont)f(toujours)g(une)h(valeur)h(mais)d(qui)j(a)e(pu)h(changer.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(88)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 89 89
TeXDict begin 89 88 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation89) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.89) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Preuve)37 b(pa)m(r)g(r\351currence)f(sur)h(la)h(longueur)f
(des)g(d\351rivations)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(La)30 b(s\351mantique)h(op)s
(\351rationnelle)h(p)s(ermet)e(un)g(t)m(yp)s(e)h(de)g(p)m(reuve)h(dite)
e(pa)m(r)-458 -135 y(r\351currence)h(g\351n\351ralis\351e)g(sur)f(la)h
(longueur)h(des)e(d\351rivations)i(\(ou)e(a)m(rb)m(res)h(de)-458
-22 y(p)m(reuves\).)-458 191 y(On)f(v\351ri\034e)h(la)g(p)m(rop)m
(ri\351t\351)h(\340)e(d\351montrer)g(sur)g(les)g(axiomes)h
(\(d\351rivations)g(de)-458 304 y(longueur)h(1\),)e(puis)h(on)g(supp)s
(ose)f(que)h(la)g(p)m(rop)m(ri\351t\351)h(est)d(vraie)i(p)s(our)g
(toutes)e(les)-458 417 y(d\351rivations)i(de)f(longueur)i
FH(n)20 b FS(\000)f FU(1,)30 b(puis)h(on)f(p)m(rouve)i(\034nalement)e
(qu'elle)i(est)d(vraie)-458 530 y(p)s(our)h(toutes)g(les)g
(d\351rivations)i(de)e(longueur)i FH(n)g FU(en)f(examinant)g(toutes)f
(les)g(r\350gles)-458 643 y(et)f(en)g(imaginant)i(qu'elles)g(sont)e(la)
h(racine)g(d'une)h(p)m(reuve)g(de)e(longueur)i FH(n)r
FU(.)e(Ainsi,)-458 755 y(les)h(p)m(r\351misses)g(v\351ri\034ent)h(la)g
(p)m(rop)m(ri\351t\351)g(\340)g(d\351montrer)f(pa)m(r)h(hyp)s
(oth\350se)g(de)-458 868 y(r\351currence,)g(ca)m(r)f(leur)h
(d\351rivation)h(est)e(de)g(taille)h(strictement)e(inf\351rieure)j
(\340)e FH(n)r FU(.)-458 1081 y(Consid\351rons)h(ici)g(la)f(p)m(rop)m
(ri\351t\351)i(suivante.)f FP(Soit)g FE(\032=\033)e FS(`)c
FH(e)31 b FG(\020)26 b FH(v)10 b FE(=\033)1722 1048 y
FA(0)1745 1081 y FP(.)30 b(Si)-458 1194 y Fz(co)s(dom)p
FC(\()p FE(\032)p FC(\))c FS(\022)f Fz(dom)q FC(\()p
FE(\033)s FC(\))31 b FP(alo)m(rs)g Fz(dom)p FC(\()p FE(\033)s
FC(\))c FS(\022)e Fz(dom)p FC(\()p FE(\033)1247 1161
y FA(0)1271 1194 y FC(\))p FU(.)31 b(Elle)g(est)e(vraie)i(sur)f(tous)
-458 1307 y(les)g(axiomes.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(89)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 90 90
TeXDict begin 90 89 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation90) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.90) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(avec)h(mutables)f(\(a\033ectation\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(L'a\033ectation)31 b(masque)f(la)h(liaison)g(de)g(la)g
(va)m(riable)h(concern\351e)g(en)f(m\351moire)e(:)-218
-51 y FE(\032=\033)f FS(`)d FH(e)32 b FG(\020)25 b FH(v)10
b FE(=\033)375 -89 y FA(0)580 -51 y FH(x)33 b FS(2)25
b Fz(dom)q FC(\()p FE(\032)p FC(\))181 b FE(\032)p FC(\()p
FH(x)8 b FC(\))26 b FS(2)f Fz(dom)q FC(\()p FE(\033)1750
-89 y FA(0)1774 -51 y FC(\))p -218 -3 2028 4 v 6 87 a
FE(\032=\033)k FS(`)c(h)-15 b(h)p FH(x)34 b FU(:=)p 512
36 47 4 v 26 w FH(e)6 b FS(i)-15 b(i)26 b FG(\020)f FU(Unit)p
FE(=)p FC(\()p FE(\033)1052 50 y FA(0)1097 87 y FS(\010)20
b FE(\032)p FC(\()p FH(x)8 b FC(\))26 b FS(7!)f FH(v)10
b FC(\))1844 18 y FQ(assign)-458 291 y FU(Cette)29 b(r\350gle)i
(v\351ri\034e)g(la)g(p)m(rop)m(ri\351t\351)g(de)g(la)g(page)g(p)m
(r\351c\351dente.)h(En)e(e\033et,)g(pa)m(r)-458 404 y(hyp)s(oth\350se)h
(de)f(r\351currence)h(\(sur)f(la)h(taille)g(de)g(la)g(d\351rivation\),)
h(la)e(p)m(remi\350re)-458 517 y(p)m(r\351misse)g(implique)i(que)f(si)f
Fz(co)s(dom)q FC(\()p FE(\032)p FC(\))c FS(\022)f Fz(dom)p
FC(\()p FE(\033)s FC(\))31 b FU(alo)m(rs)g Fz(dom)q FC(\()p
FE(\033)s FC(\))26 b FS(\022)f Fz(dom)q FC(\()p FE(\033)2189
484 y FA(0)2212 517 y FC(\))p FU(.)-458 630 y(La)30 b(troisi\350me)g(p)
m(r\351misse)g(implique)i(alo)m(rs)f Fz(dom)p FC(\()p
FE(\033)1187 597 y FA(0)1231 630 y FS(\010)20 b FE(\032)p
FC(\()p FH(x)8 b FC(\))27 b FS(7!)e FH(v)10 b FC(\))25
b(=)g Fz(dom)q FC(\()p FE(\033)2101 597 y FA(0)2125 630
y FC(\))p FU(,)-458 743 y(donc)31 b Fz(dom)q FC(\()p
FE(\033)s FC(\))26 b FS(\022)f Fz(dom)q FC(\()p FE(\033)429
710 y FA(0)473 743 y FS(\010)20 b FE(\032)p FC(\()p FH(x)8
b FC(\))26 b FS(7!)f FH(v)10 b FC(\))p FU(.)-458 856
y(Nous)30 b(avons)h(b)s(esoin)g(de)g FE(\033)441 823
y FA(0)494 856 y FU(ca)m(r)g(il)g(se)f(p)s(eut)g(que)h(l'\351valuation)
i(de)e FH(e)36 b FU(masque)31 b(des)-458 969 y(liaisons)g(de)g
FE(\033)i FU(autres)d(que)h FE(\032)p FC(\()p FH(x)8
b FC(\))26 b FS(7!)f FH(v)40 b FU(et)30 b(il)h(faut)f(conserver)h(ces)f
(o)s(ccultations.)-458 1082 y FO(Exemple)f(let)f FU(x)i(=)g(1)f
FO(in)g(let)g FU(y)i(=)e(2)h FO(in)f(let)f FU(z)i(=)f(\(x)h(:=)g(\(y)h
(:=)e(3\))-15 b(\))30 b FO(in)f FU(y)60 b(s'\351value)-458
1195 y(en)30 b(Int)g(\(3\).)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(90)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 91 91
TeXDict begin 91 90 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation91) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.91) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(avec)h(mutables)f(\(liaison)h(lo)s(cale\))
p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(La)30 b(r\350gle)h FQ(let)f FU(ajoute)g(une)h(nouvelle)i
(liaison)e(dans)g(l'environnement)h(et)e(la)-458 -135
y(m\351moire)f(en)i(resp)s(ectant)f(l'inva)m(riant)j(cit\351)d(p.)h(88)
f(:)175 62 y FE(\032=\033)f FS(`)24 b FH(e)468 76 y FF(1)534
62 y FG(\020)h FH(v)692 76 y FF(1)731 62 y FE(=\033)828
76 y FF(1)1048 62 y FH(a)h FS(62)f Fz(dom)q FC(\()p FE(\033)1462
76 y FF(1)1502 62 y FC(\))58 175 y(\()p FE(\032)20 b
FS(\010)g FH(x)34 b FS(7!)25 b FH(a)q FC(\))p FE(=)p
FC(\()p FE(\033)655 189 y FF(1)715 175 y FS(\010)20 b
FH(a)26 b FS(7!)f FH(v)1034 189 y FF(1)1073 175 y FC(\))h
FS(`)f FH(e)1255 189 y FF(2)1320 175 y FG(\020)g FH(v)1478
189 y FF(2)1517 175 y FE(=\033)1614 189 y FF(2)p 58 223
1597 4 v 184 313 a FE(\032=\033)k FS(`)c(h)-15 b(h)p
FO(let)45 b FH(x)34 b FU(=)p 815 262 47 4 v 25 w FH(e)862
327 y FF(1)926 313 y FO(in)p 1026 262 V 25 w FH(e)1073
327 y FF(2)1112 313 y FS(i)-15 b(i)26 b FG(\020)f FH(v)1351
327 y FF(2)1391 313 y FE(=\033)1488 327 y FF(2)1689 244
y FQ(let)-458 517 y FU(En)30 b(e\033et,)g(si)g Fz(co)s(dom)q
FC(\()p FE(\032)p FC(\))c FS(\022)f Fz(dom)p FC(\()p
FE(\033)s FC(\))31 b FU(alo)m(rs,)g(pa)m(r)g(hyp)s(oth\350se)g(de)g
(r\351currence)g(\(sur)-458 630 y(la)f(longueur)i(de)f(la)g
(d\351rivation)h(de)e(la)h(p)m(remi\350re)g(p)m(r\351misse\),)-458
743 y Fz(dom)p FC(\()p FE(\033)s FC(\))c FS(\022)e Fz(dom)p
FC(\()p FE(\033)217 757 y FF(1)257 743 y FC(\))p FU(,)31
b(donc,)g(transitivement,)f Fz(co)s(dom)q FC(\()p FE(\032)p
FC(\))c FS(\022)f Fz(dom)q FC(\()p FE(\033)1927 757 y
FF(1)1966 743 y FC(\))p FU(,)31 b(d'o\371)-458 856 y
Fz(co)s(dom)p FC(\()p FE(\032)21 b FS(\010)f FH(x)33
b FS(7!)25 b FH(a)q FC(\))h FS(\022)f Fz(dom)p FC(\()p
FE(\033)644 870 y FF(1)704 856 y FS(\010)20 b FH(a)26
b FS(7!)f FH(v)1023 870 y FF(1)1063 856 y FC(\))p FU(.)30
b(P)m(a)m(r)h(hyp)s(oth\350se)g(de)f(r\351currence)-458
969 y(\(troisi\350me)g(p)m(r\351misse\),)g(cela)h(implique)h(alo)m(rs)f
(que)-458 1082 y Fz(dom)p FC(\()p FE(\033)-201 1096 y
FF(1)-141 1082 y FS(\010)20 b FH(a)26 b FS(7!)f FH(v)178
1096 y FF(1)218 1082 y FC(\))g FS(\022)g Fz(dom)q FC(\()p
FE(\033)632 1096 y FF(2)672 1082 y FC(\))p FU(.)30 b(Or)g
FH(a)c FS(62)e Fz(dom)q FC(\()p FE(\033)1303 1096 y FF(1)1343
1082 y FC(\))30 b FU(implique)-458 1195 y Fz(dom)p FC(\()p
FE(\033)-201 1209 y FF(1)-161 1195 y FC(\))c FS(\032)f
Fz(dom)p FC(\()p FE(\033)253 1209 y FF(1)313 1195 y FS(\010)20
b FH(a)26 b FS(7!)f FH(v)632 1209 y FF(1)672 1195 y FC(\))p
FU(,)30 b(donc)h(\034nalement)h Fz(dom)p FC(\()p FE(\033)s
FC(\))27 b FS(\032)e Fz(dom)p FC(\()p FE(\033)2066 1209
y FF(2)2106 1195 y FC(\))p FU(.)-458 1308 y FP(En)30
b(pa)m(rticulier,)i(il)f(n'y)g(a)g(pas)f(\351galit\351.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(91)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 92 92
TeXDict begin 92 91 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation92) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.92) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Gl\342nage)37 b(de)g(cellules)g(\()p Fm(Ga)m(rbage)g
(Collection)p FV(\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(Lo)m(rsque)31 b(nous)g(avons)g(intro)s
(duit)f(les)g(environnements,)i(nous)f(avons)g(vu)g(que)g(la)-458
-135 y(liaison)g(lo)s(cale)g(p)s(ouvait)h(masquer)e(des)g(liaisons.)h
(L'intro)s(duction)h(des)e(m\351moires)-458 -22 y(nous)g(montre)g(que)h
(la)g(liaison)h(lo)s(cale)f(p)s(eut)f(masquer)g(et)g(ajouter)g(des)h
(liaisons)g(en)-458 91 y(m\351moire)e(qui)j(ne)e(sont)g(pas)h
(accessibles)g(\340)f(pa)m(rtir)h(de)f(l'environnement.)j(Dans)-458
204 y(les)c(deux)i(cas,)e(des)h(liaisons)g(dans)g(l'environnement)i(ou)
e(la)g(m\351moire)e(deviennent)-458 317 y(d\351\034nitivement)k
(inaccessibles,)f(donc)h(l'espace)f(m\351moire)f(qu'o)s(ccup)s(ent)h
(les)-458 430 y(valeurs)g(co)m(rresp)s(ondantes)g(est)e(g\342ch\351)j
(p)s(our)e(le)h(reste)e(de)i(l'ex\351cution)h(\(ou)-458
543 y(interp)m(r\351tation\).)-458 755 y(C'est)27 b(p)s(ourquoi)j(les)f
(compilateurs)g(de)g(certains)g(langages)h(\(OCaml,)e(Java,)i(A)m(da\))
-458 868 y(p)m(ro)s(duisent)h(un)g(co)s(de)g(e\033ectuant)f
(dynamiquement)i(\(selon)f(diverses)g(strat\351gies\))-458
981 y(une)g(analyse)g(d'accessibilit\351)h(des)f(donn\351es)g(et)f
(restituant)g(au)h(p)m(ro)s(cessus)-458 1094 y(sous-jacent)f(la)h
(m\351moire)f(virtuelle)h(co)m(rresp)s(ondant)h(aux)f(cellules)-458
1207 y(inatteignables)h(:)e(c'est)g(le)g FP(gl\342neur)i(de)f(cellules)
p FU(,)g(ou)g FP(ga)m(rbage)h(collecto)m(r)p FU(.)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(92)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 93 93
TeXDict begin 93 92 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation93) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.93) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(avec)h(mutables)f(\(exp)m(ressions)f(a)m
(rithm\351tiques\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(On)30 b(doit)h(\034xer)f(l'o)m(rdre)i
(d'\351valuation)g(des)f(a)m(rguments)f(des)h(op)s(\351rateurs)-458
-135 y(a)m(rithm\351tiques)g(dans)g(la)f(s\351mantique)i(p)s(our)e
(conserver)g(en)h(m\351moire)f(les)g FP(e\033ets)-458
-22 y FU(des)g(a\033ectations)g(qui)i(ont)e(\351ventuellement)i(eu)f
(lieu)g(lo)m(rs)f(de)h(l'\351valuation)i(des)-458 91
y(a)m(rguments.)414 288 y FE(\032=\033)c FS(`)c(h)-15
b(h)p 723 236 49 4 v FH(n)r FS(i)g(i)26 b FG(\020)44
b FC(_)-44 b FH(n)r FE(=\033)111 b FQ(const)-7 509 y
FE(\032=\033)29 b FS(`)c FH(e)287 523 y FF(1)352 509
y FG(\020)g FH(v)510 523 y FF(1)550 509 y FE(=\033)647
523 y FF(1)867 509 y FE(\032=\033)1011 523 y FF(1)1076
509 y FS(`)g FH(e)1197 523 y FF(2)1262 509 y FG(\020)g
FH(v)1420 523 y FF(2)1460 509 y FE(=\033)1557 523 y FF(2)p
-7 557 1604 4 v 212 647 a FE(\032=\033)k FS(`)c(h)-15
b(h)p 521 596 47 4 v FH(e)568 661 y FF(1)622 647 y FK(+)p
684 596 V 15 w FH(e)731 661 y FF(2)770 647 y FS(i)g(i)26
b FG(\020)f FH(v)1009 661 y FF(1)1069 647 y FC(+)20 b
FH(v)1202 661 y FF(2)1241 647 y FE(=\033)1338 661 y FF(2)1715
578 y FQ(add)-458 847 y FU(Il)29 b(est)g(n\351anmoins)i(toujours)e(p)s
(ossible)h(de)g(nier)g(o\036ciellement,)h(c'est-\340-dire)f(dans)-458
960 y(la)g(do)s(cumentation)i(livr\351e)f(avec)g(l'interp)m(r\350te,)g
(que)g(l'o)m(rdre)h(n'est)e(pas)g(\034x\351,)-458 1073
y(laissant)g(ainsi)h(le)g(loisir)g(de)f(mo)s(di\034er)h(l'o)m(rdre)g
(\340)f(des)g(\034ns)h(d'optimisation)g(de)-458 1186
y(l'interp)m(r\350te.)-458 1398 y(Les)f(autres)g(exp)m(ressions)h(a)m
(rithm\351tiques)g(suivent)g(le)g(m\352me)e(sch\351ma.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(93)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 94 94
TeXDict begin 94 93 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation94) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.94) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(avec)h(mutables)f(\(abstraction)g(et)h
(application\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 64 -69 a FE(\032=\033)29 b FS(`)c(h)-15
b(h)p FO(fun)26 b FH(x)33 b FS(!)p 724 -120 47 4 v 26
w FH(e)6 b FS(i)-15 b(i)26 b FG(\020)f FU(Clos)15 b(\()p
FH(x)8 b FE(;)15 b FH(e)6 b FE(;)15 b(\032)p FU(\))r
FE(=\033)112 b FQ(abs)-211 153 y FE(\032=\033)29 b FS(`)c
FH(e)83 167 y FF(1)148 153 y FG(\020)g FU(Clos)15 b(\()p
FH(x)515 167 y FF(0)555 153 y FE(;)g FH(e)635 167 y FF(0)675
153 y FE(;)g(\032)762 167 y FF(0)802 153 y FU(\))p FE(=\033)934
167 y FF(1)1154 153 y FE(\032=\033)1298 167 y FF(1)1363
153 y FS(`)25 b FH(e)1484 167 y FF(2)1549 153 y FG(\020)g
FH(v)1707 167 y FF(2)1747 153 y FE(=\033)1844 167 y FF(2)-332
265 y FH(a)h FS(62)f Fz(dom)q FC(\()p FE(\033)82 279
y FF(2)121 265 y FC(\))181 b(\()p FE(\032)419 279 y FF(0)479
265 y FS(\010)20 b FH(x)612 279 y FF(0)677 265 y FS(7!)25
b FH(a)q FC(\))p FE(=)p FC(\()p FE(\033)1005 279 y FF(2)1065
265 y FS(\010)20 b FH(a)26 b FS(7!)f FH(v)1384 279 y
FF(2)1424 265 y FC(\))g FS(`)g FH(e)1605 279 y FF(0)1670
265 y FG(\020)g FH(v)1828 279 y FF(0)1868 265 y FE(=\033)1965
279 y FF(3)p -332 314 2337 4 v 376 404 a FE(\032=\033)j
FS(`)d(h)-15 b(h)p 684 352 47 4 v FH(e)731 418 y FF(1)p
796 352 V 796 404 a FH(e)843 418 y FF(2)882 404 y FS(i)g(i)26
b FG(\020)f FH(v)1121 418 y FF(0)1160 404 y FE(=\033)1257
418 y FF(3)2040 335 y FQ(app)-458 608 y FO(Rema)m(rques)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 736 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
746 a FU(P)m(a)m(r)30 b(rapp)s(o)m(rt)h(\340)f(la)h(page)g(63,)f(l'o)m
(rdre)i(d'\351valuation)h(est)c(ici)i(\034x\351)g(dans)g(la)-276
859 y(s\351mantique)g(:)f FH(e)272 873 y FF(1)342 859
y FU(avant)h FH(e)619 873 y FF(2)659 859 y FU(,)f(a\034n)h(de)g
(v\351ri\034er)g(d'ab)s(o)m(rd)g(que)g FH(e)1798 873
y FF(1)1868 859 y FU(s'\351value)-276 972 y(bien)g(en)g(une)g
(fermeture)e(\(si)h(ce)g(n'est)g(pas)h(le)g(cas,)f(on)g(gagne)i(du)f
(temps)e(en)-276 1085 y(signalant)i(l'erreur)g(au)f(plus)h(t\364t\).)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 1212 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 1222 a FU(Le)f(fait)g(que)h
FH(a)26 b FS(62)e Fz(co)s(dom)q FC(\()p FE(\032)p FC(\))31
b FU(p)s(ermet)e(d'oublier)j(les)e(a\033ectations)h(sur)f(le)-276
1335 y(pa)m(ram\350tre,)g(p.ex.)h FO(let)f FU(f)36 b(=)30
b FO(fun)h FU(x)f FS(!)g FU(x)h(:=)f(x)h FK(+)f FU(1)g
FO(in)g FU(f)36 b(3.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(94)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 95 95
TeXDict begin 95 94 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation95) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.95) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(avec)h(mutables)f(\(exp)m(ressions)f
(r\351cursives)h(natives\))p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 565 -69 a FH(a)26 b FS(62)e
Fz(dom)q FC(\()p FE(\033)s FC(\))11 44 y(\()p FE(\032)c
FS(\010)g FH(x)34 b FS(7!)25 b FH(a)q FC(\))p FE(=)p
FC(\()p FE(\033)f FS(\010)c FH(a)26 b FS(7!)f FH(v)951
58 y FF(1)990 44 y FC(\))h FS(`)f FH(e)1172 58 y FF(1)1237
44 y FG(\020)g FH(v)1395 58 y FF(1)1434 44 y FE(=\033)1531
58 y FF(1)217 157 y FC(\()p FE(\032)c FS(\010)f FH(x)33
b FS(7!)25 b FH(a)q FC(\))p FE(=\033)779 171 y FF(1)844
157 y FS(`)g FH(e)965 171 y FF(2)1030 157 y FG(\020)g
FH(v)1188 171 y FF(2)1228 157 y FE(=\033)1325 171 y FF(2)p
11 205 1561 4 v 54 295 a FE(\032=\033)k FS(`)c(h)-15
b(h)p FO(let)25 b(rec)g FH(x)33 b FU(=)p 815 244 47 4
v 26 w FH(e)861 309 y FF(1)926 295 y FO(in)p 1026 244
V 25 w FH(e)1073 309 y FF(2)1112 295 y FS(i)-15 b(i)26
b FG(\020)f FH(v)1351 309 y FF(2)1391 295 y FE(=\033)1488
309 y FF(2)1606 226 y FQ(let-rec)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(95)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 96 96
TeXDict begin 96 95 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation96) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.96) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(La)37 b(s\351quence)f(et)h(l'it\351ration)h(g\351n\351rale)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(On)30 b(p)s(eut)g(maintenant)h(trouver)g(avantage)g
(\340)g(ajouter)f(\340)g(notre)h(langage)h(la)-458 -135
y(s\351quence)f(et)f(l'it\351ration)h(g\351n\351rale)h(:)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 5 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 15 a FU(Syntaxe)f(concr\350te)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -276 139 a FM(Expression)39
b(::=)j(...)203 239 y(|)h(Expression)c(";")k(Expression)203
339 y(|)g("while")e(Expression)e("do")j(Expression)d("done")p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 508 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb -276
518 a FU(Syntaxe)31 b(abstraite)p 0 TeXcolorgray -276
631 a FN(t)m(yp)s(e)26 b FL(exp)n(r)37 b FQ(=)27 b FM(...)g(|)g
FQ(Seq)g FN(of)34 b FL(exp)n(r)j FM(*)27 b FL(exp)n(r)37
b FM(|)27 b FQ(While)g FN(of)34 b FL(exp)n(r)j FM(*)27
b FL(exp)n(r)9 b FQ(;;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 759 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 769 a FU(Analyse)31 b(syntaxique)p 0
TeXcolorgray -276 882 a FS(h)-15 b(h)p -221 830 47 4
v FH(e)-174 896 y FF(1)-150 882 y FK(;)p -103 830 V FH(e)-57
896 y FF(2)-17 882 y FS(i)g(i)26 b FC(=)f FU(Seq)16 b(\()p
FS(h)-15 b(h)p 402 830 V FH(e)449 896 y FF(1)488 882
y FS(i)g(i)p FE(;)15 b FS(h)-15 b(h)p 638 830 V FH(e)686
896 y FF(2)726 882 y FS(i)g(i)g FU(\))30 b(et)-276 995
y FS(h)-15 b(h)p FO(while)p 17 943 V 25 w FH(e)63 1009
y FF(1)128 995 y FO(do)p 254 943 V 25 w FH(e)301 1009
y FF(2)366 995 y FO(done)p FS(i)g(i)26 b FC(=)f FU(While)16
b(\()-15 b FS(h)g(h)p 1045 943 V FH(e)1092 1009 y FF(1)1132
995 y FS(i)g(i)p FE(;)15 b FS(h)-15 b(h)p 1282 943 80
4 v FH(e)1322 1009 y FF(2)1363 995 y FS(i)g(i)g FU(\))p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 1122 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb -276
1132 a FU(V)m(a)m(riables)32 b(lib)m(res)p 0 TeXcolorgray
-276 1245 a FS(Lh)-15 b(h)p -158 1194 47 4 v FH(e)-112
1259 y FF(1)-87 1245 y FK(;)p -40 1194 V FH(e)6 1259
y FF(2)46 1245 y FS(i)g(i)25 b FC(=)g FS(L)p FC(\()p
FH(e)360 1259 y FF(1)400 1245 y FC(\))c FS([)f(L)p FC(\()p
FH(e)675 1259 y FF(2)715 1245 y FC(\))60 b FU(et)-276
1358 y FS(Lh)-15 b(h)p FO(while)p 79 1307 V 24 w FH(e)126
1372 y FF(1)190 1358 y FO(do)p 317 1307 V 26 w FH(e)364
1372 y FF(2)428 1358 y FO(done)q FS(i)g(i)26 b FC(=)f
FS(L)p FC(\()p FH(e)942 1372 y FF(1)982 1358 y FC(\))20
b FS([)g(L)p FC(\()p FH(e)1256 1372 y FF(2)1296 1358
y FC(\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(96)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 97 97
TeXDict begin 97 96 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation97) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.97) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(S\351mantique)37 b(de)h(la)f(s\351quence)f(et)i(de)f
(l'it\351ration)h(g\351n\351rale)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 107 -100 a Fo(x)31 b FR(62)24
b(L)p Fn(\()p Fo(e)381 -88 y FI(2)417 -100 y Fn(\))167
b Fk(\032)23 b FR(`)f(h)-14 b(h)p FN(let)24 b Fo(x)31
b FQ(=)p 1083 -147 43 4 v 23 w Fo(e)1126 -88 y FI(1)1185
-100 y FN(in)p 1276 -147 V 23 w Fo(e)1318 -88 y FI(2)1355
-100 y FR(i)-14 b(i)23 b Fp(\020)g Fo(v)p 107 -56 1475
4 v 542 23 a Fk(\032)g FR(`)g(h)-14 b(h)p 732 -24 43
4 v Fo(e)775 35 y FI(1)797 23 y FM(;)p 841 -24 V Fo(e)884
35 y FI(2)920 23 y FR(i)g(i)24 b Fp(\020)f Fo(v)1615
-37 y FQ(seq)-416 213 y(while)446 299 y Fo(f)c Fk(;)14
b Fo(p)26 b FR(62)d(L)p Fn(\()p Fo(e)800 311 y FI(2)837
299 y Fn(\))166 b Fo(x)31 b FR(62)23 b(L)p Fn(\()p Fo(e)1308
311 y FI(1)1345 299 y Fn(\))-406 399 y Fk(\032)g FR(`)f(h)-14
b(h)p FN(let)24 b(rec)f Fo(f)42 b FQ(=)22 b FN(fun)h
Fo(p)j FR(!)d FN(if)29 b Fo(p)s FQ(\()q(\))23 b FN(then)p
919 352 V 22 w Fo(e)962 411 y FI(2)984 399 y FM(;)p Fo(f)32
b(p)26 b FN(else)e FQ(\()q(\))f FN(in)g Fo(f)18 b FQ(\()q
FN(fun)k Fo(x)31 b FR(!)p 1892 352 V 23 w Fo(e)1934 411
y FI(1)1971 399 y FQ(\))p FR(i)-14 b(i)24 b Fp(\020)f
Fo(v)p -406 442 2637 4 v 345 521 a Fk(\032)g FR(`)f(h)-14
b(h)p FN(while)p 751 475 43 4 v 24 w Fo(e)794 533 y FI(1)853
521 y FN(do)p 969 475 V 23 w Fo(e)1011 533 y FI(2)1071
521 y FN(done)o FR(i)g(i)24 b Fp(\020)f Fo(v)-428 711
y FO(Rema)m(rque)121 b FU(La)31 b(valeur)g FH(v)40 b
FU(est)29 b(en)i(fait)f(toujours)g(\(\))g(dans)h(la)g(r\350gle)g
FQ(while)o FU(.)-458 923 y(Si)f(on)h(ajoutait)g(les)f(op)s(\351rateurs)
g(b)s(o)s(ol\351ens)g(de)h(compa)m(raison)h(sur)e(les)g(entiers,)g(on)
-458 1036 y(p)s(ourrait)g(en\034n)h(\351crire)g FN(let)d
FQ(x)g(=)f(0)g FN(in)g FQ(\()p FN(while)i FQ(x)f FM(<)f
FQ(10)f FN(do)h FQ(x)h(:=)g(x)f FM(+)h FQ(1)f FN(done)-14
b FM(;)p FQ(x\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2170 1639 a FT(97)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 98 98
TeXDict begin 98 97 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation98) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.98) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Implantation)37 b(de)h(la)f(s\351mantique)g(avec)h(mutables)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Le)30 b(p)m(remier)h(choix)g(\340)g(faire)f(est)f(celui)
j(du)f(t)m(yp)s(e)f(de)h(donn\351e)h(OCaml)d(qui)j(convient)-458
-135 y(p)s(our)e(les)g(adresses.)g(Bien)h(que)g(les)f(entiers)h(OCaml)e
(p)s(euvent)i(d\351b)s(o)m(rder,)h(on)e(les)-458 -22
y(utilisera)h(ici)g(comme)e(implantation)j(des)e(adresses.)-458
91 y(Un)g(autre)g(p)s(oint)h(concerne)g(les)f(r\350gles)h(o\371)f(il)h
(faut)f(choisir)h(une)g(adresse)f(qui)h(est)-458 204
y(lib)m(re)f(dans)f(la)h(m\351moire,)e(fo)m(rmellement)h
FH(a)d FS(62)f Fz(dom)p FC(\()p FE(\033)s FC(\))p FU(.)30
b(Une)f(solution)h(consiste)f(\340)-458 317 y(p)m(ro)s(duire)i(une)g
(adresse)f(\340)h(chaque)h(fois)e(qui)h(soit)f(absolument)h(unique)h
(\340)e(pa)m(rtir)-458 430 y(d'un)h(incr\351ment)g(entier)f(\(les)h
(adresses)e(\351tant)i(implant\351es)f(pa)m(r)h(des)g(entiers\).)f(Il)
-458 543 y(faudrait)h(donc)g(passer)f(un)h(a)m(rgument)g
(suppl\351mentaire)g(\340)g(notre)f(fonction)-458 656
y(d'\351valuation)j(eval,)e(qui)g(est)f(le)g(compteur,)h(et)f(\340)g
(chaque)i(fois)e(qu'on)h(a)g(b)s(esoin)-458 769 y(d'une)g(nouvelle)i
(adresse)d(on)h(lui)g(ajoute)f(1.)-458 882 y(Les)g(fonctions)g(p)s
(olymo)m(rphes)i(\(extend)f(p)s(our)f(l'ajout)h(d'une)h(liaison)f(et)f
(lo)s(okup)-458 995 y(p)s(our)g(la)h(recherche)g(d'une)h(liaison\))f
(qui)h(op)s(\351rent)e(sur)g(les)g(environnements)-458
1107 y(servent)g(aussi)g(p)s(our)h(les)f(m\351moires.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2170 1639 a FT(98)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 99 99
TeXDict begin 99 98 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation99) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.99) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Analyses)37 b(lexicales)g(et)h(syntaxiques)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-198 a FU(L'analyse)31 b(lexicale)g(transfo)m(rme)e(une)i(suite)e(de)h
(ca)m(ract\350res)g(en)g(une)h(suite)e(de)-276 -85 y(lex\350mes)h
(\(mots\).)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
43 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 53
a FU(L'analyse)h(syntaxique)h(transfo)m(rme)e(une)h(suite)f(de)h
(lex\350mes)f(en)h(une)-276 166 y(rep)m(r\351sentation)g(a)m(rb)s(o)m
(rescente)g(\(a)m(rb)m(re)h(de)e(syntaxe)h(abstraite\).)p
0 TeXcolorgray -458 329 a(Ces)e(deux)j(phases)e(logiques)i(sont)e
(implant\351es)h(comme)f(des)g(fonctions)g(OCaml)g(:)-458
442 y(le)g(pilote)h(app)s(elant)g(la)g(fonction)f(d'analyse)i
(syntaxique)g(qui)f(app)s(elle)h(la)e(fonction)-458 555
y(d'analyse)i(lexicale)g(qui)f(lit)g(le)f(\035ux)h(de)g(ca)m
(ract\350res)g(entrant)f(et)g(en)h(retire)e(les)-458
667 y(ca)m(ract\350res)h(reconnus)h(comme)f(constituant)h(un)g
(lex\350me)f(\(il)h(y)g(a)f(donc)h(un)g(e\033et)-458
780 y(de)f(b)s(o)m(rd)h(d\373)g(\340)g(l'int\351raction)g(avec)g(le)g
(syst\350me)e(de)i(\034chiers\).)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2170 1639 a FT(99)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 100 100
TeXDict begin 100 99 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -467
-608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation100) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467
-608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.100) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Enjeux)38 b(des)f(analyses)g(lexicales)g(et)h(syntaxiques)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-198 a FU(Les)29 b(analyses)j(lexicales)f(et)f(syntaxiques)i(ont)e(un)h
(domaine)h(d'application)-276 -85 y(bien)f(plus)g(la)m(rge)g(que)g
(celui)h(de)e(la)h(compilation.)h(On)e(les)g(retrouve)h(comme)-276
28 y(p)m(remi\350re)f(passe)h(dans)f(de)h(nomb)m(reuses)g(applications)
h(\(analyses)g(de)-276 141 y(commandes,)e(de)h(requ\352tes,)f(de)h(do)s
(cuments)f(HTML)g(etc.\).)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 269 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 279 a FU(Ces)f(deux)j(analyses)f(emploient)g(de)g(fa\347on)f
(essentielle)h(les)g FP(automates)p FU(,)e(que)-276 392
y(l'on)i(retrouve)f(donc)h(dans)g(de)g(nomb)m(reux)h(domaines)f(de)f
(l'info)m(rmatique)i(et)-276 505 y(de)e(la)h(t\351l\351matique.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 633 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 643 a FU(Les)e FP(exp)m(ressions)j
(r\351guli\350res)f FU(sont)e(un)i(langage)h(de)f(description)-276
755 y(d'automates)15 b(;)30 b(elles)h(sont)f(utilis\351es)g(dans)h(de)g
(nomb)m(reux)h(outils)e(Unix)-276 868 y(\()p FK(emacs)p
FU(,)g FK(grep)g FU(etc.\))g(et)g(sont)g(fournies)g(en)h
(biblioth\350que)i(avec)e(la)g(plupa)m(rt)-276 981 y(des)f(interp)m
(r\350tes)g(et)g(compilateurs)h(de)g(langages)g(de)g(p)m(rogrammation)
-276 1094 y(\(p.ex.)g(P)m(erl\).)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(100)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 101 101
TeXDict begin 101 100 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation101) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.101) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Objectifs)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(L'\351tude)31 b(d\351taill\351e)g(des)g
(automates)f(et)f(des)i(grammaires)e(fo)m(rmelles)h(p)s(ourrait)-458
-135 y(constituer)g(un)h(cours)f(\340)h(pa)m(rt,)f(nous)h(nous)g
(contentons)g(donc)g(ici)g(du)g(minimum,)-458 -22 y(avec)g(comme)e(but)
p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 131 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
141 a FU(d'expliquer)k(le)d(fonctionnement)h(des)g(analyseurs)g(de)g
(fa\347on)f(\340)h(p)s(ouvoir)-276 254 y(\351crire)f(soi-m\352me)g(des)
g(analyseurs)h(lexicaux)i(\()p FP(lexers)d FU(ou)h FP(scanners)p
FU(\))g(ou)-276 367 y(syntaxiques)g(\()p FP(pa)m(rsers)p
FU(\))15 b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 495 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
505 a FU(de)30 b(se)g(familia)m(riser)h(aussi)f(avec)h(les)g(exp)m
(ressions)g(r\351guli\350res)g(et)f(les)-276 618 y(automates,)f(\340)i
(cause)g(de)f(leur)h(omnip)m(r\351sence.)p 0 TeXcolorgray
-458 780 a(Le)f(but)h(n'est)f(donc)h(ni)g(d'\351crire)f(le)h(c\367ur)g
(d'un)g(analyseur,)h(ni)f(d'invento)m(rier)-458 893 y(toutes)e(les)i
(techniques)g(d'analyse.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(101)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 102 102
TeXDict begin 102 101 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation102) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.102) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Langages)36 b(fo)m(rmels)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 -198 a FU(Un)30 b FP(alphab)s(et)h
FU(est)f(un)h(ensemble)g(\034ni)g(non)g(vide)g(de)g FP(ca)m
(ract\350res)p FU(.)f(On)h(note)-276 -85 y(souvent)f(les)h(alphab)s
(ets)g FC(\006)f FU(et)f(les)i(ca)m(ract\350res)f FH(a)q
FU(,)g FH(b)j FU(ou)d FH(c)8 b FU(.)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 43 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 53 a FU(Un)30 b FP(mot)f FU(sur)h
FC(\006)g FU(est)f(une)i(suite,)g(\351ventuellement)h(vide,)f(de)g(ca)m
(ract\350res)f(de)-276 166 y FC(\006)p FU(.)f(Le)i(mot)e(vide)i(est)f
(not\351)g FE(")p FU(.)h(Un)f(mot)g(non)h(vide)g(est)f(not\351)g(pa)m
(r)h(ses)-276 279 y(ca)m(ract\350res)f(s\351pa)m(r\351s)h(pa)m(r)g(un)g
(p)s(oint)f(\(centr\351\),)h(pa)m(r)g(exemple)g FH(a)21
b FS(\001)f FH(b)j FS(\001)e FH(c)38 b FU(avec)-276 392
y FH(a)q FE(;)15 b FH(b)s FE(;)g FH(c)33 b FS(2)25 b
FC(\006)p FU(.)30 b(Le)g(p)s(oint)g(d\351note)h(un)g(op)s(\351rateur)g
(dit)f(de)h FP(concat\351nation)p FU(,)h(que)-276 505
y(l'on)f(p)s(eut)f(g\351n\351raliser)h(simplement)f(aux)h(mots)e
(eux-m\352mes)i(:)f FH(x)e FS(\001)21 b FH(y)10 b FU(,)30
b(o\371)g FH(x)-276 618 y FU(et)f FH(y)40 b FU(sont)30
b(des)h(mots)e(sur)g FC(\006)p FU(.)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 745 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 755 a FU(Le)h(mot)f(vide)j FE(")e
FU(est)g(un)h(\351l\351ment)f(neutre)h(p)s(our)f(la)h(concat\351nation)
h(des)-276 868 y(mots)d(:)h FH(x)e FS(\001)21 b FE(")k
FC(=)g FE(")c FS(\001)f FH(x)34 b FC(=)25 b FH(x)38 b
FU(p)s(our)31 b(tout)e(mot)h FH(x)8 b FU(.)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 996 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 1006 a FU(La)30 b(concat\351nation)i(est)e(une)h
(op)s(\351ration)g(asso)s(ciative)f(:)-276 1119 y FH(x)e
FS(\001)20 b FC(\()p FH(y)31 b FS(\001)20 b FH(z)8 b
FC(\))25 b(=)g(\()p FH(x)k FS(\001)21 b FH(y)10 b FC(\))20
b FS(\001)g FH(z)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 1247 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
1257 a FU(On)30 b(\351crira)g(simplement)g FH(xy)40 b
FU(au)31 b(lieu)g(de)g FH(x)d FS(\001)21 b FH(y)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(102)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 103 103
TeXDict begin 103 102 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation103) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.103) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Langages)36 b(fo)m(rmels)h(\(suite\))p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 -208 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 -198 a FU(Un)30 b
FP(langage)i FH(L)e FU(sur)g FC(\006)g FU(est)f(un)i(ensemble)g(de)g
(mots)e(sur)h FC(\006)p FU(.)f(La)-276 -85 y(concat\351nation)j(p)s
(eut)e(s'\351tendre)g(aux)i(langages)f(:)-276 28 y FH(L)-227
42 y FF(1)-168 28 y FS(\001)21 b FH(L)-73 42 y FF(2)-8
28 y FC(=)k FS(f)p FH(xy)35 b FS(j)26 b FH(x)33 b FS(2)25
b FH(L)513 42 y FF(1)553 28 y FE(;)15 b FH(y)35 b FS(2)25
b FH(L)805 42 y FF(2)845 28 y FS(g)p FU(.)30 b(Nous)h(p)s(ouvons)g
(ainsi)g(d\351\034nir)-276 141 y(inductivement)h(l'ensemble)f
FC(\006)764 108 y FD(n)835 141 y FU(des)g(mots)e(de)h(longueur)i
FH(n)g FU(sur)e(l'alphab)s(et)-276 254 y FC(\006)f FU(:)643
270 y Fl(\032)753 341 y FC(\006)819 308 y FF(0)883 341
y FC(=)c FS(f)p FE(")p FS(g)753 454 y FC(\006)819 421
y FD(n)q Fj(+)p FF(1)976 454 y FC(=)g(\006)20 b FS(\001)g
FC(\006)1269 421 y FD(n)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 609 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 619 a FU(L'ensemble)30 b(de)h(tous)f(les)g(mots)f(sur)h
FC(\006)g FU(est)f(alo)m(rs)i FC(\006)1458 586 y FA(\003)1523
619 y FC(=)1618 550 y Fl(S)1694 645 y FD(n)q Fi(>)p FF(0)1838
619 y FC(\006)1904 586 y FD(n)1945 619 y FU(.)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 746 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 756 a FU(L'ensemble)f(de)h(tous)f(les)g(mots)f
FP(non)i(vides)g FU(sur)f FC(\006)g FU(est)g FC(\006)1638
723 y Fj(+)1722 756 y FC(=)1817 688 y Fl(S)1893 783 y
FD(n)q Fi(>)p FF(1)2037 756 y FC(\006)2103 723 y FD(n)2144
756 y FU(.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
884 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 894
a FU(On)g(v\351ri\034e)h(ais\351ment)f(que)h FC(\006)708
861 y FA(\003)773 894 y FC(=)25 b FS(f)p FE(\017)p FS(g)c([)e
FC(\006)h FS(\001)h FC(\006)1295 861 y FA(\003)1359 894
y FC(=)k FS(f)p FE(\017)p FS(g)c([)f FC(\006)1750 861
y FA(\003)1809 894 y FS(\001)h FC(\006)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 1022 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 1032 a FU(Soient)31 b FH(x)8 b FU(,)30
b FH(y)40 b FU(et)30 b FH(w)40 b FU(trois)29 b(mots)g(de)i
FC(\006)973 999 y FA(\003)1042 1032 y FU(tels)f(que)h
FH(w)k FC(=)25 b FH(xy)10 b FU(.)30 b(Alo)m(rs)h FH(x)38
b FU(est)29 b(un)-276 1145 y FP(p)m(r\351\034xe)i FU(de)g
FH(w)40 b FU(et)30 b FH(y)40 b FU(est)29 b(un)i FP(su\036xe)g
FU(de)g FH(w)10 b FU(.)30 b(Si)h FH(x)8 b FE(;)15 b FH(y)35
b FS(2)25 b FC(\006)1593 1112 y Fj(+)1652 1145 y FU(,)30
b(alo)m(rs)h FH(x)38 b FU(est)30 b(un)-276 1258 y FP(p)m(r\351\034xe)h
(p)m(rop)m(re)h FU(de)f FH(w)10 b FU(,)30 b(et)g FH(y)40
b FU(est)29 b(un)i FP(su\036xe)g(p)m(rop)m(re)h FU(de)f
FH(w)10 b FU(.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(103)g(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 104 104
TeXDict begin 104 103 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation104) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.104) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Langages)36 b(r\351guliers)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(L'ensemble)28
b FS(R)p FC(\(\006)162 -280 y FA(\003)201 -247 y FC(\))f
FU(des)h FP(langages)g(r\351guliers)g FU(\(ou)g FP(rationnels)p
FU(\))g(sur)f FC(\006)1879 -280 y FA(\003)1945 -247 y
FU(est)f(d\351\034ni)-458 -135 y(inductivement)32 b(comme)d(\351tant)i
(la)f(plus)h(p)s(etite)f(famille)h(de)f(pa)m(rties)h(de)g
FC(\006)1995 -168 y FA(\003)2064 -135 y FU(\(pa)m(r)-458
-22 y(d\351\034nition,)h FC(\006)11 -55 y FA(\003)80
-22 y FU(est)e(le)g(plus)h(grand)g(langage)h(sur)e FC(\006)p
FU(\))g(v\351ri\034ant)h(les)g(p)m(rop)m(ri\351t\351s)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 106 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
116 a FB(?)25 b FS(2)f(R)p FC(\(\006)83 83 y FA(\003)123
116 y FC(\))p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 244 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
254 a(f)p FE(")p FS(g)i(2)f(R)p FC(\(\006)146 221 y FA(\003)185
254 y FC(\))p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 382 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
392 a(8)p FH(a)g FS(2)g FC(\006)p FE(:)p FS(f)p FH(a)q
FS(g)g(2)g(R)p FC(\(\006)445 359 y FA(\003)485 392 y
FC(\))p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 520
a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 530 a(8)p
FH(R)-166 544 y FF(1)-128 530 y FE(;)15 b FH(R)-29 544
y FF(2)36 530 y FS(2)25 b(R)p FC(\(\006)300 497 y FA(\003)339
530 y FC(\))p FE(:)p FH(R)458 544 y FF(1)518 530 y FS([)20
b FH(R)658 544 y FF(2)722 530 y FS(2)25 b(R)p FC(\(\006)986
497 y FA(\003)1026 530 y FC(\))p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 657 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 667 a(8)p FH(R)-166 681 y FF(1)-128 667 y FE(;)15
b FH(R)-29 681 y FF(2)36 667 y FS(2)25 b(R)p FC(\(\006)300
634 y FA(\003)339 667 y FC(\))p FE(:)p FH(R)458 681 y
FF(1)518 667 y FS(\001)c FH(R)623 681 y FF(2)687 667
y FS(2)k(R)p FC(\(\006)951 634 y FA(\003)990 667 y FC(\))p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 795 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 805 a(8)p FH(R)32
b FS(2)24 b(R)p FC(\(\006)129 772 y FA(\003)169 805 y
FC(\))p FE(:)p FH(R)296 772 y FA(\003)360 805 y FS(2)h(R)p
FC(\(\006)624 772 y FA(\003)664 805 y FC(\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(104)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 105 105
TeXDict begin 105 104 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation105) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.105) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Exp)m(ressions)36 b(r\351guli\350res)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Une)30 b FP(exp)m(ression)i(r\351guli\350re)f FU(est)e(une)j
(notation)f(compacte)f(et)g(simpli\034\351e)h(p)s(our)-458
-135 y(rep)m(r\351senter)f(un)h(langage)h(r\351gulier.)f(P)m(a)m(r)g
(exemple)g(:)p 0 TeXcolorgray 0 TeXcolorgray -293 170
a FO(Exp)m(ression)k(r\351guli\350re)p 578 204 4 113
v 98 w(Langage)e(r\351gulier)p 1367 204 V 100 w(Mots)i(du)f(langage)p
-343 207 2510 4 v -293 286 a FH(a)26 b FS(j)f FH(b)33
b FU(ou)e FH(a)21 b FC(+)f FH(b)p 578 320 4 113 v 397
w FS(f)p FH(a)q FE(;)15 b FH(b)s FS(g)p 1367 320 V 564
w FH(a)q FU(,)30 b FH(b)-293 399 y(ab)-199 366 y FA(\003)-160
399 y FH(a)p 578 433 V 745 w FS(f)p FH(a)q FS(gf)p FH(b)s
FS(g)904 366 y FA(\003)945 399 y FS(f)p FH(a)q FS(g)p
1367 433 V 338 w FH(aa)q FU(,)g FH(aba)q FU(,)f FH(abba)i
FU(etc.)-293 512 y FC(\()p FH(ab)s FC(\))-129 479 y FA(\003)p
578 546 V 629 512 a FS(f)p FH(ab)s FS(g)813 479 y FA(\003)p
1367 546 V 1418 512 a FE(")p FU(,)g FH(ab)s FU(,)f FH(abab)i
FU(etc.)-293 625 y FH(abba)p 578 659 V 740 w FS(f)p FH(abba)q
FS(g)p 1367 659 V 516 w FH(abba)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(105)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 106 106
TeXDict begin 106 105 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation106) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.106) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Exp)m(ressions)36 b(r\351guli\350res)h(\(suite\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(L'ensemble)31 b FS(E)8 b FC(\(\006\))30
b FU(des)h(exp)m(ressions)g(r\351guli\350res)g(sur)f(un)g(alphab)s(et)i
FC(\006)e FU(est)f(le)i(plus)-458 -135 y(p)s(etit)e(ensemble)i
(v\351ri\034ant)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 18 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 28 a FB(?)25 b FS(2)f(E)8 b FC(\(\006\))p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 156 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 166 a(f)p FE(")p FS(g)26 b(2)f(E)8
b FC(\(\006\))p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 294 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
304 a(8)p FH(a)25 b FS(2)g FC(\006)p FE(:)p FS(f)p FH(a)q
FS(g)g(2)g(E)8 b FC(\(\006\))p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 432 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 442 a(8)p FH(e)-185 456 y FF(1)-146 442 y FE(;)15
b FH(e)-66 456 y FF(2)-1 442 y FS(2)25 b(E)8 b FC(\(\006\))p
FE(:)p FH(e)342 456 y FF(1)403 442 y FC(+)20 b FH(e)534
456 y FF(2)599 442 y FS(2)25 b(E)8 b FC(\(\006\))p 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 569 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 579 a(8)p FH(e)-185
593 y FF(1)-146 579 y FE(;)15 b FH(e)-66 593 y FF(2)-1
579 y FS(2)25 b(E)8 b FC(\(\006\))p FE(:)p FH(e)342 593
y FF(1)403 579 y FS(\001)20 b FH(e)488 593 y FF(2)554
579 y FS(2)k(E)8 b FC(\(\006\))p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 707 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 717 a(8)p FH(e)31 b FS(2)25 b(E)8 b FC(\(\006\))p
FE(:)p FH(e)195 684 y FA(\003)261 717 y FS(2)25 b(E)8
b FC(\(\006\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(106)i(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 107 107
TeXDict begin 107 106 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation107) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.107) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Des)37 b(exp)m(ressions)g(r\351guli\350res)f(aux)i(langages)e
(r\351guliers)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(Le)30 b(passage)h(des)f(exp)m(ressions)h
(r\351guli\350res)g(aux)g(langages)h(r\351guliers)e(se)g(fait)-458
-135 y(simplement)g(pa)m(r)h(la)g(fonction)g Fz(L)25
b FC(:)h FS(E)8 b FC(\(\006\))26 b FS(!)f(R)30 b FU(d\351\034nie)i
(inductivement)g(pa)m(r)629 70 y Fz(L)p FC(\()p FE(\017)p
FC(\))26 b(=)f FB(?)621 208 y Fz(L)p FC(\()p FH(a)q FC(\))h(=)f
FS(f)p FH(a)q FS(g)395 345 y Fz(L)p FC(\()p FH(e)526
359 y FF(1)587 345 y FC(+)19 b FH(e)717 359 y FF(2)757
345 y FC(\))26 b(=)f Fz(L)p FC(\()p FH(e)1045 359 y FF(1)1086
345 y FC(\))20 b FS([)g Fz(L)p FC(\()p FH(e)1353 359
y FF(2)1394 345 y FC(\))440 483 y Fz(L)p FC(\()p FH(e)571
497 y FF(1)632 483 y FS(\001)g FH(e)717 497 y FF(2)757
483 y FC(\))26 b(=)f Fz(L)p FC(\()p FH(e)1045 497 y FF(1)1086
483 y FC(\))20 b FS(\001)h Fz(L)p FC(\()p FH(e)1318 497
y FF(2)1358 483 y FC(\))579 621 y Fz(L)p FC(\()p FH(e)716
583 y FA(\003)757 621 y FC(\))26 b(=)f Fz(L)p FC(\()p
FH(e)6 b FC(\))1086 583 y FA(\003)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(107)k(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 108 108
TeXDict begin 108 107 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation108) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.108) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Extensions)37 b(syntaxiques)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(P)m(a)m(r)30
b(commo)s(dit\351,)g(les)g(outils)h(qui)g(emploient)g(les)g(exp)m
(ressions)g(r\351guli\350res)-458 -135 y(\351tendent)g(la)f(syntaxe)h
(donn\351e)h(p)m(r\351c\351demment,)f(sans)f(augmenter)h(la)g
(puissance)-458 -22 y(d'exp)m(ression.)h(P)m(a)m(r)f(exemple)g(:)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 106 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
116 a FU([ab)s(c])f(p)s(our)i(\(a)e FS(j)h FU(b)f FS(j)h
FU(c\))p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
244 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 254
a FU([a-f)6 b(])30 b(p)s(our)i(\(a)e FS(j)h FU(b)f FS(j)h
FU(c)f FS(j)g FU(d)h FS(j)f FU(e)g FS(j)h FU(f)6 b(\))p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 382 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 392 a FU([^ab)s(c])31
b(p)s(our)f(le)g(compl\351mentaire)h(de)g(\(a)g FS(j)f
FU(b)h FS(j)f FU(c\))g(dans)h(l'ensemble)g(des)-276 505
y(ca)m(ract\350res)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 633 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
643 a FU(a)15 b(?)30 b(p)s(our)h(a)g FS(j)f FE(\017)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 770 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 780 a FV(_)f FU(ou)i
FO(.)f FU(p)s(our)g(n'imp)s(o)m(rte)h(quel)g(ca)m(ract\350re.)p
0 TeXcolorgray -458 918 a FO(Rema)m(rque)p 0 TeXcolorgray
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 1071 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 1081 a FU(Le)f(symb)s(ole)g
FK(+)g FU(n'est)g(pas)h(emplo)m(y)m(\351)h(dans)f(son)f(sens)g(de)g
(disjonction)i(mais)-276 1194 y(de)e(r\351p)s(\351tition)h(non)g(vide.)
p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(108)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 109 109
TeXDict begin 109 108 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation109) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.109) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Exemples)38 b(d'exp)m(ressions)d(r\351guli\350res)i
(\351tendues)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 -198 a FO(Entiers)d(d\351cimaux)802 -85 y FU([0-9])p
FK(+)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 43
a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 53 a FO(Entiers)g
(hexad\351cimaux)602 166 y FU(0x\([0-9a-fA-F]\))p FK(+)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 294 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 304 a FO(Nomb)m(res)g(\340)f(la)g(P)
m(ascal)265 417 y FU([0-9])p FK(+)e FU(\()p FO(.)p FU([0-9]*\))15
b(?)30 b(\([Ee][)p FK(-+)p FU(][0-9])p FK(+)p FU(\))15
b(?)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 545
a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 555 a
FO(Sources)33 b(OCaml)419 667 y FK(bash$)46 b(ls)h(*.ml{,[ily]})p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(109)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 110 110
TeXDict begin 110 109 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation110) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.110) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Application)37 b(\340)h(la)g(p)m(ro)s(duction)e(d'analyseurs)
g(lexicaux)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray -458 -247 a FU(On)30 b(sp)s(\351ci\034e)h(chaque)h(so)m
(rte)e(de)g(lex\350me)h(pa)m(r)g(une)g(exp)m(ression)h
(r\351guli\350re,)f(comme)-458 -135 y(pa)m(r)g(exemple)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -7 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
3 a FU(les)f(mots-cl\351s)f FO(let)p FU(,)h FO(in)g FU(etc.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 131 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 141 a FU(les)g(va)m(riables)i([a-z])
p FK(+)f FU([a-zA-Z0-9_]*)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 269 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 279 a FU(les)f(entiers)g([0-9])p FK(+)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 407 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 417 a FU(les)g(symb)s(oles)g(:)g(\()g(\))g(+)h(*)f
(=)g(etc.)p 0 TeXcolorgray -458 555 a(mais)g(aussi)g(le)h(texte)f(\340)
g(oublier)i(:)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 682 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 692 a FU(les)e(espaces)g(\(')p FK( )p FU(')h FS(j)f
FU(')p FS(n)p FU(n')h FS(j)g FU(')p FS(n)p FU(t'\))p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 820 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 830 a FU(et)e(les)i(commentaires.)p
0 TeXcolorgray -458 968 a FO(Aucun)j(lex\350me)e(n'est)i(alo)m(rs)f
(asso)s(ci\351)g(\340)g(ces)g(exp)m(ressions)i(r\351guli\350res.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(110)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 111 111
TeXDict begin 111 110 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation111) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.111) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Application)37 b(\340)h(la)g(p)m(ro)s(duction)e(d'analyseurs)
g(lexicaux)i(\(suite\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(Un)30 b(logiciel)i(p)m(rend)g(une)f
(telle)f(sp)s(\351ci\034cation)i(et)e(p)m(ro)s(duit)h(un)g(p)m
(rogramme)f(qui)-458 -135 y(implante)h(l'analyseur)h(lexical)g(co)m
(rresp)s(ondant)g(dans)e(le)h(langage)h(source)e(de)-458
-22 y(l'application.)j(L'analyseur)f(est)d(alo)m(rs)i(compil\351)g(no)m
(rmalement)g(et)f(son)g(co)s(de)-458 91 y(objet)d(\(cible\))h(est)e
(li\351)h(au)g(reste)f(de)h(l'application.)j(Il)d(p)m(rend)h(un)g
(\035ux)f(de)h(ca)m(ract\350res)-458 204 y(et)i(tente)g(d'y)h
(reconna\356tre)g(un)g(lex\350me.)g(S'il)g(r\351ussit,)e(il)i(renvoie)h
(celui-ci)g(et)e(se)-458 317 y(d\351place)i(d'autant)f(dans)g(le)f
(\035ux,)i(sinon)f(il)g(signale)g(une)g(erreur)f(ou)h(un)g(\035ux)g
(vide.)-458 530 y(En)f(langage)i(C,)e(les)g(g\351n\351rateurs)h
(d'analyseurs)h(lexicaux)g(connus)g(sont)d(\035ex)i(et)-458
643 y(lex)g(\(dans)g(la)f(distribution)i(Red)f(Hat)f(Linux)i(ce)e
(dernier)h(est)f(en)h(fait)f(un)g(lien)-458 755 y(symb)s(olique)h(vers)
f(le)h(p)m(remier\).)g(En)f(Java,)i(il)e(y)h(a)f(jlex)h(et)f(javacc,)h
(pa)m(r)g(exemple.)-458 868 y(P)m(our)f(un)h(catalogue,)h(cf.)408
889 y
SDict begin H.S end
 408 889 a 0 TeXcolorgray -21 x FK
(http://catalog.compilertools.net/)p 0 TeXcolorgray 1958
805 a
SDict begin H.R end
 1958 805 a 1958 868 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://catalog.compilertools.net/)>>/Subtype /Link
H.B /ANN pdfmark end
 1958 868 a 30 w FU(et,)-458
981 y(autour)e(du)h(fo)m(rum)f(comp.compilers,)h(cf.)946
1001 y
SDict begin H.S end
 946 1001 a 0 TeXcolorgray -20 x FK(http://compilers.iecc.com/)p
0 TeXcolorgray 2168 918 a
SDict begin H.R end
 2168 918 a 2168 981 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://compilers.iecc.com/)>>/Subtype /Link H.B
/ANN pdfmark end
 2168
981 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(111)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 112 112
TeXDict begin 112 111 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation112) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.112) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(o)s(camllex)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(Le)30 b(g\351n\351rateur)h(d'analyseurs)h
(lexicaux)g(du)f(syst\350me)e(OCaml)h(est)g(o)s(camllex.)-458
-135 y(Les)g(exp)m(ressions)h(r\351guli\350res)g(d\351\034nissant)g
(les)f(lex\350mes)h(ont)f(une)h(fo)m(rme)-458 -22 y(habituelle,)h(mais)
e(les)g(ca)m(ract\350res)h(sont)f(entour\351s)g(pa)m(r)h(des)g(ap)s
(ostrophes)-458 91 y(\(conventions)h(de)e(OCaml\),)g(p.ex.)i(['a'-'z'])
p FK(+)f FU(['a'-'z')g('A'-'Z')g('0'-'9')g('_']*)g(au)-458
204 y(lieu)g(de)g([a-z])p FK(+)g FU([a-zA-Z0-9_]*)-458
304 y(Le)f(t)m(yp)s(e)h(OCaml)e(rep)m(r\351sentant)i(les)f(lex\350mes)h
(n'est)f(g\351n\351ralement)h(pas)f(d\351\034ni)-458
403 y(dans)h(la)f(sp)s(\351ci\034cation)i(\(qui)f(p)s(oss\350de)f(une)h
(extension)h FK(.mll)p FU(\).)e(P)m(a)m(r)h(exemple,)g(ce)-458
503 y(t)m(yp)s(e)f(p)s(eut)h(\352tre)p 0 TeXcolorgray
0 TeXcolorgray -458 677 a FN(t)m(yp)s(e)26 b FL(tok)n(en)i
FQ(=)f(INT)h FN(of)34 b FL(int)f FM(|)27 b FQ(IDENT)h
FN(of)34 b FL(string)i FM(|)27 b FQ(TRUE)g FM(|)g FQ(F)-7
b(ALSE)-48 777 y FM(|)48 b FQ(PLUS)28 b FM(|)f FQ(MINUS)h
FM(|)f FQ(TIMES)g FM(|)h FQ(SLASH)g FM(|)f FQ(EQUAL)h
FM(|)f FQ(ARRO)n(W)-48 877 y FM(|)48 b FQ(LP)-7 b(AR)28
b FM(|)f FQ(RP)-7 b(AR)28 b(LET)f FM(|)h FQ(IN)f FM(|)g
FQ(REC)-48 976 y FM(|)48 b FQ(FUN)28 b FM(|)f FQ(IF)h
FM(|)g FQ(THEN)f FM(|)g FQ(ELSE)g FM(|)g FQ(AND)h FM(|)f
FQ(OR)h FM(|)f FQ(NOT)h FM(|)p 0 0 1 TeXcolorrgb 27 w
FQ(EOF)p 0 TeXcolorgray -458 1151 a FU(L'exp)s(\351rience)j(recommande)
g(d'asso)s(cier)f(la)h(\034n)g(de)f(\034chier)i(\340)e(un)h(lex\350me)g
(\(ici)-458 1250 y FQ(EOF\),)d(en)f(pa)n(rticulier)g(en)h(conjonction)d
(avec)j(un)f(analyseur)g(syntaxique.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(112)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 113 113
TeXDict begin 113 112 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation113) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.113) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Sp)s(\351ci\034cation)37 b(d'analyseurs)f(lexicaux)i(avec)f
(o)s(camllex)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -261 a FU(Une)30 b(sp)s(\351ci\034cation)i
(d'analyseur)g(lexical)g(p)s(our)g(o)s(camllex)e(a)h(la)g(fo)m(rme)e(:)
p 0 TeXcolorgray 0 TeXcolorgray -458 -86 a FQ({)e FL(Co)r(de)g(OCaml)h
(optionnel)d(en)j(p)n(rologue)e FQ(})-458 13 y FN(let)i
FL(r)37 b FQ(=)27 b FL(regexp)-458 113 y FQ(.)14 b(.)g(.)-458
212 y FN(rule)28 b FL(entr\351e)-77 224 y FI(1)-14 212
y FQ(=)g FN(pa)m(rse)-234 312 y FL(regexp)-9 324 y FI(1)p
Fh(;)p FI(1)107 312 y FQ({)f FL(Co)r(de)g(OCaml,)g(dit)h(action)e
FQ(})-289 412 y FM(|)54 b FQ(.)14 b(.)g(.)-289 511 y
FM(|)54 b FL(regexp)34 523 y FI(1)p Fh(;)p Fg(n)151 511
y FQ({)27 b FL(Co)r(de)g(OCaml,)h(dit)f(action)g FQ(})-458
611 y FN(and)f FL(entr\351e)-82 623 y FI(2)-18 611 y
FQ(=)h FN(pa)m(rse)-294 711 y FQ(.)14 b(.)g(.)-458 810
y FN(and)26 b FQ(.)14 b(.)g(.)-458 910 y({)27 b FL(Co)r(de)g(OCaml)h
(optionnel)d(en)j(\351pilogue)e FQ(})p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(113)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 114 114
TeXDict begin 114 113 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation114) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.114) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Un)38 b(exemple)g(de)f(sp)s(\351ci\034cation)g(p)s(our)g(o)s
(camllex)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (exemple_ocamllex) cvn /DEST pdfmark
end
 -458 -360 a 0 TeXcolorgray 0 TeXcolorgray 199
x FQ({)27 b FN(op)s(en)f FQ(P)n(a)n(rser)-389 -61 y FN(exception)g
FQ(Illegal_cha)n(r)h FN(of)34 b FL(string)i FQ(})-458
38 y FN(let)28 b FQ(ident)f(=)g(['a'-'z'])g(['_')h('A'-'Z')f('a'-'z')h
('0'-'9']*)-458 138 y FN(rule)g FQ(tok)n(en)e(=)h FN(pa)m(rse)-234
237 y FQ([')p FM( )p FQ(')g(')p FR(n)p FQ(n')g(')p FR(n)p
FQ(t')h(')p FR(n)p FQ(r'])f({)g(tok)n(en)g(lexbuf)33
b(})-289 337 y FM(|)27 b FQ("let")425 b({)27 b(LET)h(})-289
437 y FM(|)f FQ("rec")410 b({)27 b(REC)g(})-289 536 y
FM(|)g FQ("=")447 b({)27 b(EQUAL)h(})-289 636 y(.)14
b(.)g(.)-289 736 y FM(|)27 b FQ(ident)423 b({)27 b(IDENT)h
(\(Lexing.lexeme)f(lexbuf)6 b(\)})-289 835 y FM(|)27
b FQ(['0'-'9'])p FM(+)300 b FQ({)27 b(INT)h(\(int_of_string)g
(\(Lexing.lexeme)f(lexbuf)6 b(\)\))28 b(})-289 935 y
FM(|)f FQ(eof)492 b({)27 b(EOF)h(})-289 1034 y FM(|)f
Ff(_)491 b FQ({)27 b(raise)h(\(Illegal_cha)n(r)f(\(Lexing.lexeme)g
(lexbuf)6 b(\)\))28 b(})p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(114)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 115 115
TeXDict begin 115 114 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation115) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.115) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Un)38 b(exemple)g(de)f(sp)s(\351ci\034cation)g(p)s(our)g(o)s
(camllex)h(\(suite\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 -198 a FU(Le)29 b(p)m(rologue)h(ouvre)g(le)g(mo)s(dule)f(P)m(a)m
(rser)h(ca)m(r)g(celui-ci)h(contient)e(la)h(d\351\034nition)-276
-85 y(du)g(t)m(yp)s(e)g(tok)m(en)h(dont)f(les)f(constructeurs)h(sont)f
(appliqu\351s)j(dans)f(les)e(actions)-276 28 y(\(LET,)h(REC)g(etc.\).)g
(C'est)f(le)i(st)m(yle)g(d'o)m(rganisation)h(quand)g(on)f(utilise)-276
141 y(conjointement)f(un)h(analyseur)h(syntaxique)g(p)m(ro)s(duit)f(pa)
m(r)h(o)s(camly)m(acc)f(\(c'est)-276 254 y(la)f(m\352me)g
(con\034guration)i(en)f(langage)h(C)d(si)h(on)h(utilise)g(lex)g(avec)g
(y)m(acc\).)h(Si)-276 367 y(on)e(sp)s(\351ci\034e)h(un)g(analyseur)h
(lexical)g(autonome)f(\(ne)f(serait-ce)h(que)g(p)s(our)-276
480 y(faire)f(du)h(test)e(unitaire\),)i(on)g(aurait)g(alo)m(rs)g(p)m
(robablement)h(un)f(mo)s(dule)-276 593 y(T)-8 b(ok)m(en)31
b(contenant)g(la)g(d\351\034nition)h(des)f(lex\350mes.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 721 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 731 a FU(On)f(d\351cla)m(re)i(les)e
(exceptions)h(lexicales)h(dans)f(le)g(p)m(rologue,)h(ici)f(simplement)
-276 843 y(Illegal_cha)m(r,)h(qui)g(doivent)f(\352tre)f(\034ltr\351es)g
(au)h(niveau)h(du)f(pilote)g(de)-276 956 y(l'application.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 1084 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 1094 a FU(Une)f(exp)m(ression)h
(r\351guli\350re)h(nomm\351e)e(ident)h(est)e(d\351\034nie,)j(ainsi)f
(qu'une)-276 1207 y(unique)g(entr\351e)f(tok)m(en.)g(Dans)g(les)g
(actions,)g FP(les)g(entr\351es)f(sont)h(des)f(fonctions)-276
1320 y FU(dont)h(le)h(p)m(remier)f(a)m(rgument)h(est)f(toujours)g(le)h
(\035ux)g(de)f(ca)m(ract\350res)h(entrant,)-276 1433
y(toujours)f(nomm\351)f(lexbuf.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(115)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 116 116
TeXDict begin 116 115 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation116) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.116) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Un)38 b(exemple)g(de)f(sp)s(\351ci\034cation)g(p)s(our)g(o)s
(camllex)h(\(suite)g(et)g(\034n\))p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 -198 a FU(Le)30 b(mo)s(dule)g(standa)m(rd)i(Lexing)
h(contient)e(un)f(certain)h(nomb)m(re)g(de)g(fonctions)-276
-85 y(qui)g(servent)f(\340)g(manipuler)i(le)f(\035ux)g(de)g(ca)m
(ract\350res.)f(P)m(a)m(r)h(exemple)-276 28 y(Lexing.lexeme)h(p)m(rend)
g(le)e(\035ux)h(et)f(retourne)h(le)f(lex\350me)h(qui)g(a)g(\351t\351)f
(reconnu)-276 141 y(pa)m(r)h(l'exp)m(ression)h(r\351guli\350re)f
FP(asso)s(ci\351e)f(\340)g(l'action)p FU(.)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 269 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 279 a FU(Notez)g(l'app)s(el)i(r\351cursif)e(\340)g
(tok)m(en)h(lo)m(rsque)g(l'on)h(veut)e(igno)m(rer)h(certains)-276
392 y(ca)m(ract\350res.)f(Cela)h(fonctionne)g(ca)m(r)g(dans)g
(l'action,)g(les)g(ca)m(ract\350res)-276 505 y(reconnus)g(pa)m(r)g
(l'exp)m(ression)h(r\351guli\350re)f(asso)s(ci\351e)f(ont)g(\351t\351)g
(\364t\351)g(du)h(\035ux.)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 619 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 629 a FU(Il)f(existe)g(une)h(pseudo-exp)m(ression)i
(r\351guli\350re)e(eof)37 b(qui)31 b(sert)e(\340)i(\034ltrer)f(la)g
(\034n)-276 729 y(de)g(\034chier.)h(Il)g(est)e(recommand\351)i(de)f
(s'en)h(servir)f(p)s(our)g(p)m(ro)s(duire)i(un)-276 829
y(pseudo-lex\350me)g FQ(EOF,)27 b(ca)n(r)h(les)f(comp)r(o)n(rtements)f
(implicites)g(des)i(applications)-276 928 y(vis-\340-vis)e(des)i
(\034ns)f(de)h(\034chier)g(p)r(euvent)g(va)n(rier)f(d'un)h(syst\350me)f
(d'exploitation)f(\340)-276 1028 y(l'autre.)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -363 1142 a FR(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 1152 a FQ(Il)h(existe)g(une)h(pseudo-exp)n(ression)
d(r\351guli\350re)i Fe(_)g FQ(qui)h(\034ltre)g(n'imp)r(o)n(rte)f(quel)
-276 1252 y(ca)n(ract\350re.)g FL(L'o)n(rdre)g(des)h(exp)n(ressions)e
(est)h(signi\034catif)p FQ(,)g(donc)g(cette)g(exp)n(ression)-276
1352 y(devrait)g(\352tre)h(la)f(derni\350re.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(116)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 117 117
TeXDict begin 117 116 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation117) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.117) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Mise)37 b(en)g(\367uvre)h(de)f(o)s(camllex)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-198 a FU(Si)30 b(la)h(sp)s(\351ci\034cation)g(o)s(camllex)g(a)g(p)s
(our)f(nom)g(lexer.mll,)h(alo)m(rs)g(la)-276 -85 y(compilation)g(se)f
(fait)g(en)h(deux)g(temps)f(:)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -205 56 a FQ(1.)p 0 TeXcolorgray
0 TeXcolorgray 45 w FM(ocamllex)41 b(lexer.mll)p FQ(,)23
b(qui)j(p)n(ro)r(duit)g(soit)g(une)h(erreur)g(soit)f(lexer.ml,)h(puis)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -205 156 a(2.)p
0 TeXcolorgray 0 TeXcolorgray 45 w FM(ocamlc)41 b(-c)i(lexer.ml)p
FQ(,)24 b(qui)k(p)n(ro)r(duit)f(soit)f(une)i(erreur)g(soit)f(lexer.cmo)
g(et)-95 256 y(lexer.cmi)h(\(ce)g(dernier,)g(en)f(l'absence)g(de)g
(lexer.mli\).)p 0 TeXcolorgray -276 410 a FU(En)j(th\351o)m(rie,)h(les)
g(actions)f(asso)s(ci\351es)g(aux)h(exp)m(ressions)g(r\351guli\350res)g
(ne)g(sont)-276 523 y(pas)f(tenues)g(de)h(renvo)m(y)m(er)h(un)f
(lex\350me,)g(ca)m(r)g(le)g(p)m(rogrammeur)f(est)f(lib)m(re)j(et)-276
636 y(p)s(eut,)e(pa)m(r)h(exemple,)g(\351crire)g(un)f(p)m(r\351p)m(ro)s
(cesseur,)i(c.-\340-d.)f(une)g(r\351\351criture)f(de)-276
749 y(\034chiers,)g(plut\364t)h(qu'un)h(analyseur)g(lexical.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 877 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 887 a FU(P)m(our)c(cr\351er)g(un)h
(\035ux)g(entrant)f(de)g(ca)m(ract\350res)h(\340)f(pa)m(rtir)g(de)h
(l'entr\351e)g(standa)m(rd)-276 1000 y(il)h(faut)g FO(let)g
FU(cha)m(r_\035o)m(w)k(=)c(Lexing.from_channel)j(\(stdin\))e
FO(in)f FU(.)15 b(.)g(.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(117)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 118 118
TeXDict begin 118 117 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation118) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.118) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Sous)38 b(le)f(cap)s(ot)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -261 a FU(Le)30 b(\034chier)h(OCaml)
f(r\351sultant)g(de)h(la)f(sp)s(\351ci\034cation)i(a)e(la)h(fo)m(rme)p
0 TeXcolorgray 0 TeXcolorgray -458 -86 a FL(Prologue)26
b FQ(.)14 b(.)g(.)-458 13 y FN(let)28 b(rec)f FL(entr\351e)20
25 y FI(1)84 13 y FQ(=)g FN(fun)g FQ(lexbuf)34 b FR(!)-333
113 y FQ(.)14 b(.)g(.)41 b FN(match)26 b FQ(.)14 b(.)g(.)41
b FN(with)-112 212 y FQ(.)14 b(.)g(.)41 b FR(!)28 b FL(action)-195
312 y FM(|)f FQ(.)14 b(.)g(.)-195 412 y FM(|)27 b FQ(.)14
b(.)g(.)41 b FR(!)28 b FL(action)-458 511 y FN(and)e
FL(entr\351e)-82 523 y FI(2)-18 511 y FQ(=)h FN(fun)g
FQ(lexbuf)34 b FR(!)-333 611 y FQ(.)14 b(.)g(.)-458 711
y FN(and)26 b FQ(.)14 b(.)g(.)-458 811 y FL(\311pilogue)-458
999 y FU(o\371)30 b FK(lexbuf)g FU(est)g(de)h(t)m(yp)s(e)f
(Lexing.lexbuf)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(118)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 119 119
TeXDict begin 119 118 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation119) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.119) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Analyse)37 b(des)g(commentaires)g(sur)h(une)f(ligne)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -256 a FU(Les)30 b(commentaires)f(sont)h(reconnus)h(durant)g
(l'analyse)h(lexicale)h(mais)c(rien)i(n'en)-458 -143
y(est)e(fait.)h(Certains)g(analyseurs)i(analysent)f(le)g(contenu)g(des)
g(commentaires)e(et)-458 -30 y(signalent)i(donc)g(des)g(erreurs)e
FP(\340)i(l'int\351rieur)g FU(de)g(ceux-ci)h(\(ce)e(qui)h(p)s(eut)g
(\352tre)-458 83 y(g\352nant)g(si)f(on)h(y)f(place)i(des)e
(m\351ta-donn\351es\).)-458 183 y(Le)g(t)m(yp)s(e)h(le)f(plus)h(simple)
g(de)f(commentaires)g(est)f(celui)j(de)f(C)1565 166 y
FT(++)1686 183 y FU(qui)g(p)s(o)m(rte)f(sur)-458 282
y(une)h(ligne.)p 0 TeXcolorgray 0 TeXcolorgray -458 457
a FN(rule)d FQ(tok)n(en)e(=)h FN(pa)m(rse)-206 556 y
FQ(.)14 b(.)g(.)-289 656 y FM(|)27 b FQ("//")81 b([^)27
b(')p FR(n)p FQ(n']*)82 b(')p FR(n)p FQ(n')14 b(?)27
b({)g(tok)n(en)g(lexbuf)33 b(})-458 843 y FU(L'exp)m(ression)e
(r\351guli\350re)h(reconna\356t)f(l'ouverture)g(du)g(commentaire,)f
(puis)h(laisse)-458 956 y(passer)f(tout)g(ca)m(ract\350re)g
(di\033\351rent)h(d'une)h(\034n)e(de)h(ligne)h(et)e(termine)g(pa)m(r)h
(une)g(\034n)-458 1069 y(de)f(ligne)i(optionnelle)g(\(on)f(supp)s(ose)g
(que)g(le)f(syst\350me)g(d'exploitation)i(est)e(Unix)-458
1182 y(et)g(qu'une)i(\034n)e(de)h(ligne)h(p)s(eut)e(terminer)g(le)g
(\034chier\).)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(119)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 120 120
TeXDict begin 120 119 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation120) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.120) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Analyse)37 b(des)g(commentaires)g(en)h(blo)s(cs)f(non)h(imb)m
(riqu\351s)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray -458 -261 a FU(L'entr\351e)30 b(tok)m(en)h(reconna\356t)g
(l'ouverture)h(du)f(commentaire,)f(et)g FP(son)g(action)-458
-161 y FU(app)s(elle)h(l'entr\351e)g(suppl\351mentaire)h(in_comment)e
(qui)i(saute)e(tous)g(les)-458 -61 y(ca)m(ract\350res)g(jusqu'\340)h
(la)g(fermeture)e(du)i(blo)s(c)g(et)f(signale)h(une)g(erreur)f(si)g
(celle-ci)-458 38 y(manque)h(\(commentaire)f(ouvert\).)h(Quand)g(le)g
(blo)s(c)g(est)e(ferm\351,)h(puisqu'un)-458 138 y(commentaire)g(ne)h(p)
m(ro)s(duit)g(pas)f(de)h(lex\350me,)g(il)f(faut)g(faire)h(un)g(app)s
(el)g(r\351cursif)f(\340)-458 237 y(tok)m(en)h(p)s(our)f(en)h(renvo)m
(y)m(er)h(un.)p 0 TeXcolorgray 0 TeXcolorgray -458 412
a FQ({)27 b(.)14 b(.)g(.)41 b FN(exception)26 b FQ(Op)r(en_comment)h(})
-458 511 y FN(rule)h FQ(tok)n(en)e(=)h FN(pa)m(rse)-206
611 y FQ(.)14 b(.)g(.)-289 711 y FM(|)27 b FQ("/*")e({)j(in_comment)e
(lexbuf)33 b(})-458 810 y FN(and)26 b FQ(in_comment)g(=)h
FN(pa)m(rse)-211 910 y FQ("*/")f({)h(tok)n(en)f(lexbuf)34
b(})-294 1010 y FM(|)27 b FQ(eof)102 b({)27 b(raise)g(Op)r(en_comment)g
(})-294 1109 y FM(|)g Ff(_)101 b FQ({)27 b(in_comment)f(lexbuf)33
b(})p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(120)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 121 121
TeXDict begin 121 120 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation121) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.121) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Analyse)37 b(des)g(commentaires)g(en)h(blo)s(cs)f(imb)m
(riqu\351s)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray -458 -247 a FU(Les)30 b(commentaires)f(du)i(langage)h(C)e
(p)s(euvent)h(\352tre)f(imb)m(riqu\351s)h(p)s(our)g(isoler)-458
-135 y(temp)s(o)m(rairement)f(une)h(pa)m(rtie)g(du)g(co)s(de)f(qui)i
(est)d(d\351j\340)i(comment\351e.)-458 78 y(S'ils)f(n'\351taient)i(pas)
e(imb)m(riqu\351s,)i(on)e(aurait)h(pu)g(\351crire)f(une)h(seule)g(exp)m
(ression)-458 191 y(r\351guli\350re)g(\(nous)g(ne)g(l'avons)g(pas)f
(fait)g(p)s(our)h(des)f(raisons)g(de)h(lisibilit\351)h(et)e(p)s(our)
-458 304 y(signaler)h(facilement)f(une)i(absence)f(de)g(fermeture\).)e
(Dans)h(le)h(cas)f(imb)m(riqu\351)i(il)-458 417 y(n'existe)f(pas)f(une)
h(telle)g(exp)m(ression)g FP(p)s(our)g(des)f(raisons)g(th\351o)m
(riques)p FU(.)i(On)e(dit)h(que)-458 530 y(les)f(langages)h
(r\351guliers)g(ne)g(p)s(euvent)g(\352tre)f(bien)h(pa)m
(renth\350s\351s.)-458 742 y(L'id\351e)g(est)e(que)j(les)e(exp)m
(ressions)h(r\351guli\350res)g(ne)g(p)s(euvent)g(\023)f(ga)m(rder)h(la)
-458 855 y(m\351moire)e(\024)i(du)g(degr\351)f(d'imb)m(rication)j
(courant.)e(P)m(our)f(y)h(pa)m(rvenir)h(on)e(se)g(sert)-458
968 y(donc)h(de)g(l'exp)m(ressivit\351)h(du)f(co)s(de)f
FP(des)g(actions)p FU(.)h FO(Ainsi)j(c'est)f(abusivement)-458
1081 y(que)h(l'on)f(r\351duit)g(l'analyse)g(lexicale)d(aux)k(seuls)f
(langages)h(r\351guliers,)-458 1194 y(sp)s(\351ci\034\351s)f(pa)m(r)h
(des)g(exp)m(ressions)g(r\351guli\350res.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(121)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 122 122
TeXDict begin 122 121 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation122) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.122) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Analyse)37 b(des)g(commentaires)g(en)h(blo)s(cs)f(imb)m
(riqu\351s)g(\(suite\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -261 a FU(La)30 b(technique)i(consiste)e(\340)h(mo)
s(di\034er)f(l'entr\351e)h(in_comment)f(de)h(so)m(rte)f(que)h(les)-458
-161 y(actions)f(soient)h FP(des)f(fonctions)h(dont)f(l'a)m(rgument)i
(est)d(la)i(p)m(rofondeur)-458 -61 y(d'imb)m(rication)h(courante.)p
0 TeXcolorgray 0 TeXcolorgray -458 113 a FN(rule)c FQ(tok)n(en)e(=)h
FN(pa)m(rse)-206 212 y FQ(.)14 b(.)g(.)-289 312 y FM(|)27
b FQ("/*")e({)j(in_comment)e(lexbuf)p 0 0 1 TeXcolorrgb
33 w(1)p 0 TeXcolorgray 27 w(})-458 412 y FN(and)g FQ(in_comment)g(=)h
FN(pa)m(rse)-211 511 y FQ("*/")f({)p 0 0 1 TeXcolorrgb
27 w FN(fun)h FQ(depth)g FR(!)p 0 TeXcolorgray 0 0 1
TeXcolorrgb 28 w FN(if)34 b FQ(depth)27 b(=)g(1)g FN(then)p
0 TeXcolorgray 27 w FQ(tok)n(en)f(lexbuf)p 0 0 1 TeXcolorrgb
535 611 a FN(else)i FQ(in_comment)e(lexbuf)34 b(\(depth)p
FM(-)p FQ(1\))p 0 TeXcolorgray 27 w(})p 0 0 1 TeXcolorrgb
-294 711 a FM(|)27 b FQ("/*")p 0 TeXcolorgray 0 0 1 TeXcolorrgb
38 w({)g FN(fun)g FQ(depth)g FR(!)h FQ(in_comment)d(lexbuf)34
b(\(depth)p FM(+)p FQ(1\))27 b(})p 0 TeXcolorgray -294
810 a FM(|)g FQ(eof)102 b({)27 b(raise)g(Op)r(en_comment)g(})-294
910 y FM(|)g Ff(_)101 b FQ({)27 b(in_comment)f(lexbuf)33
b(})-458 1098 y FP(Notez)d(que)38 b FQ(in_comment)26
b(lexbuf)35 b FP(est)30 b(\351quivalent)j(\340)e FN(fun)c
FQ(depth)g FR(!)h FQ(in_comment)-458 1210 y(lexbuf)33
b(depth)d FP(et)g(que)37 b FN(fun)27 b FQ(depth)g FR(!)g
FQ(raise)h(Op)r(en_comment)h FP(serait)h(moins)-458 1323
y(e\036cace)p FU(.)p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(122)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 123 123
TeXDict begin 123 122 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation123) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.123) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Automates)37 b(\034nis)h(et)g(exp)m(ressions)e
(r\351guli\350res)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(Les)30 b(g\351n\351rateurs)g
(d'analyseurs)i(lexicaux)h(doivent)e(combiner)g(les)f(exp)m(ressions)
-458 -135 y(r\351guli\350res)h(de)f(la)h(sp)s(\351ci\034cation)h(et)d
(les)i(traduire)f(vers)g(du)h(co)s(de)g(source.)f(P)m(our)-458
-22 y(cela,)h(elles)g(sont)e(d'ab)s(o)m(rd)j(traduites)e(dans)h(un)g
(fo)m(rmalisme)f(de)h(m\352me)-458 91 y(exp)m(ressivit\351,)g(mais)f
(plus)h(intuitif)g(:)f(les)g FP(automates)g(\034nis)p
FU(.)h(Finalement,)-458 204 y(l'automate)f(r\351sultant)h(des)f
(traitements)f(du)i(g\351n\351rateur)g(est)e(compil\351)j(en)e(co)s(de)
-458 317 y(source.)-458 430 y(Commen\347ons)g(pa)m(r)h(p)m(r\351senter)
f(un)h(cas)f(pa)m(rticulier)i(d'automate)f(\034ni,)g(dit)-458
543 y FP(d\351terministe)f FU(\(AFD\).)h(Un)f(AFD)h FS(A)e
FU(est)h(un)h(quintuplet)h FC(\(\006)p FE(;)15 b FS(Q)p
FE(;)g(\016)n(;)g FH(q)1830 557 y FF(0)1872 543 y FE(;)g
FH(F)d FC(\))30 b FU(o\371)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 696 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 706 a FC(\006)f FU(est)h(un)h(alphab)s(et)15
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 833
a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 843 a(Q)30
b FU(est)f(un)i(ensemble)g(\034ni)g(d'\351tats)15 b(;)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 971 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 981 a FE(\016)29 b
FC(:)c FS(Q)c(\002)f FC(\006)k FS(!)i(Q)k FU(est)f(la)i(fonction)g
(\(pa)m(rtielle\))h(de)f(transition)15 b(;)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 1109 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 1119 a FH(q)-229 1133 y FF(0)-160
1119 y FU(est)30 b(l'\351tat)g(initial)15 b(;)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 1247 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 1257 a FH(F)42 b FU(est)29 b(un)i(ensemble)g
(d'\351tats)f(\034naux.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(123)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 124 124
TeXDict begin 124 123 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation124) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.124) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Automates)37 b(\034nis)h(d\351terministes)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-198 a FU(Dans)29 b(ce)g(contexte,)h(on)f(pa)m(rle)i(aussi)e(d')p
FP(\351tiquette)h FU(p)s(our)f(les)g(\351l\351ments)g(de)g
FC(\006)p FU(.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -70 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-60 a FU(Une)h(transition)h(est)e(un)i(triplet)f(sur)g
FS(Q)21 b(\002)f FC(\006)f FS(\002)h(Q)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 140 a(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 150 a FU(On)30 b(p)s(eut)g(\351tendre)h
FE(\016)j FU(sur)c FS(Q)20 b(\002)g FC(\006)839 117 y
FA(\003)903 150 y FS(!)25 b(Q)31 b FU(pa)m(r)1272 -5
y Fl(\()1421 81 y FE(\016)s FC(\()p FH(q)t FE(;)15 b(\017)p
FC(\))27 b(=)e FH(q)1345 219 y FE(\016)s FC(\()p FH(q)t
FE(;)15 b FH(a)m(w)10 b FC(\))27 b(=)e FE(\016)s FC(\()p
FE(\016)s FC(\()p FH(q)t FE(;)15 b FH(a)q FC(\))p FE(;)g
FH(w)10 b FC(\))p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 355 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
365 a FU(Le)30 b(langage)i Fz(L)p FC(\()p FS(A)p FC(\))f
FP(reconnu)g FU(pa)m(r)g(l'automate)g FS(A)e FU(est)h(l'ensemble)-276
478 y FS(f)p FH(w)35 b FS(j)26 b FE(\016)s FC(\()p FH(q)42
492 y FF(0)82 478 y FE(;)15 b FH(w)10 b FC(\))26 b FS(2)f
FH(F)12 b FS(g)31 b FU(des)f(mots)f(p)s(ermettant)g(d'atteindre)i(un)g
(\351tat)f(\034nal)i(\340)-276 591 y(pa)m(rtir)e(de)h(l'\351tat)f
(initial.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
719 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 729
a FU(On)g(p)s(ourrait)g(consid\351rer)h(qu'il)h(y)e(a)h(plusieurs)g
(\351tats)e(initiaux)j(p)s(ossibles)f(au)-276 842 y(lieu)g(d'un)g
(seul,)g(mais)f(cela)h(n'app)s(o)m(rterait)g(rien)g(quant)g(\340)g
(l'analyse)h(lexicale)-276 955 y(\(qui)f(est)e(une)j(application)g(pa)m
(rticuli\350re)h(de)d(la)h(th\351o)m(rie)g(des)f(automates)-276
1068 y(\034nis\).)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 1195 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
1205 a FU(Un)g(automate)g(est)f FP(complet)i FU(si)f(p)s(our)g(tout)g
(\351tat)g FH(q)k FU(et)c(toute)g(\351tiquette)g FH(a)q
FU(,)-276 1318 y FE(\016)s FC(\()p FH(q)t FE(;)15 b FH(a)q
FC(\))31 b FU(est)e(d\351\034ni.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(124)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 125 125
TeXDict begin 125 124 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation125) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.125) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Exemples)38 b(d'automates)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(Les)30 b(automates)f(p)s
(ermettent)g(de)i(reconna\356tre)g(les)f(lex\350mes.)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -96 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-86 a FU(les)g(mots-cl\351s)f(:)p 0 TeXcolorgray 0 TeXcolorgray
378 113 a @beginspecial 48 @llx 710 @lly 198 @urx 730
@ury 1500 @rwi @setspecial
%%BeginDocument: mots_cles.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: mots_cles.dvi
%%CreationDate: Mon Aug  6 13:16:00 2018
%%BoundingBox: 58 714 82 724
%%DocumentFonts: CMR10 CMSS10 CMTT10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o mots_cles.ps mots_cles.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.08.06:1515
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 698 2017-12-30 19:08:50Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.28, 2017/12/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 101 /e put
dup 108 /l put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB287046B2DB70D148FC6644A3A2A34D0
6281E3A7C5FE2404D77480F0EED3ECC248FB57747F100730495803061FE196BA
FEA858182EFCF9911473D25A170FC51B0D9F7E1037D75A53BC5E06144787070E
2C472F1A5EEDEADCC469FF3B2A422DA787903E034A2D141798D21C74A0F0666B
13E892546D5AB3AC79055A14E1A22C67BCA441DBB555F32FF9EC47514E5872B6
AE2DA273F583762972289506D90AB34063E50B204854AA899ECE4676D80F8AAA
5305D162D03F24CFD7EE20738DE07BF2CB6AB91D17C5793A8F9ED655A488DE24
35E8E5567D483E1C52CB78A2F6903249515AB10DFBF0BC3B537C3B1E57934EC3
51A8FAF3A58C50ABAFAA52EC5F286AE67CB50907176F2DF6EEE062F1DF68BCC5
0EAB2B6C8E7EC2B798E2E8BBB697E43D4BB95CF70387C6270755A3BE7042F6E1
14D3CD81CBB854BFF71E5EC5E06ED33A2BF9762A049FB5970B6935A8E302D671
DF62BBA5AF20A2AAAA97D4662F63E2A67F50406D05055D1D083BF65B6D8554C6
9801EE0222548F777C6F46D9DB9FF3EE0E30C3F4E30726DB244560FC2FC21825
F52F63897A8F4F2B0E111BE5C0CA71AF727DBF0A877275ACE727F2C2A504A555
75693FE613CC2B55C8CD7C18C356AC3A3F16F957C6003807B136575196D4C720
977E9FCF516886329FA0F9809042CEC5C8683B558AFE5801456323A4CDB78D76
BF7367C002B4E9D9314CA0694251FE75CB3AE344D921B187F1C65E26C0C49D9B
3B897890B1BEC5BE21CA84BC6DC27C7AFBBCDF95DE0F00780B4A33EB96E4E81C
6A2560755386726BA21983407B98DCC38B48BB4E514870B89D4F924129E098B2
DFADDC5BB14E21CA654D5E994E2A4B7A28C2B768D625C56943EE8C007A3D0C4A
9D54543E952FBF4D37EE5C21707BE3E87FD00CEEEA9338A6DD781BF439605234
8076D66E081DE1734CB805A41F50B2E6D2980389B9DC307B68D5D167EB6D5249
58696E37BD795D3CBCDFCC4C22B87643D164F1B0B3D3389E466B9D94E4E4DA53
5522CD9B50B8AB4C74FE606C991F0CDF313289114ECC143BBE2B6F865A31A54D
98C5E7FA8BAB8C7149E34A8ABB18C922086A66D94A8F047A0CE9818B88B2523D
0B1C6849A2D1FA44F69CE9027750500FAC983084B036D733C0D1308E8E2E8FF8
BAAC74A74A598A3104F121F6647C1B43FBF98D6F0710FF5A6ADBCE950BE0474C
B923D2A4284A22CBE32D0E1D48A680E4C7D45759CD42E206200F08E490B6D244
6C86EAAB11ACB9ABD2E63ED6A5090D153E9EB7A41ED29C12D67220B3CDFB1807
17A86DF12BE8B910596B798EC5264D70B881BFF2FDA7BE0573378737054C4C8B
A5BD6976E843508C634857E21065735D3788CE568E1804AC93A26EAE75AE58E2
12CBBC2C1206EB31519D00977D17BCBD1EBFBAD3A0E74C0E52297DB20DE92655
42D880ECB07285C4EFA55A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS10
%!PS-AdobeFont-1.0: CMSS10 003.002
%%Title: CMSS10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS10 known{/CMSS10 findfont dup/UniqueID known{dup
/UniqueID get 5000803 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS10 def
/FontBBox {-61 -250 999 759 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS10.) readonly def
/FullName (CMSS10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 69 /E put
dup 76 /L put
dup 84 /T put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C4488BB4EB864B48
63941B9739638D2E6F3CC778582B46AEB4E466D89D1C211225274356A4BC90F3
274C6AA56E200249B7D0949A3FD4185DCB3E5286910EFD7CA72D5D8E8052C96F
388D12094B87D3705CE64459558CF024667C0FE96CBB32B0BC9E51037D7BD62B
E4B05FF99384E71D78441A79B0B1DBA1CAE02434A9FAE46596FB86B873B1670D
AE0BAF516445A0DDC127F8FF3ADA0B10EC30A9CC1F7E9248828B5E8AB46C3FE4
154B80A54128A08777F5F9B8C519C7E3B632B3476F007FA156E9F39FBE57638B
4214CD2BA79BA9DDA0F4C073AED814ABCCC2F7906C57A872C00E67FF03AC1200
29DAB92376422FA21C67CA98BCEB8C431CA2D3EDDC16972F84BF6DB2F705BAB5
CAB39C82D139FB1304B9E7BF1F6FF447596081D5690B1519E468D6BE49C329C5
C9C809023EDEB9DCE4A6D52A8049E0CC134E8B41BFC6558CFCAD3D9D2773EA16
131567AE6231B3235869767A1E7C1FA6C8D6FC1B276CBB1CAD14D376188C9682
302836A9290E587D4225EB8BB1DBA2C4580A81FACFDA197174FE948CE757C575
F23070FD84DE121955D7D9307BF986C5E739FFFB6CB76822C341FBD9FC2E3378
AC9332B40C07D5B8745D74E30F1D719EAFAEDBF5FBC40D0546F69A66072D8A49
28D2CC2E76B9B1EFD191E0BC7510C2C8761BD92EFCFDAC263342A01398A56D18
121A591FF5CD4AD8B25699A7897E60BA940336BC17B9EC9F97C2464D031F958A
A3548D0C97C50C580B6EEFD0FE8330EE2BB0D2E7FD1DAE33448953544A4B1C5D
8EB57798D0ED4B22909FEA78ECDBC4D8A124DA05B9999242D68681017285A0C7
69041C1F79442279FBE328733EA0A6694D68BA89739FDB9297BE0CF1808C07F7
BBF6F1538DFE084EC8C0EC24D883F6CC08A51DFEA23EE920F44BA55FFF58E960
C7BEE551FCD2D5814DE7E3F835608073C2CB80EC57100CFD484C837881674E92
B217F4D11165427DACCC29C129005874C05CDE5FBB2D912368EA2B98C45AEDD8
8A0D2493F60EF36809C8C6EBBC7856F6656E8D398BCB29DAACD4F7D4300A0B01
161CEF51195D2C58DDFBCAFC1C03F49304ADF02789889826F1E20BCC14827565
F2A45CA57DCC61B52E33638A0C6C5A59B145E82B82571DF1806EC40FC0E8634E
A34A791B1325571E19F3AC2EF6FE68A14B0ABEF7EBE0EDA3942E85E5AE967A14
0C5AEBFF2A36DCA8866700CB7082D2ABE470864C44AEE1F6D180D511304C8674
D02FAB12A7079ABF96E1CA3CDF9D75532123E87663B1D524265AEF63EB5C2169
B67A651A101E1C7EDB008D3DB06DB1FC1A81B41B291D6C4A58FB57989FFCA434
DA84B3914D1D80B17AA3A55A70BBC06C49DD5F7DDD03FEB0055088558FA192A5
261477899857CF598DB740E82D035E84CF17B33048CFED2DCBEBC2B75CCAEBEA
B6C5AA1C6978FBB36ED98D9047028360ED430A0AA69AC85A8F83825EA649E1B2
64B260197B06A24A1DD969CEEEE136FB046D713D0630B246BD41CA285F076038
F7F8431913BB9A3E70311844D4C22AA446E3CA217A9DFD75A898997130269B29
AD4AB7D9662856E677FB2DAED7078639CF31C6E6637C74DE2B5D0ACB88BD61F3
CE3C5D56D3D4B3EC1ACB33EACBE05E53A133EBFE93CE6A0CBC8F24BDC5B31BBF
5B3E55D6B40B1CED389076014667E28BBBD60145A06BDECEE8011A2C6F06D091
73767A8045CEF2A110B614149FEE783A2351FB2938A9F73CA406538EAD82ACC5
A3DFD3DE00221E1B4EA977AF8C89661357FF7D2F1FCEAD6CFC9D6AD81F95100D
EA1F328249AD84AE849220E6593D45015B4D7C9527F3063E9F6DB6E572092A1F
1F460696227D5F0FA5A5484B1F0D8B4A35066451663BE448D924DBBFD388B6D6
D7CFC87C9E75B7CF79A4C9207E29E0BAAAD7FDF529B860F7731EA978E335334C
13CB2F0A4250F5957B44CAA0674AE8356F586A24FD137103973B9A1FC31090C7
C84DC5D380404BCDF3FE20C6F74FFDD8BD1DE845E99DC6FE09931F003834ECC8
08C5D962070B6C44F901A787CCEF048A2C584A2285506B4D4E82B1BF130E2220
B6C8B3240A4CBBCE16AD3676B23A50B75F82CD88D1B8F21D30A12716426112B3
23DFDE5A348DC9DCCCE5BB5DB5433A5AC125DE1229FFAAE0D8319B2929986EEA
56A93BA1FBDBE617F30852A3DC8C712DF674169C6D656F75E252187A085B2788
2467CC4DB08D48EE6A98C61BC55E6EFB1938FAA718802B7587B94C8F1477E9BB
DCF6E02B5E67FE3AD9D87C321CD9BC0CCD36B9C4BC601E6BD552EAB8E1C940CE
3A22F3C2501C3C939CB4F17CE97566F0A04602D2A22A05CECDF4A49CAFD6332D
5870E1F31AAA5F86867F71610CDB83E473B9D20BA00D8986D7148E0EED03865D
9622864B52B09D12E0C5FCDD023D29D5AB1CACFA92B6FC14FC84E95F407861D5
2BEE3301AF399FD7ED04DFDE6679A345A282E7FC08D47E3FC8969D3B00ACD7B7
F8769647D6D4F4106340EF739583374D023C2702C48FAC1B643B5897D2D7DBCB
73257712A0FDEEEB98A021D218CDDEBBA34687E23C4828D7F96D1ADDFAED7EA5
B279322E6D55FB486AD8F3A8E7B2C67915564FE56F0C9277A06B29C47FB7D007
11AFDDB3FC1B173B4E449CC6B198041CCA0624D81B4840FE5B63BE72157AC6E7
03E5E95D2E2CE2E40BCE8044A8F2AA45F855484A891B9F0F8F70188AC66A8DEE
F4D656CBE216E6D9AC33BA8DD0685D480833E1226784469A221D9FA3CA600AC7
5574B5226649A9C48CCB43339942FC9010F86BAA2D181AEB487A92A96BF2EDF1
60F3B93FDFF4137A25A8AEC5ADF8613019CDB103DC4367EF3D8AEB4FED0E6BF7
622AE0CD3CAA0321D26CA4280CFB60D08D9560AB8AA5698231171B881BE9A27F
BDCF3162134126212C523738D221AA05E31CEE73D9D40F73C450B6AE2C1E70D5
C37162BDF55943069923A290A6C720042566E55A21CD81C460818883AB016C16
8FCCD1255A66977DC1C110261D7642199D466DD3D2493A2D47694F842241C474
1752B00DA03E69CD16A8A14BEB8A431A315D19A39BA978E46EB1189089FEF647
F9DBB58AAE6B3FBD475E4DCAD241A051DD100ABE81D40ADF18A4C50F53BF749F
D6F7C8E02A5665B4AD18DDAE79096DD447F8BD32C68F9F97F05E0071D9E9AFEE
257B96D48ABD9920418E17C8F027E9E975E4A08DFB1988E7104CBBC1CAF356EA
7750AA7110BE116AF1BA69A94776E4356573B38472A8A1292C63701543B0F315
611A0E0595B30424A1137478BA6F990AC7C3AB4DB69E75C222B617F373C521D4
246E954E9857AF59D1E6C36412B643733CF5E1C90389EF0E5E0DA55D3AD12E97
E7630C315F72A03CAF22E0ACE3AAAFC1D496CF4E5ABC49C2DD5E264BE7EB2698
AFF36089B5DD2C53DB1C1FCFBE1E89D41A95DDD278CEB29DC85FD1DB8B83CAB1
EB37C531E9BB8466ED6B8B60258D3C355626CDA43A32834DC89DFB11E5FC6D68
0F78CFA871113DB81A1690250A6F842ADA15734CB6DF7C6ACED6D8D586BC4E1A
94EF3052FB0F8B9454390B882CBB6E135AF1F9C777AC362C2A758C3A98117120
73C6E2FAFB580716D4B2889A4331CC658AAE996245685B973D9C184541385680
AEC2956107DAB00230FB39BE98D3CA898D917E5F2088F26CBA4F8B5B115B6443
8753331233B10852702FC26D9DD4C990C13CE4D0DCEA23D62A826A4B4FD16070
5F3638C0A50A3373A33FCAA6F3644975AFD0560EE5F2D1CDF08820373468E4FE
6679A229D6955CFDF7ACAA92A87E6D8571AD18CF59F84F88A674B2946FF20A28
B9798EAA22442415EB46B9498DDC0F4BA6ADD347AB43E9293CAABEAE80127378
129D5DC69F6DFFBDAFA5D65580239E8EDF6833D0DE6DF75F0FD090A83CE0974B
AC947BABBD1B1C7194DDAEA37B0CAB477ABF9433FCE0243C8D308409427D1DCB
8EE4FC36C7E5CEE104904B520B3F6E677A5B92F694BDBC2C799991667E0EC14C
B95EAE7DE1854BF4542F05B4AF401CF67FC3E46EA5A0DC362F3CF177B1796DA6
753AA803E724D1721DDD1BCB0C12CE0859E172D2A370C3697286F80D9E138AFD
A0EE016805F847BD30D11D8B891E54C77AB51A7CABF76BB14B06153C7F811FE4
93FC4B7CF161051A458EDF767DF94F487DB939A2740B4242BFEE234F75084DDE
207E84533004B933D43C712F0C71DA4A00FFD6D721EBC93AFDC4200E3B8DE433
3ED3E1DB799BAA27548ADC853AFF5D9D6BD92D644E3CF394789C99D9DC054A26
7770AF5DC5BD6563929AE11BE341F036584DD573D3F43D9D975201EF77BEEF80
D1EEDD1D4AD5D4D4DAF6D5B9D4C1736CB111D6FC74C236779C0ADA430323A825
09EA8D0CB1772220AF28B93098BDB36913159208D1B2D7ED45808BF7B686419C
5C0E3DAB5BC9830FDF3B494D624EE8068BF6F5212BD69EF466B9A213047BD105
B848F056DC544A8CE66C546B1A4DCB4BA29CF0EB4DCD9C2452F22172AFF33B29
E97E12D8F0D312B03BD9E5377BF0C81D884F1E79DB66E8144F106DFD2579AD26
C693C5B68F3AC46BF0D6281032D4D4BAEB2243151AB1AC0BDA2ACDDD4D590C90
F29B335DF8F57DC593DCC081FB56924028E3161AC4865B49D1B0F63F5EE866D9
7A71171C09B09A44B0E32F03494D9EA63F3C89F5E772BE25A6557F119299E989
99BA041694ED805AA4F3BBDF00D88171C9D43A9085A287A36A1F0F9386F2A98A
96815CA51F06E1CDF20B757983C5FDF4003F5438232159F325C6335B734FD982
1423BA77D0EFD044381AFBD0704E3DE95D23A70E2428E9AA355A9A8A25C6C74B
48488C14DEC93A766E112D74C83576ED355F17A809E8D3F9C65C4E3E14EF484F
4658DFB57597E2A4461D8044E95844391C1275D63F282B37888C842A5151937A
45007547263D70195ACC018A373D498B88C5A028BC66ED96A343EEE74D61EEB3
D9472B6A549CEB8699F4B35154A0E2ED22867E4F9E4A76311EB2C9F9078FBA81
838EA49C2966BA64C165434DA3093206B70186BE80600B891D9979F730FDC794
5DD6D8B2090CC67A634B719F441092A10C447A86ADB78DAE45823ECED5FCEADA
ECA52E363D913D9EFC0ED98A5A1F823DDA3350EE27F09C14E4C7298CC0FB6200
DEBC640C68C82D70AFB7A7BA668F1D7948686206884736CD03D9F6E6CF9702BF
E3C932CEF3CE07FBBFCEC0476EA6E8D5D4C5C6450C8FB236B89BB82D51886240
5BA7462F50A88F69228DCBDF26B7250E90B3DF8E94ACA1CADD9EFB5C73EF9DD5
46052314D445CC92512BA231F79A09A2F0D91976B160B8C9BA055DA4AAC1300D
491193EC66A6DE12BE01EEEDBC3A2291DA1F27AB76596A236B75E19FC5F1FB6A
DA1AD835CA08B6CD03B97B4CA1BFCBDD2500BB09F1A1B0438E4A759370EFA318
F062BA9F3D352572CE232E6FBADDAA5363807D0DC5320B807FE5485C8CB09B6B
0BED9F5B1300FF370252DEBAC9DB25CE2EC494E8EEA45FC6604B3C104E81B287
EDD49F3D7430EC9176A16B4FCEC5DF68DCC11ADF90BD5337E2E4B59BEFAC8298
E5ED2C7FC5928635420FB1955251932713236DCE28012C86F63D12AF1DB634D0
0B8CB8992B8723548177BD6822A808FF221A9E38B0DCCBC1F3430A9BAEDA89CD
ACEBBDD8CCA5E17F1CC37E35A01E058BAAAB6BE7124314DA19962BADB74EE73D
8FB13FF6AFB6FFF97926CA045B62B98BAA753AB0FC78B881D3FAFF9EE2FE918C
8EDBEF87637F1530E3E13AC090FF81F4136E08D5F3734327E643CDF621278741
A17AEBC56E21217888A6C8B5ED4269731910E7E25693CFBDD4EB4A32698F2447
4C45D73E810B627D8719E4E34D8FF378F9B68BFB149AC67B3B1E55F20D097FC1
AF74D46F5A3923C63DFEBFCA210F6B257F5FF3F2AC34CE41C15C9977634E473C
2235295C05C3DF6B3009C7854BF11CC87471CBE085793AF9C5D05C5479B9E780
14A5A6F3F6DDE5A18243DA15732CCF26ADE40C566DBC3C62B71D46DE87A12C6A
647CAC923254E2E74AF882DBD5C9E108A9160393C5CD12566AF7C824EFEAC56E
6F05B92C73A76824C5ED1735BCBAC61B98D509250C854CF1500C212F574D18D6
4426B8510FE9785B814A70E75C9234D42483E736D0689D3561E8EE5650F33A36
D50127589401D267BA6442E8616E2CDB1F6691D3FC4A2A377E5E154972E890DD
60CB463E9EA9A6EA61087DF452FA5646F69BE879337EAA0F5DA4438FF0365627
4E3B16851C2F08E976FDA27AF451CCEFED00376FC3D6E0C160F0BC19544DE289
BECEEF9A067FD71D54DA3A4F73F06E2F522BA07551296214DDA47B1BBB1212E0
1100ACB5F65FD30C655A3402C83058F8ECFE48FA60B6A3DC86C4996414130194
6676EC7F37454023AB53E9D9EE60249ABF6953E76DCE3123DD268BBD492412BE
65D7C3E5A5E483C381182A8F19B506F0AF6DCD55532B89852D1D96021B22E9DF
D9D072BD7DD4450577E658B433A84F92752B260AFA2EC4A118747CBFE36AB7D7
6D5DD96A119AA1BDD0FDCBC3AFDAE5FF72713EB46759A06CD09B5CFABCDAB0E9
85599506AC07AA525978AB157496163AAB387F079EC9FA1F9E91B9C2FBCDC9EC
7027D77016760539AC03F1C1DB242D28D6EE946C42DD2262D82ED48C3A839853
BA977046F0EF373AFF884AC3112D2FB319421C3165DFA5710BFB9AB9595A10F4
9D05704B9E22137CF27F4B2DA9CEF6D8801D5F792969B2E58FB539B8038DF440
6DE20C0313A7BCD16F279290AD6859B0E657CC3041C7928CAE35B9D3A681F2A3
2D40F8EDAF1127E754276556C95E1282514B6EB6E43FF4F0FAFF28C715E3F39A
374415B62C1F5F8E31E006D6ABC736057910A3729AC60360CEE1B2C8D9F77336
39CAC45329A372205FD551B9E9EA5082411207473D9D90E76136AA70180172E6
AF6EF3EF6B38B1906B904BE9BD5251EF067738840C28877659B649C6C4CA328F
1BEF8A9CEC2CB062702F58CC0B8D2D097FBC278F9FD894E10ACE1DEC4530CBF8
E4E467B6DB9C596DF0C3D43E6AD70F30B733EEE692C2EBD68756D0C16E1F00B6
AD011B5DA073A769B53C2DA2E7C9B7ADC6F551BF4DF4C39C66443692C3DC62CD
B1E094013F364D04BE2FBFCD1C7B2836180E9022E0434421FFA4317A50096684
CF0B8740EF680F27F4A84AAF2AA92C64883BAF57BDC60C6467A8D4E09E6316FF
9BE73053045E5F3586DA3BD1298DC15D751913FB1E72EF80047F6B33591B97D3
DFAD34EB224D64EF60F5B4ACC6EB42E1BE0CB2812FF2F3C264AD2E44F5EBA441
670CA0A60E73176ACDC4E42E74F8F489C73481EB5D46A61FDA1C0FF9F8844DBD
99CECAFE2A72833E4522981FA13713AAFAF8F121E60FAA6F379B2C8874CFF23B
8FECE70654E5855E525A403700A96CF7F8111BF2B58386E29640D82F1DD86900
E0E203F3ED554209CBDA2A61A5641D4B39D98C5C43D4575648D06BB82B6C4D4A
F043EC61B17C208CE8B4F43A7BCBBE588A3D13A183D79A47404223037FCFA4F1
DD237344E589F161BB9BBF3FAD2E28749350DB9A74C09E894BBCA85B82E704E2
99788B24642A7D0F0FD96601CF1AE4819EBECAB89824A0DC1C03BA4B546ED36E
DABC8D49CFAA53D2A9A5DD6B3431E364C99ED0323513476CDCEE49BC413E50BF
51EB93563DC03B62F84C5F96ED713F288D109C79179AEC41424822772032035A
40E84014F5BF40948F05E8562C9CA9DDD71F89021BE238E74781A92D64E5F9E5
AD6C0D954C6686C714BF189E78EE47F1530CDB8376E52631A1A26E3021FAB977
DBF01167266AD68A779C0180E034A90CB77B86747395BE885E484BE4028B4093
8BE191D58D0BF85308C72E6384292A2E1CD06130A091F8AF9DC6C3E12B1E4BA2
BB2C37AB4AAFC0CCC7964C06B9EC1C7E3CEBE1A02F52778462C5386DF9987FA0
9690FEE37683288460E2CAB4CC37DEC8CD522A143A4921A9206ABB2967C8EDA5
00B01EF65416294CAFC0E1FE811F06F093BDAFFB1647AD96D88001E53ED60240
3B5D98CFEE0B82EDDA52A1D65AE2BFD5D4F7087A5D38AA8BF853E9EF3BE88734
5CCB43986923EFD44A265D93EC69CB079B73F45CD7F53B7CFDC0B1190074B8B6
AAE0E2B20B9AA309BBC5EB053F98FEE29BFF9C6B4132F0E5B7E7CF325E4731B7
D4922F54028A976C317C27BFC84B77EFE8B7C9EB42350199017B180CBA9E9ECE
0FD6C6A3E93CD6025E499C2CFC7A064408068D1999221DE1CFB6BB47F5DD08E4
F5C134C2DAFA865EE873AD66FB68CC503C008BF25F9547CB50D7E63AC61F2722
F98BE99E7D13B14142B9FFD369EF74A03D7396B136AD029D2511E72C9A2C6C0B
A88439328842481C9A08B57F968EAE0394260E99F4617064DD011B63FE6F8455
F45F9F4E4E20065BC6DA4D5315A9E0301F1EBD1A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E70A7911CEF46D4A4074EBEC25F55A638011A4E0F2D07A01A042436C62962A50
973F9AB79BDDF1747CA2F970953AD5128331F2715D093DF035D882BFFD0E0C65
4D9E97727C8B4CC50778EDDB5E0A210C9E0A9B95B37EDB25A80BF2A045583389
847B65D114CAFF0FCF67585A6BCBE22DA41D479902960F7C0D013CCE81F60F3D
DF36E91F8276940F08464405DF7352069A414D615BA09E156C449C172832EA2C
E38EA97B9A576B444E00C0B19C9E751336898EFCD4847F7B5095BACD95228E1F
6EDD85621B9643624E6CE80610BFB320B3D0914BE2359C910FCEF969AFD599B7
8545A1AA4E33EF3F14EDECCFD82F9975DCD18BC1B687408F072FA39164340543
5A09C1257CF81A066CBCBA4B3FCF3BC8D6A3496230AAF1232518D07135C7823C
AC45513B2A9911B39603B415168A1FFBED834B271794C994A3F9821E4E9B9023
B08C7CE8D31B5FCFBBFBB71AE71A47B9E18E48F5BDA5D89F2EE08A2784F150B9
180ECCCC77586E39586DB7CB534D1806D9A3A0D376856B2036634A72710FC8DA
959A66289DBD2D073A400E7CA0B870EE6EBF02A0707CEABD8D44A32F85209065
B61A9E7C56EEFE751F19938EF2050F231708623163ED2DB636BA33208269330C
24A4E0B645E707523349225E6B8EB758ECEDE8173B87B4AE6A33F17030AAA7B0
A2CEB87A0360124FD1504C60DE14C8EAAAC52FF900289981316BC60E07B9A6F3
40CECD891D8706212848304E170D27F17330A29CFEA10E80FAA7A0837A0DD1EA
D10B0A7A3F70DB740709CF3330E44DD04F6367E04C3CBB3400BA3C1943B874CF
B4B611D58AD532395FD31FDC361BBAA07179A3D6215C9819796ACC66B0571229
E5D0EE470B9811A0F3B2A4D09B78866901235C66B0B7591265D226C571F25415
55DF310B9923F6206B6845D9D4835F7F36499A9C4BC39F35AC5F1F4360654A09
D9049D73DB6FFE7FB882642CB8D369C6F870BCA1E1753FF36E4D58E1E10A9648
D098A3FEDACD1A2C502230FCD961D0CCA425E6DED4A66CDAA69C13C313F273B8
54D4B38FD38C1237142EC3575FA9E198685DBE5378D15F1D89ED4C66EF889DC6
EF388E0ACA1F6A267698CD7416DA2E1F8856252FECE069AA22E1345C3AA7A862
B5D9F6C145821B542ECC97DDFB5C3F91A48917C38287D95CB3D34923A19B1743
CE09E4365C1CFA5983CB70261F90309BE70B35A875D536E494E06C1EED58A4D3
8BC5FF7BE9A8C07C17E80B4A75869A4A56F50FC03F6ACFA93FC48555C7612973
FA8AF7DB258D01F5BDC29C5F928AB12E24126A9D295FE8F526B2BFED79FB9912
ED1DA694B972043CED3D2D9762F002675F57107525BD8A2D81A01304E5A53AC2
8F0AB4D8CB297B4E0E08FA582D75AFA69F11C831C35AC226F285504E8B572BCD
ED776FB7AE938FAD8615FFAB0F25A9552C1855C107362FBD739088F7BCD8E654
7C67058DEC80A2DC427100A722F90E321AD47D9849D67C55ED3FB5874CD9DC5F
B1481F47DFFDBA2F5991136E653EF740944C3B17AF6E583A2631B276583D716F
B227CE13A96F71EF6E64D0BD1E9C51FEBC18F306066043EBAAC43954EC3B53F9
5A0B0758EE75706E370898F5F2AB694AC841677A2F4A1159E887302B78F20150
CBFC6C7204AD6F92B01C0BEF0DF7C758EFD40026F8EC22514DF9E91DA39D8874
34A704ECAC77C74D188F9625018E2C6C61F5E591B43F85C10FFBD3D5F35BF5E2
2C80D8ECB905AC89FA124360981FE9E56B3138364DE5CD788747E63EED3458A9
CA7A483DD5E3DCAF11E69626B8AFC64355D094FDEE1477B03D7B7109D7E224B6
3A38C073B67AB3301D5C60CCDC7F6AA74A331C347422FE14D69A0093D99DE657
A58CF241622259D753298A81B882D4842F5AB463EBA263880A4013F4FF3B8971
7B3009C9A2CAB672D351CA20E9DC431BD5189E9D13BC71C4B29F3A54EFA18A5C
F42BB00B6B6FA7F924FCCE96B69EC449EFD9FFDBA19E6F2815577EC45255C4C2
A3498D52735304C14746530C3CFFF9671E67F11AE7C7EA556E3F439F178B34BC
B009883F5D2FDA692CC437362340626191CC1D2632088B009863DA39559F104A
93E129046314B5BB4CD62A3F3E17981EB1139F6A4F2598DE3DA33B17B4F254F9

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (mots_cles.dvi)
@start /Fa 139[44 7[44 6[44 61[44 39[{}4 83.022 /CMTT10
rf /Fb 171[57 7[45 6[50 69[{}3 83.022 /CMSS10 rf /Fc
203[42 42 42 42 49[{}4 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray 0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 0 a 867 0 a
currentpoint grestore moveto
 867
0 a 0 0 a
tx@Dict begin CP CP translate 0.6  0.6  scale NET  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 0 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.8 SLW 0  setgray   0.0 0.0 2 copy moveto 12.80365
.5 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 1  setgray
 1. .setopacityalpha  fill  grestore gsave 1.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 12.80365 } false /N@A 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@A known { -12.80365
0. /N@A load 0 GetEdge 0.0 0. AddOffset /N@A load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 0 a 0 0
a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 0 a 0 TeXcolorgray 0 0 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 0 a 0 0 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end

0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 0 a 0 0 a
tx@Dict begin ps@rot  RotBegin  end
 0 0 a -21 27 a Fc(1)0
0 y
tx@Dict begin RotEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 0 a 0 TeXcolorgray
0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Aw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Ae 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@An 10 {InitPnode
} /NodeScale {} def NewNode end  end

0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@As 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Anw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Ane
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Asw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a
0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Ase
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin { 56.90549 0.0 } PutCoor PutBegin  end
 0 0 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.8 SLW 0  setgray   0.0 0.0 2 copy moveto 12.80365
.5 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 1  setgray
 1. .setopacityalpha  fill  grestore gsave 1.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 12.80365 } false /N@B 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B known { -12.80365
0. /N@B load 0 GetEdge 0.0 0. AddOffset /N@B load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 0 a 0 0
a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 0 a 0 TeXcolorgray 0 0 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 0 a 0 0 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end

0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 0 a 0 0 a
tx@Dict begin ps@rot  RotBegin  end
 0 0 a -21 27 a Fc(2)0
0 y
tx@Dict begin RotEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 0 a 0 TeXcolorgray
0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Bw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Be 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Bn 10 {InitPnode
} /NodeScale {} def NewNode end  end

0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Bs 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Bnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Bne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Bsw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a
0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Bse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin { 113.81097 0.0 } PutCoor PutBegin  end
 0 0 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.8 SLW 0  setgray   0.0 0.0 2 copy moveto 12.80365
.5 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 1  setgray
 1. .setopacityalpha  fill  grestore gsave 1.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 12.80365 } false /N@C 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C known { -12.80365
0. /N@C load 0 GetEdge 0.0 0. AddOffset /N@C load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 0 a 0 0
a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 0 a 0 TeXcolorgray 0 0 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 0 a 0 0 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end

0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 0 a 0 0 a
tx@Dict begin ps@rot  RotBegin  end
 0 0 a -21 27 a Fc(3)0
0 y
tx@Dict begin RotEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 0 a 0 TeXcolorgray
0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Cw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Ce 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Cn 10 {InitPnode
} /NodeScale {} def NewNode end  end

0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Cs 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Cnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Cne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Csw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a
0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Cse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin { 170.71646 0.0 } PutCoor PutBegin  end
 0 0 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.87999 SLW 0  setgray   0.0 0.0 2 copy moveto
12.80365 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave
1  setgray  1. .setopacityalpha  fill  grestore gsave 2.87999 SLW 0
 setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore gsave 0.71999 SLW 1  setgray  1. .setopacityalpha  stroke
grestore  end


@endspecial 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 13.34364 } false /N@D 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@D known { -12.80365
0. /N@D load 0 GetEdge 0.0 0. AddOffset /N@D load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 0 a 0 0
a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 0 a 0 TeXcolorgray 0 0 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 0 a 0 0 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end

0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 0 a 0 0 a
tx@Dict begin ps@rot  RotBegin  end
 0 0 a -21 27 a Fc(4)0
0 y
tx@Dict begin RotEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 0 a 0 TeXcolorgray
0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Dw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@De 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Dn 10 {InitPnode
} /NodeScale {} def NewNode end  end

0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Ds 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Dnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Dne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Dsw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a
0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Dse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@D known { 5.0 0. /N@D
load 0 GetEdge 0.0 0. AddOffset /N@D load GetCenter 3 -1 roll add 3
1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 18.19449 6.94444 0.0 0.  Uput UUput } PutCoor PutBegin
 end

0 0 a -76 29 a Fb(LET)0 0 y
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Aw /N@A InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0
0 a 0 0 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A /N@B InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 0 a 0 0 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 26.7747 10.38887
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 0 a 0
TeXcolorgray -111 43 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -111 43 a -111 43 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -111 43 a
Fa('l')-111 43 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -111 43 a -111 43 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -111 43 a 0 TeXcolorgray
0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin PutEnd  end
 0 0 a 0 0 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B /N@C InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end

0 0 a 0 0 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 26.7747 10.38887
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 0 a 0 TeXcolorgray -111 43 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -111 43 a
-111 43 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -111 43 a Fa('e')-111 43 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -111 43 a -111 43
a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -111 43 a 0 TeXcolorgray 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin PutEnd  end
 0 0 a 0
0 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@C /N@D InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 0 a 0 0 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 26.7747 10.38887
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 0 a 0 TeXcolorgray
-111 43 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -111 43 a -111 43 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -111 43 a Fa('t')-111 43
y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -111 43 a -111 43 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -111 43 a 0 TeXcolorgray 0 0 a
tx@Dict begin  PutEnd  end

0 0 a 0 0 a
tx@Dict begin PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 0.6 div 1 0.6 div scale NET  end
 0 0 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
363 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 373
a FU(les)h(entiers)g(:)p 0 TeXcolorgray 0 TeXcolorgray
299 647 a @beginspecial 47 @llx 709 @lly 216 @urx 738
@ury 1690 @rwi @setspecial
%%BeginDocument: entiers.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: entiers.dvi
%%CreationDate: Mon Aug  6 13:15:59 2018
%%BoundingBox: 31 713 81 724
%%DocumentFonts: CMR10 CMSS10 CMTT10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o entiers.ps entiers.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.08.06:1515
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 698 2017-12-30 19:08:50Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.28, 2017/12/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 45 /hyphen put
dup 48 /zero put
dup 57 /nine put
dup 91 /bracketleft put
dup 93 /bracketright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB287028244A9F9FDEF8C2B36DF918584
C497B6EF38C81511BA8FF40D2167F61BF37EACD032AF374374666771E209FBF4
909749EF2864DAAFC234CE96AEEC2F362D222A5CEB4FEA889E98D7E8EC3D47A1
B791DC4533400B7F74D8945AD99BE46F67ADE1CF852DD818F07DE0AA5CFA497E
5760A0B5A7AB9916AF83CC04157B719DCFC9AF53C4BFB68D68E96228E2CB7825
85749780483D682D172A2CAF15C4D2B23690A853704241F8D1B2CF663368177B
9AF0F93491F6DC3F1E05A2048535A3660E391EBFA7E582B050E80376FA16D597
879F762BF7CE394D18DC76D2063012EEEF4E78760F8A25C60981E6372E49D716
14BB49632476F2CCA548F5131F2E9E392F4234435AC61CF10377BE5E51E570BD
135E3CD4C130FFD5EBA5C71476819A2F4556AA437BAD036E1931583807EE0A93
E84E169855DA91D630F30DF34012DE1F4C98E20602B36CDF7FAFA1C93E7C6C1E
357F3E111E41704C0F8A68C95F424C6DA581B49C709E1E98149FEAAB15DFE7F9
4023EFA8FC9237938FF8642BD551DF6E19A3D52FDFD918E3406C93C55879A8EA
02246D52C93A3DC8C4F1D52CD0F3BDCFA7E4B99AC44C57FA74D12663E6DE20CB
B0AD4121F47D4750A5501018DB4BDD5B64DF6A6F8FA468B307BAD18259089856
4C10C3ECB18967E8E6D0F6C249D0492D0BFC40D8DF6B9D4B8299B2399045A14D
4182329F95AB474108A296063BF7B01D5F186B2AC4496C2624F6F7E45CD885C5
E032FFEA7C337BE415936BE214AC88BF14CB44C210BF44141C72291EBB16170B
B685C2140498296402770DC7262C71EEBF9EEE19DE88C3656A7D9095905AE89E
0904AC946EFC2DA66A20012FF6DC6C558739DDEBBBFF6170BACE74C2054F7793
E5227B06A188677603D1102A8A685ADFDBC65E34B938F9BFE6410CEE3D004F52
15B2874E7C55E81FD638D2B4C0B415EBAD94EDC5D3AA4B388E573F6ABFB9C949
FFD786A0AFE661084E7BFE3D9FF2CDE9A7D810C95AA9BF5A8C01E48818E8F89B
BB7E246F3A1C671D6471E07D4B70D8A19389EF17F259FF8C2D90D46BBD8F7B95
A7BACEF0F59D7A86D619FE05494821CA583928714F3FA3D08D08C1A696775658
C213DA63302657F3B8E1D9231EB1EFB3402C2A4583C60AB12271168AD208A985
40BBAAF61C73D2254EFA2A4D95E69A4F2312EC701C2A55C23A71E12403A44357
625700277EC06FC91C453613AA0DADA3095C755E4F91FC58CCE729816CB5CAC2
47DDC93659FDCEEB82CB4303FB7AEF209C995EE1AF1707F717AB92EBE58A47A9
445799658F955BF73F38B67E1FDD63579EE3AA4B7C5172C8C7D6DD63223EFC56
D5FA82C1822A630997894FEBB379F0A21B75F34987BA586C6FF368ABDC45E00D
C78B53F3E0B671098413E318D9A0B75C53A9D169317559332B34FB651CC92781
B4882D36D3C1FE64887D36058B06F3AABB121CA1540BA17F0A43DF8A4F8EDBAA
54FF0F25A13DAD43232F7EE4D840B4362172F92CD672CF62243F83C84E9A875E
03774474BD86F083EC1D7B1F499BE77587EDD385833F08A9F3E8614EF7118595
C0B230144E5805C3362F459B92E5EDE493E6C43D019F687663ADA3764F11BBB2
FEE232D4192724FFB8367445B690245E81AE0A38693F0318A61A0BF80602581E
EEDD6C8F062E3E6783AD762482408DC1A74F1F0035F01F710F91F1E0E49E70FE
25FE7FBB86B47E6B7B0934D43B9A24F5A9BDEA3D6D9690B071F8351A949FB767
1F3DCB141F5395AD9CB286C8B6C071852E56E11B34BAAAF9BED596E52D1AC176
8E8E0A863C0976A5B2CAC668D4D0759AC9F82277403C5DCEF8D75EFD6E89E703
22C72CB26CEC6AA0A9196E604BAD9F5907563769751AF1D8076E19266EBAAAAF
50F3305A6E8EC8426FEC458D2C2AFDCCAB87B90081919E008D8B74F9FC08D98C
AFC92EA0B6BBE53ADC954B9B3CE621F35B725E4ACB5ED51FC702B8385C5CC30E
C3FD67BE5A9574D5351815A959020591659CF35B170D122EBB25924706B0BC0F
896A006470C97F9C400CA7E1E122D6D3D9675E23EBEE3478352EAA05DEC5A677
2EB8F53CB1041DDA059BBC1CD1305A3BA4B31B29DCAF24EC786EE39776EE06BF
D3C04FF933CE48AE61ED5F84FAA6DFF8B239874FFE2072A731070FFB5095F90D
F960F7BFF771183B302FF55667390AF2E314BC8E0AB7279511CC1700DA348283
522B5AEC490A066D109C42CDFBB94251576B80EB8F69200D272C713BA3B61742
96C71136B1C1AF8703A1A0E517BE42CD6306FC6BDA503E8981DB670CF5CBD09E
176E265CF148A200932C5106DB512AB6E16FAB0A63A7ABA91F712419C5470C43
3F42302A719C9E2A6756DA3AADFCACBABDB5F413651E1ADF7FFC82E5E8390C51
17341F1C48E36FF234700DCE4F202BE5917BBAFD7E6EFBE2EDAE4FF2A6AAE4D6
3DBBB3B89A81D8058179F674492EC79A9501FEC5EEBD91295FDC615D6A517B07
8408E4AA612BBF80F4BD0A76447760CFD2643EC8128E2E12AAB59DA0DE945DAD
6831E8306CA8E5ED249618DA6F2BBCED349AABE622A5A448588E8A195B6D6FEE
D8AFCE8AB63F283758EDCBB40381D6E8C6C31EACE3CC48D1985A0278EA32602D
A2B5FA880C9BB78DE0DDA58D39E8803947C9A874F9CC58896FA24EBA5E311E27
865CE59F0C9226ABDCDA689F209913264073122AEE32C029313DABE3FF6AD01D
838A8CDBC4EAD6E6DF175DDCAC43268BE7068B73220E9C92B6E6CE56BEE4A52A
0B0F96599A0EA7371F5B766C00F143FC108CF5C18FA757925852194375363BE8
E0F3F67E5F68BA09E495EA1393E75600F75870BBED5F359EC5BC40EF1A86C7CC
473DE24DD7DDA1D0751AB63DE1908B89676B992903BBFE42289D706A60FB85E3
3D213CCC2009BD0711D5E8E101E5A9E3A43575BB70C327F79449A675AC28C785
6FE7CFAB9F1E6E97FCB856ABEA79DE9D06CC9173894BCD45FE608824EFD2F536
B3B76E1038338DBAF32481EC14A259354F71205FDFC07531B481D033AC53E29E
0B1B6A73F1C6ABDA97B14AC652012A2F426F97B2C6A1C9BBF957D06FC8646F39
3724215F53A348C328B269F90757A79CF71A7F428556123680868F5F478B941F
40EEB2F537FC0E3673597C0966CFD4F41E0C8888317C79B880023DA433D1DF39
715E6036AD51334EF906ABE31DD0BB13DCDD2F464319ACBECCA56C97DD2C3848
D655AAE8DF4E9EC0F943DC240C0D9F438D1E6270E9416A85A62974B01FBEAFD2
6D6A9FE06ADD9F924068983F2BE9F1E41DE88A51FFF83EABAD6249661FE68507
6C57CFCAE047C41EFB4C22B6EDEDFDB48B6725372A1D27F781BE936491A6F51F
D3B4191235972540E36CA43C50674F2B68D9FF00D44C8A1E52854D9D5F95CD84
AFB85F3746A02357A7533509B947422EFADA9BFC050E3C72A850672304B6A89D
C4E09CD2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS10
%!PS-AdobeFont-1.0: CMSS10 003.002
%%Title: CMSS10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS10 known{/CMSS10 findfont dup/UniqueID known{dup
/UniqueID get 5000803 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS10 def
/FontBBox {-61 -250 999 759 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS10.) readonly def
/FullName (CMSS10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 73 /I put
dup 78 /N put
dup 84 /T put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C4488BB4EB864B48
63941B9739638D2E6F3CC778582B46AEB4E466D89D1C211225274356A4BC90F3
274C6AA56E200249B7D0949A3FD4185DCB3E5286910EFD7CA72D5D8E8052C96F
388D12094B87D3705CE64459558CF024667C0FE96CBB32B0BC9E51037D7BD62B
E4B05FF99384E71D78441A79B0B1DBA1CAE02434A9FAE46596FB86B873B1670D
AE0BAF516445A0DDC127F8FF3ADA0B10EC30A9CC1F7E9248828B5E8AB46C3FE4
154B80A54128A08777F5F9B8C519C7E3B632B3476F007FA156E9F39FBE57638B
4214CD2BA79BA9DDA0F4C073AED814ABCCC2F7906C57A872C00E67FF03AC1200
29DAB92376422FA21C67CA98BCEB8C431CA2D3EDDC16972F84BF6DB2F705BAB5
CAB39C82D139FB1304B9E7BF1F6FF447596081D5690B1519E468D6BE49C329C5
C9C809023EDEB9DCE4A6D52A8049E0CC134E8B41BFC6558CFCAD3D9D2773EA16
131567AE6231B3235869767A1E7C1FA6C8D6FC1B276CBB1CAD14D376188C9682
302836A9290E587D4225EB8BB1DBA2C4580A81FACFDA197174FE948CE757C575
F23070FD84DE121955D7D9307BF986C5E739FFFB6CB76822C341FBD9FC2E3378
AC9332B40C07D5B8745D74E30F1D719EAFAEDBF5FBC40D0546F69A66072D8A49
28D2CC2E76B9B1EFD191E0BC7510C2C8761BD92EFCFDAC263342A01398A56D18
121A591FF5CD4AD8B25699A7897E60BA940336BC17B9EC9F97C2464D031F958A
A3548D0C97C50C580B6EEFD0FE8330EE2BB0D2E7FD1DAE33448953544A4B1C5D
8EB57798D0ED4B22909FEA78ECDBC4D8A124DA05B9999242D68681017285A0C7
69041C1F79442279FBE328733EA0A6694D68BA89739FDB9297BE0CF1808C07F7
BBF6F1538DFE084EC8C0EC24D883F6CC08A51DFEA23EE920F44BA55FFF58E960
C7BEE551FCD2D5814DE7E3F835608073C2CB80EC57100CFD484C837881674E92
B217F4D11165427DACCC29C129005874C05CDE5FBB2D912368EA2B98C45AEDD8
8A0D2493F60EF36809C8C6EBBC7856F6656E8D398BCB29DAACD4F7D4300A0B01
161CEF51195D2C58DDFBCAFC1C03F49304ADF02789889826F1E20BCC14827565
F2A45CA57DCC61B52E33638A0C6C5A59B145E82B82571DF1806EC40FC0E8634E
A34A791B1325571E19F3AC2EF6FE68A14B0ABEF7EBE0EDA3942E85E5AE967A14
0C5AEBFF2A36DCA8866700CB7082D2ABE470864C44AEE1F6D180D511304C8674
D02FAB12A7079ABF96E1CA3CDF9D75532123E87663B1D524265AEF63EB5C2169
B67A651A101E1C7EDB008D3DB06DB1FC1A81B41B291D6C4A58FB57989FFCA434
DA84B3914D1D80B17AA3A55A70BBC06C49DD5F7DDD03FEB0055088558FA192A5
261477899857CF598DB740E82D035E84CF17B33048CFED2DCBEBC2B75CCAEBEA
B6C5AA1C6978FBB36ED98D9047028360ED430A0AA69AC85A8F83825EA649E1B2
64B260197B06A24A1DD969CEEEE136FB046D713D0630B246BD41CA285F076038
F7F8431913BB9A3E70311844D4C22AA446E3CA217A9DFD75A898997130269B29
AD4AB7D9662856E677FB2DAED7078639CF31C6E6637C74DE2B5D0ACB88BD61F3
CE3C5D56D3D4B3EC1ACB33EACBE05E53A133EBFE93CE6A0CBC8F24BDC5B31BBF
5B3E55D6B40B1CED389076014667E28BBBD60145A06BDECEE8011A2C6F06D091
73767A8045CEF2A110B614149FEE783A2351FB2938A9F73CA406538EAD82ACC5
A3DFD3DE00221E1B4EA977AF8C89661357FF7D2F1FCEAD6CFC9D6AD81F95100D
EA1F328249AD84AE849220E6593D45015B4D7C9527F3063E9F6DB6E572092A1F
1F460696227D5F0FA5A5484B1F0D8B4A35066451663BE448D924DBBFD388B6D6
D7CFC87C9E75B7CF79A4C9207E29E0BAAAD7FDF529B860F7731EA978E335334C
13CB2F0A4250F5957B44CAA0674AE8356F586A24FD137103973B9A1FC31090C7
C84DC5D380404BCDF3FE20C6F74FFDD8BD1DE845E99DC6FE09931F003834ECC8
08C5D962070B6C44F901A787CCEF048A2C584A2285506B4D4E82B1BF130E2220
B6C8B3240A4CBBCE16AD3676B23A50B75F82CD88D1B8F21D30A12716426112B3
23DFDE5A348DC9DCCCE5BB5DB5433A5AC125DE1229FFAAE0D8319B2929986EEA
56A93BA1FBDBE617F30852A3DC8C712DF674169C6D656F75E252187A085B2788
2467CC4DB08D48EE6A98C61BC55E6EFB1938FAA718802B7587B94C8F1477E9BB
DCF6E02B5E67FE3AD9D87C321CD9BC0CCD36B9C4BC601E6BD552EAB8E1C940CE
3A22F3C2501C3C939CB4F17CE97566F0A04602D2A22A05CECDF4A49CAFD6332D
5870E1F31AAA5F86867F71610CDB83E473B9D20BA00D8986D7148E0EED03865D
9622864B52B09D12E0C5FCDD023D29D5AB1CACFA92B6FC14FC84E95F407861D5
2BEE3301AF399FD7ED04DFDE6679A345A282E7FC08D47E3FC8969D3B00ACD7B7
F8769647D6D4F4106340EF739583374D023C2702C48FAC1B643B5897D2D7DBCB
73257712A0FDEEEB98A021D218CDDEBBA34687E23C4828D7F96D1ADDFAED7EA5
B279322E6D55FB486AD8F3A8E7B2C67915564FE56F0C9277A06B29C47FB7D007
11AFDDB3FC1B173B4E449CC6B198041CCA0624D81B4840FE5B63BE72157AC6E7
03E5E95D2E2CE2E40BCE8044A8F2AA45F855484A891B9F0F8F70188AC66A8DEE
F4D656CBE216E6D9AC33BA8DD0685D480833E1226784469A221D9FA3CA600AC7
5574B5226649A9C48CCB43339942FC9010F86BAA2D181AEB487A92A96BF2EDF1
60F3B93FDFF4137A25A8AEC5ADF8613019CDB103DC4367EF3D8AEB4FED0E6BF7
622AE0CD3CAA0321D26CA4280CFB60D08D9560AB8AA5698231171B881BE9A27F
BDCF3162134126212C523738D221AA05E31CEE73D9D40F73C450B6AE2C1E70D5
C37162BDF55943069923A290A6C720042566E55A21CD81C460818883AB016C16
8FCCD1255A66977DC1C110261D7642199D466DD3D2493A2D47694F842241C474
1752B00DA03E69CD16A8A14BEB8A431A315D19A39BA978E46EB1189089FEF647
F9DBB58AAE6B3FBD475E4DCAD241A051DD100ABE81D40ADF18A4C50F53BF749F
D6F7C8E02A5665B4AD18DDAE79096DD447F8BD32C68F9F97F05E0071D9E9AFEE
257B96D48ABD9920418E17C8F027E9E975E4A08DFB1988E7104CBBC1CAF356EA
7750AA7110BE116AF1BA69A94776E4356573B38472A8A1292C63701543B0F315
611A0E0595B30424A1137478BA6F990AC7C3AB4DB69E75C222B617F373C521D4
246E954E9857AF59D1E6C36412B643733CF5E1C90389EF0E5E0DA55D3AD12E97
E7630C315F72A03CAF22E0ACE3AAAFC1D496CF4E5ABC49C2DD5E264BE7EB2698
AFF36089B5DD2C53DB1C1FCFBE1E89D41A95DDD278CEB29DC85FD1DB8B83CAB1
EB37C531E9BB8466ED6B8B60258D3C355626CDA43A32834DC89DFB11E5FC6D68
0F78CFA871113DB81A1690250A6F842ADA15734CB6DF7C6ACED6D8D586BC4E1A
94EF3052FB0F8B9454390B882CBB6E135AF1F9C777AC362C2A758C3A98117120
73C6E2FAFB580716D4B2889A4331CC658AAE996245685B973D9C184541385680
AEC2956107DAB00230FB39BE98D3CA898D917E5F2088F26CBA4F8B5B115B6443
8753331233B10852702FC26D9DD4C990C13CE4D0DCEA23D62A826A4B4FD16070
5F3638C0A50A3373A33FCAA6F3644975AFD0560EE5F2D1CDF08820373468E4FE
6679A229D6955CFDF7ACAA92A87E6D8571AD18CF59F84F88A674B2946FF20A28
B9798EAA22442415EB46B9498DDC0F4BA6ADD347AB43E9293CAABEAE80127378
129D5DC69F6DFFBDAFA5D65580239E8EDF6833D0DE6DF75F0FD090A83CE0974B
AC947BABBD1B1C7194DDAEA37B0CAB477ABF9433FCE0243C8D308409427D1DCB
8EE4FC36C7E5CEE104904B520B3F6E677A5B92F694BDBC2C799991667E0EC14C
B95EAE7DE1854BF4542F05B4AF401CF67FC3E46EA5A0DC362F3CF177B1796DA6
753AA803E724D1721DDD1BCB0C12CE0859E172D2A370C3697286F80D9E138AFD
A0EE016805F847BD30D11D8B891E54C77AB51A7CABF76BB14B06153C7F811FE4
93FC4B7CF161051A458EDF767DF94F487DB939A2740B4242BFEE234F75084DDE
207E84533004B933D43C712F0C71DA4A00FFD6D721EBC93AFDC4200E3B8DE433
3ED3E1DB799BAA27548ADC853AFF5D9D6BD92D644E3CF394789C99D9DC054A26
7770AF5DC5BD6563929AE11BE341F036584DD573D3F43D9D975201EF77BEEF80
D1EEDD1D4AD5D4D4DAF6D5B9D4C1736CB111D6FC74C236779C0ADA430323A825
09EA8D0CB1772220AF28B93098BDB36913159208D1B2D7ED45808BF7B686419C
5C0E3DAB5BC9830FDF3B494D624EE8068BF6F5212BD69EF466B9A213047BD105
B848F056DC544A8CE66C546B1A4DCB4BA29CF0EB4DCD9C2452F22172AFF33B29
E97E12D8F0D312B03BD9E5377BF0C81D884F1E79DB66E8144F106DFD2579AD26
C693C5B68F3AC46BF0D6281032D4D4BAEB2243151AB1AC0BDA2ACDDD4D590C90
F29B335DF8F57DC593DCC081FB56924028E3161AC4865B49D1B0F63F5EE866D9
7A71171C09B09A44B0E32F03494D9EA63F3C89F5E772BE25A6557F119299E989
99BA041694ED805AA4F3BBDF00D88171C9D43A9085A287A36A1F0F9386F2A98A
96815CA51F06E1CDF20B757983C5FDF4003F5438232159F325C6335B734FD982
1423BA77D0EFD044381AFBD0704E3DE95D23A70E2428E9AA355A9A8A25C6C74B
48488C14DEC93A766E112D74C83576ED355F17A809E8D3F9C65C4E3E14EF484F
4658DFB57597E2A4461D8044E95844391C1275D63F282B37888C842A5151937A
45007547263D70195ACC018A373D498B88C5A028BC66ED96A343EEE74D61EEB3
D9472B6A549CEB8699F4B35154A0E2ED22867E4F9E4A76311EB2C9F9078FBA81
838EA49C2966BA64C165434DA3093206B70186BE80600B891D9979F730FDC794
5DD6D8B2090CC67A634B719F441092A10C447A86ADB78DAE45823ECED5FCEADA
ECA52E363D913D9EFC0ED98A5A1F823DDA3350EE27F09C14E4C7298CC0FB6200
DEBC640C68C82D70AFB7A7BA668F1D7948686206884736CD03D9F6E6CF9702BF
E3C932CEF3CE07FBBFCEC0476EA6E8D5D4C5C6450C8FB236B89BB82D51886240
5BA7462F50A88F69228DCBDF26B7250E90B3DF8E94ACA1CADD9EFB5C73EF9DD5
46052314D445CC92512BA231F79A09A2F0D91976B160B8C9BA055DA4AAC1300D
491193EC66A6DE12BE01EEEDBC3A2291DA1F27AB76596A236B75E19FC5F1FB6A
DA1AD835CA08B6CD03B97B4CA1BFCBDD2500BB09F1A1B0438E4A759370EFA318
F062BA9F3D352572CE232E6FBADDAA5363807D0DC5320B807FE5485C8CB09B6B
0BED9F5B1300FF370252DEBAC9DB25CE2EC494E8EEA45FC6604B3C104E81B287
EDD49F3D7430EC9176A16B4FCEC5DF68DCC11ADF90BD5337E2E4B59BEFAC8298
E5ED2C7FC5928635420FB1955251932713236DCE28012C86F63D12AF1DB634D0
0B8CB8992B8723548177BD6822A808FF221A9E38B0DCCBC1F3430A9BAEDA89CD
ACEBBDD8CCA5E17F1CC37E35A01E058BAAAB6BE7124314DA19962BADB74EE73D
8FB13FF6AFB6FFF97926CA045B62B98BAA753AB0FC78B881D3FAFF9EE2FE918C
8EDBEF87637F1530E3E13AC090FF81F4136E08D5F3734327E643CDF621278741
A17AEBC56E21217888A6C8B5ED4269731910E7E25693CFBDD4EB4A32698F2447
4C45D73E810B627D8719E4E34D8FF378F9B68BFB149AC67B3B1E55F20D097FC1
AF74D46F5A3923C63DFEBFCA210F6B257F5FF3F2AC34CE41C15C9977634E473C
2235295C05C3DF6B3009C7854BF11CC87471CBE085793AF9C5D05C5479B9E780
14A5A6F3F6DDE5A18243DA15732CCF26ADE40C566DBC3C62B71D46DE87A12C6A
647CAC923254E2E74AF882DBD5C9E108A9160393C5CD12566AF7C824EFEAC56E
6F05B92C73A76824C5ED1735BCBAC61B98D509250C854CF1500C212F574D18D6
4426B8510FE9785B814A70E75C9234D42483E736D0689D3561E8EE5650F33A36
D50127589401D267BA6442E8616E2CDB1F6691D3FC4A2A377E5E154972E890DD
60CB463E9EA9A6EA61087DF452FA5646F69BE879337EAA0F5DA4438FF0365627
4E3B16851C2F08E976FDA27AF451CCEFED00376FC3D6E0C160F0BC19544DE289
BECEEF9A067FD71D54DA3A4F73F06E2F522BA07551296214DDA47B1BBB1212E0
1100ACB5F65FD30C655A3402C83058F8ECFE48FA60B6A3DC86C4996414130194
6676EC7F37454023AB53E9D9EE60249ABF6953E76DCE3123DD268BBD492412BE
65D7C3E5A5E483C381182A8F19B506F0AF6DCD55532B89852D1D96021B22E9DF
D9D072BD7DD4450577E658B433A84F92752B260AFA2EC4A118747CBFE36AB7D7
6D5DD96A119AA1BDD0FDCBC3AFDAE5FF72713EB46759A06CD09B5CFABCDAB0E9
85599506AC07AA525978AB157496163AAB387F079EC9FA1F9E91B9C2FBCDC9EC
7027D77016760539AC03F1C1DB242D28D6EE946C42DD2262D82ED48C3A839853
BA977046F0EF373AFF884AC3112D2FB319421C3165DFA5710BFB9AB9595A10F4
9D05704B9E22137CF27F4B2DA9CEF6D8801D5F792969B2E58FB539B8038DF440
6DE20C0313A7BCD16F279290AD6859B0E657CC3041C7928CAE35B9D3A681F2A3
2D40F8EDAF1127E754276556C95E1282514B6EB6E43FF4F0FAFF28C715E3F39A
374415B62C1F5F8E31E006D6ABC736057910A3729AC60360CEE1B2C8D9F77336
39CAC45329A372205FD551B9E9EA5082411207473D9D90E76136AA70180172E6
AF6EF3EF6B38B1906B904BE9BD5251EF067738840C28877659B649C6C4CA328F
1BEF8A9CEC2CB062702F58CC0B8D2D097FBC278F9FD894E10ACE1DEC4530CBF8
E4E467B6DB9C596DF0C3D43E6AD70F30B733EEE692C2EBD68756D0C16E1F00B6
AD011B5DA073A769B53C2DA2E7C9B7ADC6F551BF4DF4C39C66443692C3DC62CD
B1E094013F364D04BE2FBFCD1C7B2836180E9022E0434421FFA4317A50096684
CF0B8740EF680F27F4A84AAF2AA92C64883BAF57BDC60C6467A8D4E09E6316FF
9BE73053045E5F3586DA3BD1298DC15D751913FB1E72EF80047F6B33591B97D3
DFAD34EB224D64EF60F5B4ACC6EB42E1BE0CB2812FF2F3C264AD2E44F5EBA441
670CA0A60E73176ACDC4E42E74F8F489C73481EB5D46A61FDA1C0FF9F8844DBD
99CECAFE2A72833E4522981FA13713AAFAF8F121E60FAA6F379B2C8874CFF23B
8FECE70654E5855E525A403700A96CF7F8111BF2B58386E29640D82F1DD86900
E0E203F3ED554209CBDA2A61A5641D4B39D98C5C43D4575648D06BB82B6C4D4A
F043EC61B17C208CE8B4F43A7BCBBE588A3D13A183D79A47404223037FCFA4F1
DD237344E589F161BB9BBF3FAD2E28749350DB9A74C09E894BBCA85B82E704E2
99788B24642A7D0F0FD96601CF1AE4819EBECAB89824A0DC1C03BA4B546ED36E
DABC8D49CFAA53D2A9A5DD6B3431E364C99ED0323513476CDCEE49BC413E50BF
51EB93563DC03B62F84C5F96ED713F288D109C79179AEC41424822772032035A
40E84014F5BF40948F05E8562C9CA9DDD71F89021BE238E74781A92D64E5F9E5
AD6C0D954C6686C714BF189E78EE47F1530CDB8376E52631A1A26E3021FAB977
DBF01167266AD68A779C0180E034A90CB77B86747395BE885E484BE4028B4093
8BE191D58D0BF85308C72E6384292A2E1CD06130A091F8AF9DC6C3E12B1E4BA2
BB2C37AB4AAFC0CCC7964C06B9EC1C7E3CEBE1A02F52778462C5386DF9987FA0
9690FEE37683288460E2CAB4CC37DEC8CD522A143A4921A9206ABB2967C4B357
54A34363BC35D052DAFECA6AD01D6BCA3D699C54989DA0BFE5EF89D3D8617370
2EED925DD5AA5FC39AEC5902974301E2E93B7D0429272AEB5AADD926C6378A00
AD40F8AF2B536FB5CC34B1FDEA7EFA262A2A3FAF4CBD883DD503F4DFA21DE4E8
4FBE57FCA6BFF496E036C164D9A0E765A167E2E3231C88B1D605D10B23BD7B70
033419C02472E528053EC04147893AD91C978887F0FD87981992F1EBDD6D403D
6FB6629EC1CE35597AD53DACF7648E3576B5DC9F6209502B7D3EB314948B10AB
1D6151A1FCF2EEC1D3B8EB4C0D79E7803BC9AB882864DF59482CA0660B9C2DDD
62D1B731C3F388D3BC486F5519ABFC3CA2F20613A638508B1D5893FCAE3D4DFE
E16471ADEDA85D1C61693F7FDD283752FCC16C0AA7E561E70318B58B6634041B
0D78BF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E6544A8E490800362539DECEFDA209FBE1774B790CB6222E100903033A4CA73E
F0F4EB1F66741F359B651D485B87864B83A2FCCAFDCC861D7E34DD6D3E6AE7CD
6EA69488607C212ED00D993F9C24F612A61AD8C13C202E9DA91CDD15846EB4F5
FE15650CF4487A938A117EE85ACC8102EB37397718D4F17E60D3CEE08BE4BC5C
C93E8677D3A0A807DA8C72ECC71B26B24CD315BC351E053081BEADE92D2E498E
8A4CDB963B1104272310678F74491DA1572344FA5B2B920DC304A252193F1D93
5ED5268A6AC194D21A19DB87C73771A6CED0715EFF43475A0FD680DDAE896369
D59A6B8297CC9EFE00FCB9EFCA2D26256C58D6809FA22A0DC3112E7888A49945
0162B7373CCF7BB457EA8FCE8009D30DFEB19A02D18CA44689E5D8C34CC8F267
CDDA36431BC83D98704404C2E77DE570C7704166CD3DD128179D772063505904
9FC2FE5183581C921EC9198BC03CE04A0F0B2113C7B19A19D7E1DCF6AD566401
52A5010D25C836FAD8B8569DAEAE65CEF1295FF2EC1D6F82BC0428A071213C63
F9E6981B7A7D02A567FB66A67AB2E9556E6C9AE40D3CE74A353A702BB017E760
AD9AA7BD2198D8808551147686B2ACDAE4BF534FC07180E277C771BBC84A3007
94A6EA81739C1FE770576F4593A1DD7ACF15A1E166892EF94CCC6BFED98F0D54
D93AB3AE38D3F24C63EFD772D35A49E34D4359CD47A000608F799114BE5D3635
9D09FD6D5B025A7B766FFA65AEA58C77DC4ED68C27DD847573EBAD6AFB646F54
CEC76AC98678B54E6E3A103EBC0F25C44B4AE7D581455520DA75F0AA2AD71C12
CA19CC7AE1B8F62F15899242621F17260A5F8DB1B789A7340EC576E93E5592C5
03E4DA37DA7FABD00C06BE3B854DFA815E1F376539ADACED2F63269293495687
A19CF128855B9566EB6AA1B52455A825369304D7A2D66EFCE4E4562017EFC2DD
684583B0D7B2DAEB2429EDE50A4654BC39F1EFF014357292F0EDFB338F67BB46
6F76A8368D8F95C3F24AC4B3FB9BC915F33894C1F16657A6BCA6304A8C64D277
F06A9EDC36BEED7B38C0FE96358F8BF611AEC1BD03438D032A9D664F75DC33F6
16E502FA66079AD2EF2506FAE512122EF0B3FE32326369F32F6303156253A898
84CD31AAEDEBD042CE0BC9604FAF689BA722707A9996DCC3C85EA3D369EC41B3
4AED16D742A5D1B9F6D95229B4B986A164AD3E5074BA33B83BF325C0CEEB8AF6
D8424C4DA1F1621703C8F4ED38E77C078434198A921ADF3ABB209D23A34B92ED
93163969607261EB23FFA438DFE3FA1F856AB5E9A9A50F354AE6A8F5989499D5
07068D1F0E2E23BB88A8D5533B65406BE8846DF64B0A78FF8FE0BCA3F9E72295
10F6C7F701BB0151E1E17E5713B94A842F0F1B0F34B176EBAE603A02F6528ADD
C4C65A05E4E89C54FF54FD2559C2801F6E1637E5119AC7480C1B769BA6D5E2CF
9DD829514393F5AE3DDB752C9EF9923DB80C40E3FE8289B79FDF87ECD6F679DE
D5361CDB76FD9178B187F6FC77D25B45EB9F2AB2595E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (entiers.dvi)
@start /Fa 162[44 1[44 33[44 8[44 2[44 5[44 39[{}6 83.022
/CMTT10 rf /Fb 171[57 5[59 4[23 73[{}3 83.022 /CMSS10
rf /Fc 205[42 42 49[{}2 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray 0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 0 a 584 0 a
currentpoint grestore moveto
 584
0 a 0 0 a
tx@Dict begin CP CP translate 0.6  0.6  scale NET  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 0 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.8 SLW 0  setgray   0.0 0.0 2 copy moveto 12.80365
.5 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 1  setgray
 1. .setopacityalpha  fill  grestore gsave 1.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 12.80365 } false /N@A 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@A known { -12.80365
0. /N@A load 0 GetEdge 0.0 0. AddOffset /N@A load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 0 a 0 0
a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 0 a 0 TeXcolorgray 0 0 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 0 a 0 0 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end

0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 0 a 0 0 a
tx@Dict begin ps@rot  RotBegin  end
 0 0 a -21 27 a Fc(1)0
0 y
tx@Dict begin RotEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 0 a 0 TeXcolorgray
0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Aw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Ae 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@An 10 {InitPnode
} /NodeScale {} def NewNode end  end

0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@As 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Anw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Ane
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Asw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a
0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Ase
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin { 113.81097 0.0 } PutCoor PutBegin  end
 0 0 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.87999 SLW 0  setgray   0.0 0.0 2 copy moveto
12.80365 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave
1  setgray  1. .setopacityalpha  fill  grestore gsave 2.87999 SLW 0
 setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore gsave 0.71999 SLW 1  setgray  1. .setopacityalpha  stroke
grestore  end


@endspecial 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 13.34364 } false /N@B 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B known { -12.80365
0. /N@B load 0 GetEdge 0.0 0. AddOffset /N@B load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 0 a 0 0
a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 0 a 0 TeXcolorgray 0 0 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 0 a 0 0 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end

0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 0 a 0 0 a
tx@Dict begin ps@rot  RotBegin  end
 0 0 a -21 27 a Fc(2)0
0 y
tx@Dict begin RotEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 0 a 0 TeXcolorgray
0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Bw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Be 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Bn 10 {InitPnode
} /NodeScale {} def NewNode end  end

0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Bs 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Bnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Bne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Bsw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a
0 0 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Bse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 0 0 a 0 0 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B known { 5.0 90.
/N@B load 0 GetEdge 0.0 90. AddOffset /N@B load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 0 a 0 0 a
tx@Dict begin { 0.0 16.66675 6.94444 0.0 90.  Uput UUput } PutCoor
PutBegin  end

0 0 a -69 29 a Fb(INT)0 0 y
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Aw /N@A InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0
0 a 0 0 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A /N@B InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 0 a 0 0 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 80.32414 11.80553
1.4166 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 0 a 0
TeXcolorgray -333 43 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -333 43 a -333 43 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -333 43 a
Fa(['0'-'9'])-333 43 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -333 43 a -333 43 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -333 43 a
0 TeXcolorgray 0 0 a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin PutEnd  end
 0 0 a 0 0 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B /N@B InitNC { /AngleA
30.  def /AngleB -30.  def 7.  7.  GetEdgeA GetEdgeB xA1 xB1 sub yA1
yB1 sub Pyth 2 div dup 3 -1 roll mul /ArmA ED mul /ArmB ED /ArmTypeA
0 def /ArmTypeB 0 def GetArmA GetArmB xA2 yA2 xA1 yA1 2 copy /y0 ED
/x0 ED tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict begin ArrowB
end /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def
/cy y1 y0 sub 3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub
3 mul cy sub def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub
by sub def /getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0
mul add x0 add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0
add ax t 3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp
mul by t t mul mul add cy t mul add y0 add } def /getdL { getValues
3 -1 roll sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01
def 0 100 { /t0 u def /u u du add def /t u def getdL add } repeat }
def /GetArrowPos { /ende 0.5  1 gt {ArrowPos}{ArrowPos CurveLength
mul} ifelse def /u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du
add def /t u def /sum getdL sum add def sum ende gt {exit} if } loop
u } def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
/ArrowPos 0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1.
} ifelse def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1
] cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def   } if end
 gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore  grestore end
 0 0 a 0
0 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 0 a 0 0 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 0 a 0 0 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 80.32414 11.80553
1.4166 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 0 a 0 TeXcolorgray -333
43 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -333 43 a -333 43 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -333 43 a Fa(['0'-'9'])-333
43 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -333 43 a -333 43 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -333 43 a 0 TeXcolorgray 0 0
a
tx@Dict begin  PutEnd  end
 0 0 a 0 0 a
tx@Dict begin PutEnd  end
 0 0 a 0 0 a
tx@Dict begin  CP CP translate 1 0.6 div 1 0.6 div scale NET  end
 0 0 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367
897 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 907
a FU(l'un)h(ou)g(l'autre)f(:)p 0 TeXcolorgray 0 TeXcolorgray
299 1298 a @beginspecial 47 @llx 687 @lly 216 @urx 730
@ury 1690 @rwi @setspecial
%%BeginDocument: mots_cles_ou_entiers.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: mots_cles_ou_entiers.dvi
%%CreationDate: Mon Aug  6 13:15:59 2018
%%BoundingBox: 31 690 143 721
%%DocumentFonts: CMR10 CMSS10 CMTT10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o mots_cles_ou_entiers.ps
%+ mots_cles_ou_entiers.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.08.06:1515
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 698 2017-12-30 19:08:50Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.28, 2017/12/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 45 /hyphen put
dup 48 /zero put
dup 57 /nine put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 101 /e put
dup 108 /l put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB287028244A9F9FDEF8C2B36DF918584
C497B6EF38C81511BA8FF40D2167F61BF37EACD032AF374374666771E209FBF4
909749EF2864DAAFC234CE96AEEC2F362D222A5CEB4FEA889E98D7E8EC3D47A1
B791DC4533400B7F74D8945AD99BE46F67ADE1CF852DD818F07DE0AA5CFA497E
5760A0B5A7AB9916AF83CC04157B719DCFC9AF53C4BFB68D68E96228E2CB7825
85749780483D682D172A2CAF15C4D2B23690A853704241F8D1B2CF663368177B
9AF0F93491F6DC3F1E05A2048535A3660E391EBFA7E582B050E80376FA16D597
879F762BF7CE394D18DC76D2063012EEEF4E78760F8A25C60981E6372E49D716
14BB49632476F2CCA548F5131F2E9E392F4234435AC61CF10377BE5E51E570BD
135E3CD4C130FFD5EBA5C71476819A2F4556AA437BAD036E1931583807EE0A93
E84E169855DA91D630F30DF34012DE1F4C98E20602B36CDF7FAFA1C93E7C6C1E
357F3E111E41704C0F8A68C95F424C6DA581B49C709E1E98149FEAAB15DFE7F9
4023EFA8FC9237938FF8642BD551DF6E19A3D52FDFD918E3406C93C55879A8EA
02246D52C93A3DC8C4F1D52CD0F3BDCFA7E4B99AC44C57FA74D12663E6DE20CB
B0AD4121F47D4750A5501018DB4BDD5B64DF6A6F8FA468B307BAD18259089856
4C10C3ECB18967E8E6D0F6C249D0492D0BFC40D8DF6B9D4B8299B2399045A14D
4182329F95AB474108A296063BF7B01D5F186B2AC4496C2624F6F7E45CD885C5
E032FFEA7C337BE415936BE214AC88BF14CB44C210BF44141C72291EBB16170B
B685C2140498296402770DC7262C71EEBF9EEE19DE88C3656A7D9095905AE89E
0904AC946EFC2DA66A20012FF6DC6C558739DDEBBBFF6170BACE74C2054F7793
E5227B06A188677603D1102A8A685ADFDBC65E34B938F9BFE6410CEE3D004F52
15B2874E7C55E81FD638D2B4C0B415EBAD94EDC5D3AA4B388E573F6ABFB9C949
FFD786A0AFE661084E7BFE3D9FF2CDE9A7D810C95AA9BF5A8C01E48818E8F89B
BB7E246F3A1C671D6471E07D4B70D8A19389EF17F259FF8C2D90D46BBD8F7B95
A7BACEF0F59D7A86D619FE05494821CA583928714F3FA3D08D08C1A696775658
C213DA63302657F3B8E1D9231EB1EFB3402C2A4583C60AB12271168AD208A985
40BBAAF61C73D2254EFA2A4D95E69A4F2312EC701C2A55C23A71E12403A44357
625700277EC06FC91C453613AA0DADA3095C755E4F91FC58CCE729816CB5CAC2
47DDC93659FDCEEB82CB4303FB7AEF209C995EE1AF1707F717AB92EBE58A47A9
445799658F955BF73F38B67E1FDD63579EE3AA4B7C5172C8C7D6DD63223EFC56
D5FA82C1822A630997894FEBB379F0A21B75F34987BA586C6FF368ABDC45E00D
C78B53F3E0B671098413E318D9A0B75C53A9D169317559332B34FB651CC92781
B4882D36D3C1FE64887D36058B06F3AABB121CA1540BA17F0A43DF8A4F8EDBAA
54FF0F25A13DAD43232F7EE4D840B4362172F92CD672CF62243F83C84E9A875E
03774474BD86F083EC1D7B1F499BE77587EDD385833F08A9F3E8614EF7118595
C0B230144E5805C3362F459B92E5EDE493E6C43D019F687663ADA3764F11BBB2
FEE232D4192724FFB8367445B690245E81AE0A38693F0318A61A0BF80602581E
EEDD6C8F062E3E6783AD762482408DC1A74F1F0035F01F710F91F1E0E49E70FE
25FE7FBB86B47E6B7B0934D43B9A24F5A9BDEA3D6D9690B071F8351A949FB767
1F3DCB141F5395AD9CB286C8B6C071852E56E11B34BAAAF9BED596E52D1AC176
8E8E0A863C0976A5B2CAC668D4D0759AC9F82277403C5DCEF8D75EFD6E89E703
22C72CB26CEC6AA0A9196E604BAD9F5907563769751AF1D8076E19266EBAAAAF
50F3305A6E8EC8426FEC458D2C2AFDCCAB87B90081919E008D8B74F9FC08D98C
AFC92EA0B6BBE53ADC954B9B3CE621F35B725E4ACB5ED51FC702B8385C5CC30E
C3FD67BE5A9574D5351815A959020591659CF35B170D122EBB25924706B0BC0F
896A006470C97F9C400CA7E1E122D6D3D9675E23EBEE3478352EAA05DEC5A677
2EB8F53CB1041DDA059BBC1CD1305A3BA4B31B29DCAF24EC786EE39776EE06BF
D3C04FF933CE48AE61ED5F84FAA6DFF8B239874FFE2072A731070FFB5095F90D
F960F7BFF771183B302FF55667390AF2E314BC8E0AB7279511CC1700DA348283
522B5AEC490A066D109C42CDFBB94251576B80EB8F69200D272C713BA3B61742
96C71136B1C1AF8703A1A0E517BE42CD6306FC6BDA503E8981DB670CF5CBD09E
176E265CF148A200932C5106DB512AB6E16FAB0A63A7ABA91F712419C5470C43
3F42302A719C9E2A6756DA3AADFCACBABDB5F413651E1ADF7FFC82E5E8390C51
17341F1C48E36FF234700B613184924BF10275230FFC6B407CFE8DF077E5AD7C
0524FCF5669B7CB26F9A83AF7B4CDFCF26A714B7FAEA1F2C8A1CD0DD13F8C4A6
A76308B26437D124481DF8E5CA8157BDDE39DA249264915E2BEC00AE94BAE6DB
CE77F2EE8786B6C3846D13E9883E47F39394A05B88515DE311E47D97CBAB3707
020255BFAD2AB29FF8FFA8AF1D5E0718D7F18C9194E0AD8E101B9FC427031914
865E009C6F55B05F670DBCDD91C68B6B7BCA2D0C2A7370210188961AA6616D1B
3007A4321F4A619646B14A25BB4063C5005BA4BE7C8E28DA8177A2E1BDFAE686
52C157F9007031B6FA988D8C0A3B76F0B5804D8866BCBEBBE7F5B618BCBF9969
FEE4239B87C1E5F8BDEE2E9F4FEA958B525D80CCA8317083784A5AEE446480DE
6EDC7C4B99D4DDB73647E8F3F501E48759DE2D0C8DF2FE912524959580750505
C860608B49A9EF05ED1FB153409BCCE84D3B608757328D9C415077E6C481A556
64DE789D94A4717892B67181EB49A9B422F0C03FA1F73C8AFA4D4964BAD2377E
9BB52C76BCF6852C9849811C6910230A7CBDABAC84F3A31431905722CC41C078
3B5FBE4A2C43A7E6D74C350FE6DEE6C7BDABD565CA1365A6BEF265BA3B03640B
B389A777A8D77505F640B041B892AA206EFBCF584D9178FE0E264EDD86F3C451
37F1848A3687293893C8A8B35455C0C695B0AD07DAB428355F7C607D7314EC9D
2DA9908C78059CF50BE45FD16E7998A3EF4B8DEC7B57F6285CA21C2545E1FE65
D7F6D395D556A60C4558DB71D7477BEB180F389FA64EA0E7B9BDE6C45FC8AB20
0BFF20B297C7BEEA11B942C0067A3E5A4DA48CA8F02CA02E2E745F006E72528E
DD875B6093BDC5D39843C166667FB4805B7BDC04004CD1A3932C0636B5547D5E
C92697637A10529915F9E29674413666FF049ABCC46C2C684960A0A9C99F9A3C
741FE980499D6E649BFF3F8E7EACEB151A5C92FEE8A9B51D26F9DFC13BD898CF
F18F9B38978EA142967D010A4006EBD6C80DD42D212609DA6CE7C34588B5BB29
32C8EED90B09209CBFD1EF34ACAC12C87F4D74D4A2056E42A4E620F5ED739671
134CAB8E20F504AAB68C23C80444E5891308703AD4701BBBC862302707DBEA91
641420AB3A4B8BC72427DC2E7BEC0D8478BCFEF07132F05F1BEA2DCF5BB1D199
C132EB21CC115A0A23E0342182E47C6C15C755FD1CAC6A09BA0D79975E11408C
8A35D50D10881D18223748F7A097529B9CEB512AAB419661627970B900E7AB0A
2A84EB0EBCBC2D65DC1B9C4BD58A27D9F928F7BA85EEBEDC8B152D3481B6A6BD
5308813E21EB9875ADF1EBB200B30EAA558B5A69DAF4964F448A7EC78D4A2956
28EFAD44E4032A813839E5299B72F37BA37D25CA91D4B6B29A7E7D7E54CE571E
6824E8FD6B08B2A566063D757DCC89217AF7D0574C7E3D22E178657039EC1006
64527BD7CCFDBBB4219A9BC87AB8E0DC04C360D05E465C96845FE8DF27C3E781
D604054F467AB9A9EAC67288441F0F37C4E6B52CB78FC8D146C950
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS10
%!PS-AdobeFont-1.0: CMSS10 003.002
%%Title: CMSS10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS10 known{/CMSS10 findfont dup/UniqueID known{dup
/UniqueID get 5000803 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS10 def
/FontBBox {-61 -250 999 759 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS10.) readonly def
/FullName (CMSS10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 69 /E put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 84 /T put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C4488BB4EB864B48
63941B9739638D2E6F3CC778582B46AEB4E466D89D1C211225274356A4BC90F3
274C6AA56E200249B7D0949A3FD4185DCB3E5286910EFD7CA72D5D8E8052C96F
388D12094B87D3705CE64459558CF024667C0FE96CBB32B0BC9E51037D7BD62B
E4B05FF99384E71D78441A79B0B1DBA1CAE02434A9FAE46596FB86B873B1670D
AE0BAF516445A0DDC127F8FF3ADA0B10EC30A9CC1F7E9248828B5E8AB46C3FE4
154B80A54128A08777F5F9B8C519C7E3B632B3476F007FA156E9F39FBE57638B
4214CD2BA79BA9DDA0F4C073AED814ABCCC2F7906C57A872C00E67FF03AC1200
29DAB92376422FA21C67CA98BCEB8C431CA2D3EDDC16972F84BF6DB2F705BAB5
CAB39C82D139FB1304B9E7BF1F6FF447596081D5690B1519E468D6BE49C329C5
C9C809023EDEB9DCE4A6D52A8049E0CC134E8B41BFC6558CFCAD3D9D2773EA16
131567AE6231B3235869767A1E7C1FA6C8D6FC1B276CBB1CAD14D376188C9682
302836A9290E587D4225EB8BB1DBA2C4580A81FACFDA197174FE948CE757C575
F23070FD84DE121955D7D9307BF986C5E739FFFB6CB76822C341FBD9FC2E3378
AC9332B40C07D5B8745D74E30F1D719EAFAEDBF5FBC40D0546F69A66072D8A49
28D2CC2E76B9B1EFD191E0BC7510C2C8761BD92EFCFDAC263342A01398A56D18
121A591FF5CD4AD8B25699A7897E60BA940336BC17B9EC9F97C2464D031F958A
A3548D0C97C50C580B6EEFD0FE8330EE2BB0D2E7FD1DAE33448953544A4B1C5D
8EB57798D0ED4B22909FEA78ECDBC4D8A124DA05B9999242D68681017285A0C7
69041C1F79442279FBE328733EA0A6694D68BA89739FDB9297BE0CF1808C07F7
BBF6F1538DFE084EC8C0EC24D883F6CC08A51DFEA23EE920F44BA55FFF58E960
C7BEE551FCD2D5814DE7E3F835608073C2CB80EC57100CFD484C837881674E92
B217F4D11165427DACCC29C129005874C05CDE5FBB2D912368EA2B98C45AEDD8
8A0D2493F60EF36809C8C6EBBC7856F6656E8D398BCB29DAACD4F7D4300A0B01
161CEF51195D2C58DDFBCAFC1C03F49304ADF02789889826F1E20BCC14827565
F2A45CA57DCC61B52E33638A0C6C5A59B145E82B82571DF1806EC40FC0E8634E
A34A791B1325571E19F3AC2EF6FE68A14B0ABEF7EBE0EDA3942E85E5AE967A14
0C5AEBFF2A36DCA8866700CB7082D2ABE470864C44AEE1F6D180D511304C8674
D02FAB12A7079ABF96E1CA3CDF9D75532123E87663B1D524265AEF63EB5C2169
B67A651A101E1C7EDB008D3DB06DB1FC1A81B41B291D6C4A58FB57989FFCA434
DA84B3914D1D80B17AA3A55A70BBC06C49DD5F7DDD03FEB0055088558FA192A5
261477899857CF598DB740E82D035E84CF17B33048CFED2DCBEBC2B75CCAEBEA
B6C5AA1C6978FBB36ED98D9047028360ED430A0AA69AC85A8F83825EA649E1B2
64B260197B06A24A1DD969CEEEE136FB046D713D0630B246BD41CA285F076038
F7F8431913BB9A3E70311844D4C22AA446E3CA217A9DFD75A898997130269B29
AD4AB7D9662856E677FB2DAED7078639CF31C6E6637C74DE2B5D0ACB88BD61F3
CE3C5D56D3D4B3EC1ACB33EACBE05E53A133EBFE93CE6A0CBC8F24BDC5B31BBF
5B3E55D6B40B1CED389076014667E28BBBD60145A06BDECEE8011A2C6F06D091
73767A8045CEF2A110B614149FEE783A2351FB2938A9F73CA406538EAD82ACC5
A3DFD3DE00221E1B4EA977AF8C89661357FF7D2F1FCEAD6CFC9D6AD81F95100D
EA1F328249AD84AE849220E6593D45015B4D7C9527F3063E9F6DB6E572092A1F
1F460696227D5F0FA5A5484B1F0D8B4A35066451663BE448D924DBBFD388B6D6
D7CFC87C9E75B7CF79A4C9207E29E0BAAAD7FDF529B860F7731EA978E335334C
13CB2F0A4250F5957B44CAA0674AE8356F586A24FD137103973B9A1FC31090C7
C84DC5D380404BCDF3FE20C6F74FFDD8BD1DE845E99DC6FE09931F003834ECC8
08C5D962070B6C44F901A787CCEF048A2C584A2285506B4D4E82B1BF130E2220
B6C8B3240A4CBBCE16AD3676B23A50B75F82CD88D1B8F21D30A12716426112B3
23DFDE5A348DC9DCCCE5BB5DB5433A5AC125DE1229FFAAE0D8319B2929986EEA
56A93BA1FBDBE617F30852A3DC8C712DF674169C6D656F75E252187A085B2788
2467CC4DB08D48EE6A98C61BC55E6EFB1938FAA718802B7587B94C8F1477E9BB
DCF6E02B5E67FE3AD9D87C321CD9BC0CCD36B9C4BC601E6BD552EAB8E1C940CE
3A22F3C2501C3C939CB4F17CE97566F0A04602D2A22A05CECDF4A49CAFD6332D
5870E1F31AAA5F86867F71610CDB83E473B9D20BA00D8986D7148E0EED03865D
9622864B52B09D12E0C5FCDD023D29D5AB1CACFA92B6FC14FC84E95F407861D5
2BEE3301AF399FD7ED04DFDE6679A345A282E7FC08D47E3FC8969D3B00ACD7B7
F8769647D6D4F4106340EF739583374D023C2702C48FAC1B643B5897D2D7DBCB
73257712A0FDEEEB98A021D218CDDEBBA34687E23C4828D7F96D1ADDFAED7EA5
B279322E6D55FB486AD8F3A8E7B2C67915564FE56F0C9277A06B29C47FB7D007
11AFDDB3FC1B173B4E449CC6B198041CCA0624D81B4840FE5B63BE72157AC6E7
03E5E95D2E2CE2E40BCE8044A8F2AA45F855484A891B9F0F8F70188AC66A8DEE
F4D656CBE216E6D9AC33BA8DD0685D480833E1226784469A221D9FA3CA600AC7
5574B5226649A9C48CCB43339942FC9010F86BAA2D181AEB487A92A96BF2EDF1
60F3B93FDFF4137A25A8AEC5ADF8613019CDB103DC4367EF3D8AEB4FED0E6BF7
622AE0CD3CAA0321D26CA4280CFB60D08D9560AB8AA5698231171B881BE9A27F
BDCF3162134126212C523738D221AA05E31CEE73D9D40F73C450B6AE2C1E70D5
C37162BDF55943069923A290A6C720042566E55A21CD81C460818883AB016C16
8FCCD1255A66977DC1C110261D7642199D466DD3D2493A2D47694F842241C474
1752B00DA03E69CD16A8A14BEB8A431A315D19A39BA978E46EB1189089FEF647
F9DBB58AAE6B3FBD475E4DCAD241A051DD100ABE81D40ADF18A4C50F53BF749F
D6F7C8E02A5665B4AD18DDAE79096DD447F8BD32C68F9F97F05E0071D9E9AFEE
257B96D48ABD9920418E17C8F027E9E975E4A08DFB1988E7104CBBC1CAF356EA
7750AA7110BE116AF1BA69A94776E4356573B38472A8A1292C63701543B0F315
611A0E0595B30424A1137478BA6F990AC7C3AB4DB69E75C222B617F373C521D4
246E954E9857AF59D1E6C36412B643733CF5E1C90389EF0E5E0DA55D3AD12E97
E7630C315F72A03CAF22E0ACE3AAAFC1D496CF4E5ABC49C2DD5E264BE7EB2698
AFF36089B5DD2C53DB1C1FCFBE1E89D41A95DDD278CEB29DC85FD1DB8B83CAB1
EB37C531E9BB8466ED6B8B60258D3C355626CDA43A32834DC89DFB11E5FC6D68
0F78CFA871113DB81A1690250A6F842ADA15734CB6DF7C6ACED6D8D586BC4E1A
94EF3052FB0F8B9454390B882CBB6E135AF1F9C777AC362C2A758C3A98117120
73C6E2FAFB580716D4B2889A4331CC658AAE996245685B973D9C184541385680
AEC2956107DAB00230FB39BE98D3CA898D917E5F2088F26CBA4F8B5B115B6443
8753331233B10852702FC26D9DD4C990C13CE4D0DCEA23D62A826A4B4FD16070
5F3638C0A50A3373A33FCAA6F3644975AFD0560EE5F2D1CDF08820373468E4FE
6679A229D6955CFDF7ACAA92A87E6D8571AD18CF59F84F88A674B2946FF20A28
B9798EAA22442415EB46B9498DDC0F4BA6ADD347AB43E9293CAABEAE80127378
129D5DC69F6DFFBDAFA5D65580239E8EDF6833D0DE6DF75F0FD090A83CE0974B
AC947BABBD1B1C7194DDAEA37B0CAB477ABF9433FCE0243C8D308409427D1DCB
8EE4FC36C7E5CEE104904B520B3F6E677A5B92F694BDBC2C799991667E0EC14C
B95EAE7DE1854BF4542F05B4AF401CF67FC3E46EA5A0DC362F3CF177B1796DA6
753AA803E724D1721DDD1BCB0C12CE0859E172D2A370C3697286F80D9E138AFD
A0EE016805F847BD30D11D8B891E54C77AB51A7CABF76BB14B06153C7F811FE4
93FC4B7CF161051A458EDF767DF94F487DB939A2740B4242BFEE234F75084DDE
207E84533004B933D43C712F0C71DA4A00FFD6D721EBC93AFDC4200E3B8DE433
3ED3E1DB799BAA27548ADC853AFF5D9D6BD92D644E3CF394789C99D9DC054A26
7770AF5DC5BD6563929AE11BE341F036584DD573D3F43D9D975201EF77BEEF80
D1EEDD1D4AD5D4D4DAF6D5B9D4C1736CB111D6FC74C236779C0ADA430323A825
09EA8D0CB1772220AF28B93098BDB36913159208D1B2D7ED45808BF7B686419C
5C0E3DAB5BC9830FDF3B494D624EE8068BF6F5212BD69EF466B9A213047BD105
B848F056DC544A8CE66C546B1A4DCB4BA29CF0EB4DCD9C2452F22172AFF33B29
E97E12D8F0D312B03BD9E5377BF0C81D884F1E79DB66E8144F106DFD2579AD26
C693C5B68F3AC46BF0D6281032D4D4BAEB2243151AB1AC0BDA2ACDDD4D590C90
F29B335DF8F57DC593DCC081FB56924028E3161AC4865B49D1B0F63F5EE866D9
7A71171C09B09A44B0E32F03494D9EA63F3C89F5E772BE25A6557F119299E989
99BA041694ED805AA4F3BBDF00D88171C9D43A9085A287A36A1F0F9386F2A98A
96815CA51F06E1CDF20B757983C5FDF4003F5438232159F325C6335B734FD982
1423BA77D0EFD044381AFBD0704E3DE95D23A70E2428E9AA355A9A8A25C6C74B
48488C14DEC93A766E112D74C83576ED355F17A809E8D3F9C65C4E3E14EF484F
4658DFB57597E2A4461D8044E95844391C1275D63F282B37888C842A5151937A
45007547263D70195ACC018A373D498B88C5A028BC66ED96A343EEE74D61EEB3
D9472B6A549CEB8699F4B35154A0E2ED22867E4F9E4A76311EB2C9F9078FBA81
838EA49C2966BA64C165434DA3093206B70186BE80600B891D9979F730FDC794
5DD6D8B2090CC67A634B719F441092A10C447A86ADB78DAE45823ECED5FCEADA
ECA52E363D913D9EFC0ED98A5A1F823DDA3350EE27F09C14E4C7298CC0FB6200
DEBC640C68C82D70AFB7A7BA668F1D7948686206884736CD03D9F6E6CF9702BF
E3C932CEF3CE07FBBFCEC0476EA6E8D5D4C5C6450C8FB236B89BB82D51886240
5BA7462F50A88F69228DCBDF26B7250E90B3DF8E94ACA1CADD9EFB5C73EF9DD5
46052314D445CC92512BA231F79A09A2F0D91976B160B8C9BA055DA4AAC1300D
491193EC66A6DE12BE01EEEDBC3A2291DA1F27AB76596A236B75E19FC5F1FB6A
DA1AD835CA08B6CD03B97B4CA1BFCBDD2500BB09F1A1B0438E4A759370EFA318
F062BA9F3D352572CE232E6FBADDAA5363807D0DC5320B807FE5485C8CB09B6B
0BED9F5B1300FF370252DEBAC9DB25CE2EC494E8EEA45FC6604B3C104E81B287
EDD49F3D7430EC9176A16B4FCEC5DF68DCC11ADF90BD5337E2E4B59BEFAC8298
E5ED2C7FC5928635420FB1955251932713236DCE28012C86F63D12AF1DB634D0
0B8CB8992B8723548177BD6822A808FF221A9E38B0DCCBC1F3430A9BAEDA89CD
ACEBBDD8CCA5E17F1CC37E35A01E058BAAAB6BE7124314DA19962BADB74EE73D
8FB13FF6AFB6FFF97926CA045B62B98BAA753AB0FC78B881D3FAFF9EE2FE918C
8EDBEF87637F1530E3E13AC090FF81F4136E08D5F3734327E643CDF621278741
A17AEBC56E21217888A6C8B5ED4269731910E7E25693CFBDD4EB4A32698F2447
4C45D73E810B627D8719E4E34D8FF378F9B68BFB149AC67B3B1E55F20D097FC1
AF74D46F5A3923C63DFEBFCA210F6B257F5FF3F2AC34CE41C15C9977634E473C
2235295C05C3DF6B3009C7854BF11CC87471CBE085793AF9C5D05C5479B9E780
14A5A6F3F6DDE5A18243DA15732CCF26ADE40C566DBC3C62B71D46DE87A12C6A
647CAC923254E2E74AF882DBD5C9E108A9160393C5CD12566AF7C824EFEAC56E
6F05B92C73A76824C5ED1735BCBAC61B98D509250C854CF1500C212F574D18D6
4426B8510FE9785B814A70E75C9234D42483E736D0689D3561E8EE5650F33A36
D50127589401D267BA6442E8616E2CDB1F6691D3FC4A2A377E5E154972E890DD
60CB463E9EA9A6EA61087DF452FA5646F69BE879337EAA0F5DA4438FF0365627
4E3B16851C2F08E976FDA27AF451CCEFED00376FC3D6E0C160F0BC19544DE289
BECEEF9A067FD71D54DA3A4F73F06E2F522BA07551296214DDA47B1BBB1212E0
1100ACB5F65FD30C655A3402C83058F8ECFE48FA60B6A3DC86C4996414130194
6676EC7F37454023AB53E9D9EE60249ABF6953E76DCE3123DD268BBD492412BE
65D7C3E5A5E483C381182A8F19B506F0AF6DCD55532B89852D1D96021B22E9DF
D9D072BD7DD4450577E658B433A84F92752B260AFA2EC4A118747CBFE36AB7D7
6D5DD96A119AA1BDD0FDCBC3AFDAE5FF72713EB46759A06CD09B5CFABCDAB0E9
85599506AC07AA525978AB157496163AAB387F079EC9FA1F9E91B9C2FBCDC9EC
7027D77016760539AC03F1C1DB242D28D6EE946C42DD2262D82ED48C3A839853
BA977046F0EF373AFF884AC3112D2FB319421C3165DFA5710BFB9AB9595A10F4
9D05704B9E22137CF27F4B2DA9CEF6D8801D5F792969B2E58FB539B8038DF440
6DE20C0313A7BCD16F279290AD6859B0E657CC3041C7928CAE35B9D3A681F2A3
2D40F8EDAF1127E754276556C95E1282514B6EB6E43FF4F0FAFF28C715E3F39A
374415B62C1F5F8E31E006D6ABC736057910A3729AC60360CEE1B2C8D9F77336
39CAC45329A372205FD551B9E9EA5082411207473D9D90E76136AA70180172E6
AF6EF3EF6B38B1906B904BE9BD5251EF067738840C28877659B649C6C4CA328F
1BEF8A9CEC2CB062702F58CC0B8D2D097FBC278F9FD894E10ACE1DEC4530CBF8
E4E467B6DB9C596DF0C3D43E6AD70F30B733EEE692C2EBD68756D0C16E1F00B6
AD011B5DA073A769B53C2DA2E7C9B7ADC6F551BF4DF4C39C66443692C3DC62CD
B1E094013F364D04BE2FBFCD1C7B2836180E9022E0434421FFA4317A50096684
CF0B8740EF680F27F4A84AAF2AA92C64883BAF57BDC60C6467A8D4E09E6316FF
9BE73053045E5F3586DA3BD1298DC15D751913FB1E72EF80047F6B33591B97D3
DFAD34EB224D64EF60F5B4ACC6EB42E1BE0CB2812FF2F3C264AD2E44F5EBA441
670CA0A60E73176ACDC4E42E74F8F489C73481EB5D46A61FDA1C0FF9F8844DBD
99CECAFE2A72833E4522981FA13713AAFAF8F121E60FAA6F379B2C8874CFF23B
8FECE70654E5855E525A403700A96CF7F8111BF2B58386E29640D82F1DD86900
E0E203F3ED554209CBDA2A61A5641D4B39D98C5C43D4575648D06BB82B6C4D4A
F043EC61B17C208CE8B4F43A7BCBBE588A3D13A183D79A47404223037FCFA4F1
DD237344E589F161BB9BBF3FAD2E28749350DB9A74C09E894BBCA85B82E704E2
99788B24642A7D0F0FD96601CF1AE4819EBECAB89824A0DC1C03BA4B546ED36E
DABC8D49CFAA53D2A9A5DD6B3431E364C99ED0323513476CDCEE49BC413E50BF
51EB93563DC03B62F84C5F96ED713F288D109C79179AEC41424822772032035A
40E84014F5BF40948F05E8562C9CA9DDD71F89021BE238E74781A92D64E5F9E5
AD6C0D954C6686C714BF189E78EE47F1530CDB8376E52631A1A26E3021FAB977
DBF01167266AD68A779C0180E034A90CB77B86747395BE885E484BE4028B4093
8BE191D58D0BF85308C72E6384292A2E1CD06130A091F8AF9DC6C3E12B1E4BA2
BB2C37AB4AAFC0CCC7964C06B9EC1C7E3E482EF2A9462AAA7477BEC406468D74
60C91E863BFA73C622618F1D89D241613946E0177016B5CC94186A1E20C23C5D
43267E9713229F7B3A5896ADDF04F89A8C3BED12AD95D5A76D525CB924DAAE38
A27C1586632864BFB5C89673FCA6DAA857FC24F93092BC0DABB09088B1872049
D3BCF72E9F9C30AC20170CEF6742B361C71003378F90DBF88594FC1E65F635DF
10C313E5AADDCB54AF88AE3E6143A006650E83B190E608361AA7E53C7F31244B
63D6177899127A0BFF20E0E400838F7187F06ABDBA19F64D69CF32168411DCCB
87A9B10ADAB7314A3531060A7F6F65AB2F6A67C9F4CB1A12FA19BFE1F50419A8
728D19260E8053E9727A23084D8C5BC95549586CF3CDE6C8C2E16E6305ED2658
F255901255EE35A31905F36C3315A4D5E03F8E298437A247671D83A5D36E10FA
3A2DCE31BF20AB0F2113B8AC6E468DFCF8836A6A666F25FC3B38138891E10781
C4333E9B20B141F88347DAC328D3236ADB4984175AC219EC3824FFCB6325AD5A
8687714D2B58B46521D762E3A6239FFA640CF9351EA118189A2BBE6705757497
C375E4EBA43EA0462BA22B59C89DF81D2ED4C93591CE6DD89C925347C54C1BF1
954B599B6EBE378253DC3090F3C5153BDD2F8706C7268D7613BA64B46E0EFFE0
89CF7FF01562A1285E6B8E2FB4764F9894F4C1811B6354
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E7089C15EBD280E8F429DE136CB4785DE5BECB71FB97DF1E6287495AFE055D0F
FB4B22B347841D36838D978E7201B365DF1F1DA5439DBC0068F6BAE3847E63D3
C9AA412D1320FDD102860A54D8E6566C2E3D729C5907B8A7B5D6B23DA269C20B
732AAB2589536FA3B43E92840BD29870215C6355B2C4B94917B9097031B2383E
53F96997CA1669749E13E6748888952DBF20ED6CA129B7896CAFE28FC60385E1
4A760E98EAF5063E373A084CD6829DC18D063618B10F6A35AA1894A23651DE09
9389D561B469BE5C0F97ABAC30EE74060BE1BCD51B500B94E95873D7C7036D3F
AB60D3E81A470BDDC46AA93CB8B89B7688157950BDFDEFA7F8098A0F0581B16C
51AC3CCB3B6F49B720E8DD38E27D05E801B0A19AE1B5998A9FF51AE0E45D3CE6
524CBF56223468C987C1883B80126A31EEC51093DB28F7C996D5A69FE651AB06
37C908BFBCA1E85DEC43047BB3E45F751EE861BAD6507AA0F6A1F0D86BA9F128
0CA84AA8CF15CC932934227CDBAD19823E65D7471AD16F9AEA07C2B3D39C4572
6F023EA6DB10AF4F8B1F757AF2BCBF9B7C3D39912E288DC3957443E810A34375
B477C2BF78B9B7AB53756337C1B7B6BF7D54B8ED9F821BE9EB51B17D6F00284F
0663CF5156428E2AE9ABB2ED239303AAD05165D1F22B1B030587CBB418B5B278
6E77B69ECA81864B4F28882C75010AF7B697A616F07AA95FC25807B9C3C17866
2262B59FEB7B66B0473396CC9E439029D8912AD08CC15C16080558CFC8D79479
C3228EB0F733C9EE13BB62940933F5289EFF0E1449019182C7C6A1D52CFA7698
9BA699A5CE2AEDDEF7FBA2546A4A4EC86B45849369EFF6DC31B2D4EA09D75439
A59AFE302EFDC971E040A4B5FD37AE8D53E4AF5C970E62CC6A6E4E2892B19449
4051EC109C1224D8E5F98AFEBC1391A91F6507B6A1DEC256507EB05706234EF5
3C5B0DB9453B26D8E66E18FDE28C4AD2C940926480C8042E9E8327A68EA20601
A857DF770CD6F297DCD3779B48DC02FD068A031EC5C94056CF4B8CC2B5220C03
1F8ECACFABFE4730B5537635289B228121B25F984B7490BF7B6E45B4F867344F
D020FF9DB88D399E40BD1E5213BC7A9C81320F1E7EBFBA16499036AB8F879FC9
FC80621F41648BB24DFCB70EB0D2053FEE91CE0F1EE30A39E8D8DDC299487BF3
C554AEAA3FE2A5CF11C33E1039168F4D3B9D5275E103180DFFEA9B3785E3FC1B
371322F44BFF9AA2AEA94C406BB128ACFAFC9BA874A59CC38AC1F7D725BCFE2C
0BB6103D153E02E68C06DB8C8192301DA94AADB1E2882A00FBEA0207049BFE1C
0B3D277BDD210EF516EF5EC58EA43BF476E6278A850E20E4A05467F20AACE37D
EFEC824A894D5C7238EE292C8BC83109E626742320625E63BFB946BB56E29867
0821E303107AFCD92E87F960996480BB6BFCEB4A693ADFDE4DF33ACE6AB2212A
A8A6DB9F05BD1306A6B9458C48C7398BB12B175DFF9EF5ED9D8632C4BD13DAF6
3C16AD8200F58B299AE281D49A5457C8C2676E0125B86FD05BB24E83BEE2E6F3
D5CF6CD895697C4FA729394E83CF18B7519E3EFD08361CFFC39D79D6029B3F8D
23CDDB209F2C7C83E219E09EDD5093998D2178027C3FFF2B85518777B0A1060C
7B81AA0565316795A0C1117C3061C41C8202569D346634D79F17E04C066B5DC8
29F06FDFCA16360282AAE1D922C67FDAB69B1495100A266CF4922D66D9CEAAB3
CBB5F56018E8A10375D427573F928B283B66FC0D1AD66284ADE1ACE12D95898D
7D3B1A96A9060C9C4064BDDAC96EFB4BB1F04982D141E0B9F3E99EA6C89395E0
B8BC1A9146B47DF227D38BC318868F823B89C5E565229C0A93FB4AD3D64EBCE5
33AFBF7DB26D4141962A917A3232BF69F7709939CBCAC79DEC57CBEB2FE96533
1A714087D03F054DA3C56638E5AEFF31C8191A2A9F42422AB13F6DCB734EAFF5
988412EFCC9405ECA810D17A0C84696B07899DED3F22F902E0FE341F7272570D
58563E085605EEB3C944E250BF392F79318C5C01E30E766BE454CC40EC375FD8
47569565645EF4F78F0D85427A4FA14ECE66D8946B6906EA2EB754FA6E4E32E7
4664E00730B70343C6B5F5441700F8AE130AE79478C681544DF9A457F0C2B3CD
9B6AD534B84E2C14100EF59438A73C416F3C7F7BC88348C1508621E18B50AD64
11284CD53C3EDFDD9C36E43ABC8935D7A6E3A69AA30DF6174A5D0C012906EF8F
BE883F46C34B34E978E4AC59D2D6DE257F947C7DE5A61DA0A8D9A9D7E66313E7
B95D58114B53DF92B949DC3D3BC7A3BC87F5F520B3825865D160DBCB44E0F7B3
6433EEB8C4F9AFF5000E7C33F4321D72F8F0CEE2BB6898293813B14CDD6DE562
3FD1C82DAECF2AF8FEF5C225F91F63F2F3668B9643A47C0C64E713EF609DC1F4
1F98F9A21AADE7DAA9B44EF58C6D673E4F30A0E06EA425548C5769E55AE59472
4F22C2D7250626181BCBF81BC6484DB2BDE252A13AE80270E63658785CF06C01
B07A619B6128575863B0875F1F435DE53A9B066F6E58A62EEBF6AB959C2F764C
AF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (mots_cles_ou_entiers.dvi)
@start /Fa 139[44 7[44 6[44 7[44 1[44 33[44 8[44 2[44
5[44 39[{}9 83.022 /CMTT10 rf /Fb 171[57 5[59 1[45 2[23
3[50 69[{}5 83.022 /CMSS10 rf /Fc 202[42 42 42 42 42
49[{}5 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray 0 71 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 71 a 0
71 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 71 a 0 71 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 71 a 0 71 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 71 a 0 71 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 71 a
0 142 584 142 v 584 71 a
currentpoint grestore moveto
 584 71 a 0 71 a
tx@Dict begin CP CP translate 0.6  0.6  scale NET  end
 0 71 a 0 189
a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 189 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.8 SLW 0  setgray   0.0 0.0 2 copy moveto 12.80365
.5 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 1  setgray
 1. .setopacityalpha  fill  grestore gsave 1.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 12.80365 } false /N@A 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 189 a 0 189 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@A known { -12.80365
0. /N@A load 0 GetEdge 0.0 0. AddOffset /N@A load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 189
a 0 TeXcolorgray 0 189 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 189 a 0 189 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin ps@rot  RotBegin  end
 0 189
a -21 216 a Fc(1)0 189 y
tx@Dict begin RotEnd  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 189 a 0 189 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 189 a 0 TeXcolorgray 0 189 a
tx@Dict begin  PutEnd  end
 0 189
a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Aw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Ae 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@An 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@As 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Anw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Ane
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189
a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Asw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Ase
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin { 56.90549 28.45274 } PutCoor PutBegin  end
 0 189 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.8 SLW 0  setgray   0.0 0.0 2 copy moveto 12.80365
.5 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 1  setgray
 1. .setopacityalpha  fill  grestore gsave 1.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 12.80365 } false /N@B 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 189 a 0 189 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B known { -12.80365
0. /N@B load 0 GetEdge 0.0 0. AddOffset /N@B load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 189
a 0 TeXcolorgray 0 189 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 189 a 0 189 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin ps@rot  RotBegin  end
 0 189
a -21 216 a Fc(2)0 189 y
tx@Dict begin RotEnd  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 189 a 0 189 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 189 a 0 TeXcolorgray 0 189 a
tx@Dict begin  PutEnd  end
 0 189
a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Bw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Be 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Bn 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Bs 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Bnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Bne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189
a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Bsw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Bse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin { 113.81097 28.45274 } PutCoor PutBegin  end
 0 189 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.8 SLW 0  setgray   0.0 0.0 2 copy moveto 12.80365
.5 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 1  setgray
 1. .setopacityalpha  fill  grestore gsave 1.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 12.80365 } false /N@C 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 189 a 0 189 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C known { -12.80365
0. /N@C load 0 GetEdge 0.0 0. AddOffset /N@C load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 189
a 0 TeXcolorgray 0 189 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 189 a 0 189 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin ps@rot  RotBegin  end
 0 189
a -21 216 a Fc(3)0 189 y
tx@Dict begin RotEnd  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 189 a 0 189 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 189 a 0 TeXcolorgray 0 189 a
tx@Dict begin  PutEnd  end
 0 189
a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Cw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Ce 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Cn 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Cs 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Cnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Cne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189
a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Csw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Cse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin { 170.71646 28.45274 } PutCoor PutBegin  end
 0 189 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.87999 SLW 0  setgray   0.0 0.0 2 copy moveto
12.80365 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave
1  setgray  1. .setopacityalpha  fill  grestore gsave 2.87999 SLW 0
 setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore gsave 0.71999 SLW 1  setgray  1. .setopacityalpha  stroke
grestore  end
 
@endspecial 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 13.34364 } false /N@D 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 189 a 0 189 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@D known { -12.80365
0. /N@D load 0 GetEdge 0.0 0. AddOffset /N@D load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 189
a 0 TeXcolorgray 0 189 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 189 a 0 189 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin ps@rot  RotBegin  end
 0 189
a -21 216 a Fc(4)0 189 y
tx@Dict begin RotEnd  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 189 a 0 189 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 189 a 0 TeXcolorgray 0 189 a
tx@Dict begin  PutEnd  end
 0 189
a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Dw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@De 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Dn 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Ds 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Dnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Dne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189
a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Dsw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Dse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 189 a 0 189 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@D known { 5.0 0. /N@D
load 0 GetEdge 0.0 0. AddOffset /N@D load GetCenter 3 -1 roll add 3
1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 18.19449 6.94444 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 0 189 a -76 218 a Fb(LET)0
189 y
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Aw /N@A InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 189 a 0 189 a
tx@Dict begin { 113.81097 0.0 } PutCoor PutBegin  end

0 189 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { /ArrowBc
[ 6 2 roll ] cvx def ArrowBc BeginArrow 1.  1.  scale  false 0.1 1.4
5.0 0. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T
1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto
gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub moveto
  EndArrow  } def /ArrowInside { } def  2.87999 SLW 0  setgray   0.0
0.0 2 copy moveto 12.80365 0 CLW mul round sub dup 0 rmoveto 0 360
arc closepath  gsave 1  setgray  1. .setopacityalpha  fill  grestore
gsave 2.87999 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore gsave 0.71999 SLW 1  setgray  1. .setopacityalpha
 stroke grestore  end
 
@endspecial 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 13.34364 } false /N@E 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 189 a 0 189 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@E known { -12.80365
0. /N@E load 0 GetEdge 0.0 0. AddOffset /N@E load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 189
a 0 TeXcolorgray 0 189 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 189 a 0 189 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin ps@rot  RotBegin  end
 0 189
a -21 216 a Fc(5)0 189 y
tx@Dict begin RotEnd  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 189 a 0 189 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 189 a 0 TeXcolorgray 0 189 a
tx@Dict begin  PutEnd  end
 0 189
a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Ew 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Ee 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189
a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@En 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Es 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Enw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Ene
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189
a 0 189 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Esw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Ese
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@refangle -90.  def grestore  end
 0 189 a 0 189 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@E known { 3.5 -90.
/N@E load 0 GetEdge 0.0 -90. AddOffset /N@E load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 0.0 16.66675 6.94444 0.0 -90.  Uput UUput } PutCoor
PutBegin  end
 0 189 a -69 218 a Fb(INT)0
189 y
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A /N@B InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 189 a 0 189 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end

0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 26.7747 10.38887
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 189 a 0 TeXcolorgray
-111 232 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -111 232 a -111 232 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -111 232 a Fa('l')-111
232 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -111 232 a -111 232 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -111 232 a 0 TeXcolorgray
0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin PutEnd  end
 0 189 a 0 189 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B /N@C InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 26.7747 10.38887
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 189 a 0 TeXcolorgray
-111 232 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -111 232 a -111 232 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -111 232 a Fa('e')-111
232 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -111 232 a -111 232 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -111 232 a 0 TeXcolorgray
0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin PutEnd  end
 0 189 a 0 189 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@C /N@D InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 26.7747 10.38887
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 189 a 0 TeXcolorgray
-111 232 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -111 232 a -111 232 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -111 232 a Fa('t')-111
232 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -111 232 a -111 232 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -111 232 a 0 TeXcolorgray
0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin PutEnd  end
 0 189 a 0 189 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A /N@E InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 sub } def /ps@rot
{ } def grestore  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 80.32414 11.80553
1.4166 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 189 a 0 TeXcolorgray
-333 232 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -333 232 a -333 232 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -333 232 a Fa(['0'-'9'])-333
232 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -333 232 a -333 232 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -333 232 a 0 TeXcolorgray
0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin PutEnd  end
 0 189 a 0 189 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@E /N@E InitNC { /AngleA
30.  def /AngleB -30.  def 7.  7.  GetEdgeA GetEdgeB xA1 xB1 sub yA1
yB1 sub Pyth 2 div dup 3 -1 roll mul /ArmA ED mul /ArmB ED /ArmTypeA
0 def /ArmTypeB 0 def GetArmA GetArmB xA2 yA2 xA1 yA1 2 copy /y0 ED
/x0 ED tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict begin ArrowB
end /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def
/cy y1 y0 sub 3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub
3 mul cy sub def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub
by sub def /getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0
mul add x0 add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0
add ax t 3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp
mul by t t mul mul add cy t mul add y0 add } def /getdL { getValues
3 -1 roll sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01
def 0 100 { /t0 u def /u u du add def /t u def getdL add } repeat }
def /GetArrowPos { /ende 0.5  1 gt {ArrowPos}{ArrowPos CurveLength
mul} ifelse def /u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du
add def /t u def /sum getdL sum add def sum ende gt {exit} if } loop
u } def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
/ArrowPos 0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1.
} ifelse def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1
] cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def   } if end
 gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore  grestore end
 0 189 a 0 189
a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 189 a 0 189 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 189 a 0 189 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 80.32414 11.80553
1.4166 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 189 a 0 TeXcolorgray
-333 232 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -333 232 a -333 232 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -333 232 a Fa(['0'-'9'])-333
232 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -333 232 a -333 232 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -333 232 a 0 TeXcolorgray
0 189 a
tx@Dict begin  PutEnd  end
 0 189 a 0 189 a
tx@Dict begin PutEnd  end
 0 189 a 0 71 a
tx@Dict begin  CP CP translate 1 0.6 div 1 0.6 div scale NET  end
 0 71 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray -458 1446 a(Si)g(un)h(\351tat)f(\034nal)i
(\(double)g(cerclage\))f(est)e(atteint)i(\340)f(pa)m(rtir)h(de)f
(l'\351tat)h(initial)-458 1546 y(\(\035\350che)g(entrante\),)g(un)g
(lex\350me)g(est)e(identi\034\351)j(\(ici)f FQ(LET)d(ou)f(INT\).)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(125)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 126 126
TeXDict begin 126 125 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation126) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.126) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Analyse)37 b(lexicale)h(avec)f(des)g(automates)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -360 a
SDict begin H.S end
 -458 -360 a -458 -360 a
SDict begin H.R end
 -458 -360 a -458
-360 a
SDict begin [/View [/XYZ H.V]/Dest (algo_lex_auto) cvn /DEST pdfmark
end
 -458 -360 a 113 x FU(L'analyseur)32 b(lexical)g(consid\350re)f
(deux)g(info)m(rmations)g(:)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 -95 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 -85 a FU(l'\351tat)f(courant)h(dans)f(l'automate)h
(sp)s(\351ci\034\351,)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 43 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
53 a FU(le)f(ca)m(ract\350re)h(en)g(t\352te)e(du)i(\035ux)g(entrant.)p
0 TeXcolorgray -458 216 a(Puis)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 369 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 379 a FU(s'il)f(existe)g(une)h(transition)g(p)s
(our)f(le)h(ca)m(ract\350re)g(dans)g(l'automate,)f(alo)m(rs)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-182 508 a FR(\017)p 0 TeXcolorgray 0 TeXcolorgray -95
520 a FQ(il)e(est)f(retir\351)h(du)f(\035ux)i(\(et)f(jet\351\))14
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -182 607
a FR(\017)p 0 TeXcolorgray 0 TeXcolorgray -95 619 a FQ(l'\351tat)28
b(courant)f(devient)g(celui)g(indiqu\351)g(pa)n(r)g(la)h(transition)14
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -182 707
a FR(\017)p 0 TeXcolorgray 0 TeXcolorgray -95 719 a FQ(on)27
b(recommence)g(\340)h(consid\351rer)f(les)g(nouveaux)g(\351tat)g(et)h
(ca)n(ract\350re.)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 863 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 873 a FU(s'il)i(n'y)h(a)f(pas)h(de)g(transition)f(\(\351tat)g(blo)
s(quant\),)i(alo)m(rs)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -182 1002 a FR(\017)p 0 TeXcolorgray
0 TeXcolorgray -95 1014 a FQ(si)c(l'\351tat)f(courant)g(est)g(\034nal)h
(alo)n(rs)f(le)g(lex\350me)h(asso)r(ci\351)e(est)i(\351mis.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -182 1102 a FR(\017)p
0 TeXcolorgray 0 TeXcolorgray -95 1114 a FQ(sinon)f(il)g(y)h(a)g
(erreur)g(\(ca)n(ract\350re)g(ill\351gal\).)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(126)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 127 127
TeXDict begin 127 126 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation127) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.127) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Ambigu\357t\351s)38 b(lexicales)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Les)30 b(p)m(robl\350mes)h(qui)g(p)s(euvent)g(se)f(p)s(oser)g(sont)g
(:)p 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -95 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
-85 a FU(la)g(cha\356ne)i("let")f(p)s(ourrait)f(\352tre)g(reconnue)h
(comme)f(une)h(va)m(riable)i(et)c(non)-276 28 y(tel)h(mot-cl\351)15
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 143
a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 153 a
FU(la)30 b(cha\356ne)i("letrec")f(p)s(ourrait)f(\352tre)g(reconnue)h
(comme)f(la)h(liste)f(de)h(lex\350mes)-276 252 y([)p
FQ(LET)14 b(;)27 b(IDENT)h("rec"])f(ou)g([LET)14 b(;)27
b(REC)g(])h(ou)f([IDENT)g("letrec"])g(etc.)p 0 TeXcolorgray
-458 415 a FU(La)j(solution)h(g\351n\351rale)h(consiste)e(\340)g
(\351tablir)h(des)g(r\350gles)f(de)g(p)m(rio)m(rit\351)i(:)p
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 568 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
578 a FU(lo)m(rsque)f(plusieurs)g(lex\350mes)g(sont)e(des)i(p)m
(r\351\034xes)g(p)s(ossibles,)g(retenir)f(le)g(plus)-276
691 y(long)15 b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 819 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276
829 a FU(sinon)29 b(suivre)h(l'o)m(rdre)g(de)f(d\351\034nition)i(des)e
(so)m(rtes)f(de)i(lex\350mes)f(\(p.ex.)h(dans)f(la)-276
941 y(sp)s(\351ci\034cation)i(page)g(114)g(l'exp)m(ression)h
(r\351guli\350re)f("let")g(est)e(\351crite)h FP(avant)-276
1054 y FU(ident\).)p 0 TeXcolorgray -458 1204 a(Ainsi)g(la)g(phrase)g
FK(let)47 b(letrec)g(=)f(3)h(in)g(1)g(+)g(funny)30 b
FU(est)e(reconnue)j(comme)e(la)-458 1303 y(liste)h([)p
FQ(LET)14 b(;)28 b(IDENT)f("letrec")14 b(;)27 b(EQUAL)14
b(;)27 b(INT)h(3)14 b(;)27 b(IN)14 b(;)28 b(INT)g(1)14
b(;)27 b(PLUS)14 b(;)27 b(IDENT)-458 1403 y("funny"].)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(127)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 128 128
TeXDict begin 128 127 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation128) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.128) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(R\351alisation)37 b(de)h(la)g(r\350gle)f(du)g(lex\350me)h(le)
g(plus)g(long)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -458 414
a @beginspecial 45 @llx 658 @lly 198 @urx 738 @ury 1530
@rwi @setspecial
%%BeginDocument: lexeme_long.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: lexeme_long.dvi
%%CreationDate: Mon Aug  6 13:15:59 2018
%%BoundingBox: 31 668 177 741
%%DocumentFonts: CMR10 CMSS10 CMTT10 CMMI10 CMR7
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o lexeme_long.ps lexeme_long.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.08.06:1515
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 698 2017-12-30 19:08:50Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.28, 2017/12/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A3B9670C67D7CDBA4D5421F2A01241CED719B21FD1FFDD0A5C786D8B71
D6A0C183E57EE02710004BA25B47CB338824D7560F40B382BDA4338A2C02B3BE
B1BFAD36C649323F30FAF580B0BA100CA24CA32174B1AE755434C8540BB163E7
1AA422DB553D268C70631B80988182ECD910E31DFA7DF056AACF7D25A4C8E021
0A35ED58DFBF41CB08EFD4ECD6E80825F023C44738411DB2147CEDDEE6DB4F6A
F517976F88DB803E78AD99028EF2F2F6A93C43F1388059248EC11C62D214B0CE
1348D537A4E62C2771B6F0C49281CE9BA747224A39319AA0BDDC5A3575A75092
F4A78AAC81F189EF542EA849C6F5310F631957E6CD4C7720A4F5FC4593B43F7C
DBA6A7E92933EE6BE8EE100B3E411C70ED2AB5606CA0300F0CC76835CA612161
2D387C89EFF621E4DE9E659E463F88B99217117CE735215DB047F4477582807C
3613F962DB30F3D86B39BB351BAD24611B41F348377A602A2D96D581619FF1E0
462F8563B66E0A9510F7216D5D508AE342DD08A8A1226674657F8B55912690BE
8D182B1B87239B6219E50ABABB64E570A8A58B8504D02C5399ADE5B5D1EFB41C
E47D33596C37EC7F5E162697DB6AE7F75F36AF59BE01972D20F15455C48E0ACD
54E11361CE7C3808C90A46B388B3500E6ED9A47D25701CC2D94A4C86B4F1EF41
EA9C1152EA94E519F4D6BF023881EF20C058DA88EEA3AA27F9683C85F2843709
99DDEE77DEB4B93630BC0C734BA661BD0159E7E046E29182F0498A1DE1A31F32
A6463AC6E5AE654C23E3A51F8F17DAAF8EA752E967C518D0F8B4C8AE108675F8
97998E6F19CC0B70FAD2CE2CE20AC7C2F47266F35B0235E2A1F3B74E60B82951
3429311795C090CF2237D2CC5C578F9F8F573F469CB1768C28C863E20261C95B
4AC22395266D3E4C53FA92BC0343ED91C900553D4348DFDA79501C5FD0BE4882
DCBA26E5FC7EDDAFD9726AC0661242E7FC22863716E3323483156D2C62A3F9BF
45F942DE04794A552CCDB3988B348201D222949F7E3F96BA9033B61C6D1FE7C4
A48D29D419AFBAB5CBCDFD62360DF1F86E1B1EB94FF0D204A01DE3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC89513D3FD4DF6BA2B619CC53C1F08E760F20EFFD13F5D5998A4BE21D
626A9BB383C06934B159260F0211E159428E4B5B12433C31376CCD717ED3A238
735C4374E30E14A0EABC6B16472546DBE0CDDDF28AE13A24D41E13797E3650A5
64CDA763026D12636388B735E18A6F9A04EC3179CF6ABAC3A00F0E5DF1E3E4E1
9B6AA96DC26F84A19966B0D0132800629B48540D0155C6A0A986DE799B0104ED
309295EAB64DF923FC9B838730364D5DD262AFD27D7FCAE60B95E7186A466387
3BAC46BB44A296AF5DB86B31099DBDDEB69CDDF0641934C5CE2171211CEB9777
3587F6D85C0736A0BF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 45 /hyphen put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 101 /e put
dup 108 /l put
dup 116 /t put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB287028244A9F9FDEF8C2B36DF918584
C497B6EF38C81511BA8FF40D2167F61BF37EACD032AF374374666771E209FBF4
909749EF2864DAAFC234CE96AEEC2F362D222A5CEB4FEA889E98D7E8EC3D47A1
B791DC4533400B7F74D8945AD99BE46F67ADE1CF852DD818F07DE0AA5CFA497E
5760A0B5A7AB9916AF83CC04157B719DCFC9AF53C4BFB68D68E96228E2CB7825
85749780483D682D172A2CAF15C4D2B23690A853704241F8D1B2CF663368177B
9AF0F93491F6DC3F1E05A2048535A3660E391EBFA7E582B050E80376FA16D597
879F762BF7CE394D18DC76D2063012EEEF4E78760F8A25C60981E6372E49D716
14BB49632476F2CCA548F5131F2E9E392F4234435AC61CF10377BE5E51E570BD
135E3CD4C130FFD5EBA5C71476819A2F4556AA437BAD036E1931583807EE0A93
E84E169855DA91D630F30DF34012DE1F4C98E20602B36CDF7FAFA1C93E7C6C1E
357F3E111E41704C0F8A68C95F424C6DA581B49C709E1E98149FEAAB15DFE7F9
4023EFA8FC9237938FF8642BD551DF6E19A3D52FDFD918E3406C93C55879A8EA
02246D52C93A3DC8C4F1D52CD0F3BDCFA7E4B99AC44C57FA74D12663E6DE20CB
B0AD4121F47D4750A5501018DB4BDD5B64DF6A6F8FA468B307BAD18259089856
4C10C3ECB18967E8E6D0F6C249D0492D0BFC40D8DF6B9D4B8299B2399045A14D
4182329F95AB474108A296063BF7B01D5F186B2AC4496C2624F6F7E45CD885C5
E032FFEA7C337BE415936BE214AC88BF14CB44C210BF44141C72291EBB16170B
B685C2140498296402770DC7262C71EEBF9EEE19DE88C3656A7D9095905AE89E
0904AC946EFC2DA66A20012FF6DC6C558739DDEBBBFF6170BACE74C2054F7793
E5227B06A188677603D1102A8A685ADFDBC65E34BE33876824CEDDC18A3BCC34
43683EFBE41345C5E5D32187979E9CC09256FEC0FE2F17E6C5678B864D443F5F
C6E21518DF676CF6E46A1292A838C381D65A6E5C01BD4CC597B395DF8F165DBF
F17AB9A8B5803058BF958D3986BF189636037E95FB425AAC96FCE972BBF6FF97
0DF619B5B1C26C512FD8E7AB105F0C7AEDDB6330756507D8BDB3F97266E6A310
40AE138A82F73DA4C509B1150ECBF843C38A4E32C9EEC6B7BDE324ACEBB94FF5
664A8B29A07AF0C8BA954FF5FAD57D30081F251BC9BBCB4D070142743F214C92
0D15E17BB36361D35B0C05E68E1C0C20518533DA77B3495C36FD81C706C8AF47
39A2E2EF9F27A0019AF30A4F75579AB710BC75E0106F5F94BDCD5EC3826DA194
68F81BE28C533CE73BE753625DD6DDD8816291EE77255318210EF27A5C409A3F
6AE1F1D3BE143CEC0C46F4BEFA316D4F0372E77BAFCFBDBD482F694B18AB356B
C3A229F269BBD7B5BB8B6E4675F90C9189297BEEE196F64F85C92E626F78D80C
2E01B4B2C7BAE40BE80A3AA907676CE557DBCE9E976719AE233197E727D1B3EC
66EF1D37916398FB8CE955E12D8A89ADEB16AC87E57B85D56DA207C999CAEC4C
445BB1B0B552EFA1FE7F38132B7E187B4F875CDC2D0810206BBE5A3434487D47
C9849D74C89F5D38D639C22F88B276E5A74C09274CE1CD02D148724B2561AB1E
54A672AC2EF02FFF0C278E99D4E81BC6A80EA8277251A46A054E3E9A02F18C58
4BF5F2330AFCE8FF92E2DF9B35F469AC8CB879E1A1C18C8CF9E95991FD555A21
5C21DC2E8637989EB6EEFC121F01818FD4EA8182D993627B44B95AE19DAD78AD
44C7C99DD91D71CC2A3E0EF7401209A24A31E867986EF67FFF02FF5918214A94
887DC1FD59DC91EDBB7F76DF9C9448A778F4D62307B2F042B703A42948F1F3BB
2DB772E57DEBE00CE4F99647DD358A674045257BF43591473F853FE3A2A43B7C
C317DF945DA8E831C6DE24F6B5582D77576781FC646BA90ED0886064E24F3896
0B7FF5F735AA82D722934E2A1DCF858C068ED009D8BE872C4E07B72F3DA93330
C41D79D44D2220BD4EF12017FACD410123C239F97E12B1FD37C9AE0B707390C2
CBC0C271B9B304F156053EA04F42E11A124CDA5D574307928A5F3DEDB431CA70
80B554C32DE35EBEA2C0396510E19C70F988C08B0115A7207783CDAF3688E575
64736CA6775316D92B8146D72C0B4926CCB9B73A8847B4EC479380641C1F340E
5D43D0F9DAF13088E1BC59640E0336424602EA4A378E6FA917B3D0F963892C7A
014A3AF8DD342F6BD1F1B33A03BB379BDFD1FDC40E678BC42FB3835475F09C7F
F8DA2355A2BCA9632B90ACB9D965245EFCAD21412A2BD7F4E0CEABFE19A44B5B
431DD849045A57D426BCDA10EF92053C4E1985A755EB3FBC09E53BF0612E5EA1
5FDA85341186E8DDB6B6377CBB579BC3114709CE7A4AE0504B68D93C60B5E3FE
7FC7302FB00EA1AA84238514AED9015C0D39D8A73FCEE1F0A8EA03E6D5115D30
756E21F7A5908207965CF783EFCDA84AC85A475B7BA2F63B62377B6C445D4C49
0FCD0217C66F5AE4C45D6027A55E9DE29AD3F9E0FE139C77FDBB0BA2BB37F14A
856AE2D66AAF567F747EF418066E7EDDA2FBC8CAA98F293DE547CF53BC1CC041
AAB1060481EE275D501E09A2C3D98692D2F3894483F4ACA587722B6C4D482154
5DD99DB567D580AC042E98DAFDDE320403249459230F54C1EE45236952E3B980
405CB153F85AF929EB7780A5E9AEF6FBE53B7ACE751EC077E16DB1521E0DCF05
4D00099F7FE8C94FE894E81C98FD67930BE9E51B038DCED1E0BE9DEC97BC124F
599D37F718B7AD18CA2361FA78D84D6300ACF1CDEB916712D7F45211DB6EF3E5
FF3B24443F11044C842F0E3218499582A93468F28AFA79C193EBEF472D7F43B6
6ED0C296C986CFF96C1E14962A7CB7348DBB86DE40267CBAAB988FCB160EA135
BF1BAC32108907B384BDC09E90F148F87FE2216BFCD69F67892EC5AB8F56CB36
5D05F98041C13A2A98FC7B097B47EE089938A962A0F6EFC533C59104DF5DBD47
EAAC079284A4A682F2E0462C4E2EE2082528E491B045D57D73AACD0D8B576F1E
516EE9B19D3640BAA8969777DB728F12646BA2DF4B03FD7BF217480BDD11F5A0
0FC9D458E146FB587FF3053161058AA3223E65BAD401F5D1B824AD1E11FFE4E0
3EC607DEE3A8D70BF4499A67CBD43D5C47D208DA44F8C4A1B81F0ECEF879900A
70ED129AF438705D08BCCDE1BEC39E89EFE61802CA2B1971A8777BAB28F9295C
E114290BD5F56AB90887C19B0772297C00C839CBE7BCE88BFAF0061CD1339372
0C2493DD50F4E9BC879FC03B3BF402DAC4CB7D3D87166DEE2F53549D9E4DF9BC
144DA7DF3E71287C98DAD6535BCCF0BFAFCD11B655E67EA62D10681345FE977A
7D225177F5448276E64A60F425FA5AD62B15D779CBC70812FAEB74092A527B6B
C372A4ECF23296F571DFF068E5180288B39107260EC9B52BE39BD3F675978A3A
BA12AE67A9023415EBB70EF14581B8174D08B4EDC3BEA0B4F113D83149911CCE
20CBE162CDC3E5D3ABF60E294D3DD9F8D6F9325B0E4FD96ABB9ACCA480FEE14E
147BDB71F6B84DD11D4D772B07A9FD4205A6B2746FD8FEDDB539146D438FAA3D
5F386C8D4FFD28D5439505B7E13E25DFA582C1A61B1637721DBA237B650893BB
EF3C7D9A531AB7E159815792D442B1FCF05D3119BF0494A24A06B39E50628A40
6357A043AA00A72027DEAFEF75E53DE4262F016210EA526F47970930E78585CE
794402B683E81996D74C8E576C7573B5DA84F17CC6F0531D6C22F0A40DB2638D
5B3AB6BAE34D5AA29484887206522C1A5C18D2D2A90CCC1F95C8CD68C7CD6890
BD53AB48C9280C38D1F5CF10386E53877A5309A0040A068E79E37893F29191E6
6A67FF70E23C56AC3D4C883D56FD3EAD9FE4A35F4DF63EB6FFBB9C6A74BDC0FF
7751E41D6ADD0A8BA44C50E7926698304513712DF122D1B63B1399F79C8A3258
AE6C92BDDF6C9B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS10
%!PS-AdobeFont-1.0: CMSS10 003.002
%%Title: CMSS10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS10 known{/CMSS10 findfont dup/UniqueID known{dup
/UniqueID get 5000803 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS10 def
/FontBBox {-61 -250 999 759 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS10.) readonly def
/FullName (CMSS10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /D put
dup 69 /E put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 84 /T put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C4488BB4EB864B48
63941B9739638D2E6F3CC778582B46AEB4E466D89D1C211225274356A4BC90F3
274C6AA56E200249B7D0949A3FD4185DCB3E5286910EFD7CA72D5D8E8052C96F
388D12094B87D3705CE64459558CF024667C0FE96CBB32B0BC9E51037D7BD62B
E4B05FF99384E71D78441A79B0B1DBA1CAE02434A9FAE46596FB86B873B1670D
AE0BAF516445A0DDC127F8FF3ADA0B10EC30A9CC1F7E9248828B5E8AB46C3FE4
154B80A54128A08777F5F9B8C519C7E3B632B3476F007FA156E9F39FBE57638B
4214CD2BA79BA9DDA0F4C073AED814ABCCC2F7906C57A872C00E67FF03AC1200
29DAB92376422FA21C67CA98BCEB8C431CA2D3EDDC16972F84BF6DB2F705BAB5
CAB39C82D139FB1304B9E7BF1F6FF447596081D5690B1519E468D6BE49C329C5
C9C809023EDEB9DCE4A6D52A8049E0CC134E8B41BFC6558CFCAD3D9D2773EA16
131567AE6231B3235869767A1E7C1FA6C8D6FC1B276CBB1CAD14D376188C9682
302836A9290E587D4225EB8BB1DBA2C4580A81FACFDA197174FE948CE757C575
F23070FD84DE121955D7D9307BF986C5E739FFFB6CB76822C341FBD9FC2E3378
AC9332B40C07D5B8745D74E30F1D719EAFAEDBF5FBC40D0546F69A66072D8A49
28D2CC2E76B9B1EFD191E0BC7510C2C8761BD92EFCFDAC263342A01398A56D18
121A591FF5CD4AD8B25699A7897E60BA940336BC17B9EC9F97C2464D031F958A
A3548D0C97C50C580B6EEFD0FE8330EE2BB0D2E7FD1DAE33448953544A4B1C5D
8EB57798D0ED4B22909FEA78ECDBC4D8A124DA05B9999242D68681017285A0C7
69041C1F79442279FBE328733EA0A6694D68BA89739FDB9297BE0CF1808C07F7
BBF6F1538DFE084EC8C0EC24D883F6CC08A51DFEA23EE920F44BA55FFF58E960
C7BEE551FCD2D5814DE7E3F835608073C2CB80EC57100CFD484C837881674E92
B217F4D11165427DACCC29C129005874C05CDE5FBB2D912368EA2B98C45AEDD8
8A0D2493F60EF36809C8C6EBBC7856F6656E8D398BCB29DAACD4F7D4300A0B01
161CEF51195D2C58DDFBCAFC1C03F49304ADF02789889826F1E20BCC14827565
F2A45CA57DCC61B52E33638A0C6C5A59B145E82B82571DF1806EC40FC0E8634E
A34A791B1325571E19F3AC2EF6FE68A14B0ABEF7EBE0EDA3942E85E5AE967A14
0C5AEBFF2A36DCA8866700CB7082D2ABE470864C44AEE1F6D180D511304C8674
D02FAB12A7079ABF96E1CA3CDF9D75532123E87663B1D524265AEF63EB5C2169
B67A651A101E1C7EDB008D3DB06DB1FC1A81B41B291D6C4A58FB57989FFCA434
DA84B3914D1D80B17AA3A55A70BBC06C49DD5F7DDD03FEB0055088558FA192A5
261477899857CF598DB740E82D035E84CF17B33048CFED2DCBEBC2B75CCAEBEA
B6C5AA1C6978FBB36ED98D9047028360ED430A0AA69AC85A8F83825EA649E1B2
64B260197B06A24A1DD969CEEEE136FB046D713D0630B246BD41CA285F076038
F7F8431913BB9A3E70311844D4C22AA446E3CA217A9DFD75A898997130269B29
AD4AB7D9662856E677FB2DAED7078639CF31C6E6637C74DE2B5D0ACB88BD61F3
CE3C5D56D3D4B3EC1ACB33EACBE05E53A133EBFE93CE6A0CBC8F24BDC5B31BBF
5B3E55D6B40B1CED389076014667E28BBBD60145A06BDECEE8011A2C6F06D091
73767A8045CEF2A110B614149FEE783A2351FB2938A9F73CA406538EAD82ACC5
A3DFD3DE00221E1B4EA977AF8C89661357FF7D2F1FCEAD6CFC9D6AD81F95100D
EA1F328249AD84AE849220E6593D45015B4D7C9527F3063E9F6DB6E572092A1F
1F460696227D5F0FA5A5484B1F0D8B4A35066451663BE448D924DBBFD388B6D6
D7CFC87C9E75B7CF79A4C9207E29E0BAAAD7FDF529B860F7731EA978E335334C
13CB2F0A4250F5957B44CAA0674AE8356F586A24FD137103973B9A1FC31090C7
C84DC5D380404BCDF3FE20C6F74FFDD8BD1DE845E99DC6FE09931F003834ECC8
08C5D962070B6C44F901A787CCEF048A2C584A2285506B4D4E82B1BF130E2220
B6C8B3240A4CBBCE16AD3676B23A50B75F82CD88D1B8F21D30A12716426112B3
23DFDE5A348DC9DCCCE5BB5DB5433A5AC125DE1229FFAAE0D8319B2929986EEA
56A93BA1FBDBE617F30852A3DC8C712DF674169C6D656F75E252187A085B2788
2467CC4DB08D48EE6A98C61BC55E6EFB1938FAA718802B7587B94C8F1477E9BB
DCF6E02B5E67FE3AD9D87C321CD9BC0CCD36B9C4BC601E6BD552EAB8E1C940CE
3A22F3C2501C3C939CB4F17CE97566F0A04602D2A22A05CECDF4A49CAFD6332D
5870E1F31AAA5F86867F71610CDB83E473B9D20BA00D8986D7148E0EED03865D
9622864B52B09D12E0C5FCDD023D29D5AB1CACFA92B6FC14FC84E95F407861D5
2BEE3301AF399FD7ED04DFDE6679A345A282E7FC08D47E3FC8969D3B00ACD7B7
F8769647D6D4F4106340EF739583374D023C2702C48FAC1B643B5897D2D7DBCB
73257712A0FDEEEB98A021D218CDDEBBA34687E23C4828D7F96D1ADDFAED7EA5
B279322E6D55FB486AD8F3A8E7B2C67915564FE56F0C9277A06B29C47FB7D007
11AFDDB3FC1B173B4E449CC6B198041CCA0624D81B4840FE5B63BE72157AC6E7
03E5E95D2E2CE2E40BCE8044A8F2AA45F855484A891B9F0F8F70188AC66A8DEE
F4D656CBE216E6D9AC33BA8DD0685D480833E1226784469A221D9FA3CA600AC7
5574B5226649A9C48CCB43339942FC9010F86BAA2D181AEB487A92A96BF2EDF1
60F3B93FDFF4137A25A8AEC5ADF8613019CDB103DC4367EF3D8AEB4FED0E6BF7
622AE0CD3CAA0321D26CA4280CFB60D08D9560AB8AA5698231171B881BE9A27F
BDCF3162134126212C523738D221AA05E31CEE73D9D40F73C450B6AE2C1E70D5
C37162BDF55943069923A290A6C720042566E55A21CD81C460818883AB016C16
8FCCD1255A66977DC1C110261D7642199D466DD3D2493A2D47694F842241C474
1752B00DA03E69CD16A8A14BEB8A431A315D19A39BA978E46EB1189089FEF647
F9DBB58AAE6B3FBD475E4DCAD241A051DD100ABE81D40ADF18A4C50F53BF749F
D6F7C8E02A5665B4AD18DDAE79096DD447F8BD32C68F9F97F05E0071D9E9AFEE
257B96D48ABD9920418E17C8F027E9E975E4A08DFB1988E7104CBBC1CAF356EA
7750AA7110BE116AF1BA69A94776E4356573B38472A8A1292C63701543B0F315
611A0E0595B30424A1137478BA6F990AC7C3AB4DB69E75C222B617F373C521D4
246E954E9857AF59D1E6C36412B643733CF5E1C90389EF0E5E0DA55D3AD12E97
E7630C315F72A03CAF22E0ACE3AAAFC1D496CF4E5ABC49C2DD5E264BE7EB2698
AFF36089B5DD2C53DB1C1FCFBE1E89D41A95DDD278CEB29DC85FD1DB8B83CAB1
EB37C531E9BB8466ED6B8B60258D3C355626CDA43A32834DC89DFB11E5FC6D68
0F78CFA871113DB81A1690250A6F842ADA15734CB6DF7C6ACED6D8D586BC4E1A
94EF3052FB0F8B9454390B882CBB6E135AF1F9C777AC362C2A758C3A98117120
73C6E2FAFB580716D4B2889A4331CC658AAE996245685B973D9C184541385680
AEC2956107DAB00230FB39BE98D3CA898D917E5F2088F26CBA4F8B5B115B6443
8753331233B10852702FC26D9DD4C990C13CE4D0DCEA23D62A826A4B4FD16070
5F3638C0A50A3373A33FCAA6F3644975AFD0560EE5F2D1CDF08820373468E4FE
6679A229D6955CFDF7ACAA92A87E6D8571AD18CF59F84F88A674B2946FF20A28
B9798EAA22442415EB46B9498DDC0F4BA6ADD347AB43E9293CAABEAE80127378
129D5DC69F6DFFBDAFA5D65580239E8EDF6833D0DE6DF75F0FD090A83CE0974B
AC947BABBD1B1C7194DDAEA37B0CAB477ABF9433FCE0243C8D308409427D1DCB
8EE4FC36C7E5CEE104904B520B3F6E677A5B92F694BDBC2C799991667E0EC14C
B95EAE7DE1854BF4542F05B4AF401CF67FC3E46EA5A0DC362F3CF177B1796DA6
753AA803E724D1721DDD1BCB0C12CE0859E172D2A370C3697286F80D9E138AFD
A0EE016805F847BD30D11D8B891E54C77AB51A7CABF76BB14B06153C7F811FE4
93FC4B7CF161051A458EDF767DF94F487DB939A2740B4242BFEE234F75084DDE
207E84533004B933D43C712F0C71DA4A00FFD6D721EBC93AFDC4200E3B8DE433
3ED3E1DB799BAA27548ADC853AFF5D9D6BD92D644E3CF394789C99D9DC054A26
7770AF5DC5BD6563929AE11BE341F036584DD573D3F43D9D975201EF77BEEF80
D1EEDD1D4AD5D4D4DAF6D5B9D4C1736CB111D6FC74C236779C0ADA430323A825
09EA8D0CB1772220AF28B93098BDB36913159208D1B2D7ED45808BF7B686419C
5C0E3DAB5BC9830FDF3B494D624EE8068BF6F5212BD69EF466B9A213047BD105
B848F056DC544A8CE66C546B1A4DCB4BA29CF0EB4DCD9C2452F22172AFF33B29
E97E12D8F0D312B03BD9E5377BF0C81D884F1E79DB66E8144F106DFD2579AD26
C693C5B68F3AC46BF0D6281032D4D4BAEB2243151AB1AC0BDA2ACDDD4D590C90
F29B335DF8F57DC593DCC081FB56924028E3161AC4865B49D1B0F63F5EE866D9
7A71171C09B09A44B0E32F03494D9EA63F3C89F5E772BE25A6557F119299E989
99BA041694ED805AA4F3BBDF00D88171C9D43A9085A287A36A1F0F9386F2A98A
96815CA51F06E1CDF20B757983C5FDF4003F5438232159F325C6335B734FD982
1423BA77D0EFD044381AFBD0704E3DE95D23A70E2428E9AA355A9A8A25C6C74B
48488C14DEC93A766E112D74C83576ED355F17A809E8D3F9C65C4E3E14EF484F
4658DFB57597E2A4461D8044E95844391C1275D63F282B37888C842A5151937A
45007547263D70195ACC018A373D498B88C5A028BC66ED96A343EEE74D61EEB3
D9472B6A549CEB8699F4B35154A0E2ED22867E4F9E4A76311EB2C9F9078FBA81
838EA49C2966BA64C165434DA3093206B70186BE80600B891D9979F730FDC794
5DD6D8B2090CC67A634B719F441092A10C447A86ADB78DAE45823ECED5FCEADA
ECA52E363D913D9EFC0ED98A5A1F823DDA3350EE27F09C14E4C7298CC0FB6200
DEBC640C68C82D70AFB7A7BA668F1D7948686206884736CD03D9F6E6CF9702BF
E3C932CEF3CE07FBBFCEC0476EA6E8D5D4C5C6450C8FB236B89BB82D51886240
5BA7462F50A88F69228DCBDF26B7250E90B3DF8E94ACA1CADD9EFB5C73EF9DD5
46052314D445CC92512BA231F79A09A2F0D91976B160B8C9BA055DA4AAC1300D
491193EC66A6DE12BE01EEEDBC3A2291DA1F27AB76596A236B75E19FC5F1FB6A
DA1AD835CA08B6CD03B97B4CA1BFCBDD2500BB09F1A1B0438E4A759370EFA318
F062BA9F3D352572CE232E6FBADDAA5363807D0DC5320B807FE5485C8CB09B6B
0BED9F5B1300FF370252DEBAC9DB25CE2EC494E8EEA45FC6604B3C104E81B287
EDD49F3D7430EC9176A16B4FCEC5DF68DCC11ADF90BD5337E2E4B59BEFAC8298
E5ED2C7FC5928635420FB1955251932713236DCE28012C86F63D12AF1DB634D0
0B8CB8992B8723548177BD6822A808FF221A9E38B0DCCBC1F3430A9BAEDA89CD
ACEBBDD8CCA5E17F1CC37E35A01E058BAAAB6BE7124314DA19962BADB74EE73D
8FB13FF6AFB6FFF97926CA045B62B98BAA753AB0FC78B881D3FAFF9EE2FE918C
8EDBEF87637F1530E3E13AC090FF81F4136E08D5F3734327E643CDF621278741
A17AEBC56E21217888A6C8B5ED4269731910E7E25693CFBDD4EB4A32698F2447
4C45D73E810B627D8719E4E34D8FF378F9B68BFB149AC67B3B1E55F20D097FC1
AF74D46F5A3923C63DFEBFCA210F6B257F5FF3F2AC34CE41C15C9977634E473C
2235295C05C3DF6B3009C7854BF11CC87471CBE085793AF9C5D05C5479B9E780
14A5A6F3F6DDE5A18243DA15732CCF26ADE40C566DBC3C62B71D46DE87A12C6A
647CAC923254E2E74AF882DBD5C9E108A9160393C5CD12566AF7C824EFEAC56E
6F05B92C73A76824C5ED1735BCBAC61B98D509250C854CF1500C212F574D18D6
4426B8510FE9785B814A70E75C9234D42483E736D0689D3561E8EE5650F33A36
D50127589401D267BA6442E8616E2CDB1F6691D3FC4A2A377E5E154972E890DD
60CB463E9EA9A6EA61087DF452FA5646F69BE879337EAA0F5DA4438FF0365627
4E3B16851C2F08E976FDA27AF451CCEFED00376FC3D6E0C160F0BC19544DE289
BECEEF9A067FD71D54DA3A4F73F06E2F522BA07551296214DDA47B1BBB1212E0
1100ACB5F65FD30C655A3402C83058F8ECFE48FA60B6A3DC86C4996414130194
6676EC7F37454023AB53E9D9EE60249ABF6953E76DCE3123DD268BBD492412BE
65D7C3E5A5E483C381182A8F19B506F0AF6DCD55532B89852D1D96021B22E9DF
D9D072BD7DD4450577E658B433A84F92752B260AFA2EC4A118747CBFE36AB7D7
6D5DD96A119AA1BDD0FDCBC3AFDAE5FF72713EB46759A06CD09B5CFABCDAB0E9
85599506AC07AA525978AB157496163AAB387F079EC9FA1F9E91B9C2FBCDC9EC
7027D77016760539AC03F1C1DB242D28D6EE946C42DD2262D82ED48C3A839853
BA977046F0EF373AFF884AC3112D2FB319421C3165DFA5710BFB9AB9595A10F4
9D05704B9E22137CF27F4B2DA9CEF6D8801D5F792969B2E58FB539B8038DF440
6DE20C0313A7BCD16F279290AD6859B0E657CC3041C7928CAE35B9D3A681F2A3
2D40F8EDAF1127E754276556C95E1282514B6EB6E43FF4F0FAFF28C715E3F39A
374415B62C1F5F8E31E006D6ABC736057910A3729AC60360CEE1B2C8D9F77336
39CAC45329A372205FD551B9E9EA5082411207473D9D90E76136AA70180172E6
AF6EF3EF6B38B1906B904BE9BD5251EF067738840C28877659B649C6C4CA328F
1BEF8A9CEC2CB062702F58CC0B8D2D097FBC278F9FD894E10ACE1DEC4530CBF8
E4E467B6DB9C596DF0C3D43E6AD70F30B733EEE692C2EBD68756D0C16E1F00B6
AD011B5DA073A769B53C2DA2E7C9B7ADC6F551BF4DF4C39C66443692C3DC62CD
B1E094013F364D04BE2FBFCD1C7B2836180E9022E0434421FFA4317A50096684
CF0B8740EF680F27F4A84AAF2AA92C64883BAF57BDC60C6467A8D4E09E6316FF
9BE73053045E5F3586DA3BD1298DC15D751913FB1E72EF80047F6B33591B97D3
DFAD34EB224D64EF60F5B4ACC6EB42E1BE0CB2812FF2F3C264AD2E44F5EBA441
670CA0A60E73176ACDC4E42E74F8F489C73481EB5D46A61FDA1C0FF9F8844DBD
99CECAFE2A72833E4522981FA13713AAFAF8F121E60FAA6F379B2C8874CFF23B
8FECE70654E5855E525A403700A96CF7F8111BF2B58386E29640D82F1DD86900
E0E203F3ED554209CBDA2A61A5641D4B39D98C5C43D4575648D06BB82B6C4D4A
F043EC61B17C208CE8B4F43A7BCBBE588A3D13A183D79A47404223037FCFA4F1
DD237344E589F161BB9BBF3FAD2E28749350DB9A74C09E894BBCA85B82E704E2
99788B24642A7D0F0FD96601CF1AE4819EBECAB89824A0DC1C03BA4B546ED36E
DABC8D49CFAA53D2A9A5DD6B3431E364C99ED0323513476CDCEE49BC413E50BF
51EB93563DC03B62F84C5F96ED713F288D109C79179AEC41424822772032035A
40E84014F5BF40948F05E8562C9CA9DDD71F89021BE238E74781A92D64E5F9E5
AD6C0D954C6686C714BF189E78EE47F1530CDB8376E52631A1A26E3021FAB977
DBF01167266AD68A779C0180E034A90CB77B86747395BE885E484BE4028B4093
8BE191D58D0BF85308C72E6384292A2E1CD06130A091F8AF9DC6C3E12B1E4BA2
BB2C37AB4AAFC0CCC7964C06B9EC1C7E3F16F7AAF86D31B08566DC4DEF37C43F
29EDF6A08E9AAC1E5B3CA6D1CFF3BFEAA81F5D91FC44A01988A3F5E2747FF33B
9547EEE2B94EBC03B2B922638FB8B3E35212CACFFA454E9F7341735216BC2C0E
DED45D9D5FAAC31D83299B2EEDD2681D4943D894C5DFA60063EAEC8D22D2A62B
3251D7788DFA6D82F86A408D878035C274E22B7751F71BED091FF29F0FEBB7C5
9A47E2641632E57D400AB8032E2F857E267D5C064B339247D0B10E723466A4DD
7C474CF233B2BA843DD548668CC1BE596C158015EFE1038F9BA0BEA4CDC4D69C
938637DEDEF8190EBA3705B2DCD7EA917E60F5ABEBB5D5F896D95DB9B45BFA74
F9D4327B1895812EAAFE1029381B6D80ACB6B97A1CFAF19C6C8B4BB56347B4B7
423B89940D17EFF49A79EEE495D8E6F3D2442C6F80345A4CE1343ECEF6BB7112
D1514712A29D343794DA60DBC5D77B530EA80058A5AD2ADA912E163E651A3B68
1657DABB525BFAD04D4C13BAAA668E66071691577CA885769BE6E4746399D5F9
E04E9B3C56A9EDFA911540830CDB1FE332AE7F4F79EE97450D65967DE339AB78
821C7954AE4758156B698642CFB7DC6269747F74A6A860D2CC6F72F9439346D5
9C0A4ADE51C502E72CCB62F7A33F4F2E21B8894DEB1B7D5F72F604DCE93D044C
BBCA27448602031A3CA5387B20035D090D2CD7355FB93454EB5AFFC96CB9E4CC
F8BA4DAD3F99E09804622B90D953E8FF9BBB416FB3FC671BEDACE592FD1BC591
1C2CC9469F542A3F4C7F0FF27E5E87DE08F4A6EBB46ABC310636E0CB606E93F2
C7B4A13AFDCFFD4ABE6977E79AE688BBECE3E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E7089C15EBD280E8F429DE136CB4785DE5BECB71FB97DF1E6287495AFE055D0F
FB4B22B347841D36838D978E7201B365DF1F1DA5439DBC0068F6BAE3847E63D3
C9AA412D1320FDD102860A54D8E6566C2E3D729C5907B8A7B5D6B23DA269C20B
732AAB2589536FA3B43E92840BD29870215C6355B2C4B94917B9097031B2383E
53F96997CA1669749E13E6748888952DBF20ED6CA129B7896CAFE28FC60385E1
4A760E98EAF5063E373A084CD6829DC18D063618B10F6A35AA1894A23651DE09
9389D561B469BE5C0F97ABAC30EE74060BE1BCD51B500B94E95873D7C7036D3F
AB60D3E81A470BDDC46AA93CB8B89B7688157950BDFDEFA7F8098A0F0581B16C
51AC3CCB3B6F49B720E8DD38E27D05E801B0A19AE1B5998A9FF51AE0E45D3CE6
524CBF56223468C987C1883B80126A31EEC51093DB28F7C996D5A69FE651AB06
37C908BFBCA1E85DEC43047BB3E45F751EE861BAD6507AA0F6A1F0D86BA9F128
0CA84AA8CF15CC932934227CDBAD19823E65D7471AD16F9AEA07C2B3D39C4572
6F023EA6DB10AF4F8B1F757AF2BCBF9B7C3D39912E288DC3957443E810A34375
B477C2BF78B9B7AB53756337C1B7B6BF7D54B8ED9F821BE9EB51B17D6F00284F
0663CF5156428E2AE9ABB2ED239303AAD05165D1F22B1B030587CBB418B5B278
6E77B69ECA81864B4F28882C75010AF7B697A616F07AA95FC25807B9C3C17866
2262B59FEB7B66B0473396CC9E439029D8912AD08CC15C16080558CFC8D79479
C3228EB0F733C9EE13BB62940933F5289EFF0E1449019182C7C6A1D52CFA7698
9BA699A5CE2AEDDEF7FBA2546A4A4EC86B45849369EFF6DC31B2D4EA09D75439
A59AFE302EFDC971E040A4B5FD37AE8D53E4AF5C970E62CC6A6E4E2892B19449
4051EC109C1224D8E5F98AFEBC1391A91F6507B6A1DEC256507EB05706234EF5
3C5B0DB9453B26D8E66E18FDE28C4AD2C940926480C8042E9E8327A68EA20601
A857DF770CD6F297DCD3779B48DC02FD068A031EC5C94056CF4B8CC2B5220C03
1F8ECACFABFE4730B5537635289B228121B25F984B7490BF7B6E45B4F867344F
D020FF9DB88D399E40BD1E5213BC7A9C81320F1E7EBFBA16499036AB8F879FC9
FC80621F41648BB24DFCB70EB0D2053FEE91CE0F1EE30A39E8D8DDC299487BF3
C554AEAA3FE2A5CF11C33E1039168F4D3B9D5275E103180DFFEA9B3785E3FC1B
371322F44BFF9AA2AEA94C406BB128ACFAFC9BA874A59CC38AC1F7D725BCFE2C
0BB6103D153E02E68C06DB8C8192301DA94AADB1E2882A00FBEA0207049BFE1C
0B3D277BDD210EF516EF5EC58EA43BF476E6278A850E20E4A05467F20AACE37D
EFEC824A894D5C7238EE292C8BC83109E626742320625E63BFB946BB56E29867
0821E303107AFCD92E87F960996480BB6BFCEB4A693ADFDE4DF33ACE6AB2212A
A8A6DB9F05BD1306A6B9458C48C7398BB12B175DFF9EF5ED9D8632C4BD13DAF6
3C16AD8200F58B299AE281D49A5457C8C2676E0125B86FD05BB24E83BEE2E6F3
D5CF6CD895697C4FA729394E83CF18B7519E3EFD08361CFFC39D79D6029B3F8D
23CDDB209F2C7C83E219E09EDD5093998D2178027C3FFF2B85518777B0A1060C
7B81AA0565316795A0C1117C3061C41C8202569D346634D79F17E04C066B5DC8
29F06FDFCA16360282AAE1D922C67FDAB69B1495100A266CF4922D66D9CEAAB3
CBB5F56018E8A10375D427573F928B283B66FC0D1AD66284ADE1ACE12D95898D
7D3B1A96A9060C9C4064BDDAC96EFB4BB1F04982D141E0B9F3E99EA6C89395E0
B8BC1A9146B47DF227D38BC318868F823B89C5E565229C0A93FB4AD3D64EBCE5
33AFBF7DB26D4141962A917A3232BF69F7709939CBCAC79DEC57CBEB2FE96533
1A714087D03F054DA3C56638E5AEFF31C8191A2A9F42422AB13F6DCB734EAFF5
988412EFCC9405ECA810D17A0C84696B07899DED3F22F902E0FE341F7272570D
58563E085605EEB3C944E250BF392F79318C5C01E30E766BE454CC40EC375FD8
47569565645EF4F78F0D85427A4FA14ECE66D8946B6906EA2EB754FA6E4E32E7
4664E00730B70343C6B5F5441700F8AE130AE79478C681544DF9A457F0C2B3CD
9B6AD534B84E2C14100EF59438A73C416F3C7F7BC88348C1508621E18B50AD64
11284CD53C3EDFDD9C36E43ABC8935D7A6E3A69AA30DF6174A5D0C012906EF8F
BE883F46C34B34E978E4AC59D2D6DE257F947C7DE5A61DA0A8D9A9D7E66313E7
B95D58114B53DF92B949DC3D3BC7A3BC87F5F520B3825865D160DBCB44E0F7B3
6433EEB8C4F9AFF5000E7C33F4321D72F8F0CEE2BB6898293813B14CDD6DE562
3FD1C82DAECF2AF8FEF5C225F91F63F2F3668B9643A47C0C64E713EF609DC1F4
1F98F9A21AADE7DAA9B44EF58C6D673E4F30A0E06EA425548C5769E55AE59472
4F22C2D7250626181BCBF81BC6484DB2BDE252A13AE80270E63658785CF06C01
B07A619B6128575863B0875F1F435DE53A9B066F6E58A62EEBF6AB959C2F764C
AF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (lexeme_long.dvi)
@start /Fa 203[33 33 33 33 49[{}4 58.1154 /CMR7 rf /Fb
154[39 101[{}1 83.022 /CMMI10 rf /Fc 133[44 5[44 7[44
6[44 3[44 3[44 1[44 45[44 5[44 39[{}9 83.022 /CMTT10
rf /Fd 171[57 5[59 1[45 2[23 3[50 60 68[{}6 83.022 /CMSS10
rf /Fe 202[42 42 42 42 42 49[{}5 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray 0 213 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 213 a
0 213 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 213 a 0 213 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 213 a 0 213 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 213 a 0 213
a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 213 a 0 425 868 426 v 868 213 a
currentpoint grestore moveto
 868 213 a 0 213 a
tx@Dict begin CP CP translate 0.6  0.6  scale NET  end

0 213 a 0 -142 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 -142 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.8 SLW 0  setgray   0.0 0.0 2 copy moveto 12.80365
.5 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave 1  setgray
 1. .setopacityalpha  fill  grestore gsave 1.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 12.80365 } false /N@A 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@A known { -12.80365
0. /N@A load 0 GetEdge 0.0 0. AddOffset /N@A load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 -142 a
0 -142 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 -142 a 0 TeXcolorgray 0 -142 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 -142 a 0
-142 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 -142 a 0
-142 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin ps@rot  RotBegin  end
 0 -142 a -21 -115 a Fe(1)0 -142
y
tx@Dict begin RotEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 -142 a 0 -142
a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 -142 a 0 TeXcolorgray 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  PutEnd  end

0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Aw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Ae 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@An 10 {InitPnode
} /NodeScale {} def NewNode end  end

0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@As 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Anw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Ane
10 {InitPnode } /NodeScale {} def NewNode end  end

0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Asw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Ase
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  PutEnd  end

0 -142 a 0 -142 a
tx@Dict begin { 56.90549 0.0 } PutCoor PutBegin  end
 0 -142 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.87999 SLW 0  setgray   0.0 0.0 2 copy moveto
12.80365 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave
1  setgray  1. .setopacityalpha  fill  grestore gsave 2.87999 SLW 0
 setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore gsave 0.71999 SLW 1  setgray  1. .setopacityalpha  stroke
grestore  end


@endspecial 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 13.34364 } false /N@B 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 -142 a 0 -142
a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B known { -12.80365
0. /N@B load 0 GetEdge 0.0 0. AddOffset /N@B load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 -142 a 0 TeXcolorgray 0 -142 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end

0 -142 a 0 -142 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end

0 -142 a 0 -142 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin ps@rot  RotBegin  end
 0 -142 a -21 -115
a Fe(2)0 -142 y
tx@Dict begin RotEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0
-142 a 0 -142 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 -142 a 0 TeXcolorgray 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142
a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Bw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Be 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Bn 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Bs 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Bnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Bne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Bsw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Bse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B known { 5.0 90.
/N@B load 0 GetEdge 0.0 90. AddOffset /N@B load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 -142
a 0 -142 a
tx@Dict begin { 0.0 29.86124 6.94444 0.0 90.  Uput UUput } PutCoor
PutBegin  end
 0 -142 a -124 -113 a Fd(IDENT)0 -142 y
tx@Dict begin  PutEnd  end
 0 -142
a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin { 113.81097 0.0 } PutCoor PutBegin  end
 0 -142 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.87999 SLW 0  setgray   0.0 0.0 2 copy moveto
12.80365 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave
1  setgray  1. .setopacityalpha  fill  grestore gsave 2.87999 SLW 0
 setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore gsave 0.71999 SLW 1  setgray  1. .setopacityalpha  stroke
grestore  end


@endspecial 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 13.34364 } false /N@C 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 -142 a 0 -142
a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C known { -12.80365
0. /N@C load 0 GetEdge 0.0 0. AddOffset /N@C load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 -142 a 0 TeXcolorgray 0 -142 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end

0 -142 a 0 -142 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end

0 -142 a 0 -142 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin ps@rot  RotBegin  end
 0 -142 a -21 -115
a Fe(3)0 -142 y
tx@Dict begin RotEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0
-142 a 0 -142 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 -142 a 0 TeXcolorgray 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142
a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Cw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Ce 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Cn 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Cs 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Cnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Cne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Csw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Cse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C known { 5.0 90.
/N@C load 0 GetEdge 0.0 90. AddOffset /N@C load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 -142
a 0 -142 a
tx@Dict begin { 0.0 29.86124 6.94444 0.0 90.  Uput UUput } PutCoor
PutBegin  end
 0 -142 a -124 -113 a Fd(IDENT)0 -142 y
tx@Dict begin  PutEnd  end
 0 -142
a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin { 170.71646 0.0 } PutCoor PutBegin  end
 0 -142 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.87999 SLW 0  setgray   0.0 0.0 2 copy moveto
12.80365 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath  gsave
1  setgray  1. .setopacityalpha  fill  grestore gsave 2.87999 SLW 0
 setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore gsave 0.71999 SLW 1  setgray  1. .setopacityalpha  stroke
grestore  end


@endspecial 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 13.34364 } false /N@D 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 -142 a 0 -142
a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@D known { -12.80365
0. /N@D load 0 GetEdge 0.0 0. AddOffset /N@D load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 -142 a 0 TeXcolorgray 0 -142 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end

0 -142 a 0 -142 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end

0 -142 a 0 -142 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin ps@rot  RotBegin  end
 0 -142 a -21 -115
a Fe(4)0 -142 y
tx@Dict begin RotEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0
-142 a 0 -142 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 -142 a 0 TeXcolorgray 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142
a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Dw 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@De 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@Dn 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Ds 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Dnw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Dne
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Dsw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Dse
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@D known { 5.0 0. /N@D
load 0 GetEdge 0.0 0. AddOffset /N@D load GetCenter 3 -1 roll add 3
1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 -142
a 0 -142 a
tx@Dict begin { 0.0 18.19449 6.94444 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 0 -142 a -76 -113 a Fd(LET)0 -142 y
tx@Dict begin  PutEnd  end
 0 -142
a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Aw /N@A InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 -142 a 0 -142 a
tx@Dict begin { 85.35823 -85.35823 } PutCoor PutBegin  end
 0 -142
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { /ArrowBc
[ 6 2 roll ] cvx def ArrowBc BeginArrow 1.  1.  scale  false 0.1 1.4
5.0 0. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T
1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto
gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub moveto
  EndArrow  } def /ArrowInside { } def  2.87999 SLW 0  setgray   0.0
0.0 2 copy moveto 12.80365 0 CLW mul round sub dup 0 rmoveto 0 360
arc closepath  gsave 1  setgray  1. .setopacityalpha  fill  grestore
gsave 2.87999 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore gsave 0.71999 SLW 1  setgray  1. .setopacityalpha
 stroke grestore  end
 
@endspecial 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 13.34364 } false /N@E 11
{InitCnode } /NodeScale {} def NewNode end  end
 0 -142
a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@E known { -12.80365
0. /N@E load 0 GetEdge 0.0 0. AddOffset /N@E load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 0 -142
a 0 TeXcolorgray 0 -142 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 -142 a 0 -142 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 -142 a
0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@rot  mark RAngle /ps@a ED cleartomark
ps@a neg def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 -142 a
0 -142 a
tx@Dict begin ps@rot  RotBegin  end
 0 -142 a -21 -115 a Fe(5)0 -142 y
tx@Dict begin RotEnd  end
 0 -142 a 0
-142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 -142 a 0 -142 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 0 -142 a 0
TeXcolorgray 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142
a
tx@Dict begin  tx@NodeDict begin {-38.41095 0.0 } false /N@Ew 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {38.41095 0.0 } false /N@Ee 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {0.0 38.41095 } false /N@En 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142
a
tx@Dict begin  tx@NodeDict begin {0.0 -38.41095 } false /N@Es 10 {InitPnode
} /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {-27.54047 27.54047 } false /N@Enw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 27.54047 } false /N@Ene
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142
a
tx@Dict begin  tx@NodeDict begin {-27.54047 -27.54047 } false /N@Esw
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin {27.54047 -27.54047 } false /N@Ese
10 {InitPnode } /NodeScale {} def NewNode end  end
 0 -142 a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142
a
tx@Dict begin  gsave STV CP T /ps@refangle 180.  def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@E known { 3.5 180.
/N@E load 0 GetEdge 0.0 180. AddOffset /N@E load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 0.0 29.86124 6.94444 0.0 180.  Uput UUput } PutCoor
PutBegin  end
 0 -142 a -124 -113
a Fd(IDENT)0 -142 y
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A /N@B InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 -142 a 0 -142
a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 26.7747 10.38887
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 -142 a 0 TeXcolorgray -111 -99 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -111 -99 a -111
-99 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -111 -99 a Fc('l')-111 -99 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -111 -99 a -111 -99
a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -111 -99 a 0 TeXcolorgray 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142
a
tx@Dict begin PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B /N@C InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 -142 a 0 -142
a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 26.7747 10.38887
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 -142 a 0 TeXcolorgray -111 -99
a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -111 -99 a -111 -99 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -111 -99 a Fc('e')-111 -99 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end

-111 -99 a -111 -99 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -111 -99 a 0 TeXcolorgray 0 -142
a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@C /N@D InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 -142 a 0 -142
a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 26.7747 10.38887
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 -142 a 0 TeXcolorgray
-111 -99 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -111 -99 a -111 -99 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -111 -99 a Fc('t')-111
-99 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -111 -99 a -111 -99 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -111 -99 a 0 TeXcolorgray
0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A /N@E InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 -142 a
0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 sub } def /ps@rot
{ } def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 15.54204 7.3194
2.54996 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 0 -142 a
0 TeXcolorgray -65 -122 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -65 -122 a -65 -122 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -65 -122
a Fb(e)-26 -110 y Fa(1)-65 -122 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -65 -122 a -65 -122
a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -65 -122 a 0 TeXcolorgray 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142
a
tx@Dict begin PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B /N@E InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 sub } def /ps@rot
{ } def grestore  end
 0 -142 a 0 -142
a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 15.54204 7.3194
2.54996 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 0 -142 a 0 TeXcolorgray -65 -122
a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -65 -122 a -65 -122 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -65 -122 a Fb(e)-26 -110 y Fa(2)-65
-122 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -65 -122 a -65 -122 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -65 -122 a 0 TeXcolorgray
0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@C /N@E InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 -142 a
0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 15.54204 7.3194
2.54996 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 0 -142 a
0 TeXcolorgray -65 -122 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -65 -122 a -65 -122 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -65 -122
a Fb(e)-26 -110 y Fa(3)-65 -122 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -65 -122 a -65 -122
a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -65 -122 a 0 TeXcolorgray 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142
a
tx@Dict begin PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@D /N@E InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 0 -142 a 0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 -142 a 0 -142
a
tx@Dict begin  tx@NodeDict begin /t 0.45 def LPut end PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 15.54204 7.3194
2.54996 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 0 -142 a 0 TeXcolorgray -65 -122
a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -65 -122 a -65 -122 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -65 -122 a Fb(e)-26 -110 y Fa(4)-65
-122 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -65 -122 a -65 -122 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -65 -122 a 0 TeXcolorgray
0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.1 1.4 5.0 0. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@E /N@E InitNC { /AngleA
30.  def /AngleB -30.  def 7.  7.  GetEdgeA GetEdgeB xA1 xB1 sub yA1
yB1 sub Pyth 2 div dup 3 -1 roll mul /ArmA ED mul /ArmB ED /ArmTypeA
0 def /ArmTypeB 0 def GetArmA GetArmB xA2 yA2 xA1 yA1 2 copy /y0 ED
/x0 ED tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict begin ArrowB
end /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def
/cy y1 y0 sub 3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub
3 mul cy sub def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub
by sub def /getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0
mul add x0 add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0
add ax t 3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp
mul by t t mul mul add cy t mul add y0 add } def /getdL { getValues
3 -1 roll sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01
def 0 100 { /t0 u def /u u du add def /t u def getdL add } repeat }
def /GetArrowPos { /ende 0.5  1 gt {ArrowPos}{ArrowPos CurveLength
mul} ifelse def /u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du
add def /t u def /sum getdL sum add def sum ende gt {exit} if } loop
u } def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
/ArrowPos 0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1.
} ifelse def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1
] cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def   } if end
 gsave 1.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore  grestore end
 0 -142 a
0 -142 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ } def grestore  end
 0 -142 a 0 -142 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 -142 a 0 -142 a
tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 80.32414 11.80553
1.4166 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 0 -142 a
0 TeXcolorgray -333 -99 a
tx@Dict begin CP CP translate 1.  1.  scale NET  end
 -333 -99 a -333 -99 a
tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 -333
-99 a Fc(['a'-'z'])-333 -99 y
tx@Dict begin  CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 -333 -99 a -333 -99 a
tx@Dict begin  CP CP translate 1 1. div 1 1. div scale NET  end
 -333
-99 a 0 TeXcolorgray 0 -142 a
tx@Dict begin  PutEnd  end
 0 -142 a 0 -142 a
tx@Dict begin PutEnd  end
 0 -142
a 0 213 a
tx@Dict begin  CP CP translate 1 0.6 div 1 0.6 div scale NET  end
 0 213 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 1049 -103 a FH(e)1089 -89 y FF(1)1154 -103
y FC(=)25 b FK(['a'-'k')47 b('n'-'z'])1049 35 y FH(e)1089
49 y FF(2)1154 35 y FC(=)25 b FK(['a'-'d')47 b('f'-'z'])1049
172 y FH(e)1089 186 y FF(3)1154 172 y FC(=)25 b FK(['a'-'s')47
b('u'-'z'])1049 310 y FH(e)1089 324 y FF(4)1154 310 y
FC(=)25 b FK(['a'-'z])-458 589 y FU(P)m(our)30 b(r\351aliser)h(la)f
(r\350gle)h(du)g(lex\350me)g(le)f(plus)h(long,)g(il)g(faut)f(ajouter)h
(une)-458 701 y(structure)e(:)i(une)g(\034le)f(de)h(ca)m(ract\350res)g
(\(initialement)g(vide\))h(et)e(rep)m(rendre)-458 814
y(l'algo)m(rithme)h(page)h(126.)e(Lo)m(rsque)h(l'\351tat)g(courant)f
(est)g(\034nal)h(et)f(qu'une)-458 927 y(transition)g(est)g(p)s
(ossible,)h(au)f(lieu)i(de)e(jeter)g(le)h(ca)m(ract\350re)f(co)m(rresp)
s(ondant,)i(il)f(faut)-458 1040 y(le)f(conserver)h(dans)g(la)g(\034le)f
(jusqu'\340)i(un)f(\351tat)e(blo)s(quant.)j(Si)f(cet)f(\351tat)f(est)h
(\034nal)h(on)-458 1153 y(renvoie)g(le)g(lex\350me)g(asso)s(ci\351,)f
FO(sinon)k(on)f(retourne)h(le)f(lex\350me)f(du)i(dernier)-458
1266 y(\351tat)f(\034nal)h(rencontr\351,)f(les)g(ca)m(ract\350res)f(de)
i(la)f(\034le)g(sont)h(remis)f(dans)i(le)-458 1379 y(\035ux)f(entrant)g
(et)f(on)h(revient)f(\340)g(l'\351tat)g(initial)p FU(.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(128)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 129 129
TeXDict begin 129 128 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation129) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.129) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Automates)37 b(\034nis)h(non-d\351terministes)e(asynchrones)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(P)m(our)30 b(construire)h(de)f(fa\347on)h(intuitive)h
(des)e(automates)g(\340)g(pa)m(rtir)h(d'exp)m(ressions)-458
-135 y(r\351guli\350res)g(et)e(leur)i(appliquer)i(des)d(transfo)m
(rmations,)g(nous)h(avons)g(b)s(esoin)f(d'une)-458 -22
y(classe)g(d'automates)g(un)h(p)s(eu)g(di\033\351rente)g(:)f(les)g
(automates)g(\034nis)-458 91 y FP(non-d\351terministes)h(asynchrones)g
FU(\(AFNA\).)g(Un)f(AFNA)h(di\033\350re)g(sur)f(deux)-458
204 y(p)s(oints)g(des)g(AFD)h(:)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 357 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 367 a FU(On)f(\351tend)h(les)f(\351tiquettes)g(pa)m
(r)h(le)g(mot)e(vide)i FE(")g FU(\(on)g(pa)m(rle)g(de)g(transitions)
-276 480 y(sp)s(ontan\351es\),)f(c.-\340-d.)i(qu'on)f(remplace)g
FC(\006)f FU(pa)m(r)h FC(\006)20 b FS([)g(f)p FE(")p
FS(g)31 b FU(:)f(c'est)-276 593 y(l'asynchronisme.)p
0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 721 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray -276 731 a FU(Il)g(p)s(eut)g(y)g(avoir)h
(plusieurs)h(transitions)e(de)h(m\352me)e(\351tiquette)i(\340)f(pa)m
(rtir)h(d'un)-276 843 y(m\352me)e(\351tat.)h(T)-8 b(echniquement,)32
b FE(\016)i FU(est)c(alo)m(rs)g(une)i FP(relation)f FU(\(ternaire\))f
(sur)-276 956 y FS(Q)20 b(\002)g FC(\(\006)g FS([)g(f)p
FE(")p FS(g)p FC(\))i FS(\002)e(Q)30 b FU(et)g(non)h(plus)g(une)g
(fonction)g(pa)m(rtielle)h(:)e(c'est)g(le)-276 1069 y
(non-d\351terminisme.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(129)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 130 130
TeXDict begin 130 129 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation130) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.130) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(T)-9 b(ypage)37 b(statique)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(Le)29 b(but)g(du)g
FP(t)m(ypage)i(statique)e FU(est)f(de)h(d\351tecter)g(et)f(de)i
(rejeter)e(d\350s)h(la)g(compilation)-458 -135 y(\(jusqu'ici)j(les)e
(erreurs)f(\351taient)i(d\351tect\351es)f(\340)h(l'ex\351cution\))h(un)
f(certain)g(nomb)m(re)-458 -22 y(de)f(p)m(rogrammes)g(absurdes,)h
(comme)f(1)g(2)g(ou)-458 91 y(BinOp)16 b(\(A)m(dd)q FE(;)f
FU(\()q FO(fun)g FU(x)26 b FS(!)f FU(x\))p FE(;)15 b
FU(1)q(\).P)m(our)31 b(cela)g(un)g FP(t)m(yp)s(e)f FU(est)g
(attribu\351)h(\340)f(chaque)-458 204 y(sous-exp)m(ression)h(du)g(p)m
(rogramme)f(\(p.ex.)i FP(int)37 b FU(p)s(our)30 b(une)h(exp)m(ression)
-458 317 y(a)m(rithm\351tique,)g(ou)g FP(int)26 b FS(!)f
FP(int)30 b FU(p)s(our)h(une)g(fonction)g(des)f(entiers)g(vers)g(les)g
(entiers\))-458 430 y(et)g(la)g FP(coh\351rence)i FU(de)f(ces)f(t)m(yp)
s(es)g(est)f(v\351ri\034\351e.)-458 643 y(D\351terminer)h(toutes)f(les)
i(erreurs)e(d'ex\351cution)k(p)s(our)d(tous)g(les)g(p)m(rogrammes)g
(est)-458 755 y(un)h(p)m(robl\350me)g(ind\351cidable.)j(Or)29
b(les)h(syst\350mes)f(de)i(t)m(yp)s(es)f(sont)g(souvent)-458
868 y(d\351cidables)i(ca)m(r)f(on)g(souhaite)g(que)g(le)f(compilateur)i
(termine)e(p)s(our)g(tous)g(les)-458 981 y(p)m(rogrammes.)g
FP(Il)g(est)f(donc)j(imp)s(ossible)e(de)h(ne)g(rejeter)e(que)i(les)f(p)
m(rogrammes)-458 1094 y(erron\351s)p FU(.)g(T)-8 b(out)30
b(syst\350me)g(de)g(t)m(yp)s(es)h(rejette)e(des)h(p)m(rogrammes)g(inno)
s(cents,)h(c'est)-458 1207 y(p)s(ourquoi)g(la)g(qu\352te)g(de)g
(meilleurs)f(syst\350mes)f(est)h(sans)g(\034n.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(130)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 131 131
TeXDict begin 131 130 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation131) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.131) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(D\351\034nition)38 b(fo)m(rmelle)f(des)g(t)m(yp)s(es)h(de)f
(la)h(calculette)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -221 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -276 -211 a FU(Syntaxe)31 b(concr\350te)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -276 -86
a FM(Type)41 b(::=)i("int")e(|)i(Type)f(->)h(Type)f(|)h("\(")f(Type)g
("\)")29 13 y(|)h("'a")f(|)h("'b")f(|)h(...)-276 184
y FU(On)30 b(d\351note)h(les)f(va)m(riables)i(de)f(t)m(yp)s(e)g(avec)g
(les)f(m\351ta-va)m(riables)p 1821 134 59 4 v 32 w FE(\013)p
FU(,)p 1934 110 57 4 v 30 w FE(\014)36 b FU(etc.)p 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 312 a FS(\017)p
0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb -276
322 a FU(Syntaxe)31 b(abstraite)p 0 TeXcolorgray -276
435 a FN(t)m(yp)s(e)25 b FL(t)n(yp)r(e_exp)n(r)36 b FQ(=)26
b(TEint)h FM(|)f FQ(TEfun)h FN(of)33 b FL(t)n(yp)r(e_exp)n(r)i
FM(*)26 b FL(t)n(yp)r(e_exp)n(r)36 b FM(|)26 b FQ(TEva)n(r)i
FN(of)-276 548 y FL(string)9 b FQ(;;)-276 661 y FU(On)30
b(d\351note)h(les)f(t)m(yp)s(es)g(avec)h(la)g(m\351ta-va)m(riable)h
FE(\034)10 b FU(.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(131)g(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 132 132
TeXDict begin 132 131 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation132) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.132) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(D\351\034nition)38 b(fo)m(rmelle)f(des)g(t)m(yp)s(es)h(de)f
(la)h(calculette)f(\(suite\))p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 -208 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb -276 -198 a FU(Analyse)31
b(syntaxique)p 0 TeXcolorgray -276 -85 a(La)f(\035\350che)h(est)f(asso)
s(ciative)g(\340)h(droite.)-276 28 y FS(h)-15 b(h)p FP(int)p
FS(i)g(i)26 b FC(=)f FU(TEint)60 b(et)g FS(h)-15 b(h)p
520 -22 51 4 v FE(\034)571 42 y FF(1)636 28 y FS(!)p
752 -22 V 25 w FE(\034)802 42 y FF(2)841 28 y FS(i)g(i)26
b FC(=)f FU(TEfun)15 b(\()-15 b FS(h)g(h)p 1344 -22 V
FE(\034)1395 42 y FF(1)1434 28 y FS(i)g(i)p FE(;)15 b
FS(h)-15 b(h)p 1584 -22 V FE(\034)1636 42 y FF(2)1675
28 y FS(i)g(i)g FU(\))61 b(et)-276 141 y FS(h)-15 b(h)p
FK('a)p FS(i)g(i)26 b FC(=)f FU(TEva)m(r)h("a")k(etc.)-276
254 y(On)g(note)g FE(\034)40 b FU(au)31 b(lieu)h(de)e
FS(h)-15 b(h)p 592 204 V FE(\034)11 b FS(i)-15 b(i)p
FU(.)31 b(On)f(note)g(les)g(va)m(riables)j(de)d(t)m(yp)s(e)h
FE(\013)p FU(,)g FE(\014)5 b FU(,)30 b FE(\015)-276 367
y FU(etc.)g(au)g(lieu)i(de)e(TEva)m(r)i("a",)f(TEva)m(r)h("b",)f(TEva)m
(r)h("c")f(etc.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 520 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 530 a FU(V)m(a)m(riables)h(lib)m(res)p
0 TeXcolorgray 31 w FS(Lh)-15 b(h)p FP(int)p FS(i)g(i)26
b FC(=)f FB(?)30 b FU(et)g FS(Lh)-15 b(h)p 1029 480 V
FE(\034)1079 544 y FF(1)1144 530 y FS(!)p 1260 480 V
25 w FE(\034)1310 544 y FF(2)1350 530 y FS(i)g(i)25 b
FC(=)g FS(L)p FC(\()p FE(\034)1664 544 y FF(1)1704 530
y FC(\))20 b FS([)g(L)p FC(\()p FE(\034)1978 544 y FF(2)2017
530 y FC(\))31 b FU(et)-276 643 y FS(Lh)-15 b(h)p -158
593 59 4 v FE(\013)p FS(i)g(i)26 b FC(=)f FS(f)p FE(\013)p
FS(g)p FU(.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(132)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 133 133
TeXDict begin 133 132 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation133) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.133) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Syst\350me)38 b(de)g(t)m(yp)s(es)f(\026)h(t)m(ypage)g(monomo)
m(rphe)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Un)30 b(jugement)g(de)h(t)m(ypage)h(est)d(de)i(la)f(fo)m
(rme)g FC(\000)c FS(`)f FH(e)31 b FC(:)26 b FE(\034)40
b FU(et)30 b(se)g(lit)g(\023)g(Dans)-458 -135 y(l'environnement)i(de)f
(t)m(ypage)g FC(\000)p FU(,)g(l'exp)m(ression)h FH(e)37
b FU(a)30 b(p)s(our)g(t)m(yp)s(e)h FE(\034)10 b FU(.)30
b(\024)h(Un)-458 -22 y(environnement)h(de)e(t)m(ypage)i
FC(\000)e FU(lie)h(des)g(va)m(riables)h FH(x)38 b FU(\340)30
b(leur)h(t)m(yp)s(e)g FC(\000\()p FH(x)8 b FC(\))p FU(.)31
b(Un)-458 91 y(liaison)g(de)g(t)m(ypage)h(se)d(note)i
FH(x)i FC(:)26 b FE(\034)10 b FU(.)30 b(Soit)-385 357
y FC(\000)c FS(`)f(h)-15 b(h)p -174 305 49 4 v FH(n)r
FS(i)g(i)25 b FC(:)h FS(h)-15 b(h)p FP(int)q FS(i)g(i)109
b FQ(T)-7 b(const)786 288 y FC(\000)25 b FS(`)g FH(e)981
302 y FF(1)1046 288 y FC(:)h FS(h)-15 b(h)p FP(int)q
FS(i)g(i)181 b FC(\000)25 b FS(`)g FH(e)1684 302 y FF(2)1749
288 y FC(:)h FS(h)-15 b(h)p FP(int)q FS(i)g(i)p 786 336
1226 4 v 977 426 a FC(\000)26 b FS(`)e(h)-15 b(h)p 1187
375 47 4 v FH(e)1234 440 y FF(1)p 1299 375 52 4 v 1299
426 a FH(o)p 1391 375 47 4 v 47 w(e)1438 440 y FF(2)1477
426 y FS(i)g(i)26 b FC(:)f FS(h)-15 b(h)p FP(int)q FS(i)g(i)2046
357 y FQ(Tbin)-351 717 y FC(\000)26 b FS(`)e(h)-15 b(h)p
FH(x)8 b FS(i)-15 b(i)27 b FC(:)e(\000\()p FH(x)8 b FC(\))110
b FQ(T)-7 b(va)n(r)719 647 y FC(\000)26 b FS(`)e FH(e)914
661 y FF(1)980 647 y FC(:)h FE(\034)1070 661 y FF(1)1290
647 y FC(\000)20 b FS(\010)g FH(x)34 b FC(:)25 b FE(\034)1616
661 y FF(1)1681 647 y FS(`)f FH(e)1801 661 y FF(2)1867
647 y FC(:)h FE(\034)1957 661 y FF(2)p 719 696 1278 4
v 847 786 a FC(\000)h FS(`)f(h)-15 b(h)p FO(let)25 b
FH(x)33 b FU(=)p 1360 734 47 4 v 26 w FH(e)1407 800 y
FF(1)1471 786 y FO(in)p 1571 734 V 25 w FH(e)1618 800
y FF(2)1657 786 y FS(i)-15 b(i)26 b FC(:)g FE(\034)1829
800 y FF(2)2031 717 y FQ(Tlet)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(133)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 134 134
TeXDict begin 134 133 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation134) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.134) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Syst\350me)38 b(de)g(t)m(yp)s(es)f(\026)h(t)m(ypage)g(monomo)
m(rphe)f(\(suite\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 479 -69 a FC(\000)20 b FS(\010)g FH(x)34
b FC(:)25 b FE(\034)805 -55 y FF(1)870 -69 y FS(`)f FH(e)32
b FC(:)26 b FE(\034)1113 -55 y FF(2)p 230 -20 1171 4
v 230 70 a FC(\000)g FS(`)e(h)-15 b(h)p FO(fun)27 b FH(x)33
b FS(!)p 791 18 47 4 v 25 w FH(e)7 b FS(i)-15 b(i)26
b FC(:)f FS(h)-15 b(h)p 1024 20 51 4 v FE(\034)1075 84
y FF(1)1139 70 y FS(!)p 1256 20 V 26 w FE(\034)1306 84
y FF(2)1345 70 y FS(i)g(i)1436 1 y FQ(Tfun)186 291 y
FC(\000)25 b FS(`)g FH(e)381 305 y FF(1)446 291 y FC(:)h
FS(h)-15 b(h)p 552 241 V FE(\034)602 253 y FA(0)651 291
y FS(!)p 767 241 V 25 w FE(\034)10 b FS(i)-15 b(i)181
b FC(\000)26 b FS(`)e FH(e)1248 305 y FF(2)1314 291 y
FC(:)h FE(\034)1414 253 y FA(0)p 186 339 1252 4 v 507
429 a FC(\000)g FS(`)g(h)-15 b(h)p 717 378 47 4 v FH(e)764
443 y FF(1)p 849 378 V 849 429 a FH(e)896 443 y FF(2)935
429 y FS(i)g(i)26 b FC(:)f FE(\034)1473 360 y FQ(T)-7
b(app)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(134)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 135 135
TeXDict begin 135 134 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation135) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.135) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Exemple)38 b(de)f(p)m(reuve)g(de)h(t)m(ypage)f(\(ou)h
(d\351rivation)g(de)f(t)m(ypage\))p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -16 -100 a FQ(x)23 b Fn(:)h
FR(h)-14 b(h)p FL(int)p FR(i)g(i)24 b(`)f(h)-14 b(h)p
FQ(x)q FR(i)g(i)23 b Fn(:)h FR(h)-14 b(h)p FL(int)p FR(i)g(i)167
b FQ(x)23 b Fn(:)g FR(h)-14 b(h)p FL(int)q FR(i)g(i)23
b(`)g(h)-14 b(h)p FQ(1)p FR(i)g(i)24 b Fn(:)f FR(h)-14
b(h)p FL(int)q FR(i)g(i)p -16 -56 1773 4 v 404 23 a FQ(x)23
b Fn(:)g FR(h)-14 b(h)p FL(int)q FR(i)g(i)24 b(`)e(h)-14
b(h)p FQ(x)24 b FM(+)f FQ(1)p FR(i)-14 b(i)23 b Fn(:)h
FR(h)-14 b(h)p FL(int)p FR(i)g(i)p -26 66 1793 4 v 256
146 a Fd(?)22 b FR(`)h(h)-14 b(h)p FN(fun)23 b FQ(x)g
FR(!)g FQ(x)h FM(+)e FQ(1)p FR(i)-14 b(i)24 b Fn(:)f
FR(h)-14 b(h)p FL(int)23 b FR(!)g FL(int)p FR(i)-14 b(i)337
246 y FQ(f)23 b Fn(:)g FR(h)-14 b(h)p FL(int)24 b FR(!)f
FL(int)o FR(i)-14 b(i)24 b(`)f(h)-14 b(h)p FQ(f)15 b
FR(i)-14 b(i)24 b Fn(:)f FR(h)-14 b(h)p FL(int)23 b FR(!)h
FL(int)o FR(i)-14 b(i)446 345 y FQ(f)24 b Fn(:)f FR(h)-14
b(h)p FL(int)23 b FR(!)h FL(int)o FR(i)-14 b(i)24 b(`)f(h)-14
b(h)p FQ(2)p FR(i)g(i)24 b Fn(:)f FR(h)-14 b(h)p FL(int)p
FR(i)g(i)p 337 389 1234 4 v 422 468 a FQ(f)24 b Fn(:)f
FR(h)-14 b(h)p FL(int)23 b FR(!)g FL(int)p FR(i)-14 b(i)24
b(`)f(h)-14 b(h)p FQ(f)24 b(2)o FR(i)-14 b(i)24 b Fn(:)f
FR(h)-14 b(h)p FL(int)q FR(i)g(i)p 47 511 1730 4 v 178
591 a Fd(?)23 b FR(`)g(h)-14 b(h)p FN(let)24 b FQ(f)f(=)g
FN(fun)f FQ(x)h FR(!)g FQ(x)g FM(+)g FQ(1)g FN(in)f FQ(f)i(2)o
FR(i)-14 b(i)24 b Fn(:)f FR(h)-14 b(h)p FL(int)q FR(i)g(i)-458
900 y FU(V)m(oici)31 b(d'autres)g(jugements)f(de)g(t)m(ypage)i
(d\351rivables)g(:)-458 1013 y FB(?)25 b FS(`)f(h)-15
b(h)p FO(fun)27 b FU(x)e FS(!)g FU(x)q FS(i)-15 b(i)26
b FC(:)f FS(h)-15 b(h)p 343 963 59 4 v FE(\013)26 b FS(!)p
544 963 V 26 w FE(\013)p FS(i)-15 b(i)61 b FU(et)f FB(?)25
b FS(`)g(h)-15 b(h)p FO(fun)26 b FU(x)f FS(!)h FU(x)p
FS(i)-15 b(i)26 b FC(:)f FS(h)-15 b(h)p FP(int)26 b FS(!)g
FP(int)p FS(i)-15 b(i)-458 1126 y FU(V)m(oici)31 b(des)f(jugements)g
(non)i(d\351rivables)g(:)-458 1239 y FB(?)25 b FS(`)f(h)-15
b(h)p FO(fun)27 b FU(x)e FS(!)g FU(x)h FK(+)f FU(1)p
FS(i)-15 b(i)26 b FC(:)g FS(h)-15 b(h)p FP(int)q FS(i)g(i)60
b FU(et)g FB(?)25 b FS(`)g(h)-15 b(h)p FO(fun)26 b FU(x)g
FS(!)f FU(x)h FK(+)f FU(1)p FS(i)-15 b(i)26 b FC(:)g
FS(h)-15 b(h)p 1780 1189 V FE(\013)26 b FS(!)f FP(int)p
FS(i)-15 b(i)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(135)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 136 136
TeXDict begin 136 135 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation136) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.136) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Quid)37 b(de)h(l'auto-application)19 b(?)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(P)m(our)30 b(t)m(yp)s(er)h FO(fun)25 b
FU(f)g FS(!)g FU(f)50 b(f)30 b(il)h(faudrait)g(construire)f(une)h
(d\351rivation)h(de)f(la)f(fo)m(rme)-458 -135 y(suivante)h(:)14
44 y FC(\000)20 b FS(\010)g FU(f)25 b FC(:)h FE(\034)318
58 y FF(1)382 44 y FS(`)f FU(f)g FC(:)g FS(h)-15 b(h)p
621 -6 51 4 v FE(\034)672 58 y FF(1)736 44 y FS(!)p 853
-6 V 26 w FE(\034)903 58 y FF(2)942 44 y FS(i)g(i)181
b FC(\000)21 b FS(\010)f FU(f)k FC(:)i FE(\034)1482 58
y FF(1)1546 44 y FS(`)f FU(f)g FC(:)h FE(\034)1771 58
y FF(2)p 14 93 1796 4 v 507 182 a FC(\000)20 b FS(\010)g
FU(f)25 b FC(:)g FE(\034)810 196 y FF(1)875 182 y FS(`)f(h)-15
b(h)p FU(f)26 b(f)15 b FS(i)-15 b(i)25 b FC(:)h FE(\034)1278
196 y FF(2)p 4 231 1816 4 v 301 321 a FC(\000)f FS(`)g(h)-15
b(h)p FO(fun)26 b FU(f)f FS(!)g FU(f)50 b(f)15 b FS(i)-15
b(i)26 b FC(:)f FS(h)-15 b(h)p 1146 271 51 4 v FE(\034)1197
335 y FF(1)1262 321 y FS(!)p 1378 271 V 25 w FE(\034)1428
335 y FF(2)1467 321 y FS(i)g(i)-458 525 y FU(P)m(our)30
b(que)h(les)f(feuilles)i(de)e(la)h(d\351rivation)h(soient)e
(justi\034\351e)h(pa)m(r)g(l'axiome)g FQ(T)-7 b(va)n(r)r
FU(,)30 b(il)-458 638 y(faudrait)h(que)g FE(\034)67 652
y FF(1)131 638 y FC(=)25 b FS(h)-15 b(h)p 282 588 V FE(\034)333
652 y FF(1)397 638 y FS(!)p 513 588 V 25 w FE(\034)563
652 y FF(2)603 638 y FS(i)g(i)31 b FU(et)e FE(\034)831
652 y FF(1)896 638 y FC(=)c FE(\034)1032 652 y FF(2)1071
638 y FU(.)30 b(La)h(p)m(remi\350re)f(de)h(ces)f(\351galit\351s)h(est)
-458 751 y(imp)s(ossible,)f(ca)m(r)h FE(\034)164 765
y FF(1)233 751 y FU(serait)f(un)h(sous-terme)e(strict)h(de)g
(lui-m\352me,)h(ce)f(qui)i(est)-458 864 y(imp)s(ossible)e(p)s(our)h
(tout)f(terme)f FE(\034)631 878 y FF(1)700 864 y FU(\034ni.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(136)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 137 137
TeXDict begin 137 136 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation137) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.137) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Quelques)36 b(p)m(rop)m(ri\351t\351s)g(du)i(t)m(ypage)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 -208 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 -198 a FU(Exp)m(ressions)31 b(bien)g(t)m(yp)s(\351es)g
(ou)f(t)m(ypables)p 0 TeXcolorgray -276 -85 a(Une)g(exp)m(ression)h
FH(e)37 b FU(est)30 b(t)m(ypable)i(s'il)e(existe)h(un)g(environnement)h
(de)e(t)m(ypage)-276 28 y FC(\000)g FU(et)g(un)h(t)m(yp)s(e)f
FE(\034)41 b FU(tels)29 b(que)i FC(\000)26 b FS(`)f FH(e)32
b FC(:)25 b FE(\034)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 156 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 166 a FU(T)-8 b(ypage)p 0 TeXcolorgray
122 w(Un)30 b(t)m(ypage)h(est)f(une)h(paire)g FC(\(\000)p
FE(;)15 b(\034)10 b FC(\))31 b FU(ou)g(une)g(d\351rivation)h(de)-276
279 y(t)m(ypage.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
-367 407 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray 0 0 1
TeXcolorrgb -276 417 a FU(Stabilit\351)f(pa)m(r)g(substitution)g(de)f
(va)m(riables)i(de)f(t)m(yp)s(es)p 0 TeXcolorgray -276
530 a(Si)f(on)h(p)s(eut)f(d\351river)h(un)g(jugement)f(non)i(clos,)e
(c.-\340-d.)h(contenant)h(des)-276 643 y(va)m(riables)g(de)e(t)m(yp)s
(es)h(lib)m(res,)g(p.ex.)g(f)25 b FC(:)h FS(h)-15 b(h)p
1030 593 59 4 v FE(\013)26 b FS(!)p 1230 593 V 25 w FE(\013)q
FS(i)-15 b(i)20 b(\010)g FU(x)26 b FC(:)f FE(\013)h FS(`)f
FU(f)15 b(\(x\))26 b FC(:)f FE(\013)p FU(,)31 b(alo)m(rs)-276
755 y(on)f(p)s(eut)g(aussi)h(d\351river)g(tous)f(les)g(jugements)g
(obtenus)h(en)g(rempla\347ant)g(ces)-276 868 y(va)m(riables)h(pa)m(r)f
(des)f(t)m(yp)s(es)g(a)m(rbitraires,)h(p.ex.)-276 981
y(f)24 b FC(:)i FS(h)-15 b(h)p FP(int)26 b FS(!)f FP(int)q
FS(i)-15 b(i)20 b(\010)g FU(x)26 b FC(:)f FP(int)h FS(`)f
FU(f)15 b(\(x\))26 b FC(:)f FP(int)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 1109 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -276 1119 a FU(S\373ret\351)30 b(du)h(t)m(ypage)p
0 TeXcolorgray -276 1232 a(Si)f FC(\000)c FS(`)e FH(e)32
b FC(:)26 b FE(\034)40 b FU(et)30 b FE(\032)25 b FS(`)g
FH(e)32 b FG(\020)25 b FH(r)40 b FU(alo)m(rs)31 b FH(r)k
FS(6)p FC(=)25 b FU(Err)14 b(\()i FE(:)f(:)g(:)h FU(\))-276
1345 y FO(Cette)33 b(p)m(rop)m(ri\351t\351)g(est)h(la)f(motivation)g
(m\352me)g(du)h(t)m(ypage)g(statique.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(137)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 138 138
TeXDict begin 138 137 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation138) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.138) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(No)m(rmalisation)37 b(fo)m(rte)p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -247 a
FU(Le)30 b(syst\350me)f(de)i(t)m(ypage)g(monomo)m(rphe)h(p)m
(r\351sent\351)f(ici)f(est)g FP(fo)m(rtement)-458 -135
y(no)m(rmalisant)p FU(,)h(c.-\340-d.)g(que)h(les)e(p)m(rogrammes)g
(bien)h(t)m(yp)s(\351s)f(terminent)g(toujours.)-458 78
y(Ces)f(syst\350mes)g(de)i(t)m(yp)s(es)f(ne)h(sont)f(donc)h(pas)f
(int\351ressants)g(en)h(p)m(rogrammation)-458 191 y(ca)m(r)f(on)h
(souhaite)g(que)g(le)g(langage)h(soit)e(T)-8 b(uring-complet)31
b(\(p.)g(67\),)g(c.-\340-d.)g(qu'il)-458 304 y(accepte)g
FP(tous)f FU(les)g(p)m(rogrammes)g(qui)h(terminent.)f(Si)h(le)f
(syst\350me)g(de)g(t)m(yp)s(es)-458 417 y(rejetait)g(de)g(plus)h(tous)f
(les)g(p)m(rogrammes)g(qui)h(ne)g(terminent)f(pas,)h(on)f(aurait)-458
530 y(r\351solu)f(le)h(p)m(robl\350me)h(de)e(l'a)m(rr\352t)h(de)g(la)f
(machine)i(de)f(T)-8 b(uring,)30 b(qui)g(est)f(connu)i(p)s(our)-458
643 y(\352tre)e(ind\351cidable)34 b(\(p.)d(69\).)-458
855 y FP(T)-8 b(out)30 b(langage)i(T)-8 b(uring-complet)32
b(muni)f(d'un)g(syst\350me)e(de)i(t)m(yp)s(es)f(d\351cidable)-458
968 y(contient)h(donc)g(des)f(p)m(rogrammes)g(qui)h(ne)g(terminent)f
(pas.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(138)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 139 139
TeXDict begin 139 138 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation139) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.139) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(No)m(rmalisation)37 b(faible)g(et)h(op)s(\351rateur)f(de)g(p)
s(oint)h(\034xe)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(C'est)29 b(p)s(ourquoi)i(on)g
(consid\350re)g(habituellement)h(des)e(syst\350mes)f(de)h(t)m(yp)s(es)g
(qui)h(ne)-458 -135 y(ga)m(rantissent)g(pas)f(que)h(les)f(p)m
(rogrammes)g(t)m(ypables)i(terminent)e(\(on)h(pa)m(rle)g(de)-458
-22 y(no)m(rmalisation)h(faible\).)f(Un)f(b)s(on)h(exemple)g(est)e(le)i
(syst\350me)e(de)i(t)m(yp)s(es)-458 91 y(monomo)m(rphe)g(de)g(mini-ML)f
(muni)h(d'un)g(op)s(\351rateur)f(de)h(p)s(oint)g(\034xe)g(\034x)f(ou)h
(d'un)-458 204 y FO(let)e(rec)h FU(natif)g(:)-29 383
y FC(\000)p 0 0 1 TeXcolorrgb 15 w FS(\010)15 b FH(x)34
b FC(:)25 b FE(\034)287 397 y FF(1)p 0 TeXcolorgray 352
383 a FS(`)g FH(e)473 397 y FF(1)538 383 y FC(:)g FE(\034)628
397 y FF(1)848 383 y FC(\000)20 b FS(\010)g FH(x)34 b
FC(:)25 b FE(\034)1174 397 y FF(1)1239 383 y FS(`)g FH(e)1360
397 y FF(2)1425 383 y FC(:)g FE(\034)1515 397 y FF(2)p
-29 431 1584 4 v 178 521 a FC(\000)g FS(`)g(h)-15 b(h)p
FO(let)25 b(rec)g FH(x)33 b FU(=)p 840 470 47 4 v 26
w FH(e)886 535 y FF(1)951 521 y FO(in)p 1051 470 V 25
w FH(e)1098 535 y FF(2)1137 521 y FS(i)-15 b(i)26 b FC(:)f
FE(\034)1308 535 y FF(2)1590 452 y FQ(Tlet-rec)-458 725
y FU(Il)30 b(n'y)h(a)f(ici)h(aucune)h(di\036cult\351)g(pa)m(r)f(rapp)s
(o)m(rt)g(\340)f FQ(Tlet)p FU(,)g(il)h(faut)f(juste)g(ajouter)g(la)-458
838 y(liaison)h FH(x)j FC(:)25 b FE(\034)-29 852 y FF(1)41
838 y FU(dans)30 b(l'environnement)j(de)e(t)m(ypage)g(de)g(la)g(p)m
(remi\350re)f(p)m(r\351misse.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(139)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 140 140
TeXDict begin 140 139 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation140) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.140) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(De)38 b(la)g(v\351ri\034cation)f(pure)g(\340)h
(l'inf\351rence)e(compl\350te)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(P)m(our)30
b(un)h(langage)h(statiquement)e(t)m(yp)s(\351,)h(un)g
FP(t)m(yp)s(eur)g FU(est)e(un)i(algo)m(rithme)h(qui,)-458
-135 y(\351tant)e(donn\351)i(un)f(p)m(rogramme,)f(d\351termine)g(si)h
(celui-ci)h(est)d(t)m(ypable)j(et,)e(si)g(oui,)-458 -22
y(en)g(p)m(ro)s(duit)i(un)f(t)m(yp)s(e.)f(Si)h(le)g(p)m(rogramme)f
(admet)g(plusieurs)h(t)m(yp)s(es,)f(un)h(t)m(yp)s(eur)-458
91 y(devra)g(p)m(ro)s(duire)g(un)g FP(t)m(yp)s(e)g(p)m(rincipal)p
FU(,)i(c.-\340-d.)e(un)g(t)m(yp)s(e)g(\023)f(plus)h(g\351n\351ral)h
(\024)e(que)-458 204 y(tous)g(les)g(autres)g(t)m(yp)s(es)g(p)s
(ossibles)g(\(cette)g(notion)i(d\351p)s(end)f(du)g(syst\350me)e(de)i(t)
m(yp)s(e)-458 317 y(consid\351r\351\).)-458 530 y FO(Exemple)f
FU(En)g(mini-ML,)g(le)h(p)m(rogramme)f FO(fun)h FU(x)f
FS(!)g FU(x)h(a)f(les)g(t)m(yp)s(es)h FE(\034)k FS(!)25
b FE(\034)40 b FU(p)s(our)-458 643 y(n'imp)s(o)m(rte)30
b(quel)h(t)m(yp)s(e)f FE(\034)10 b FU(,)30 b(mais)f(le)h(t)m(yp)s(e)g
FE(\013)c FS(!)f FE(\013)30 b FU(est)f(p)m(rincipal,)k(puisque)e(tous)f
(les)-458 755 y(autres)g(t)m(yp)s(es)g(s'en)g(d\351duisent)i(pa)m(r)f
(substitution)g(\(de)g(la)f(va)m(riable)j FE(\013)p FU(\).)-458
968 y(Selon)e(la)g(nature)g(et)e(la)i(quantit\351)g(d'info)m(rmations,)
h(sous)e(fo)m(rme)g(d')p FP(annotations)-458 1081 y FU(de)g(t)m(yp)s
(es,)h(que)g(le)f(langage)i(exige,)g(la)e(t\342che)h(du)g(t)m(yp)s(eur)
g(est)e(plus)i(ou)g(moins)-458 1194 y(complexe.)g(Il)f(existe)h(de)f
(nomb)m(reuses)h(con\034gurations.)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(140)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 141 141
TeXDict begin 141 140 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation141) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.141) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(V\351ri\034cation)37 b(pure)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(Dans)30
b(le)h(cas)f(de)h(la)f(pure)h(v\351ri\034cation)h(de)f(t)m(yp)s(es,)f
(toutes)g(les)g(sous-exp)m(ressions)-458 -135 y(du)h(p)m(rogramme,)f
(ainsi)h(que)g(tous)f(les)g(identi\034cateurs,)i(doivent)g(\352tre)d
(annot\351s)-458 -22 y(pa)m(r)i(leur)g(t)m(yp)s(e.)-458
78 y FO(Exemple)p 0 TeXcolorgray 0 TeXcolorgray -458
252 a FN(fun)26 b FQ(\(x)j(:)e FL(int)6 b FQ(\))p FR(!)28
b FQ(\()-310 352 y FN(let)g FQ(y)h(:)f FL(int)33 b FQ(=)28
b(\()p FM(+)f FQ(:)h FL(int)33 b FM(*)28 b FL(int)33
b FR(!)28 b FL(int)6 b FQ(\))27 b(\(x)h(:)g FL(int)6
b FQ(\))28 b(\(1)f(:)h FL(int)6 b FQ(\))-310 452 y FN(in)28
b FQ(y)h(:)f FL(int)-458 551 y FQ(\))g(:)f FL(int)-458
739 y FU(Le)j(t)m(yp)s(eur)h(est)e(alo)m(rs)i(tr\350s)e(simple,)i
(puisque)h(le)e(p)m(rogrammeur)h(n'\351crit)f(en)h(fait)-458
852 y(plus)d(uniquement)i(une)e(exp)m(ression,)h(mais)f(une)g
(d\351rivation)i(de)e(t)m(ypage)h(compl\350te.)-458 1064
y(Bien)i(s\373r,)f(un)h(tel)f(langage)i(est)d(inutilisable)k(en)e(p)m
(ratique)15 b(;)32 b(aucun)g(langage)-458 1177 y(r\351aliste)e
(n'adopte)i(cette)d(app)m(ro)s(che)j(extr\352me.)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(141)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 142 142
TeXDict begin 142 141 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation142) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.142) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(D\351cla)m(ration)37 b(des)g(t)m(yp)s(es)g(des)h(va)m
(riables)f(et)g(p)m(ropagation)g(des)g(t)m(yp)s(es)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Le)30 b(p)m(rogrammeur)g(doit)h(d\351cla)m(rer)h(les)e
(t)m(yp)s(es)g(des)g(pa)m(ram\350tres)g(de)h(fonction)g(et)-458
-135 y(des)f(va)m(riables)i(lo)s(cales.)f(Le)f(t)m(yp)s(eur)h
(inf\350re)f(alo)m(rs)h(le)g(t)m(yp)s(e)f(de)h(chaque)h(exp)m(ression)
-458 -22 y(\340)e(pa)m(rtir)h(des)f(t)m(yp)s(es)g(de)h(ses)f(sous-exp)m
(ressions.)h(Autrement)f(dit,)g(l'info)m(rmation)-458
91 y(de)g(t)m(ypage)i(est)e(p)m(ropag\351e)i(\340)e(travers)g(l'exp)m
(ression)i(des)e(feuilles)h(vers)f(la)h(racine.)-458
204 y FO(Exemple)120 b FU(Sachant)31 b(que)g(x)g(est)e(de)i(t)m(yp)s(e)
g FP(int)p FU(,)f(le)h(t)m(yp)s(eur)g(p)s(eut)f(non)h(seulement)-458
317 y(v\351ri\034er)g(que)g(l'exp)m(ression)h(x)e FK(+)g
FU(1)h(est)e(bien)j(t)m(yp)s(\351e,)e(mais)g(aussi)h(inf\351rer)f
(qu'elle)i(a)-458 430 y(le)e(t)m(yp)s(e)h FP(int)p FU(.)g(Ainsi)f
(l'exemple)i(p)m(r\351c\351dent)g(devient)f(:)227 543
y FN(fun)c FQ(\(x)h(:)g FL(int)6 b FQ(\))27 b FR(!)h
FN(let)g FQ(y)h(:)f FL(int)33 b FQ(=)27 b(x)h FM(+)f
FQ(1)h FN(in)f FQ(y)-458 656 y FU(Le)j(t)m(yp)s(eur)h(inf\350re)f(le)h
(t)m(yp)s(e)g FP(int)37 b FS(!)30 b FP(int)37 b FU(p)s(our)30
b(cette)g(exp)m(ression.)-458 769 y(Une)g(app)m(ro)s(che)i(similaire)f
(\340)f(celle-ci)i(est)d(adopt\351e)j(pa)m(r)f(la)f(plupa)m(rt)i(des)e
(langages)-458 882 y(imp)s(\351ratifs,)f(tels)h(P)m(ascal,)h(C,)f(Java)
h(etc.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(142)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 143 143
TeXDict begin 143 142 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation143) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.143) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(D\351cla)m(ration)37 b(des)g(t)m(yp)s(es)g(des)h(pa)m
(ram\350tres)e(et)i(p)m(ropagation)e(des)-529 -274 y(t)m(yp)s(es)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -98 a FU(Le)30 b(p)m(rogrammeur)g(doit)h(d\351cla)m(rer)h
(uniquement)f(les)g(t)m(yp)s(es)f(des)g(pa)m(ram\350tres.)h(La)-458
15 y(di\033\351rence)g(pa)m(r)g(rapp)s(o)m(rt)g(au)f(cas)h(p)m
(r\351c\351dent)g(est)f(donc)h(que)g(les)f(va)m(riables)i(lo)s(cales)
-458 128 y(\(li\351es)f(pa)m(r)h FO(let)p FU(\))d(ne)i(sont)f(plus)h
(obligatoirement)g(annot\351es)g(lo)m(rsqu'elles)h(sont)-458
241 y(intro)s(duites.)-458 453 y(Le)e(t)m(yp)s(eur)h(en)f(d\351termine)
h(alo)m(rs)g(le)f(t)m(yp)s(e)h(en)g(se)f(fondant)h(sur)f(le)g(t)m(yp)s
(e)h(de)-458 566 y(l'exp)m(ression)h(\340)e(laquelle)j(elles)d(sont)g
(asso)s(ci\351es.)-458 779 y FO(Exemple)120 b FU(Notre)30
b(exemple)h(devient)316 892 y FN(fun)26 b FQ(\(x)j(:)e
FL(int)6 b FQ(\))28 b FR(!)g FN(let)f FQ(y)j(=)d(x)h
FM(+)f FQ(1)g FN(in)h FQ(y)-458 1104 y FU(A)m(y)m(ant)j
(d\351termin\351)f(que)g(x)g FK(+)g FU(1)f(est)g(de)h(t)m(yp)s(e)h
FP(int)p FU(,)e(le)h(t)m(yp)s(eur)h(asso)s(cie)e(le)h(t)m(yp)s(e)g
FP(int)37 b FU(\340)-458 1217 y(y.)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(143)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 144 144
TeXDict begin 144 143 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation144) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.144) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Inf\351rence)35 b(compl\350te)j(des)f(t)m(yp)s(es)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -247 a FU(Plus)30 b(aucune)i(annotation)g(de)e(t)m(yp)s(es)h
(n'est)f(exig\351e.)h(Le)f(t)m(yp)s(eur)h(d\351termine)g(le)-458
-135 y(t)m(yp)s(e)f(des)h(pa)m(ram\350tres)f(d'ap)m(r\350s)h
(l'utilisation)h(qui)f(en)g(est)f(faite)g(pa)m(r)h(la)f(fonction.)-458
78 y FO(Exemple)120 b FU(Notre)30 b(exemple)h(devient)436
191 y FN(fun)c FQ(x)h FR(!)g FN(let)g FQ(y)h(=)e(x)h
FM(+)f FQ(1)g FN(in)h FQ(y)-458 403 y FU(Puisque)j(l'addition)h
FK(+)e FU(n'op)s(\350re)h(que)g(sur)f(des)g(entiers,)h(x)f(est)g
(n\351cessairement)g(de)-458 516 y(t)m(yp)s(e)g FP(int)p
FU(.)h(Cet)f(int\351ressant)g(p)m(ro)s(cessus)g(de)g(d\351duction,)j
(ou)d FP(inf\351rence)p FU(,)i(est)d(celui)-458 629 y(utilis\351)i(pa)m
(r)g(les)f(langages)h(de)g(la)g(famille)f(ML)g(\(dont)h(OCaml\).)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(144)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 145 145
TeXDict begin 145 144 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation145) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.145) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Inf\351rence)35 b(de)j(t)m(yp)s(es)f(p)s(our)h(mini-ML)g
(avec)f(t)m(ypage)h(monomo)m(rphe)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(P)m(our)30
b(r\351aliser)h(l'inf\351rence)g(de)g(t)m(yp)s(es)f(p)s(our)h(mini-ML)f
(avec)h(t)m(ypage)-458 -135 y(monomo)m(rphe,)g(on)g(p)m(ro)s(c\350de)g
(en)g(trois)e(temps)h(:)p 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -392 3 a(1.)p 0 TeXcolorgray
0 TeXcolorgray 46 w(on)g(annote)h(l'a)m(rb)m(re)h(de)f(syntaxe)g
(abstraite)f(pa)m(r)h(des)f(va)m(riables)j(de)d(t)m(yp)s(es)15
b(;)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -392 141
a(2.)p 0 TeXcolorgray 0 TeXcolorgray 46 w(\340)30 b(pa)m(rtir)h(de)f
(cet)g(a)m(rb)m(re)i(d\351co)m(r\351)f(on)g(construit)f(un)h
(syst\350me)e(d'\351quations)-276 254 y(entre)h(t)m(yp)s(es,)g(qui)h
(ca)m(ract\351rise)g(tous)f(les)g(t)m(ypages)i(p)s(ossibles)e(p)s(our)g
(le)-276 367 y(p)m(rogramme)15 b(;)p 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -392 505 a(3.)p 0 TeXcolorgray 0 TeXcolorgray
46 w(on)30 b(r\351sout)g(ce)g(syst\350me)g(d'\351quations)i(sachant)f
(que)g(s'il)f(n'a)h(pas)f(de)-276 618 y(solution)h(le)f(p)m(rogramme)h
(est)e(alo)m(rs)i(mal)f(t)m(yp)s(\351,)h(sinon)g(on)g(d\351termine)f
(une)-276 731 y(solution)h FP(p)m(rincipale)i FU(qui)e(nous)g(p)s
(ermet)e(de)i(d\351duire)g(un)g(t)m(ypage)h(p)m(rincipal)-276
843 y(du)e(p)m(rogramme.)p 0 TeXcolorgray -458 981 a(En)g(combinant)i
(ces)e(phases)g(nous)h(obtenons)g(un)g(algo)m(rithme)g(qui)h
(d\351termine)e(si)-458 1094 y(un)h(p)m(rogramme)f(est)f(t)m(ypable,)k
(et,)d(si)g(oui,)h(en)g(fournit)f(un)h(t)m(ypage)h(p)m(rincipal.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(145)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 146 146
TeXDict begin 146 145 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation146) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.146) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Substitution)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -261 a FU(Nous)30 b(avons)h(b)s(esoin)g(d'un)h
(nouveau)g(concept)f(p)s(our)g(d\351crire)f(l'inf\351rence)i(de)-458
-161 y(t)m(yp)s(es)e(:)g(la)h FP(substitution)p FU(.)g(C'est)e(une)i
(fonction)g(dont)g(l'application)i(a)d(la)h(fo)m(rme)-458
-61 y(g\351n\351rale)g FE(\034)10 b FC([)p FE(\013)26
b FS( )f FE(\034)205 -94 y FA(0)229 -61 y FC(])p FU(,)30
b(qu'on)i(lit)e(\023)h(La)f(substitution)h(de)f(la)h(va)m(riable)h(de)f
(t)m(yp)s(e)g FE(\013)-458 38 y FU(pa)m(r)g(le)f(t)m(yp)s(e)h
FE(\034)22 5 y FA(0)75 38 y FU(dans)g(le)g(t)m(yp)s(e)g
FE(\034)10 b FU(.)30 b(\024)g(Elle)h(se)f(d\351\034nit)h(pa)m(r)g
(induction)i(sur)d(la)-458 138 y(structure)f(des)i(t)m(yp)s(es)f(:)-195
320 y FR(h)-14 b(h)p FL(int)q FR(i)g(i)q Fn([)p Fk(\013)23
b FR( )g Fk(\034)251 286 y Fc(0)275 320 y Fn(])g(=)g
FR(h)-14 b(h)p FL(int)p FR(i)g(i)-54 445 y Fk(\013)p
Fn([)p Fk(\013)24 b FR( )f Fk(\034)251 411 y Fc(0)275
445 y Fn(])g(=)g Fk(\034)455 411 y Fc(0)-52 569 y Fk(\014)t
Fn([)p Fk(\013)h FR( )f Fk(\034)251 535 y Fc(0)275 569
y Fn(])g(=)g Fk(\014)430 b FQ(si)23 b Fk(\014)28 b FR(6)p
Fn(=)22 b Fk(\013)-395 694 y FR(h)-14 b(h)p -345 648
46 4 v Fk(\034)-299 706 y FI(1)-239 694 y FR(!)p -133
648 V 23 w Fk(\034)-88 706 y FI(2)-51 694 y FR(i)g(i)q
Fn([)p Fk(\013)23 b FR( )g Fk(\034)251 660 y Fc(0)275
694 y Fn(])g(=)g FR(h)-14 b(h)p 460 648 V Fk(\034)506
660 y Fc(0)506 715 y FI(1)566 694 y FR(!)p 672 648 V
23 w Fk(\034)717 660 y Fc(0)717 715 y FI(2)754 694 y
FR(i)g(i)83 b FQ(o\371)23 b Fk(\034)1040 660 y Fc(0)1031
715 y FI(1)1091 694 y Fn(=)f Fk(\034)1214 706 y FI(1)1251
694 y Fn([)p Fk(\013)h FR( )g Fk(\034)1502 660 y Fc(0)1526
694 y Fn(])g FQ(et)g Fk(\034)1708 660 y Fc(0)1699 715
y FI(2)1759 694 y Fn(=)g Fk(\034)1883 706 y FI(2)1919
694 y Fn([)p Fk(\013)h FR( )f Fk(\034)2171 660 y Fc(0)2195
694 y Fn(])-428 890 y FU(La)30 b(notion)h(de)g(substitution)g(p)s(eut)f
(s'\351tendre)g(\340)h(d'autres)f(objets,)g(comme)g(les)-458
1003 y(exp)m(ressions.)h(On)f(notera)h FE(')p FU(,)f
FE( )k FU(ou)d FE(\022)h FU(une)f(substitution.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(146)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 147 147
TeXDict begin 147 146 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation147) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.147) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(D\351co)m(ration)37 b(de)g(l'a)m(rb)m(re)g(de)g(syntaxe)h
(abstraite)f(pa)m(r)g(des)g(va)m(riables)-529 -274 y(de)g(t)m(yp)s(es)p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -98 a FU(Rep)m(renons)32 b(l'a)m(rb)m(re)g(de)e(syntaxe)h
(abstraite)f(page)h(51)g(et)f(d\351co)m(rons-le)i(avec)f(des)-458
15 y(va)m(riables)h(de)f(t)m(yp)s(e)f(uniques)i(resp)s(ectant)e(les)g
(liaisons,)h(c'est-\340-dire)g(qu'une)-458 128 y(va)m(riable)h(li\351e)
f(est)f(annot\351e)h(pa)m(r)g(la)g(m\352me)e(va)m(riable)k(de)d(t)m(yp)
s(e)h(que)g(celle)g(de)g(son)-458 241 y(lieur)g(et)f(les)g(autres)g
(exp)m(ressions)h(sont)f(annot\351es)h(pa)m(r)g(des)f(va)m(riables)i
(uniques)g(:)p 0 TeXcolorgray 0 TeXcolorgray 519 466
a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} /N@outer-let true /N@T-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 519 466 a FQ(Let)p 1 0 0 TeXcolorrgb 672 459 a
tx@Dict begin  tx@NodeDict begin {4.30554 0.0 6.43404 3.21701 3.11034
} false /N@alpha 16 {InitRnode } /NodeScale {} def NewNode end  end
 672
459 a Fk(\013)p 0 TeXcolorgray -153 632 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 -153 632 a
FQ("x")p 1 0 0 TeXcolorrgb 10 649 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 6.18402 3.09201 3.11034
} false /N@beta 16 {InitRnode } /NodeScale {} def NewNode end  end
 10 649 a Fk(\014)p
0 TeXcolorgray -92 606 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -92 606 a 280 632 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 280 632
a FQ(Const)p 1 0 0 TeXcolorrgb 521 633 a
tx@Dict begin  tx@NodeDict begin {4.30554 1.94444 5.73285 2.86642 3.11034
} false /N@gamma 16 {InitRnode } /NodeScale {} def NewNode end  end
 521 633 a Fk(\015)p
0 TeXcolorgray 380 606 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 380 606 a 359 798 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} /N@outer-var true /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 359 798
a FQ(1)380 772 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 380 772 a 1131 632 a
tx@Dict begin  tx@NodeDict begin {6.94275 1.94397 26.74347 13.37173
3.11034 } false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1131 632 a FQ(BinOp)p
1 0 0 TeXcolorrgb 1395 641 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 4.8229 2.41145 3.11034
} false /N@delta 16 {InitRnode } /NodeScale {} def NewNode end  end
 1395 641 a Fk(\016)p 0 TeXcolorgray
1242 606 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1242 606 a 578 798 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 16.71814 8.35907 3.11034
} false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 578 798 a FQ(A)n(dd)647
772 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 647 772 a 935 798 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 13.46893 6.73447 3.11034
} /N@inner-let true /N@T-0-2-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 935 798 a FQ(Let)p 1 0 0 TeXcolorrgb
1088 799 a
tx@Dict begin  tx@NodeDict begin {4.30554 1.94444 5.32408 2.66203 3.11034
} false /N@eta 16 {InitRnode } /NodeScale {} def NewNode end  end
 1088 799 a Fk(\021)p 0 TeXcolorgray 991 772
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 991 772 a 466 964 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 466 964 a FQ("x")p 1 0 0 TeXcolorrgb
629 965 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 5.11285 2.55643 3.11034
} false /N@zeta 16 {InitRnode } /NodeScale {} def NewNode end  end
 629 965 a Fk(\020)p 0 TeXcolorgray 526 938
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 526 938 a 890 964 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 23.99414 11.99707 3.11034
} false /N@T-0-2-1-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 890 964 a FQ(Const)p 1 0 0 TeXcolorrgb
1130 973 a
tx@Dict begin  tx@NodeDict begin {4.30554 0.0 5.57639 2.7882 3.11034
} false /N@nu 16 {InitRnode } /NodeScale {} def NewNode end  end
 1130 973 a Fk(\027)p 0 TeXcolorgray 989 938
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 989 938 a 968 1130 a
tx@Dict begin  tx@NodeDict begin {6.57777 0.0 4.99878 2.49939 3.11034
} false /N@T-0-2-1-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 968 1130 a FQ(2)989 1104 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-1 /N@T-0-2-1-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 989
1104 a 1395 964 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@inner-var true /N@T-0-2-1-2 16 {InitRnode } /NodeScale {} def
NewNode end  end
 1395 964 a FQ(V)n(a)n(r)p 1 0 0 TeXcolorrgb
1557 965 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 5.11285 2.55643 3.11034
} false /N@zeta 16 {InitRnode } /NodeScale {} def NewNode end  end
 1557 965 a Fk(\020)p 0 TeXcolorgray 1455 938
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1 /N@T-0-2-1-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1455 938 a 1394 1130 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-1-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1394 1130 a FQ("x")1455 1104
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-1-2 /N@T-0-2-1-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1455 1104 a 1777 798 a
tx@Dict begin  tx@NodeDict begin {6.94275 0.0 14.46869 7.23434 3.11034
} /N@outer-var true /N@T-0-2-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1777 798 a FQ(V)n(a)n(r)p 1 0 0
TeXcolorrgb 1939 807 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 6.18402 3.09201 3.11034
} false /N@beta 16 {InitRnode } /NodeScale {} def NewNode end  end
 1939 807 a Fk(\014)p 0 TeXcolorgray
1837 772 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1837 772 a 1776 964 a
tx@Dict begin  tx@NodeDict begin {7.22046 0.0 14.60754 7.30377 3.11034
} false /N@T-0-2-2-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1776 964 a FQ("x")1837
938 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2-2 /N@T-0-2-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1837 938 a 2018 440 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@inner-var /N@inner-let InitNC { yB yA sub xB xA sub
Atan dup -40.  add /AngleA exch def -40.  sub 180 add /AngleB exch
def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2018 440 a 2018 440 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
1.0 1.0 0 0 /N@outer-var /N@outer-let InitNC { yB yA sub xB xA sub
Atan dup -40.  add /AngleA exch def -40.  sub 180 add /AngleB exch
def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 2018
440 a -458 1304 a FU(Notons)d(en)g(exp)s(osant)g(d'une)i(exp)m(ression)
f(la)f(va)m(riable)i(de)f(t)m(yp)s(e)f(qui)h(l'annote,)g(pa)m(r)-458
1417 y(exemple)h(Let)-5 1380 y Fb(\013)44 1417 y FC(\()p
FH(x)129 1384 y Fb(\014)177 1417 y FE(;)15 b FH(e)257
1431 y FF(1)297 1384 y Fb(\015)342 1417 y FE(;)g FH(e)422
1431 y FF(2)462 1384 y Fb(\016)500 1417 y FC(\))p FU(.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(147)10
b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 148 148
TeXDict begin 148 147 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation148) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.148) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Construction)37 b(du)g(syst\350me)h(d'\351quations)e
(\(collection)h(de)-529 -274 y(contraintes\))p 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -458 -98 a
FU(\300)30 b(pa)m(rtir)g(d'une)i(exp)m(ression)g(annot\351e)f
FH(e)878 -131 y Fb(\013)958 -98 y FU(nous)g(construisons)f(un)h
(syst\350me)-458 15 y(d'\351quations)h FH(C)11 b FC(\()p
FH(e)150 -18 y Fb(\013)200 15 y FC(\))31 b FU(capturant)g(les)f
(contraintes)g(de)h(t)m(ypage)h(entre)e(les)-458 128
y(sous-exp)m(ressions)h(de)g FH(e)6 b FU(.)30 b(Ce)g(syst\350me)f(est)h
(d\351\034ni)i(inductivement)g(sur)e(la)-458 241 y(structure)f(de)i
FH(e)37 b FU(:)246 445 y FH(C)11 b FC(\()p FU(V)m(a)m(r)480
407 y Fb(\013)544 445 y FH(x)d FC(\))26 b(=)f FB(?)160
583 y FH(C)11 b FC(\()p FU(Const)481 545 y Fb(\013)546
583 y FH(n)r FC(\))25 b(=)g FS(f)p FE(\013)h FC(=)f FS(h)-15
b(h)p FP(int)q FS(i)g(ig)-292 734 y FH(C)11 b FC(\()p
FU(BinOp)54 696 y Fb(\013)103 734 y FC(\()p Fa(_)p FE(;)k
FH(e)307 748 y FF(1)347 696 y Fb(\014)394 734 y FE(;)g
FH(e)474 748 y FF(2)515 696 y Fb(\015)559 734 y FC(\)\))26
b(=)f FS(f)p FE(\013)h FC(=)f FS(h)-15 b(h)p FP(int)q
FS(i)g(i)p FC(;)15 b FE(\014)32 b FC(=)25 b FE(\013)p
FC(;)15 b FE(\015)31 b FC(=)25 b FE(\013)p FS(g)791 884
y([)20 b FH(C)11 b FC(\()p FH(e)1016 898 y FF(1)1056
847 y Fb(\014)1104 884 y FC(\))20 b FS([)g FH(C)11 b
FC(\()p FH(e)1384 898 y FF(2)1424 847 y Fb(\015)1469
884 y FC(\))-137 1035 y FH(C)g FC(\()p FU(Let)89 997
y Fb(\013)139 1035 y FC(\()p FH(x)224 997 y Fb(\014)272
1035 y FE(;)k FH(e)352 1049 y FF(1)392 997 y Fb(\015)436
1035 y FE(;)g FH(e)516 1049 y FF(2)557 997 y Fb(\016)594
1035 y FC(\))26 b(=)f FS(f)p FE(\014)31 b FC(=)25 b FE(\015)5
b FC(;)15 b FE(\013)26 b FC(=)f FE(\016)s FS(g)d([)d
FH(C)11 b FC(\()p FH(e)1580 1049 y FF(1)1621 997 y Fb(\015)1665
1035 y FC(\))21 b FS([)e FH(C)11 b FC(\()p FH(e)1945
1049 y FF(2)1986 997 y Fb(\016)2023 1035 y FC(\))-1 1186
y FH(C)g FC(\()p FU(F)m(un)246 1148 y Fb(\013)295 1186
y FC(\()p FH(x)380 1148 y Fb(\014)428 1186 y FE(;)k FH(e)514
1148 y Fb(\015)559 1186 y FC(\)\))26 b(=)f FS(f)p FE(\013)h
FC(=)f FS(h)-15 b(h)p 1031 1112 57 4 v FE(\014)31 b FS(!)p
1229 1136 53 4 v 25 w FE(\015)6 b FS(i)-15 b(ig)21 b([)f
FH(C)11 b FC(\()p FH(e)1634 1148 y Fb(\015)1679 1186
y FC(\))-74 1336 y FH(C)g FC(\()p FU(App)183 1299 y Fb(\013)232
1336 y FC(\()p FH(e)307 1350 y FF(1)347 1299 y Fb(\014)394
1336 y FE(;)k FH(e)474 1350 y FF(2)515 1299 y Fb(\015)559
1336 y FC(\)\))26 b(=)f FS(f)p FE(\014)31 b FC(=)25 b
FS(h)-15 b(h)p 1029 1286 V FE(\015)31 b FS(!)p 1223 1286
59 4 v 25 w FE(\013)q FS(i)-15 b(ig)21 b([)f FH(C)11
b FC(\()p FH(e)1628 1350 y FF(1)1668 1299 y Fb(\014)1715
1336 y FC(\))20 b FS([)g FH(C)11 b FC(\()p FH(e)1995
1350 y FF(2)2035 1299 y Fb(\015)2080 1336 y FC(\))p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(148)f(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 149 149
TeXDict begin 149 148 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation149) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.149) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Construction)37 b(du)g(syst\350me)h(d'\351quations)e
(\(exemple\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -247 a FU(P)m(oursuivons)31 b(avec)g(l'exemple)h(p)
m(r\351c\351dent.)g(Nous)f(avons)g(alo)m(rs)f(:)182 -51
y FH(C)11 b FC(\()p FH(e)332 -84 y Fb(\013)382 -51 y
FC(\))26 b(=)82 b FS(f)i FE(\014)30 b FC(=)25 b FE(\015)5
b FC(;)15 b FE(\013)26 b FC(=)f FE(\016)s FC(;)725 62
y FE(\015)30 b FC(=)25 b FS(h)-15 b(h)p FP(int)q FS(i)g(i)p
FC(;)725 175 y FE(\016)29 b FC(=)c FS(h)-15 b(h)p FP(int)q
FS(i)g(i)p FC(;)15 b FE(\021)29 b FC(=)c FE(\016)s FC(;)15
b FE(\014)32 b FC(=)25 b FE(\016)s FC(;)725 288 y FE(\020)31
b FC(=)25 b FE(\027)6 b FC(;)15 b FE(\021)29 b FC(=)c
FE(\020)7 b FC(;)725 401 y FE(\027)31 b FC(=)25 b FS(h)-15
b(h)p FP(int)q FS(i)g(ig)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(149)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 150 150
TeXDict begin 150 149 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation150) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.150) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(Lien)37 b(entre)g(jugements)g(de)h(t)m(ypage)f(et)h
(solutions)f(des)g(\351quations)p 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray -458 -247 a FU(Une)30 b
FP(solution)h FU(de)g(l'ensemble)g(d'\351quations)h FH(C)11
b FC(\()p FH(e)1185 -280 y Fb(\013)1236 -247 y FC(\))30
b FU(est)g(une)h(substitution)f FE(')-458 -135 y FU(telle)g(que)h(p)s
(our)g(toute)f(\351quation)i FE(\034)711 -121 y FF(1)775
-135 y FC(=)25 b FE(\034)911 -121 y FF(2)976 -135 y FS(2)f
FH(C)11 b FC(\()p FH(e)1211 -168 y Fb(\013)1262 -135
y FC(\))30 b FU(on)h(a)f FE(')p FC(\()p FE(\034)1656
-121 y FF(1)1696 -135 y FC(\))c(=)f FE(')p FC(\()p FE(\034)1987
-121 y FF(2)2027 -135 y FC(\))p FU(.)-458 -22 y(Autrement)k(dit,)i(une)
g(solution)g(est)f(un)h FP(uni\034cateur)h FU(du)e(syst\350me)g
(d'\351quations.)-458 91 y(Les)g(p)m(rop)s(ositions)h(suivantes)g
(\351tablissent)f(que)h(les)g(solutions)f(de)h FH(C)11
b FC(\()p FH(e)1884 58 y Fb(\013)1934 91 y FC(\))-458
204 y FU(ca)m(ract\351risent)31 b(exactement)f(les)g(t)m(ypages)i(de)e
FH(e)6 b FU(.)-458 222 y


 gsave nulldevice


 -458 222 a


 grestore


 0.2 0.2 0.7 TeXcolorrgb
-458 367 a Fe(Prop)s(osition)32 b(\(Co)m(rrection)i(des)f
(\351quations\))p 0 TeXcolorgray 0 TeXcolorgray -458
503 a FP(Si)d FE(')h FP(est)e(une)j(solution)f(de)f FH(C)11
b FC(\()p FH(e)623 470 y Fb(\013)674 503 y FC(\))30 b
FP(alo)m(rs)h FC(\000)25 b FS(`)g FH(e)1143 470 y Fb(\013)1219
503 y FC(:)g FE(')p FC(\()p FE(\013)p FC(\))r FP(,)30
b(o\371)h FC(\000)f FP(est)-458 616 y(l'environnement)i(de)f(t)m(ypage)
g FS(f)p FH(x)655 583 y Fb(\014)729 616 y FC(:)25 b FE(')p
FC(\()p FE(\014)5 b FC(\))27 b FS(j)e FH(x)1091 583 y
Fb(\014)1164 616 y FS(2)g(L)p FC(\()p FH(e)6 b FC(\))p
FS(g)p FP(.)p 0 TeXcolorgray -458 639 a


 gsave nulldevice


 -458 639 a


 grestore


 -458
639 a


 gsave nulldevice


 -458 639 a


 grestore


 -458 639 a


 gsave nulldevice


 -458 639 a


 grestore


 -458 639 a


 gsave nulldevice


 -458
639 a


 grestore


 0.2 0.2 0.7 TeXcolorrgb -458 803 a Fe(Prop)s(osition)32
b(\(Compl\351tude)i(des)f(\351quations\))p 0 TeXcolorgray
0 TeXcolorgray -458 939 a FP(Soit)d FH(e)37 b FP(une)31
b(exp)m(ression.)h(S'il)f(existe)f(un)h(environnement)h(de)f(t)m(ypage)
g FC(\000)g FP(et)e(un)-458 1052 y(t)m(yp)s(e)h FE(\034)41
b FP(tels)29 b(que)i FC(\000)26 b FS(`)f FH(e)32 b FC(:)25
b FE(\034)10 b FP(,)30 b(alo)m(rs)h(le)g(syst\350me)e(d'\351quations)j
FH(C)11 b FC(\()p FH(e)1745 1019 y Fb(\013)1795 1052
y FC(\))31 b FP(admet)f(une)-458 1165 y(solution)h FE(')f
FP(telle)h(que)g FE(')p FC(\()p FE(\013)p FC(\))c(=)e
FE(\034)40 b FP(et)30 b FC(\000)c(=)f FS(f)p FH(x)1062
1132 y Fb(\014)1135 1165 y FC(:)g FE(')p FC(\()p FE(\014)5
b FC(\))27 b FS(j)e FH(x)1497 1132 y Fb(\014)1570 1165
y FS(2)g(L)p FC(\()p FH(e)6 b FC(\))p FS(g)p FP(.)p 0
TeXcolorgray -458 1188 a


 gsave nulldevice


 -458 1188 a


 grestore


 -458 1188 a


 gsave nulldevice


 -458
1188 a


 grestore


 -458 1188 a


 gsave nulldevice


 -458 1188 a


 grestore


 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(150)k(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 151 151
TeXDict begin 151 150 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation151) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.151) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(R\351solution)38 b(des)f(\351quations)f(\(l'uni\034cateur)h
(de)g(Robinson\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb -367 -229 a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray
-276 -219 a FU(D\351\034nissons)30 b FE(')c FG(6)f FE( )34
b FU(s'il)c(existe)h(une)g(substitution)f FE(\022)j FU(telle)d(que)h
FE( )e FC(=)c FE(\022)d FS(\016)f FE(')p FU(.)p 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb -367 -110 a FS(\017)p 0 TeXcolorgray
0 TeXcolorgray -276 -100 a FU(P)m(a)m(r)30 b(d\351\034nition,)j(une)e
(solution)g FE(')f FU(de)h FH(C)11 b FC(\()p FH(e)1126
-133 y Fb(\013)1176 -100 y FC(\))31 b FU(est)e(dite)i
FP(p)m(rincipale)i FU(si)d(toute)-276 13 y(solution)h
FE( )i FU(de)e FH(C)11 b FC(\()p FH(e)406 -20 y Fb(\013)456
13 y FC(\))31 b FU(v\351ri\034e)g FE(')26 b FG(6)f FE( )s
FU(.)p 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb -367 123
a FS(\017)p 0 TeXcolorgray 0 TeXcolorgray -276 133 a
FU(Il)i(existe)h(un)h(algo)m(rithme)f(mgu)g(qui,)h(\351tant)f(donn\351)
h(un)f(syst\350me)f(d'\351quations)-276 246 y FH(C)11
b FU(,)30 b(soit)g(\351choue)h(soit)f(p)m(ro)s(duit)h(une)g(solution)g
(p)m(rincipale)j(de)c FH(C)41 b FU(:)249 413 y(mgu)p
FC(\()p FB(?)p FC(\))25 b(=)649 427 y FF(1)714 413 y
FS(8)p FH(x)8 b FE(:)p FH(x)33 b FS(7!)26 b FH(x)-186
551 y FU(mgu)p FC(\()p FS(f)p FE(\034)36 b FC(=)25 b
FE(\034)10 b FS(g)21 b([)f FH(C)495 514 y FA(0)518 551
y FC(\))25 b(=)649 565 y FF(2)714 551 y FU(mgu)p FC(\()p
FH(C)981 514 y FA(0)1005 551 y FC(\))-194 689 y FU(mgu)p
FC(\()p FS(f)p FE(\013)h FC(=)f FE(\034)10 b FS(g)21
b([)f FH(C)495 651 y FA(0)518 689 y FC(\))25 b(=)649
703 y FF(3)714 689 y FU(mgu)p FC(\()p FH(C)981 651 y
FA(0)1005 689 y FC([)p FE(\013)h FS( )f FE(\034)10 b
FC(]\))21 b FS(\016)f FC([)p FE(\013)26 b FS( )f FE(\034)10
b FC(])31 b FU(si)f FE(\013)c FS(62)e(L)p FC(\()p FE(\034)10
b FC(\))-194 827 y FU(mgu)p FC(\()p FS(f)p FE(\034)36
b FC(=)25 b FE(\013)p FS(g)c([)f FH(C)495 789 y FA(0)518
827 y FC(\))25 b(=)649 841 y FF(4)714 827 y FU(mgu)p
FC(\()p FS(f)p FE(\013)i FC(=)d FE(\034)10 b FS(g)21
b([)f FH(C)1403 789 y FA(0)1426 827 y FC(\))57 965 y
FU(mgu)p FC(\()p FH(C)32 b FS([)20 b FH(C)495 927 y FA(0)518
965 y FC(\))25 b(=)649 979 y FF(5)714 965 y FU(mgu)p
FC(\()p FS(f)p FE(\034)997 979 y FF(1)1062 965 y FC(=)g
FE(\034)1208 927 y FA(0)1198 987 y FF(1)1237 965 y FC(;)15
b FE(\034)1317 979 y FF(2)1382 965 y FC(=)25 b FE(\034)1528
927 y FA(0)1518 987 y FF(2)1557 965 y FS(g)c([)f FH(C)1773
927 y FA(0)1796 965 y FC(\))-276 1157 y FU(where)31 b
FH(C)36 b FC(=)25 b FS(fh)-15 b(h)p 263 1107 80 4 v FE(\034)303
1171 y FF(1)368 1157 y FS(!)p 484 1107 V 25 w FE(\034)524
1171 y FF(2)564 1157 y FS(i)g(i)25 b FC(=)g FS(h)-15
b(h)p 795 1107 V FE(\034)835 1171 y FF(1)875 1124 y FA(0)924
1157 y FS(!)p 1040 1107 V 25 w FE(\034)1080 1171 y FF(2)1119
1124 y FA(0)1142 1157 y FS(i)g(ig)-276 1517 y FU(Dans)30
b(tous)g(les)g(autres)g(cas,)g(mgu)h(\351choue)g(\(pas)g(de)f
(solutions\).)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 2141 1639 a FT(151)10 b(/)g(154)p 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 152 152
TeXDict begin 152 151 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation152) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.152) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(R\351solution)38 b(des)f(\351quations)f(\(exemple\))p
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-458 -261 a FU(mgu)p FC(\()p FH(C)11 b FC(\()p FH(e)-110
-294 y Fb(\013)-59 -261 y FC(\)\))26 b(=)108 -247 y FF(3)172
-261 y FE(')231 -247 y FF(0)291 -261 y FS(\016)21 b FC([)p
FE(\014)30 b FS( )c FE(\015)5 b FC(])-368 -78 y Fk(')-314
-66 y FI(0)-254 -78 y Fn(=)23 b FQ(mgu)o Fn(\()p FR(f)p
Fk(\013)g Fn(=)g Fk(\016)s Fn(;)14 b Fk(\015)27 b Fn(=)c
FR(h)-14 b(h)p FL(int)p FR(i)g(i)p Fn(;)14 b Fk(\016)27
b Fn(=)c FR(h)-14 b(h)p FL(int)p FR(i)g(i)p Fn(;)14 b
Fk(\021)27 b Fn(=)c Fk(\016)s Fn(;)67 46 y Fk(\015)28
b Fn(=)22 b Fk(\016)s Fn(;)14 b Fk(\020)30 b Fn(=)22
b Fk(\027)5 b Fn(;)14 b Fk(\021)27 b Fn(=)22 b Fk(\020)6
b Fn(;)14 b Fk(\027)29 b Fn(=)23 b FR(h)-14 b(h)p FL(int)p
FR(i)g(ig)p Fn(\))-254 171 y(=)-189 183 y FI(3)-130 171
y Fk(')-76 183 y FI(1)-21 171 y FR(\016)18 b Fn([)p Fk(\013)23
b FR( )g Fk(\016)s Fn(])-368 296 y Fk(')-314 308 y FI(1)-254
296 y Fn(=)g FQ(mgu)o Fn(\()p FR(f)p Fk(\015)k Fn(=)c
FR(h)-14 b(h)p FL(int)p FR(i)g(i)p Fn(;)14 b Fk(\016)27
b Fn(=)c FR(h)-14 b(h)p FL(int)p FR(i)g(i)p Fn(;)14 b
Fk(\021)27 b Fn(=)c Fk(\016)s Fn(;)14 b Fk(\015)27 b
Fn(=)c Fk(\016)s Fn(;)14 b Fk(\020)29 b Fn(=)23 b Fk(\027)5
b Fn(;)14 b Fk(\021)26 b Fn(=)d Fk(\020)6 b Fn(;)14 b
Fk(\027)29 b Fn(=)22 b FR(h)-14 b(h)p FL(int)q FR(i)g(ig)p
Fn(\))-254 420 y(=)-189 432 y FI(3)-130 420 y Fk(')-76
432 y FI(2)-21 420 y FR(\016)18 b Fn([)p Fk(\015)28 b
FR( )23 b(h)-14 b(h)p FL(int)p FR(i)g(i)p Fn(])-368 545
y Fk(')-314 557 y FI(3)-254 545 y Fn(=)23 b FQ(mgu)o
Fn(\()p FR(f)p Fk(\016)j Fn(=)c FR(h)-14 b(h)p FL(int)q
FR(i)g(i)p Fn(;)14 b Fk(\021)27 b Fn(=)22 b Fk(\016)s
Fn(;)14 b FR(h)-14 b(h)p FL(int)q FR(i)g(i)24 b Fn(=)e
Fk(\016)s Fn(;)14 b Fk(\020)30 b Fn(=)22 b Fk(\027)5
b Fn(;)14 b Fk(\021)27 b Fn(=)22 b Fk(\020)6 b Fn(;)14
b Fk(\027)29 b Fn(=)23 b FR(h)-14 b(h)p FL(int)p FR(i)g(ig)p
Fn(\))-254 669 y(=)-189 681 y FI(3)-130 669 y Fk(')-76
681 y FI(4)-21 669 y FR(\016)18 b Fn([)p Fk(\016)26 b
FR( )d(h)-14 b(h)p FL(int)q FR(i)g(i)p Fn(])-368 794
y Fk(')-314 806 y FI(4)-254 794 y Fn(=)23 b FQ(mgu)o
Fn(\()p FR(f)p Fk(\021)j Fn(=)d FR(h)-14 b(h)p FL(int)p
FR(i)g(i)p Fn(;)14 b FR(h)-14 b(h)p FL(int)q FR(i)g(i)24
b Fn(=)e FR(h)-14 b(h)p FL(int)q FR(i)g(i)p Fn(;)14 b
Fk(\020)30 b Fn(=)23 b Fk(\027)5 b Fn(;)14 b Fk(\021)26
b Fn(=)d Fk(\020)6 b Fn(;)14 b Fk(\027)28 b Fn(=)23 b
FR(h)-14 b(h)p FL(int)q FR(i)g(ig)p Fn(\))-254 918 y(=)-189
930 y FI(3)-130 918 y Fk(')-76 930 y FI(5)-21 918 y FR(\016)18
b Fn([)p Fk(\021)26 b FR( )d(h)-14 b(h)p FL(int)q FR(i)g(i)p
Fn(])-368 1043 y Fk(')-314 1055 y FI(5)-254 1043 y Fn(=)23
b FQ(mgu)o Fn(\()p FR(fh)-14 b(h)p FL(int)p FR(i)g(i)24
b Fn(=)f FR(h)-14 b(h)p FL(int)p FR(i)g(i)p Fn(;)14 b
Fk(\020)30 b Fn(=)23 b Fk(\027)5 b Fn(;)14 b FR(h)-14
b(h)p FL(int)p FR(i)g(i)24 b Fn(=)f Fk(\020)6 b Fn(;)14
b Fk(\027)28 b Fn(=)23 b FR(h)-14 b(h)p FL(int)q FR(i)g(ig)p
Fn(\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb
2141 1639 a FT(152)10 b(/)g(154)p 0.15 0.15 0.525 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 153 153
TeXDict begin 153 152 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation153) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.153) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(R\351solution)38 b(des)f(\351quations)f(\(\034n)i(de)g
(l'exemple\))p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 90 -86 a Fk(')144 -74 y FI(5)264 -86 y
Fn(=)329 -74 y FI(2)448 -86 y FQ(mgu)o Fn(\()p FR(f)p
Fk(\020)29 b Fn(=)23 b Fk(\027)5 b Fn(;)14 b FR(h)-14
b(h)p FL(int)q FR(i)g(i)23 b Fn(=)g Fk(\020)6 b Fn(;)14
b Fk(\027)29 b Fn(=)22 b FR(h)-14 b(h)p FL(int)q FR(i)g(ig)p
Fn(\))264 13 y(=)329 25 y FI(3)448 13 y Fk(')502 25 y
FI(6)557 13 y FR(\016)18 b Fn([)p Fk(\020)29 b FR( )23
b Fk(\027)5 b Fn(])90 113 y Fk(')144 125 y FI(6)264 113
y Fn(=)119 b FQ(mgu)o Fn(\()p FR(fh)-14 b(h)p FL(int)p
FR(i)g(i)24 b Fn(=)f Fk(\027)5 b Fn(;)14 b Fk(\027)28
b Fn(=)23 b FR(h)-14 b(h)p FL(int)p FR(i)g(ig)p Fn(\))264
212 y(=)329 224 y FI(4)448 212 y Fk(')502 224 y FI(5)557
212 y FR(\016)18 b Fn([)p Fk(\027)28 b FR( )23 b(h)-14
b(h)p FL(int)q FR(i)g(i)p Fn(])90 312 y Fk(')144 324
y FI(5)264 312 y Fn(=)119 b FQ(mgu)o Fn(\()p FR(fh)-14
b(h)p FL(int)p FR(i)g(i)24 b Fn(=)f FR(h)-14 b(h)p FL(int)p
FR(i)g(i)p Fn(;)14 b FR(h)-14 b(h)p FL(int)q FR(i)g(i)24
b Fn(=)f FR(h)-14 b(h)p FL(int)p FR(i)g(ig)p Fn(\))264
412 y(=)119 b FQ(mgu)o Fn(\()p FR(fh)-14 b(h)p FL(int)p
FR(i)g(i)24 b Fn(=)f FR(h)-14 b(h)p FL(int)p FR(i)g(ig)p
Fn(\))264 511 y(=)329 523 y FI(2)448 511 y FQ(mgu)o Fn(\()p
Fd(?)p Fn(\))51 b(=)843 523 y FI(1)930 511 y FR(8)p Fo(x)8
b Fk(:)p Fo(x)31 b FR(7!)23 b Fo(x)-252 611 y FQ(mgu)p
Fn(\()p Fo(C)10 b Fn(\()p Fo(e)69 581 y Fh(\013)116 611
y Fn(\)\))84 b(=)119 b([)p Fk(\027)28 b FR( )23 b(h)-14
b(h)p FL(int)q FR(i)g(i)p Fn(])19 b FR(\016)f Fn([)p
Fk(\020)29 b FR( )23 b Fk(\027)5 b Fn(])19 b FR(\016)f
Fn([)p Fk(\021)26 b FR( )d(h)-14 b(h)p FL(int)q FR(i)g(i)p
Fn(])19 b FR(\016)f Fn([)p Fk(\016)26 b FR( )d(h)-14
b(h)p FL(int)p FR(i)g(i)p Fn(])448 711 y FR(\016)22 b
Fn([)p Fk(\015)28 b FR( )23 b(h)-14 b(h)p FL(int)p FR(i)g(i)p
Fn(])20 b FR(\016)e Fn([)p Fk(\013)23 b FR( )g Fk(\016)s
Fn(])c FR(\016)f Fn([)p Fk(\014)27 b FR( )c Fk(\015)5
b Fn(])-370 810 y FQ(mgu)p Fn(\()p Fo(C)10 b Fn(\()p
Fo(e)-49 780 y Fh(\013)-2 810 y Fn(\)\)\()p Fk(\013)p
Fn(\))85 b(=)119 b Fk(\013)p Fn(\([)p Fk(\016)27 b FR( )c(h)-14
b(h)p FL(int)p FR(i)g(i)p Fn(])19 b FR(\016)f Fn([)p
Fk(\013)24 b FR( )f Fk(\016)s Fn(]\))g(=)g Fk(\016)s
Fn([)p Fk(\016)j FR( )d(h)-14 b(h)p FL(int)p FR(i)g(i)p
Fn(])24 b(=)f FR(h)-14 b(h)p FL(int)p FR(i)g(i)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(153)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 154 154
TeXDict begin 154 153 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a
-467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608 a
SDict begin H.R end
 -467 -608 a -467
-608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation154) cvn /DEST pdfmark
end
 -467 -608 a -467 -608 a
SDict begin H.S end
 -467 -608 a -467 -608
a
SDict begin H.R end
 -467 -608 a -467 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.154) cvn /DEST pdfmark end
 -467 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -529
-423 a FV(L'algo)m(rithme)37 b(d'inf\351rence)e(et)j(ses)f(p)m(rop)m
(ri\351t\351s)p 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray -458 -360 a


 gsave nulldevice


 -458 -360 a


 grestore


 0.2 0.2 0.7 TeXcolorrgb
-458 -198 a Fe(Prop)s(osition)32 b(\(Co)m(rrection)i(de)f(mgu\))p
0 TeXcolorgray 0 TeXcolorgray -458 -62 a FP(Si)d(mgu)p
FC(\()p FH(C)11 b FC(\))26 b(=)f FE(')31 b FP(alo)m(rs)g
FE(')f FP(est)g(une)h(solution)g(de)g FH(C)11 b FP(.)p
0 TeXcolorgray -458 -39 a


 gsave nulldevice


 -458 -39 a


 grestore


 -458 -39 a


 gsave nulldevice


 -458
-39 a


 grestore


 -458 -39 a


 gsave nulldevice


 -458 -39 a


 grestore


 -458 86 a


 gsave nulldevice


 -458 86 a


 grestore


 0.2 0.2 0.7
TeXcolorrgb -458 226 a Fe(Prop)s(osition)32 b(\(Compl\351tude)i(de)e
(mgu\))p 0 TeXcolorgray 0 TeXcolorgray -458 362 a FP(Si)e
FH(C)41 b FP(admet)31 b(une)g(solution)g FE( )i FP(alo)m(rs)e(mgu)p
FC(\()p FH(C)11 b FC(\))31 b FP(r\351ussit)f(et)f(p)m(ro)s(duit)j(une)f
(solution)-458 475 y FE(')f FP(telle)h(que)g FE(')26
b FG(6)f FE( )s FP(.)p 0 TeXcolorgray -458 492 a


 gsave nulldevice


 -458
492 a


 grestore


 -458 492 a


 gsave nulldevice


 -458 492 a


 grestore


 -458 492 a


 gsave nulldevice


 -458 492 a


 grestore


 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 2141 1639 a FT(154)10 b(/)g(154)p
0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
